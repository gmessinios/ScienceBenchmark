[
  {
    "db_id": "museum_visit",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Num_of_Staff FROM museum AS T1 WHERE T1.Name = \"Central City District Residential Museum\"",
    "readable_query": "SELECT museum.Num_of_Staff FROM museum AS museum WHERE museum.Name = \"Central City District Residential Museum\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Total_spent FROM visit AS T1 WHERE T1.Museum_ID = 8",
    "readable_query": "SELECT visit.Total_spent FROM visit AS visit WHERE visit.Museum_ID = 8"
  },
  {
    "db_id": "museum_visit",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Total_spent FROM visit AS T1 WHERE T1.visitor_ID = \"5\"",
    "readable_query": "SELECT visit.Total_spent FROM visit AS visit WHERE visit.visitor_ID = \"5\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Num_of_Ticket FROM visit AS T1 WHERE T1.Museum_ID = 1",
    "readable_query": "SELECT visit.Num_of_Ticket FROM visit AS visit WHERE visit.Museum_ID = 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Num_of_Staff FROM museum AS T1 WHERE T1.Museum_ID = 1",
    "readable_query": "SELECT museum.Num_of_Staff FROM museum AS museum WHERE museum.Museum_ID = 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.ID = 1",
    "readable_query": "SELECT visit.Total_spent FROM visit AS visit JOIN visitor AS customer ON visit.visitor_ID = customer.ID WHERE customer.ID = 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Num_of_Ticket = 10",
    "readable_query": "SELECT customer.Age FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID WHERE visit.Num_of_Ticket = 10"
  },
  {
    "db_id": "museum_visit",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Open_Year FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.visitor_ID = \"5\"",
    "readable_query": "SELECT museum.Open_Year FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.visitor_ID = \"5\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Open_Year, count(*) FROM museum AS T1  GROUP BY T1.Open_Year",
    "readable_query": "SELECT museum.Open_Year, count(*) FROM museum AS museum  GROUP BY museum.Open_Year"
  },
  {
    "db_id": "museum_visit",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Museum_ID, count(*) FROM visit AS T1  GROUP BY T1.Museum_ID",
    "readable_query": "SELECT visit.Museum_ID, count(*) FROM visit AS visit  GROUP BY visit.Museum_ID"
  },
  {
    "db_id": "museum_visit",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Level_of_membership, count(*) FROM visitor AS T1  GROUP BY T1.Level_of_membership",
    "readable_query": "SELECT customer.Level_of_membership, count(*) FROM visitor AS customer  GROUP BY customer.Level_of_membership"
  },
  {
    "db_id": "museum_visit",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Total_spent, count(*) FROM visit AS T1  GROUP BY T1.Total_spent",
    "readable_query": "SELECT visit.Total_spent, count(*) FROM visit AS visit  GROUP BY visit.Total_spent"
  },
  {
    "db_id": "museum_visit",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Level_of_membership, count(*) FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID  GROUP BY T1.Level_of_membership",
    "readable_query": "SELECT customer.Level_of_membership, count(*) FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID  GROUP BY customer.Level_of_membership"
  },
  {
    "db_id": "museum_visit",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Age, count(*) FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID  GROUP BY T1.Age",
    "readable_query": "SELECT customer.Age, count(*) FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID  GROUP BY customer.Age"
  },
  {
    "db_id": "museum_visit",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.ID, count(*) FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID  GROUP BY T1.ID",
    "readable_query": "SELECT customer.ID, count(*) FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID  GROUP BY customer.ID"
  },
  {
    "db_id": "museum_visit",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Name, T1.ID FROM visitor AS T1",
    "readable_query": "SELECT customer.Name, customer.ID FROM visitor AS customer"
  },
  {
    "db_id": "museum_visit",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.visitor_ID, T1.Museum_ID FROM visit AS T1",
    "readable_query": "SELECT visit.visitor_ID, visit.Museum_ID FROM visit AS visit"
  },
  {
    "db_id": "museum_visit",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Name, T1.Open_Year FROM museum AS T1",
    "readable_query": "SELECT museum.Name, museum.Open_Year FROM museum AS museum"
  },
  {
    "db_id": "museum_visit",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Museum_ID, T1.visitor_ID FROM visit AS T1",
    "readable_query": "SELECT visit.Museum_ID, visit.visitor_ID FROM visit AS visit"
  },
  {
    "db_id": "museum_visit",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Open_Year, T1.Num_of_Staff FROM museum AS T1",
    "readable_query": "SELECT museum.Open_Year, museum.Num_of_Staff FROM museum AS museum"
  },
  {
    "db_id": "museum_visit",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Name, T2.Total_spent FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID",
    "readable_query": "SELECT customer.Name, visit.Total_spent FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID"
  },
  {
    "db_id": "museum_visit",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Num_of_Staff, T2.Total_spent FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID",
    "readable_query": "SELECT museum.Num_of_Staff, visit.Total_spent FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID"
  },
  {
    "db_id": "museum_visit",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Name, T2.Num_of_Ticket FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID",
    "readable_query": "SELECT customer.Name, visit.Num_of_Ticket FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID"
  },
  {
    "db_id": "museum_visit",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Name, T1.Museum_ID FROM museum AS T1 WHERE T1.Open_Year = \"2008\"",
    "readable_query": "SELECT museum.Name, museum.Museum_ID FROM museum AS museum WHERE museum.Open_Year = \"2008\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.ID, T1.Name FROM visitor AS T1 WHERE T1.Level_of_membership = 5",
    "readable_query": "SELECT customer.ID, customer.Name FROM visitor AS customer WHERE customer.Level_of_membership = 5"
  },
  {
    "db_id": "museum_visit",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Museum_ID, T1.Total_spent FROM visit AS T1 WHERE T1.visitor_ID = \"5\"",
    "readable_query": "SELECT visit.Museum_ID, visit.Total_spent FROM visit AS visit WHERE visit.visitor_ID = \"5\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Level_of_membership, T1.Name FROM visitor AS T1 WHERE T1.ID = 6",
    "readable_query": "SELECT customer.Level_of_membership, customer.Name FROM visitor AS customer WHERE customer.ID = 6"
  },
  {
    "db_id": "museum_visit",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Num_of_Staff, T1.Open_Year FROM museum AS T1 WHERE T1.Museum_ID = 2",
    "readable_query": "SELECT museum.Num_of_Staff, museum.Open_Year FROM museum AS museum WHERE museum.Museum_ID = 2"
  },
  {
    "db_id": "museum_visit",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Age, T1.Level_of_membership FROM visitor AS T1 WHERE T1.Name = \"Arjen Robben\"",
    "readable_query": "SELECT customer.Age, customer.Level_of_membership FROM visitor AS customer WHERE customer.Name = \"Arjen Robben\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Name FROM museum AS T1  GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT museum.Name FROM museum AS museum  GROUP BY museum.Name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Open_Year FROM museum AS T1  GROUP BY T1.Open_Year  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT museum.Open_Year FROM museum AS museum  GROUP BY museum.Open_Year  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Name FROM visitor AS T1  GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT customer.Name FROM visitor AS customer  GROUP BY customer.Name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Num_of_Staff FROM museum AS T1  GROUP BY T1.Num_of_Staff  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT museum.Num_of_Staff FROM museum AS museum  GROUP BY museum.Num_of_Staff  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM museum AS T1 WHERE T1.Num_of_Staff = 25",
    "readable_query": "SELECT count(*) FROM museum AS museum WHERE museum.Num_of_Staff = 25"
  },
  {
    "db_id": "museum_visit",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM visitor AS T1 WHERE T1.ID = 4",
    "readable_query": "SELECT count(*) FROM visitor AS customer WHERE customer.ID = 4"
  },
  {
    "db_id": "museum_visit",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM visitor AS T1 WHERE T1.Age = 35",
    "readable_query": "SELECT count(*) FROM visitor AS customer WHERE customer.Age = 35"
  },
  {
    "db_id": "museum_visit",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM museum AS T1 WHERE T1.Num_of_Staff = 62",
    "readable_query": "SELECT count(*) FROM museum AS museum WHERE museum.Num_of_Staff = 62"
  },
  {
    "db_id": "museum_visit",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM visitor AS T1 WHERE T1.ID = 2",
    "readable_query": "SELECT count(*) FROM visitor AS customer WHERE customer.ID = 2"
  },
  {
    "db_id": "museum_visit",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM visitor AS T1 WHERE T1.Age = 56",
    "readable_query": "SELECT count(*) FROM visitor AS customer WHERE customer.Age = 56"
  },
  {
    "db_id": "museum_visit",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Num_of_Ticket FROM visit AS T1    ORDER BY T1.Museum_ID DESC LIMIT 1",
    "readable_query": "SELECT visit.Num_of_Ticket FROM visit AS visit    ORDER BY visit.Museum_ID DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.ID FROM visitor AS T1    ORDER BY T1.Level_of_membership DESC LIMIT 1",
    "readable_query": "SELECT customer.ID FROM visitor AS customer    ORDER BY customer.Level_of_membership DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Museum_ID FROM visit AS T1    ORDER BY T1.Num_of_Ticket DESC LIMIT 1",
    "readable_query": "SELECT visit.Museum_ID FROM visit AS visit    ORDER BY visit.Num_of_Ticket DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Museum_ID FROM visit AS T1    ORDER BY T1.Total_spent DESC LIMIT 1",
    "readable_query": "SELECT visit.Museum_ID FROM visit AS visit    ORDER BY visit.Total_spent DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Museum_ID FROM visit AS T1    ORDER BY T1.Num_of_Ticket DESC LIMIT 1",
    "readable_query": "SELECT visit.Museum_ID FROM visit AS visit    ORDER BY visit.Num_of_Ticket DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.ID FROM visitor AS T1    ORDER BY T1.Level_of_membership DESC LIMIT 1",
    "readable_query": "SELECT customer.ID FROM visitor AS customer    ORDER BY customer.Level_of_membership DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Open_Year FROM museum AS T1    ORDER BY T1.Museum_ID DESC LIMIT 1",
    "readable_query": "SELECT museum.Open_Year FROM museum AS museum    ORDER BY museum.Museum_ID DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Name FROM visitor AS T1    ORDER BY T1.Age DESC LIMIT 1",
    "readable_query": "SELECT customer.Name FROM visitor AS customer    ORDER BY customer.Age DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Name FROM museum AS T1    ORDER BY T1.Museum_ID DESC LIMIT 1",
    "readable_query": "SELECT museum.Name FROM museum AS museum    ORDER BY museum.Museum_ID DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Name FROM museum AS T1    ORDER BY T1.Num_of_Staff DESC LIMIT 1",
    "readable_query": "SELECT museum.Name FROM museum AS museum    ORDER BY museum.Num_of_Staff DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID    ORDER BY T2.ID DESC LIMIT 1",
    "readable_query": "SELECT visit.Total_spent FROM visit AS visit JOIN visitor AS customer ON visit.visitor_ID = customer.ID    ORDER BY customer.ID DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID    ORDER BY T2.Num_of_Ticket DESC LIMIT 1",
    "readable_query": "SELECT customer.ID FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID    ORDER BY visit.Num_of_Ticket DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Museum_ID FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID    ORDER BY T2.Total_spent DESC LIMIT 1",
    "readable_query": "SELECT museum.Museum_ID FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID    ORDER BY visit.Total_spent DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.visitor_ID FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID    ORDER BY T2.Museum_ID ASC LIMIT 1",
    "readable_query": "SELECT visit.visitor_ID FROM visit AS visit JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID    ORDER BY museum.Museum_ID ASC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID    ORDER BY T2.ID ASC LIMIT 1",
    "readable_query": "SELECT visit.Total_spent FROM visit AS visit JOIN visitor AS customer ON visit.visitor_ID = customer.ID    ORDER BY customer.ID ASC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID    ORDER BY T2.Total_spent ASC LIMIT 1",
    "readable_query": "SELECT customer.ID FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID    ORDER BY visit.Total_spent ASC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID    ORDER BY T2.Museum_ID ASC LIMIT 1",
    "readable_query": "SELECT customer.ID FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID    ORDER BY visit.Museum_ID ASC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.visitor_ID FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID    ORDER BY T2.Level_of_membership ASC LIMIT 1",
    "readable_query": "SELECT visit.visitor_ID FROM visit AS visit JOIN visitor AS customer ON visit.visitor_ID = customer.ID    ORDER BY customer.Level_of_membership ASC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Num_of_Staff FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID    ORDER BY T2.Museum_ID ASC LIMIT 1",
    "readable_query": "SELECT museum.Num_of_Staff FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID    ORDER BY visit.Museum_ID ASC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID    ORDER BY T2.Total_spent ASC LIMIT 1",
    "readable_query": "SELECT museum.Name FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID    ORDER BY visit.Total_spent ASC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Age, T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID    ORDER BY T2.Num_of_Ticket DESC LIMIT 1",
    "readable_query": "SELECT customer.Age, customer.ID FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID    ORDER BY visit.Num_of_Ticket DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.visitor_ID, T1.Museum_ID FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID    ORDER BY T2.Num_of_Staff DESC LIMIT 1",
    "readable_query": "SELECT visit.visitor_ID, visit.Museum_ID FROM visit AS visit JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID    ORDER BY museum.Num_of_Staff DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.ID) FROM visitor AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  customer.ID) FROM visitor AS customer"
  },
  {
    "db_id": "museum_visit",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Open_Year) FROM museum AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  museum.Open_Year) FROM museum AS museum"
  },
  {
    "db_id": "museum_visit",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Age) FROM visitor AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  customer.Age) FROM visitor AS customer"
  },
  {
    "db_id": "museum_visit",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.visitor_ID) FROM visit AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  visit.visitor_ID) FROM visit AS visit"
  },
  {
    "db_id": "museum_visit",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Level_of_membership) FROM visitor AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  customer.Level_of_membership) FROM visitor AS customer"
  },
  {
    "db_id": "museum_visit",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Num_of_Staff) FROM museum AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  museum.Num_of_Staff) FROM museum AS museum"
  },
  {
    "db_id": "museum_visit",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Total_spent) FROM visit AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  visit.Total_spent) FROM visit AS visit"
  },
  {
    "db_id": "museum_visit",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Num_of_Ticket) FROM visit AS T1",
    "readable_query": "SELECT avg( visit.Num_of_Ticket) FROM visit AS visit"
  },
  {
    "db_id": "museum_visit",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Museum_ID) FROM visit AS T1",
    "readable_query": "SELECT avg( visit.Museum_ID) FROM visit AS visit"
  },
  {
    "db_id": "museum_visit",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Total_spent) FROM visit AS T1",
    "readable_query": "SELECT avg( visit.Total_spent) FROM visit AS visit"
  },
  {
    "db_id": "museum_visit",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Level_of_membership) FROM visitor AS T1",
    "readable_query": "SELECT avg( customer.Level_of_membership) FROM visitor AS customer"
  },
  {
    "db_id": "museum_visit",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.ID) FROM visitor AS T1",
    "readable_query": "SELECT avg( customer.ID) FROM visitor AS customer"
  },
  {
    "db_id": "museum_visit",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Museum_ID FROM museum AS T1",
    "readable_query": "SELECT museum.Museum_ID FROM museum AS museum"
  },
  {
    "db_id": "museum_visit",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Museum_ID FROM visit AS T1",
    "readable_query": "SELECT visit.Museum_ID FROM visit AS visit"
  },
  {
    "db_id": "museum_visit",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Level_of_membership FROM visitor AS T1",
    "readable_query": "SELECT customer.Level_of_membership FROM visitor AS customer"
  },
  {
    "db_id": "museum_visit",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.ID FROM visitor AS T1",
    "readable_query": "SELECT customer.ID FROM visitor AS customer"
  },
  {
    "db_id": "museum_visit",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Name FROM visitor AS T1",
    "readable_query": "SELECT DISTINCT customer.Name FROM visitor AS customer"
  },
  {
    "db_id": "museum_visit",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Name FROM visitor AS T1",
    "readable_query": "SELECT DISTINCT customer.Name FROM visitor AS customer"
  },
  {
    "db_id": "museum_visit",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.visitor_ID FROM visit AS T1",
    "readable_query": "SELECT DISTINCT visit.visitor_ID FROM visit AS visit"
  },
  {
    "db_id": "museum_visit",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Open_Year FROM museum AS T1",
    "readable_query": "SELECT DISTINCT museum.Open_Year FROM museum AS museum"
  },
  {
    "db_id": "museum_visit",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Name FROM museum AS T1     ORDER BY T1.Num_of_Staff ASC",
    "readable_query": "SELECT museum.Name FROM museum AS museum     ORDER BY museum.Num_of_Staff ASC"
  },
  {
    "db_id": "museum_visit",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Name FROM museum AS T1     ORDER BY T1.Museum_ID ASC",
    "readable_query": "SELECT museum.Name FROM museum AS museum     ORDER BY museum.Museum_ID ASC"
  },
  {
    "db_id": "museum_visit",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Name FROM visitor AS T1     ORDER BY T1.Level_of_membership ASC",
    "readable_query": "SELECT customer.Name FROM visitor AS customer     ORDER BY customer.Level_of_membership ASC"
  },
  {
    "db_id": "museum_visit",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Name FROM visitor AS T1     ORDER BY T1.ID ASC",
    "readable_query": "SELECT customer.Name FROM visitor AS customer     ORDER BY customer.ID ASC"
  },
  {
    "db_id": "museum_visit",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Open_Year FROM museum AS T1     ORDER BY T1.Num_of_Staff ASC",
    "readable_query": "SELECT museum.Open_Year FROM museum AS museum     ORDER BY museum.Num_of_Staff ASC"
  },
  {
    "db_id": "museum_visit",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Num_of_Staff FROM museum AS T1     ORDER BY T1.Museum_ID DESC",
    "readable_query": "SELECT museum.Num_of_Staff FROM museum AS museum     ORDER BY museum.Museum_ID DESC"
  },
  {
    "db_id": "museum_visit",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.visitor_ID FROM visit AS T1     ORDER BY T1.Total_spent DESC",
    "readable_query": "SELECT visit.visitor_ID FROM visit AS visit     ORDER BY visit.Total_spent DESC"
  },
  {
    "db_id": "museum_visit",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.visitor_ID FROM visit AS T1     ORDER BY T1.Num_of_Ticket DESC",
    "readable_query": "SELECT visit.visitor_ID FROM visit AS visit     ORDER BY visit.Num_of_Ticket DESC"
  },
  {
    "db_id": "museum_visit",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Name, T1.Open_Year FROM museum AS T1     ORDER BY T1.Open_Year ASC",
    "readable_query": "SELECT museum.Name, museum.Open_Year FROM museum AS museum     ORDER BY museum.Open_Year ASC"
  },
  {
    "db_id": "museum_visit",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Museum_ID, T1.Name FROM museum AS T1     ORDER BY T1.Name ASC",
    "readable_query": "SELECT museum.Museum_ID, museum.Name FROM museum AS museum     ORDER BY museum.Name ASC"
  },
  {
    "db_id": "museum_visit",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Name, T1.Open_Year FROM museum AS T1     ORDER BY T1.Open_Year ASC",
    "readable_query": "SELECT museum.Name, museum.Open_Year FROM museum AS museum     ORDER BY museum.Open_Year ASC"
  },
  {
    "db_id": "museum_visit",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Museum_ID, T1.Open_Year FROM museum AS T1     ORDER BY T1.Open_Year ASC",
    "readable_query": "SELECT museum.Museum_ID, museum.Open_Year FROM museum AS museum     ORDER BY museum.Open_Year ASC"
  },
  {
    "db_id": "museum_visit",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Museum_ID, T1.Num_of_Ticket FROM visit AS T1     ORDER BY T1.Num_of_Ticket ASC",
    "readable_query": "SELECT visit.Museum_ID, visit.Num_of_Ticket FROM visit AS visit     ORDER BY visit.Num_of_Ticket ASC"
  },
  {
    "db_id": "museum_visit",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T2.Num_of_Ticket = 2 and T3.Num_of_Staff = 17",
    "readable_query": "SELECT customer.Name FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID WHERE visit.Num_of_Ticket = 2 and museum.Num_of_Staff = 17"
  },
  {
    "db_id": "museum_visit",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Museum_ID FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID JOIN museum AS T3 ON T1.Museum_ID = T3.Museum_ID WHERE T2.Level_of_membership = 2 and T3.Open_Year = \"2011\"",
    "readable_query": "SELECT visit.Museum_ID FROM visit AS visit JOIN visitor AS customer ON visit.visitor_ID = customer.ID JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID WHERE customer.Level_of_membership = 2 and museum.Open_Year = \"2011\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T2.visitor_ID = T3.ID WHERE T2.visitor_ID = \"6\" and T3.Age = 36",
    "readable_query": "SELECT museum.Name FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID JOIN visitor AS customer ON visit.visitor_ID = customer.ID WHERE visit.visitor_ID = \"6\" and customer.Age = 36"
  },
  {
    "db_id": "museum_visit",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.visitor_ID FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T1.visitor_ID = T3.ID WHERE T2.Name = \"Central City District Residential Museum\" and T3.Level_of_membership = 5",
    "readable_query": "SELECT visit.visitor_ID FROM visit AS visit JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID JOIN visitor AS customer ON visit.visitor_ID = customer.ID WHERE museum.Name = \"Central City District Residential Museum\" and customer.Level_of_membership = 5"
  },
  {
    "db_id": "museum_visit",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T2.Num_of_Ticket = 24 and T3.Name = \"RiverPark Museum\"",
    "readable_query": "SELECT customer.ID FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID WHERE visit.Num_of_Ticket = 24 and museum.Name = \"RiverPark Museum\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Num_of_Staff FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T2.visitor_ID = T3.ID WHERE T2.Museum_ID = 8 and T3.ID = 5",
    "readable_query": "SELECT museum.Num_of_Staff FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID JOIN visitor AS customer ON visit.visitor_ID = customer.ID WHERE visit.Museum_ID = 8 and customer.ID = 5"
  },
  {
    "db_id": "museum_visit",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T2.Total_spent = 89.98 and T3.Open_Year = \"2010\"",
    "readable_query": "SELECT customer.ID FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID WHERE visit.Total_spent = 89.98 and museum.Open_Year = \"2010\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T2.visitor_ID = T3.ID WHERE T2.Num_of_Ticket = 24 and T3.ID = 5",
    "readable_query": "SELECT museum.Name FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID JOIN visitor AS customer ON visit.visitor_ID = customer.ID WHERE visit.Num_of_Ticket = 24 and customer.ID = 5"
  },
  {
    "db_id": "museum_visit",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Name = \"ZirMed Gateway Museum\" or T2.Name = \"Jefferson Development Museum\"",
    "readable_query": "SELECT visit.Total_spent FROM visit AS visit JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Name = \"ZirMed Gateway Museum\" or museum.Name = \"Jefferson Development Museum\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Num_of_Ticket = 3 or T2.Num_of_Ticket = 4",
    "readable_query": "SELECT customer.Name FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID WHERE visit.Num_of_Ticket = 3 or visit.Num_of_Ticket = 4"
  },
  {
    "db_id": "museum_visit",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Total_spent = 89.98 or T2.Total_spent = 19.98",
    "readable_query": "SELECT customer.Level_of_membership FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID WHERE visit.Total_spent = 89.98 or visit.Total_spent = 19.98"
  },
  {
    "db_id": "museum_visit",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Num_of_Ticket = 2 or T2.Num_of_Ticket = 24",
    "readable_query": "SELECT customer.ID FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID WHERE visit.Num_of_Ticket = 2 or visit.Num_of_Ticket = 24"
  },
  {
    "db_id": "museum_visit",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Open_Year FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Num_of_Ticket = 10 or T2.Num_of_Ticket = 20",
    "readable_query": "SELECT museum.Open_Year FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.Num_of_Ticket = 10 or visit.Num_of_Ticket = 20"
  },
  {
    "db_id": "museum_visit",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Museum_ID FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Num_of_Ticket = 3 or T2.Num_of_Ticket = 24",
    "readable_query": "SELECT museum.Museum_ID FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.Num_of_Ticket = 3 or visit.Num_of_Ticket = 24"
  },
  {
    "db_id": "museum_visit",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Total_spent = 20.44 or T2.Total_spent = 320.44",
    "readable_query": "SELECT customer.Name FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID WHERE visit.Total_spent = 20.44 or visit.Total_spent = 320.44"
  },
  {
    "db_id": "museum_visit",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.ID FROM visitor AS T1 WHERE T1.Age = 25 and T1.Name = \"Guti Midfielder\"",
    "readable_query": "SELECT customer.ID FROM visitor AS customer WHERE customer.Age = 25 and customer.Name = \"Guti Midfielder\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Name FROM museum AS T1 WHERE T1.Museum_ID = 5 and T1.Open_Year = \"2011\"",
    "readable_query": "SELECT museum.Name FROM museum AS museum WHERE museum.Museum_ID = 5 and museum.Open_Year = \"2011\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Name FROM visitor AS T1 WHERE T1.Age = 35 and T1.ID = 5",
    "readable_query": "SELECT customer.Name FROM visitor AS customer WHERE customer.Age = 35 and customer.ID = 5"
  },
  {
    "db_id": "museum_visit",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Age) FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T1.ID = 5 and T2.Num_of_Ticket = 10",
    "readable_query": "SELECT DISTINCT count(DISTINCT  customer.Age) FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID WHERE customer.ID = 5 and visit.Num_of_Ticket = 10"
  },
  {
    "db_id": "museum_visit",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.visitor_ID) FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T1.Num_of_Ticket = 2 and T2.Level_of_membership = 5",
    "readable_query": "SELECT DISTINCT count(DISTINCT  visit.visitor_ID) FROM visit AS visit JOIN visitor AS customer ON visit.visitor_ID = customer.ID WHERE visit.Num_of_Ticket = 2 and customer.Level_of_membership = 5"
  },
  {
    "db_id": "museum_visit",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Level_of_membership) FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T1.Name = \"Rafael van der Vaart\" and T2.Num_of_Ticket = 10",
    "readable_query": "SELECT DISTINCT count(DISTINCT  customer.Level_of_membership) FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID WHERE customer.Name = \"Rafael van der Vaart\" and visit.Num_of_Ticket = 10"
  },
  {
    "db_id": "museum_visit",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Museum_ID) FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T1.Name = \"Capital Plaza Museum\" and T2.Total_spent = 89.98",
    "readable_query": "SELECT DISTINCT count(DISTINCT  museum.Museum_ID) FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID WHERE museum.Name = \"Capital Plaza Museum\" and visit.Total_spent = 89.98"
  },
  {
    "db_id": "museum_visit",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Age FROM visitor AS T1 WHERE T1.ID = 3 or T1.Name = \"Rafael van der Vaart\"",
    "readable_query": "SELECT customer.Age FROM visitor AS customer WHERE customer.ID = 3 or customer.Name = \"Rafael van der Vaart\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Museum_ID FROM visit AS T1 WHERE T1.visitor_ID = \"5\" or T1.Num_of_Ticket = 24",
    "readable_query": "SELECT visit.Museum_ID FROM visit AS visit WHERE visit.visitor_ID = \"5\" or visit.Num_of_Ticket = 24"
  },
  {
    "db_id": "museum_visit",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Museum_ID FROM visit AS T1 WHERE T1.Num_of_Ticket = 10 or T1.Total_spent = 19.98",
    "readable_query": "SELECT visit.Museum_ID FROM visit AS visit WHERE visit.Num_of_Ticket = 10 or visit.Total_spent = 19.98"
  },
  {
    "db_id": "museum_visit",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Open_Year FROM museum AS T1 WHERE T1.Name = \"Jefferson Development Museum\" or T1.Num_of_Staff = 17",
    "readable_query": "SELECT museum.Open_Year FROM museum AS museum WHERE museum.Name = \"Jefferson Development Museum\" or museum.Num_of_Staff = 17"
  },
  {
    "db_id": "museum_visit",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Total_spent = 89.98 and T2.visitor_ID = \"3\"",
    "readable_query": "SELECT count(*) FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.Total_spent = 89.98 and visit.visitor_ID = \"3\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Total_spent = 209.98 and T2.Num_of_Ticket = 3",
    "readable_query": "SELECT count(*) FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.Total_spent = 209.98 and visit.Num_of_Ticket = 3"
  },
  {
    "db_id": "museum_visit",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Total_spent = 89.98 and T2.visitor_ID = \"5\"",
    "readable_query": "SELECT count(*) FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID WHERE visit.Total_spent = 89.98 and visit.visitor_ID = \"5\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.ID = 1 and T2.Name = \"Gonzalo Higua\u00edn \"",
    "readable_query": "SELECT count(*) FROM visit AS visit JOIN visitor AS customer ON visit.visitor_ID = customer.ID WHERE customer.ID = 1 and customer.Name = \"Gonzalo Higua\u00edn \""
  },
  {
    "db_id": "museum_visit",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Num_of_Ticket = 4 and T2.Museum_ID = 2",
    "readable_query": "SELECT count(*) FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.Num_of_Ticket = 4 and visit.Museum_ID = 2"
  },
  {
    "db_id": "museum_visit",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.visitor_ID = \"6\" and T2.Museum_ID = 4",
    "readable_query": "SELECT count(*) FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.visitor_ID = \"6\" and visit.Museum_ID = 4"
  },
  {
    "db_id": "museum_visit",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Num_of_Ticket = 20 and T2.visitor_ID = \"6\"",
    "readable_query": "SELECT count(*) FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID WHERE visit.Num_of_Ticket = 20 and visit.visitor_ID = \"6\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.visitor_ID FROM visit AS T1 WHERE T1.Total_spent != 19.98",
    "readable_query": "SELECT visit.visitor_ID FROM visit AS visit WHERE visit.Total_spent != 19.98"
  },
  {
    "db_id": "museum_visit",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Total_spent FROM visit AS T1 WHERE T1.Num_of_Ticket != 24",
    "readable_query": "SELECT visit.Total_spent FROM visit AS visit WHERE visit.Num_of_Ticket != 24"
  },
  {
    "db_id": "museum_visit",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Level_of_membership FROM visitor AS T1 WHERE T1.Name != \"Rafael van der Vaart\"",
    "readable_query": "SELECT customer.Level_of_membership FROM visitor AS customer WHERE customer.Name != \"Rafael van der Vaart\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Num_of_Ticket != 24",
    "readable_query": "SELECT customer.Level_of_membership FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID WHERE visit.Num_of_Ticket != 24"
  },
  {
    "db_id": "museum_visit",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Open_Year != \"2012\"",
    "readable_query": "SELECT visit.Total_spent FROM visit AS visit JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Open_Year != \"2012\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Num_of_Ticket != 4",
    "readable_query": "SELECT customer.Level_of_membership FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID WHERE visit.Num_of_Ticket != 4"
  },
  {
    "db_id": "museum_visit",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Museum_ID FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.visitor_ID != \"5\"",
    "readable_query": "SELECT museum.Museum_ID FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.visitor_ID != \"5\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.visitor_ID FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Age != 56",
    "readable_query": "SELECT visit.visitor_ID FROM visit AS visit JOIN visitor AS customer ON visit.visitor_ID = customer.ID WHERE customer.Age != 56"
  },
  {
    "db_id": "museum_visit",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Num_of_Ticket != 20",
    "readable_query": "SELECT customer.ID FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID WHERE visit.Num_of_Ticket != 20"
  },
  {
    "db_id": "museum_visit",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Num_of_Staff FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.visitor_ID = \"6\"",
    "readable_query": "SELECT DISTINCT museum.Num_of_Staff FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.visitor_ID = \"6\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Total_spent FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Name = \"Willow Grande Museum\"",
    "readable_query": "SELECT DISTINCT visit.Total_spent FROM visit AS visit JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Name = \"Willow Grande Museum\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.visitor_ID FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Num_of_Staff = 17",
    "readable_query": "SELECT DISTINCT visit.visitor_ID FROM visit AS visit JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Num_of_Staff = 17"
  },
  {
    "db_id": "museum_visit",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Museum_ID = 4",
    "readable_query": "SELECT DISTINCT customer.ID FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID WHERE visit.Museum_ID = 4"
  },
  {
    "db_id": "museum_visit",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.visitor_ID FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Open_Year = \"2000\"",
    "readable_query": "SELECT DISTINCT visit.visitor_ID FROM visit AS visit JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Open_Year = \"2000\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Num_of_Staff FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.visitor_ID = \"3\"",
    "readable_query": "SELECT DISTINCT museum.Num_of_Staff FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.visitor_ID = \"3\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Level_of_membership) FROM visitor AS T1 WHERE T1.Name = \"Fernando Gago\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  customer.Level_of_membership) FROM visitor AS customer WHERE customer.Name = \"Fernando Gago\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Num_of_Staff) FROM museum AS T1 WHERE T1.Name = \"Place Tower Museum\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  museum.Num_of_Staff) FROM museum AS museum WHERE museum.Name = \"Place Tower Museum\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Age) FROM visitor AS T1 WHERE T1.Name = \"Gonzalo Higua\u00edn \"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  customer.Age) FROM visitor AS customer WHERE customer.Name = \"Gonzalo Higua\u00edn \""
  },
  {
    "db_id": "museum_visit",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Total_spent) FROM visit AS T1 WHERE T1.Num_of_Ticket = 24",
    "readable_query": "SELECT DISTINCT count(DISTINCT  visit.Total_spent) FROM visit AS visit WHERE visit.Num_of_Ticket = 24"
  },
  {
    "db_id": "museum_visit",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM visitor AS T1 WHERE T1.ID = 2",
    "readable_query": "SELECT DISTINCT count(DISTINCT  customer.Name) FROM visitor AS customer WHERE customer.ID = 2"
  },
  {
    "db_id": "museum_visit",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Museum_ID) FROM museum AS T1 WHERE T1.Open_Year = \"2008\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  museum.Museum_ID) FROM museum AS museum WHERE museum.Open_Year = \"2008\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.ID FROM visitor AS T1 WHERE T1.Level_of_membership > 1",
    "readable_query": "SELECT customer.ID FROM visitor AS customer WHERE customer.Level_of_membership > 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Name FROM visitor AS T1 WHERE T1.Level_of_membership > 1",
    "readable_query": "SELECT customer.Name FROM visitor AS customer WHERE customer.Level_of_membership > 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Open_Year FROM museum AS T1 WHERE T1.Museum_ID > 8",
    "readable_query": "SELECT museum.Open_Year FROM museum AS museum WHERE museum.Museum_ID > 8"
  },
  {
    "db_id": "museum_visit",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Num_of_Staff, T2.visitor_ID, T3.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T2.visitor_ID = T3.ID",
    "readable_query": "SELECT museum.Num_of_Staff, visit.visitor_ID, customer.Name FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID JOIN visitor AS customer ON visit.visitor_ID = customer.ID"
  },
  {
    "db_id": "museum_visit",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Museum_ID, T2.Num_of_Staff, T3.Age FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T1.visitor_ID = T3.ID",
    "readable_query": "SELECT visit.Museum_ID, museum.Num_of_Staff, customer.Age FROM visit AS visit JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID JOIN visitor AS customer ON visit.visitor_ID = customer.ID"
  },
  {
    "db_id": "museum_visit",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Total_spent, T2.Level_of_membership, T3.Num_of_Staff FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID JOIN museum AS T3 ON T1.Museum_ID = T3.Museum_ID",
    "readable_query": "SELECT visit.Total_spent, customer.Level_of_membership, museum.Num_of_Staff FROM visit AS visit JOIN visitor AS customer ON visit.visitor_ID = customer.ID JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID"
  },
  {
    "db_id": "museum_visit",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Name, T2.Total_spent, T3.ID FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T2.visitor_ID = T3.ID",
    "readable_query": "SELECT museum.Name, visit.Total_spent, customer.ID FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID JOIN visitor AS customer ON visit.visitor_ID = customer.ID"
  },
  {
    "db_id": "museum_visit",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Name, T2.Museum_ID, T3.Age FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T2.visitor_ID = T3.ID",
    "readable_query": "SELECT museum.Name, visit.Museum_ID, customer.Age FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID JOIN visitor AS customer ON visit.visitor_ID = customer.ID"
  },
  {
    "db_id": "museum_visit",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.visitor_ID, T2.Name, T3.Age FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T1.visitor_ID = T3.ID",
    "readable_query": "SELECT visit.visitor_ID, museum.Name, customer.Age FROM visit AS visit JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID JOIN visitor AS customer ON visit.visitor_ID = customer.ID"
  },
  {
    "db_id": "museum_visit",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Level_of_membership, T2.visitor_ID, T3.Num_of_Staff FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID",
    "readable_query": "SELECT customer.Level_of_membership, visit.visitor_ID, museum.Num_of_Staff FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID"
  },
  {
    "db_id": "museum_visit",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID     ORDER BY T2.Museum_ID ASC",
    "readable_query": "SELECT customer.ID FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID     ORDER BY visit.Museum_ID ASC"
  },
  {
    "db_id": "museum_visit",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID     ORDER BY T2.Total_spent ASC",
    "readable_query": "SELECT museum.Name FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID     ORDER BY visit.Total_spent ASC"
  },
  {
    "db_id": "museum_visit",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID     ORDER BY T2.Museum_ID ASC",
    "readable_query": "SELECT customer.ID FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID     ORDER BY visit.Museum_ID ASC"
  },
  {
    "db_id": "museum_visit",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Open_Year FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID     ORDER BY T2.Museum_ID ASC",
    "readable_query": "SELECT museum.Open_Year FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID     ORDER BY visit.Museum_ID ASC"
  },
  {
    "db_id": "museum_visit",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Total_spent FROM visit AS T1 WHERE T1.visitor_ID = \"3\"     INTERSECT SELECT T2.Total_spent FROM visit AS T2 WHERE T2.visitor_ID = \"3\"",
    "readable_query": "SELECT visit.Total_spent FROM visit AS visit WHERE visit.visitor_ID = \"3\"     INTERSECT SELECT visit.Total_spent FROM visit AS visit WHERE visit.visitor_ID = \"3\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Total_spent FROM visit AS T1 WHERE T1.Museum_ID = 4     INTERSECT SELECT T2.Total_spent FROM visit AS T2 WHERE T2.Museum_ID = 8",
    "readable_query": "SELECT visit.Total_spent FROM visit AS visit WHERE visit.Museum_ID = 4     INTERSECT SELECT visit.Total_spent FROM visit AS visit WHERE visit.Museum_ID = 8"
  },
  {
    "db_id": "museum_visit",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Total_spent FROM visit AS T1 WHERE T1.Num_of_Ticket = 10     INTERSECT SELECT T2.Total_spent FROM visit AS T2 WHERE T2.Num_of_Ticket = 24",
    "readable_query": "SELECT visit.Total_spent FROM visit AS visit WHERE visit.Num_of_Ticket = 10     INTERSECT SELECT visit.Total_spent FROM visit AS visit WHERE visit.Num_of_Ticket = 24"
  },
  {
    "db_id": "museum_visit",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Level_of_membership FROM visitor AS T1 WHERE T1.ID = 6     INTERSECT SELECT T2.Level_of_membership FROM visitor AS T2 WHERE T2.ID = 3",
    "readable_query": "SELECT customer.Level_of_membership FROM visitor AS customer WHERE customer.ID = 6     INTERSECT SELECT customer.Level_of_membership FROM visitor AS customer WHERE customer.ID = 3"
  },
  {
    "db_id": "museum_visit",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Museum_ID) FROM museum AS T1 WHERE T1.Num_of_Staff = 15",
    "readable_query": "SELECT avg( museum.Museum_ID) FROM museum AS museum WHERE museum.Num_of_Staff = 15"
  },
  {
    "db_id": "museum_visit",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Num_of_Staff) FROM museum AS T1 WHERE T1.Name = \"Place Tower Museum\"",
    "readable_query": "SELECT avg( museum.Num_of_Staff) FROM museum AS museum WHERE museum.Name = \"Place Tower Museum\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Total_spent) FROM visit AS T1 WHERE T1.Num_of_Ticket = 10",
    "readable_query": "SELECT avg( visit.Total_spent) FROM visit AS visit WHERE visit.Num_of_Ticket = 10"
  },
  {
    "db_id": "museum_visit",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Level_of_membership) FROM visitor AS T1 WHERE T1.ID = 1",
    "readable_query": "SELECT avg( customer.Level_of_membership) FROM visitor AS customer WHERE customer.ID = 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Age) FROM visitor AS T1 WHERE T1.Level_of_membership = 2",
    "readable_query": "SELECT avg( customer.Age) FROM visitor AS customer WHERE customer.Level_of_membership = 2"
  },
  {
    "db_id": "museum_visit",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Age) FROM visitor AS T1 WHERE T1.Level_of_membership = 5",
    "readable_query": "SELECT avg( customer.Age) FROM visitor AS customer WHERE customer.Level_of_membership = 5"
  },
  {
    "db_id": "museum_visit",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Museum_ID) FROM museum AS T1 WHERE T1.Name = \"Place Tower Museum\"",
    "readable_query": "SELECT avg( museum.Museum_ID) FROM museum AS museum WHERE museum.Name = \"Place Tower Museum\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Num_of_Ticket) FROM visit AS T1 WHERE T1.Museum_ID = 8",
    "readable_query": "SELECT avg( visit.Num_of_Ticket) FROM visit AS visit WHERE visit.Museum_ID = 8"
  },
  {
    "db_id": "museum_visit",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Num_of_Staff) FROM museum AS T1 WHERE T1.Open_Year = \"2011\"",
    "readable_query": "SELECT avg( museum.Num_of_Staff) FROM museum AS museum WHERE museum.Open_Year = \"2011\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.ID) FROM visitor AS T1 WHERE T1.Level_of_membership = 1",
    "readable_query": "SELECT avg( customer.ID) FROM visitor AS customer WHERE customer.Level_of_membership = 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Total_spent) FROM visit AS T1 WHERE T1.Num_of_Ticket = 4",
    "readable_query": "SELECT avg( visit.Total_spent) FROM visit AS visit WHERE visit.Num_of_Ticket = 4"
  },
  {
    "db_id": "museum_visit",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Museum_ID = (SELECT max( T23.Museum_ID) FROM visit AS T23)",
    "readable_query": "SELECT customer.Level_of_membership FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID WHERE visit.Museum_ID = (SELECT max( visit.Museum_ID) FROM visit AS visit)"
  },
  {
    "db_id": "museum_visit",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.ID = (SELECT max( T23.ID) FROM visitor AS T23)",
    "readable_query": "SELECT visit.Total_spent FROM visit AS visit JOIN visitor AS customer ON visit.visitor_ID = customer.ID WHERE customer.ID = (SELECT max( customer.ID) FROM visitor AS customer)"
  },
  {
    "db_id": "museum_visit",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Age = (SELECT max( T23.Age) FROM visitor AS T23)",
    "readable_query": "SELECT visit.Total_spent FROM visit AS visit JOIN visitor AS customer ON visit.visitor_ID = customer.ID WHERE customer.Age = (SELECT max( customer.Age) FROM visitor AS customer)"
  },
  {
    "db_id": "museum_visit",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Museum_ID = (SELECT max( T23.Museum_ID) FROM visit AS T23)",
    "readable_query": "SELECT customer.Age FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID WHERE visit.Museum_ID = (SELECT max( visit.Museum_ID) FROM visit AS visit)"
  },
  {
    "db_id": "museum_visit",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Museum_ID = (SELECT max( T23.Museum_ID) FROM visit AS T23)",
    "readable_query": "SELECT museum.Name FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.Museum_ID = (SELECT max( visit.Museum_ID) FROM visit AS visit)"
  },
  {
    "db_id": "museum_visit",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Num_of_Ticket = (SELECT max( T23.Num_of_Ticket) FROM visit AS T23)",
    "readable_query": "SELECT museum.Name FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.Num_of_Ticket = (SELECT max( visit.Num_of_Ticket) FROM visit AS visit)"
  },
  {
    "db_id": "museum_visit",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Museum_ID FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Num_of_Ticket = (SELECT max( T23.Num_of_Ticket) FROM visit AS T23)",
    "readable_query": "SELECT museum.Museum_ID FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.Num_of_Ticket = (SELECT max( visit.Num_of_Ticket) FROM visit AS visit)"
  },
  {
    "db_id": "museum_visit",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.visitor_ID FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Age = (SELECT max( T23.Age) FROM visitor AS T23)",
    "readable_query": "SELECT visit.visitor_ID FROM visit AS visit JOIN visitor AS customer ON visit.visitor_ID = customer.ID WHERE customer.Age = (SELECT max( customer.Age) FROM visitor AS customer)"
  },
  {
    "db_id": "museum_visit",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.ID, T2.Num_of_Ticket FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T3.Open_Year = \"2010\" and T2.Total_spent = 320.44",
    "readable_query": "SELECT customer.ID, visit.Num_of_Ticket FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Open_Year = \"2010\" and visit.Total_spent = 320.44"
  },
  {
    "db_id": "museum_visit",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Open_Year, T2.Museum_ID FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T2.visitor_ID = T3.ID WHERE T3.Name = \"Ra\u00fal Brown\" and T2.visitor_ID = \"3\"",
    "readable_query": "SELECT museum.Open_Year, visit.Museum_ID FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID JOIN visitor AS customer ON visit.visitor_ID = customer.ID WHERE customer.Name = \"Ra\u00fal Brown\" and visit.visitor_ID = \"3\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Total_spent, T2.Name FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T1.visitor_ID = T3.ID WHERE T3.ID = 6 and T2.Open_Year = \"2009\"",
    "readable_query": "SELECT visit.Total_spent, museum.Name FROM visit AS visit JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID JOIN visitor AS customer ON visit.visitor_ID = customer.ID WHERE customer.ID = 6 and museum.Open_Year = \"2009\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Total_spent, T2.Open_Year FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T1.visitor_ID = T3.ID WHERE T3.ID = 6 and T2.Name = \"Place Tower Museum\"",
    "readable_query": "SELECT visit.Total_spent, museum.Open_Year FROM visit AS visit JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID JOIN visitor AS customer ON visit.visitor_ID = customer.ID WHERE customer.ID = 6 and museum.Name = \"Place Tower Museum\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Age, T2.Total_spent FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T3.Num_of_Staff = 25 and T2.visitor_ID = \"3\"",
    "readable_query": "SELECT customer.Age, visit.Total_spent FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Num_of_Staff = 25 and visit.visitor_ID = \"3\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Museum_ID = 4 GROUP BY T1.Level_of_membership  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT customer.Level_of_membership FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID WHERE visit.Museum_ID = 4 GROUP BY customer.Level_of_membership  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Museum_ID FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Name = \"RiverPark Museum\" GROUP BY T1.Museum_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT visit.Museum_ID FROM visit AS visit JOIN museum AS museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Name = \"RiverPark Museum\" GROUP BY visit.Museum_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Open_Year FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Total_spent = 209.98 GROUP BY T1.Open_Year  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT museum.Open_Year FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.Total_spent = 209.98 GROUP BY museum.Open_Year  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Num_of_Staff FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.visitor_ID = \"3\" GROUP BY T1.Num_of_Staff  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT museum.Num_of_Staff FROM museum AS museum JOIN visit AS visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.visitor_ID = \"3\" GROUP BY museum.Num_of_Staff  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Museum_ID = 8 GROUP BY T1.Level_of_membership  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT customer.Level_of_membership FROM visitor AS customer JOIN visit AS visit ON customer.ID = visit.visitor_ID WHERE visit.Museum_ID = 8 GROUP BY customer.Level_of_membership  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "museum_visit",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Name FROM visitor AS T1        EXCEPT SELECT T2.Name FROM visitor AS T2 WHERE T2.Age = 25",
    "readable_query": "SELECT customer.Name FROM visitor AS customer        EXCEPT SELECT customer.Name FROM visitor AS customer WHERE customer.Age = 25"
  },
  {
    "db_id": "museum_visit",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Total_spent FROM visit AS T1        EXCEPT SELECT T2.Total_spent FROM visit AS T2 WHERE T2.Num_of_Ticket = 24",
    "readable_query": "SELECT visit.Total_spent FROM visit AS visit        EXCEPT SELECT visit.Total_spent FROM visit AS visit WHERE visit.Num_of_Ticket = 24"
  },
  {
    "db_id": "museum_visit",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Museum_ID FROM museum AS T1        EXCEPT SELECT T2.Museum_ID FROM museum AS T2 WHERE T2.Open_Year = \"2008\"",
    "readable_query": "SELECT museum.Museum_ID FROM museum AS museum        EXCEPT SELECT museum.Museum_ID FROM museum AS museum WHERE museum.Open_Year = \"2008\""
  },
  {
    "db_id": "museum_visit",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Museum_ID FROM museum AS T1        EXCEPT SELECT T2.Museum_ID FROM museum AS T2 WHERE T2.Num_of_Staff = 62",
    "readable_query": "SELECT museum.Museum_ID FROM museum AS museum        EXCEPT SELECT museum.Museum_ID FROM museum AS museum WHERE museum.Num_of_Staff = 62"
  },
  {
    "db_id": "museum_visit",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Total_spent FROM visit AS T1        EXCEPT SELECT T2.Total_spent FROM visit AS T2 WHERE T2.visitor_ID = \"5\"",
    "readable_query": "SELECT visit.Total_spent FROM visit AS visit        EXCEPT SELECT visit.Total_spent FROM visit AS visit WHERE visit.visitor_ID = \"5\""
  },
  {
    "db_id": "world_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Population FROM city AS T1 WHERE T1.CountryCode = \"CMR\"",
    "readable_query": "SELECT city.Population FROM city AS city WHERE city.CountryCode = \"CMR\""
  },
  {
    "db_id": "world_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Language FROM countrylanguage AS T1 WHERE T1.IsOfficial = \"F\"",
    "readable_query": "SELECT countrylanguage.Language FROM countrylanguage AS countrylanguage WHERE countrylanguage.IsOfficial = \"F\""
  },
  {
    "db_id": "world_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.HeadOfState FROM country AS T1 WHERE T1.Region = \"Eastern Asia\"",
    "readable_query": "SELECT country.HeadOfState FROM country AS country WHERE country.Region = \"Eastern Asia\""
  },
  {
    "db_id": "world_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Population FROM city AS T1 WHERE T1.ID = 1953",
    "readable_query": "SELECT city.Population FROM city AS city WHERE city.ID = 1953"
  },
  {
    "db_id": "world_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.IndepYear, count(*) FROM country AS T1  GROUP BY T1.IndepYear",
    "readable_query": "SELECT country.IndepYear, count(*) FROM country AS country  GROUP BY country.IndepYear"
  },
  {
    "db_id": "world_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.CountryCode, count(*) FROM city AS T1  GROUP BY T1.CountryCode",
    "readable_query": "SELECT city.CountryCode, count(*) FROM city AS city  GROUP BY city.CountryCode"
  },
  {
    "db_id": "world_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.LifeExpectancy, count(*) FROM country AS T1  GROUP BY T1.LifeExpectancy",
    "readable_query": "SELECT country.LifeExpectancy, count(*) FROM country AS country  GROUP BY country.LifeExpectancy"
  },
  {
    "db_id": "world_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.name, count(*) FROM sqlite_sequence AS T1  GROUP BY T1.name",
    "readable_query": "SELECT sqlite_sequence.name, count(*) FROM sqlite_sequence AS sqlite_sequence  GROUP BY sqlite_sequence.name"
  },
  {
    "db_id": "world_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.District, count(*) FROM city AS T1  GROUP BY T1.District",
    "readable_query": "SELECT city.District, count(*) FROM city AS city  GROUP BY city.District"
  },
  {
    "db_id": "world_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.IsOfficial, count(*) FROM countrylanguage AS T1  GROUP BY T1.IsOfficial",
    "readable_query": "SELECT countrylanguage.IsOfficial, count(*) FROM countrylanguage AS countrylanguage  GROUP BY countrylanguage.IsOfficial"
  },
  {
    "db_id": "world_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.GovernmentForm, count(*) FROM country AS T1  GROUP BY T1.GovernmentForm",
    "readable_query": "SELECT country.GovernmentForm, count(*) FROM country AS country  GROUP BY country.GovernmentForm"
  },
  {
    "db_id": "world_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Name, count(*) FROM city AS T1  GROUP BY T1.Name",
    "readable_query": "SELECT city.Name, count(*) FROM city AS city  GROUP BY city.Name"
  },
  {
    "db_id": "world_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.seq, count(*) FROM sqlite_sequence AS T1  GROUP BY T1.seq",
    "readable_query": "SELECT sqlite_sequence.seq, count(*) FROM sqlite_sequence AS sqlite_sequence  GROUP BY sqlite_sequence.seq"
  },
  {
    "db_id": "world_1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM countrylanguage AS T1",
    "readable_query": "SELECT count(*) FROM countrylanguage AS countrylanguage"
  },
  {
    "db_id": "world_1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM countrylanguage AS T1",
    "readable_query": "SELECT count(*) FROM countrylanguage AS countrylanguage"
  },
  {
    "db_id": "world_1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM city AS T1",
    "readable_query": "SELECT count(*) FROM city AS city"
  },
  {
    "db_id": "world_1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM sqlite_sequence AS T1",
    "readable_query": "SELECT count(*) FROM sqlite_sequence AS sqlite_sequence"
  },
  {
    "db_id": "world_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Percentage, T1.IsOfficial FROM countrylanguage AS T1",
    "readable_query": "SELECT countrylanguage.Percentage, countrylanguage.IsOfficial FROM countrylanguage AS countrylanguage"
  },
  {
    "db_id": "world_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.seq, T1.name FROM sqlite_sequence AS T1",
    "readable_query": "SELECT sqlite_sequence.seq, sqlite_sequence.name FROM sqlite_sequence AS sqlite_sequence"
  },
  {
    "db_id": "world_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Continent, T1.GovernmentForm FROM country AS T1",
    "readable_query": "SELECT country.Continent, country.GovernmentForm FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Name, T1.District FROM city AS T1",
    "readable_query": "SELECT city.Name, city.District FROM city AS city"
  },
  {
    "db_id": "world_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.seq, T1.name FROM sqlite_sequence AS T1",
    "readable_query": "SELECT sqlite_sequence.seq, sqlite_sequence.name FROM sqlite_sequence AS sqlite_sequence"
  },
  {
    "db_id": "world_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Percentage, T1.CountryCode FROM countrylanguage AS T1",
    "readable_query": "SELECT countrylanguage.Percentage, countrylanguage.CountryCode FROM countrylanguage AS countrylanguage"
  },
  {
    "db_id": "world_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Continent, T1.HeadOfState FROM country AS T1",
    "readable_query": "SELECT country.Continent, country.HeadOfState FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.LocalName, T1.LifeExpectancy FROM country AS T1 WHERE T1.GovernmentForm = \"Dependent Territory of the US\"",
    "readable_query": "SELECT country.LocalName, country.LifeExpectancy FROM country AS country WHERE country.GovernmentForm = \"Dependent Territory of the US\""
  },
  {
    "db_id": "world_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.ID, T1.CountryCode FROM city AS T1 WHERE T1.District = \"Fort-de-France\"",
    "readable_query": "SELECT city.ID, city.CountryCode FROM city AS city WHERE city.District = \"Fort-de-France\""
  },
  {
    "db_id": "world_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Continent, T1.GNP FROM country AS T1 WHERE T1.GovernmentForm = \"Monarchy (Emirate)\"",
    "readable_query": "SELECT country.Continent, country.GNP FROM country AS country WHERE country.GovernmentForm = \"Monarchy (Emirate)\""
  },
  {
    "db_id": "world_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.District, T1.ID FROM city AS T1 WHERE T1.Name = \"Alvorada\"",
    "readable_query": "SELECT city.District, city.ID FROM city AS city WHERE city.Name = \"Alvorada\""
  },
  {
    "db_id": "world_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Name, T1.Population FROM city AS T1 WHERE T1.ID = 134",
    "readable_query": "SELECT city.Name, city.Population FROM city AS city WHERE city.ID = 134"
  },
  {
    "db_id": "world_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Region, T1.LifeExpectancy FROM country AS T1 WHERE T1.Capital = 2441",
    "readable_query": "SELECT country.Region, country.LifeExpectancy FROM country AS country WHERE country.Capital = 2441"
  },
  {
    "db_id": "world_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Code2, T1.Population FROM country AS T1 WHERE T1.GovernmentForm = \"Nonmetropolitan Territory of New Zealand\"",
    "readable_query": "SELECT country.Code2, country.Population FROM country AS country WHERE country.GovernmentForm = \"Nonmetropolitan Territory of New Zealand\""
  },
  {
    "db_id": "world_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Continent, T1.Code FROM country AS T1 WHERE T1.LifeExpectancy = 77.7",
    "readable_query": "SELECT country.Continent, country.Code FROM country AS country WHERE country.LifeExpectancy = 77.7"
  },
  {
    "db_id": "world_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Language, T1.Percentage FROM countrylanguage AS T1 WHERE T1.CountryCode = \"HRV\"",
    "readable_query": "SELECT countrylanguage.Language, countrylanguage.Percentage FROM countrylanguage AS countrylanguage WHERE countrylanguage.CountryCode = \"HRV\""
  },
  {
    "db_id": "world_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.GovernmentForm, T1.LocalName FROM country AS T1 WHERE T1.GNPOld = 755.0",
    "readable_query": "SELECT country.GovernmentForm, country.LocalName FROM country AS country WHERE country.GNPOld = 755.0"
  },
  {
    "db_id": "world_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Capital FROM country AS T1  GROUP BY T1.Capital  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT country.Capital FROM country AS country  GROUP BY country.Capital  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Code2 FROM country AS T1  GROUP BY T1.Code2  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT country.Code2 FROM country AS country  GROUP BY country.Code2  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.CountryCode FROM city AS T1  GROUP BY T1.CountryCode  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT city.CountryCode FROM city AS city  GROUP BY city.CountryCode  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Language FROM countrylanguage AS T1  GROUP BY T1.Language  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT countrylanguage.Language FROM countrylanguage AS countrylanguage  GROUP BY countrylanguage.Language  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.name FROM sqlite_sequence AS T1  GROUP BY T1.name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT sqlite_sequence.name FROM sqlite_sequence AS sqlite_sequence  GROUP BY sqlite_sequence.name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.CountryCode FROM city AS T1  GROUP BY T1.CountryCode  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT city.CountryCode FROM city AS city  GROUP BY city.CountryCode  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.GovernmentForm FROM country AS T1  GROUP BY T1.GovernmentForm  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT country.GovernmentForm FROM country AS country  GROUP BY country.GovernmentForm  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.seq FROM sqlite_sequence AS T1  GROUP BY T1.seq  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT sqlite_sequence.seq FROM sqlite_sequence AS sqlite_sequence  GROUP BY sqlite_sequence.seq  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM city AS T1 WHERE T1.CountryCode = \"SUR\"",
    "readable_query": "SELECT count(*) FROM city AS city WHERE city.CountryCode = \"SUR\""
  },
  {
    "db_id": "world_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM sqlite_sequence AS T1 WHERE T1.name = \"city\"",
    "readable_query": "SELECT count(*) FROM sqlite_sequence AS sqlite_sequence WHERE sqlite_sequence.name = \"city\""
  },
  {
    "db_id": "world_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM country AS T1 WHERE T1.IndepYear = 1980",
    "readable_query": "SELECT count(*) FROM country AS country WHERE country.IndepYear = 1980"
  },
  {
    "db_id": "world_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM sqlite_sequence AS T1 WHERE T1.name = \"city\"",
    "readable_query": "SELECT count(*) FROM sqlite_sequence AS sqlite_sequence WHERE sqlite_sequence.name = \"city\""
  },
  {
    "db_id": "world_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM countrylanguage AS T1 WHERE T1.Language = \"Hausa\"",
    "readable_query": "SELECT count(*) FROM countrylanguage AS countrylanguage WHERE countrylanguage.Language = \"Hausa\""
  },
  {
    "db_id": "world_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM country AS T1 WHERE T1.Population = 11201000",
    "readable_query": "SELECT count(*) FROM country AS country WHERE country.Population = 11201000"
  },
  {
    "db_id": "world_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM countrylanguage AS T1 WHERE T1.Language = \"Marma\"",
    "readable_query": "SELECT count(*) FROM countrylanguage AS countrylanguage WHERE countrylanguage.Language = \"Marma\""
  },
  {
    "db_id": "world_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM city AS T1 WHERE T1.ID = 1905",
    "readable_query": "SELECT count(*) FROM city AS city WHERE city.ID = 1905"
  },
  {
    "db_id": "world_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM countrylanguage AS T1 WHERE T1.Language = \"Sumo\"",
    "readable_query": "SELECT count(*) FROM countrylanguage AS countrylanguage WHERE countrylanguage.Language = \"Sumo\""
  },
  {
    "db_id": "world_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM city AS T1 WHERE T1.Population = 108254",
    "readable_query": "SELECT count(*) FROM city AS city WHERE city.Population = 108254"
  },
  {
    "db_id": "world_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM sqlite_sequence AS T1 WHERE T1.seq = \"4079\"",
    "readable_query": "SELECT count(*) FROM sqlite_sequence AS sqlite_sequence WHERE sqlite_sequence.seq = \"4079\""
  },
  {
    "db_id": "world_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM country AS T1 WHERE T1.Code2 = \"SC\"",
    "readable_query": "SELECT count(*) FROM country AS country WHERE country.Code2 = \"SC\""
  },
  {
    "db_id": "world_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.CountryCode FROM city AS T1    ORDER BY T1.Population DESC LIMIT 1",
    "readable_query": "SELECT city.CountryCode FROM city AS city    ORDER BY city.Population DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Population FROM city AS T1    ORDER BY T1.ID DESC LIMIT 1",
    "readable_query": "SELECT city.Population FROM city AS city    ORDER BY city.ID DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Code2 FROM country AS T1    ORDER BY T1.LifeExpectancy DESC LIMIT 1",
    "readable_query": "SELECT country.Code2 FROM country AS country    ORDER BY country.LifeExpectancy DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Language FROM countrylanguage AS T1    ORDER BY T1.Percentage DESC LIMIT 1",
    "readable_query": "SELECT countrylanguage.Language FROM countrylanguage AS countrylanguage    ORDER BY countrylanguage.Percentage DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.SurfaceArea FROM country AS T1    ORDER BY T1.IndepYear DESC LIMIT 1",
    "readable_query": "SELECT country.SurfaceArea FROM country AS country    ORDER BY country.IndepYear DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Population FROM city AS T1    ORDER BY T1.ID DESC LIMIT 1",
    "readable_query": "SELECT city.Population FROM city AS city    ORDER BY city.ID DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.District FROM city AS T1    ORDER BY T1.ID DESC LIMIT 1",
    "readable_query": "SELECT city.District FROM city AS city    ORDER BY city.ID DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.CountryCode FROM city AS T1    ORDER BY T1.Population DESC LIMIT 1",
    "readable_query": "SELECT city.CountryCode FROM city AS city    ORDER BY city.Population DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Population FROM country AS T1    ORDER BY T1.Capital DESC LIMIT 1",
    "readable_query": "SELECT country.Population FROM country AS country    ORDER BY country.Capital DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Code2 FROM country AS T1    ORDER BY T1.GNPOld DESC LIMIT 1",
    "readable_query": "SELECT country.Code2 FROM country AS country    ORDER BY country.GNPOld DESC LIMIT 1"
  },
  {
    "db_id": "world_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM country AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  country.Name) FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Population) FROM city AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  city.Population) FROM city AS city"
  },
  {
    "db_id": "world_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.LocalName) FROM country AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  country.LocalName) FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.LocalName) FROM country AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  country.LocalName) FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Language) FROM countrylanguage AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  countrylanguage.Language) FROM countrylanguage AS countrylanguage"
  },
  {
    "db_id": "world_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.name) FROM sqlite_sequence AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  sqlite_sequence.name) FROM sqlite_sequence AS sqlite_sequence"
  },
  {
    "db_id": "world_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.seq) FROM sqlite_sequence AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  sqlite_sequence.seq) FROM sqlite_sequence AS sqlite_sequence"
  },
  {
    "db_id": "world_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.IsOfficial) FROM countrylanguage AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  countrylanguage.IsOfficial) FROM countrylanguage AS countrylanguage"
  },
  {
    "db_id": "world_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Code2) FROM country AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  country.Code2) FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Percentage) FROM countrylanguage AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  countrylanguage.Percentage) FROM countrylanguage AS countrylanguage"
  },
  {
    "db_id": "world_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.IndepYear) FROM country AS T1",
    "readable_query": "SELECT avg( country.IndepYear) FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Population) FROM city AS T1",
    "readable_query": "SELECT avg( city.Population) FROM city AS city"
  },
  {
    "db_id": "world_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.SurfaceArea) FROM country AS T1",
    "readable_query": "SELECT avg( country.SurfaceArea) FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Percentage) FROM countrylanguage AS T1",
    "readable_query": "SELECT avg( countrylanguage.Percentage) FROM countrylanguage AS countrylanguage"
  },
  {
    "db_id": "world_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Capital) FROM country AS T1",
    "readable_query": "SELECT avg( country.Capital) FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.ID) FROM city AS T1",
    "readable_query": "SELECT avg( city.ID) FROM city AS city"
  },
  {
    "db_id": "world_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.GNPOld) FROM country AS T1",
    "readable_query": "SELECT avg( country.GNPOld) FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.LifeExpectancy) FROM country AS T1",
    "readable_query": "SELECT avg( country.LifeExpectancy) FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Percentage) FROM countrylanguage AS T1",
    "readable_query": "SELECT avg( countrylanguage.Percentage) FROM countrylanguage AS countrylanguage"
  },
  {
    "db_id": "world_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.IndepYear) FROM country AS T1",
    "readable_query": "SELECT avg( country.IndepYear) FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Population) FROM country AS T1",
    "readable_query": "SELECT avg( country.Population) FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.GNPOld FROM country AS T1",
    "readable_query": "SELECT country.GNPOld FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.HeadOfState FROM country AS T1",
    "readable_query": "SELECT country.HeadOfState FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Region FROM country AS T1",
    "readable_query": "SELECT country.Region FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.IndepYear FROM country AS T1",
    "readable_query": "SELECT country.IndepYear FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.GovernmentForm FROM country AS T1",
    "readable_query": "SELECT country.GovernmentForm FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.seq FROM sqlite_sequence AS T1",
    "readable_query": "SELECT sqlite_sequence.seq FROM sqlite_sequence AS sqlite_sequence"
  },
  {
    "db_id": "world_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.LocalName FROM country AS T1",
    "readable_query": "SELECT country.LocalName FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.name FROM sqlite_sequence AS T1",
    "readable_query": "SELECT sqlite_sequence.name FROM sqlite_sequence AS sqlite_sequence"
  },
  {
    "db_id": "world_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Name FROM city AS T1",
    "readable_query": "SELECT city.Name FROM city AS city"
  },
  {
    "db_id": "world_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Population FROM city AS T1",
    "readable_query": "SELECT city.Population FROM city AS city"
  },
  {
    "db_id": "world_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Language FROM countrylanguage AS T1",
    "readable_query": "SELECT countrylanguage.Language FROM countrylanguage AS countrylanguage"
  },
  {
    "db_id": "world_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.ID FROM city AS T1",
    "readable_query": "SELECT city.ID FROM city AS city"
  },
  {
    "db_id": "world_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.IsOfficial FROM countrylanguage AS T1",
    "readable_query": "SELECT DISTINCT countrylanguage.IsOfficial FROM countrylanguage AS countrylanguage"
  },
  {
    "db_id": "world_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Code2 FROM country AS T1",
    "readable_query": "SELECT DISTINCT country.Code2 FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Name FROM country AS T1",
    "readable_query": "SELECT DISTINCT country.Name FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Population FROM city AS T1",
    "readable_query": "SELECT DISTINCT city.Population FROM city AS city"
  },
  {
    "db_id": "world_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.IsOfficial FROM countrylanguage AS T1",
    "readable_query": "SELECT DISTINCT countrylanguage.IsOfficial FROM countrylanguage AS countrylanguage"
  },
  {
    "db_id": "world_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.name FROM sqlite_sequence AS T1",
    "readable_query": "SELECT DISTINCT sqlite_sequence.name FROM sqlite_sequence AS sqlite_sequence"
  },
  {
    "db_id": "world_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.name FROM sqlite_sequence AS T1",
    "readable_query": "SELECT DISTINCT sqlite_sequence.name FROM sqlite_sequence AS sqlite_sequence"
  },
  {
    "db_id": "world_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.District FROM city AS T1",
    "readable_query": "SELECT DISTINCT city.District FROM city AS city"
  },
  {
    "db_id": "world_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Region FROM country AS T1",
    "readable_query": "SELECT DISTINCT country.Region FROM country AS country"
  },
  {
    "db_id": "world_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.GNPOld FROM country AS T1     ORDER BY T1.LifeExpectancy ASC",
    "readable_query": "SELECT country.GNPOld FROM country AS country     ORDER BY country.LifeExpectancy ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1     ORDER BY T1.Percentage ASC",
    "readable_query": "SELECT countrylanguage.CountryCode FROM countrylanguage AS countrylanguage     ORDER BY countrylanguage.Percentage ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.IndepYear FROM country AS T1     ORDER BY T1.SurfaceArea ASC",
    "readable_query": "SELECT country.IndepYear FROM country AS country     ORDER BY country.SurfaceArea ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.IsOfficial FROM countrylanguage AS T1     ORDER BY T1.Percentage ASC",
    "readable_query": "SELECT countrylanguage.IsOfficial FROM countrylanguage AS countrylanguage     ORDER BY countrylanguage.Percentage ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.GNPOld FROM country AS T1     ORDER BY T1.GNP ASC",
    "readable_query": "SELECT country.GNPOld FROM country AS country     ORDER BY country.GNP ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.IndepYear FROM country AS T1     ORDER BY T1.LifeExpectancy ASC",
    "readable_query": "SELECT country.IndepYear FROM country AS country     ORDER BY country.LifeExpectancy ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Population FROM city AS T1     ORDER BY T1.ID ASC",
    "readable_query": "SELECT city.Population FROM city AS city     ORDER BY city.ID ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.GNP FROM country AS T1     ORDER BY T1.Population ASC",
    "readable_query": "SELECT country.GNP FROM country AS country     ORDER BY country.Population ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.ID FROM city AS T1     ORDER BY T1.Population ASC",
    "readable_query": "SELECT city.ID FROM city AS city     ORDER BY city.Population ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1     ORDER BY T1.Percentage DESC",
    "readable_query": "SELECT countrylanguage.CountryCode FROM countrylanguage AS countrylanguage     ORDER BY countrylanguage.Percentage DESC"
  },
  {
    "db_id": "world_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Language FROM countrylanguage AS T1     ORDER BY T1.Percentage DESC",
    "readable_query": "SELECT countrylanguage.Language FROM countrylanguage AS countrylanguage     ORDER BY countrylanguage.Percentage DESC"
  },
  {
    "db_id": "world_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.District FROM city AS T1     ORDER BY T1.ID DESC",
    "readable_query": "SELECT city.District FROM city AS city     ORDER BY city.ID DESC"
  },
  {
    "db_id": "world_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Region FROM country AS T1     ORDER BY T1.IndepYear DESC",
    "readable_query": "SELECT country.Region FROM country AS country     ORDER BY country.IndepYear DESC"
  },
  {
    "db_id": "world_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Continent FROM country AS T1     ORDER BY T1.Capital DESC",
    "readable_query": "SELECT country.Continent FROM country AS country     ORDER BY country.Capital DESC"
  },
  {
    "db_id": "world_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.District FROM city AS T1     ORDER BY T1.Population DESC",
    "readable_query": "SELECT city.District FROM city AS city     ORDER BY city.Population DESC"
  },
  {
    "db_id": "world_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Capital FROM country AS T1     ORDER BY T1.GNP DESC",
    "readable_query": "SELECT country.Capital FROM country AS country     ORDER BY country.GNP DESC"
  },
  {
    "db_id": "world_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.ID FROM city AS T1     ORDER BY T1.Population DESC",
    "readable_query": "SELECT city.ID FROM city AS city     ORDER BY city.Population DESC"
  },
  {
    "db_id": "world_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Language FROM countrylanguage AS T1     ORDER BY T1.Percentage DESC",
    "readable_query": "SELECT countrylanguage.Language FROM countrylanguage AS countrylanguage     ORDER BY countrylanguage.Percentage DESC"
  },
  {
    "db_id": "world_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Name FROM city AS T1     ORDER BY T1.ID DESC",
    "readable_query": "SELECT city.Name FROM city AS city     ORDER BY city.ID DESC"
  },
  {
    "db_id": "world_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Percentage, T1.IsOfficial FROM countrylanguage AS T1     ORDER BY T1.IsOfficial ASC",
    "readable_query": "SELECT countrylanguage.Percentage, countrylanguage.IsOfficial FROM countrylanguage AS countrylanguage     ORDER BY countrylanguage.IsOfficial ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.seq, T1.name FROM sqlite_sequence AS T1     ORDER BY T1.name ASC",
    "readable_query": "SELECT sqlite_sequence.seq, sqlite_sequence.name FROM sqlite_sequence AS sqlite_sequence     ORDER BY sqlite_sequence.name ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.IsOfficial, T1.Language FROM countrylanguage AS T1     ORDER BY T1.Language ASC",
    "readable_query": "SELECT countrylanguage.IsOfficial, countrylanguage.Language FROM countrylanguage AS countrylanguage     ORDER BY countrylanguage.Language ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Language, T1.CountryCode FROM countrylanguage AS T1     ORDER BY T1.CountryCode ASC",
    "readable_query": "SELECT countrylanguage.Language, countrylanguage.CountryCode FROM countrylanguage AS countrylanguage     ORDER BY countrylanguage.CountryCode ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.IndepYear, T1.Population FROM country AS T1     ORDER BY T1.Population ASC",
    "readable_query": "SELECT country.IndepYear, country.Population FROM country AS country     ORDER BY country.Population ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.LocalName, T1.LifeExpectancy FROM country AS T1     ORDER BY T1.LifeExpectancy ASC",
    "readable_query": "SELECT country.LocalName, country.LifeExpectancy FROM country AS country     ORDER BY country.LifeExpectancy ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.GNPOld, T1.Capital FROM country AS T1     ORDER BY T1.Capital ASC",
    "readable_query": "SELECT country.GNPOld, country.Capital FROM country AS country     ORDER BY country.Capital ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.name, T1.seq FROM sqlite_sequence AS T1     ORDER BY T1.seq ASC",
    "readable_query": "SELECT sqlite_sequence.name, sqlite_sequence.seq FROM sqlite_sequence AS sqlite_sequence     ORDER BY sqlite_sequence.seq ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Language, T1.Percentage FROM countrylanguage AS T1     ORDER BY T1.Percentage ASC",
    "readable_query": "SELECT countrylanguage.Language, countrylanguage.Percentage FROM countrylanguage AS countrylanguage     ORDER BY countrylanguage.Percentage ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.IsOfficial, T1.Language FROM countrylanguage AS T1     ORDER BY T1.Language ASC",
    "readable_query": "SELECT countrylanguage.IsOfficial, countrylanguage.Language FROM countrylanguage AS countrylanguage     ORDER BY countrylanguage.Language ASC"
  },
  {
    "db_id": "world_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.District FROM city AS T1 WHERE T1.Population = 383900 and T1.Name = \"Berazategui\"",
    "readable_query": "SELECT city.District FROM city AS city WHERE city.Population = 383900 and city.Name = \"Berazategui\""
  },
  {
    "db_id": "world_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Code FROM country AS T1 WHERE T1.LocalName = \"British Virgin Islands\" and T1.GNPOld = 5924.0",
    "readable_query": "SELECT country.Code FROM country AS country WHERE country.LocalName = \"British Virgin Islands\" and country.GNPOld = 5924.0"
  },
  {
    "db_id": "world_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1 WHERE T1.Percentage = 7.1 and T1.Language = \"Thai\"",
    "readable_query": "SELECT countrylanguage.CountryCode FROM countrylanguage AS countrylanguage WHERE countrylanguage.Percentage = 7.1 and countrylanguage.Language = \"Thai\""
  },
  {
    "db_id": "world_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.ID FROM city AS T1 WHERE T1.Population = 140000 and T1.District = \"G\u00e4nc\u00e4\"",
    "readable_query": "SELECT city.ID FROM city AS city WHERE city.Population = 140000 and city.District = \"G\u00e4nc\u00e4\""
  },
  {
    "db_id": "world_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Region FROM country AS T1 WHERE T1.SurfaceArea = 801590.0 and T1.Population = 1972000",
    "readable_query": "SELECT country.Region FROM country AS country WHERE country.SurfaceArea = 801590.0 and country.Population = 1972000"
  },
  {
    "db_id": "world_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1 WHERE T1.Language = \"Polish\" and T1.Percentage = 0.3",
    "readable_query": "SELECT countrylanguage.CountryCode FROM countrylanguage AS countrylanguage WHERE countrylanguage.Language = \"Polish\" and countrylanguage.Percentage = 0.3"
  },
  {
    "db_id": "world_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Region FROM country AS T1 WHERE T1.IndepYear = 1811 or T1.SurfaceArea = 245857.0",
    "readable_query": "SELECT country.Region FROM country AS country WHERE country.IndepYear = 1811 or country.SurfaceArea = 245857.0"
  },
  {
    "db_id": "world_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1 WHERE T1.IsOfficial = \"T\" or T1.Language = \"Creole French\"",
    "readable_query": "SELECT countrylanguage.CountryCode FROM countrylanguage AS countrylanguage WHERE countrylanguage.IsOfficial = \"T\" or countrylanguage.Language = \"Creole French\""
  },
  {
    "db_id": "world_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.GNP FROM country AS T1 WHERE T1.Capital = 204 or T1.Name = \"Spain\"",
    "readable_query": "SELECT country.GNP FROM country AS country WHERE country.Capital = 204 or country.Name = \"Spain\""
  },
  {
    "db_id": "world_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Population FROM country AS T1 WHERE T1.HeadOfState = \"Paul Biya\" or T1.Name = \"Guatemala\"",
    "readable_query": "SELECT country.Population FROM country AS country WHERE country.HeadOfState = \"Paul Biya\" or country.Name = \"Guatemala\""
  },
  {
    "db_id": "world_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Language FROM countrylanguage AS T1 WHERE T1.Percentage = 21.4 or T1.IsOfficial = \"T\"",
    "readable_query": "SELECT countrylanguage.Language FROM countrylanguage AS countrylanguage WHERE countrylanguage.Percentage = 21.4 or countrylanguage.IsOfficial = \"T\""
  },
  {
    "db_id": "world_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.GovernmentForm FROM country AS T1 WHERE T1.HeadOfState = \"Azali Assoumani\" or T1.IndepYear = 1981",
    "readable_query": "SELECT country.GovernmentForm FROM country AS country WHERE country.HeadOfState = \"Azali Assoumani\" or country.IndepYear = 1981"
  },
  {
    "db_id": "world_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.District FROM city AS T1 WHERE T1.Population = 328535 or T1.Name = \"Granada\"",
    "readable_query": "SELECT city.District FROM city AS city WHERE city.Population = 328535 or city.Name = \"Granada\""
  },
  {
    "db_id": "world_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.IsOfficial FROM countrylanguage AS T1 WHERE T1.Language = \"Ga-adangme\" or T1.CountryCode = \"WLF\"",
    "readable_query": "SELECT countrylanguage.IsOfficial FROM countrylanguage AS countrylanguage WHERE countrylanguage.Language = \"Ga-adangme\" or countrylanguage.CountryCode = \"WLF\""
  },
  {
    "db_id": "world_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Name FROM city AS T1 WHERE T1.Population = 473276 or T1.ID = 2142",
    "readable_query": "SELECT city.Name FROM city AS city WHERE city.Population = 473276 or city.ID = 2142"
  },
  {
    "db_id": "world_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1 WHERE T1.Percentage = 4.3 or T1.IsOfficial = \"F\"",
    "readable_query": "SELECT countrylanguage.CountryCode FROM countrylanguage AS countrylanguage WHERE countrylanguage.Percentage = 4.3 or countrylanguage.IsOfficial = \"F\""
  },
  {
    "db_id": "world_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Percentage FROM countrylanguage AS T1 WHERE T1.IsOfficial != \"T\"",
    "readable_query": "SELECT countrylanguage.Percentage FROM countrylanguage AS countrylanguage WHERE countrylanguage.IsOfficial != \"T\""
  },
  {
    "db_id": "world_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Name FROM country AS T1 WHERE T1.Continent != \"Oceania\"",
    "readable_query": "SELECT country.Name FROM country AS country WHERE country.Continent != \"Oceania\""
  },
  {
    "db_id": "world_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.IndepYear FROM country AS T1 WHERE T1.Region != \"Southern Africa\"",
    "readable_query": "SELECT country.IndepYear FROM country AS country WHERE country.Region != \"Southern Africa\""
  },
  {
    "db_id": "world_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1 WHERE T1.Language != \"Tagalog\"",
    "readable_query": "SELECT countrylanguage.CountryCode FROM countrylanguage AS countrylanguage WHERE countrylanguage.Language != \"Tagalog\""
  },
  {
    "db_id": "world_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.District) FROM city AS T1 WHERE T1.Name = \"Bissau\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  city.District) FROM city AS city WHERE city.Name = \"Bissau\""
  },
  {
    "db_id": "world_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.IsOfficial) FROM countrylanguage AS T1 WHERE T1.Language = \"Newari\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  countrylanguage.IsOfficial) FROM countrylanguage AS countrylanguage WHERE countrylanguage.Language = \"Newari\""
  },
  {
    "db_id": "world_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.LifeExpectancy) FROM country AS T1 WHERE T1.LocalName = \"Guam\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  country.LifeExpectancy) FROM country AS country WHERE country.LocalName = \"Guam\""
  },
  {
    "db_id": "world_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM country AS T1 WHERE T1.GNPOld = 401461.0",
    "readable_query": "SELECT DISTINCT count(DISTINCT  country.Name) FROM country AS country WHERE country.GNPOld = 401461.0"
  },
  {
    "db_id": "world_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.seq) FROM sqlite_sequence AS T1 WHERE T1.name = \"city\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  sqlite_sequence.seq) FROM sqlite_sequence AS sqlite_sequence WHERE sqlite_sequence.name = \"city\""
  },
  {
    "db_id": "world_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Code2) FROM country AS T1 WHERE T1.LifeExpectancy = 49.2",
    "readable_query": "SELECT DISTINCT count(DISTINCT  country.Code2) FROM country AS country WHERE country.LifeExpectancy = 49.2"
  },
  {
    "db_id": "world_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Percentage) FROM countrylanguage AS T1 WHERE T1.CountryCode = \"BOL\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  countrylanguage.Percentage) FROM countrylanguage AS countrylanguage WHERE countrylanguage.CountryCode = \"BOL\""
  },
  {
    "db_id": "world_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Population FROM country AS T1 WHERE T1.Capital > 187",
    "readable_query": "SELECT country.Population FROM country AS country WHERE country.Capital > 187"
  },
  {
    "db_id": "world_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.District FROM city AS T1 WHERE T1.ID > 562",
    "readable_query": "SELECT city.District FROM city AS city WHERE city.ID > 562"
  },
  {
    "db_id": "world_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1 WHERE T1.Percentage > 0.2",
    "readable_query": "SELECT countrylanguage.CountryCode FROM countrylanguage AS countrylanguage WHERE countrylanguage.Percentage > 0.2"
  },
  {
    "db_id": "world_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Population FROM city AS T1 WHERE T1.ID > 421",
    "readable_query": "SELECT city.Population FROM city AS city WHERE city.ID > 421"
  },
  {
    "db_id": "world_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.GNP FROM country AS T1 WHERE T1.LifeExpectancy > 61.1",
    "readable_query": "SELECT country.GNP FROM country AS country WHERE country.LifeExpectancy > 61.1"
  },
  {
    "db_id": "world_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.CountryCode FROM city AS T1 WHERE T1.ID > 260",
    "readable_query": "SELECT city.CountryCode FROM city AS city WHERE city.ID > 260"
  },
  {
    "db_id": "world_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.ID FROM city AS T1 WHERE T1.Population > 155105",
    "readable_query": "SELECT city.ID FROM city AS city WHERE city.Population > 155105"
  },
  {
    "db_id": "world_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Continent FROM country AS T1 WHERE T1.LifeExpectancy > 50.1",
    "readable_query": "SELECT country.Continent FROM country AS country WHERE country.LifeExpectancy > 50.1"
  },
  {
    "db_id": "world_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.IsOfficial FROM countrylanguage AS T1 WHERE T1.Percentage > 26.3",
    "readable_query": "SELECT countrylanguage.IsOfficial FROM countrylanguage AS countrylanguage WHERE countrylanguage.Percentage > 26.3"
  },
  {
    "db_id": "world_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Population FROM city AS T1 WHERE T1.ID > 169",
    "readable_query": "SELECT city.Population FROM city AS city WHERE city.ID > 169"
  },
  {
    "db_id": "world_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.HeadOfState FROM country AS T1 WHERE T1.SurfaceArea = 1240192.0     INTERSECT SELECT T2.HeadOfState FROM country AS T2 WHERE T2.SurfaceArea = 51197.0",
    "readable_query": "SELECT country.HeadOfState FROM country AS country WHERE country.SurfaceArea = 1240192.0     INTERSECT SELECT country.HeadOfState FROM country AS country WHERE country.SurfaceArea = 51197.0"
  },
  {
    "db_id": "world_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Name FROM city AS T1 WHERE T1.CountryCode = \"LCA\"     INTERSECT SELECT T2.Name FROM city AS T2 WHERE T2.CountryCode = \"LAO\"",
    "readable_query": "SELECT city.Name FROM city AS city WHERE city.CountryCode = \"LCA\"     INTERSECT SELECT city.Name FROM city AS city WHERE city.CountryCode = \"LAO\""
  },
  {
    "db_id": "world_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Name FROM city AS T1 WHERE T1.District = \"Belize City\"     INTERSECT SELECT T2.Name FROM city AS T2 WHERE T2.District = \"al-Najaf\"",
    "readable_query": "SELECT city.Name FROM city AS city WHERE city.District = \"Belize City\"     INTERSECT SELECT city.Name FROM city AS city WHERE city.District = \"al-Najaf\""
  },
  {
    "db_id": "world_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.SurfaceArea FROM country AS T1 WHERE T1.LifeExpectancy = 56.6     INTERSECT SELECT T2.SurfaceArea FROM country AS T2 WHERE T2.LifeExpectancy = 76.1",
    "readable_query": "SELECT country.SurfaceArea FROM country AS country WHERE country.LifeExpectancy = 56.6     INTERSECT SELECT country.SurfaceArea FROM country AS country WHERE country.LifeExpectancy = 76.1"
  },
  {
    "db_id": "world_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.name FROM sqlite_sequence AS T1 WHERE T1.seq = \"4079\"     INTERSECT SELECT T2.name FROM sqlite_sequence AS T2 WHERE T2.seq = \"4079\"",
    "readable_query": "SELECT sqlite_sequence.name FROM sqlite_sequence AS sqlite_sequence WHERE sqlite_sequence.seq = \"4079\"     INTERSECT SELECT sqlite_sequence.name FROM sqlite_sequence AS sqlite_sequence WHERE sqlite_sequence.seq = \"4079\""
  },
  {
    "db_id": "world_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Capital FROM country AS T1 WHERE T1.SurfaceArea = 377829.0     INTERSECT SELECT T2.Capital FROM country AS T2 WHERE T2.SurfaceArea = 75517.0",
    "readable_query": "SELECT country.Capital FROM country AS country WHERE country.SurfaceArea = 377829.0     INTERSECT SELECT country.Capital FROM country AS country WHERE country.SurfaceArea = 75517.0"
  },
  {
    "db_id": "world_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.seq FROM sqlite_sequence AS T1 WHERE T1.name = \"city\"     INTERSECT SELECT T2.seq FROM sqlite_sequence AS T2 WHERE T2.name = \"city\"",
    "readable_query": "SELECT sqlite_sequence.seq FROM sqlite_sequence AS sqlite_sequence WHERE sqlite_sequence.name = \"city\"     INTERSECT SELECT sqlite_sequence.seq FROM sqlite_sequence AS sqlite_sequence WHERE sqlite_sequence.name = \"city\""
  },
  {
    "db_id": "world_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.ID FROM city AS T1 WHERE T1.CountryCode = \"BEL\"     INTERSECT SELECT T2.ID FROM city AS T2 WHERE T2.CountryCode = \"PRI\"",
    "readable_query": "SELECT city.ID FROM city AS city WHERE city.CountryCode = \"BEL\"     INTERSECT SELECT city.ID FROM city AS city WHERE city.CountryCode = \"PRI\""
  },
  {
    "db_id": "world_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.ID) FROM city AS T1 WHERE T1.District = \"Managua\"",
    "readable_query": "SELECT avg( city.ID) FROM city AS city WHERE city.District = \"Managua\""
  },
  {
    "db_id": "world_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.IndepYear) FROM country AS T1 WHERE T1.GovernmentForm = \"Administrated by the UN\"",
    "readable_query": "SELECT avg( country.IndepYear) FROM country AS country WHERE country.GovernmentForm = \"Administrated by the UN\""
  },
  {
    "db_id": "world_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.GNP) FROM country AS T1 WHERE T1.Capital = 3016",
    "readable_query": "SELECT avg( country.GNP) FROM country AS country WHERE country.Capital = 3016"
  },
  {
    "db_id": "world_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.GNP) FROM country AS T1 WHERE T1.Capital = 2401",
    "readable_query": "SELECT avg( country.GNP) FROM country AS country WHERE country.Capital = 2401"
  },
  {
    "db_id": "world_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Population) FROM city AS T1 WHERE T1.Name = \"Gjumri\"",
    "readable_query": "SELECT avg( city.Population) FROM city AS city WHERE city.Name = \"Gjumri\""
  },
  {
    "db_id": "world_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Percentage) FROM countrylanguage AS T1 WHERE T1.CountryCode = \"ZAF\"",
    "readable_query": "SELECT avg( countrylanguage.Percentage) FROM countrylanguage AS countrylanguage WHERE countrylanguage.CountryCode = \"ZAF\""
  },
  {
    "db_id": "world_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.ID) FROM city AS T1 WHERE T1.CountryCode = \"MKD\"",
    "readable_query": "SELECT avg( city.ID) FROM city AS city WHERE city.CountryCode = \"MKD\""
  },
  {
    "db_id": "world_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.IndepYear) FROM country AS T1 WHERE T1.GNPOld = 65186.0",
    "readable_query": "SELECT avg( country.IndepYear) FROM country AS country WHERE country.GNPOld = 65186.0"
  },
  {
    "db_id": "world_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Percentage) FROM countrylanguage AS T1 WHERE T1.IsOfficial = \"T\"",
    "readable_query": "SELECT avg( countrylanguage.Percentage) FROM countrylanguage AS countrylanguage WHERE countrylanguage.IsOfficial = \"T\""
  },
  {
    "db_id": "world_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.GNPOld) FROM country AS T1 WHERE T1.LocalName = \"South Africa\"",
    "readable_query": "SELECT avg( country.GNPOld) FROM country AS country WHERE country.LocalName = \"South Africa\""
  },
  {
    "db_id": "world_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1        EXCEPT SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.IsOfficial = \"F\"",
    "readable_query": "SELECT countrylanguage.CountryCode FROM countrylanguage AS countrylanguage        EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage AS countrylanguage WHERE countrylanguage.IsOfficial = \"F\""
  },
  {
    "db_id": "world_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.name FROM sqlite_sequence AS T1        EXCEPT SELECT T2.name FROM sqlite_sequence AS T2 WHERE T2.seq = \"4079\"",
    "readable_query": "SELECT sqlite_sequence.name FROM sqlite_sequence AS sqlite_sequence        EXCEPT SELECT sqlite_sequence.name FROM sqlite_sequence AS sqlite_sequence WHERE sqlite_sequence.seq = \"4079\""
  },
  {
    "db_id": "world_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Region FROM country AS T1        EXCEPT SELECT T2.Region FROM country AS T2 WHERE T2.IndepYear = 1964",
    "readable_query": "SELECT country.Region FROM country AS country        EXCEPT SELECT country.Region FROM country AS country WHERE country.IndepYear = 1964"
  },
  {
    "db_id": "world_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Name FROM city AS T1        EXCEPT SELECT T2.Name FROM city AS T2 WHERE T2.ID = 2203",
    "readable_query": "SELECT city.Name FROM city AS city        EXCEPT SELECT city.Name FROM city AS city WHERE city.ID = 2203"
  },
  {
    "db_id": "world_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.CountryCode FROM city AS T1        EXCEPT SELECT T2.CountryCode FROM city AS T2 WHERE T2.Population = 357589",
    "readable_query": "SELECT city.CountryCode FROM city AS city        EXCEPT SELECT city.CountryCode FROM city AS city WHERE city.Population = 357589"
  },
  {
    "db_id": "world_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.LocalName FROM country AS T1        EXCEPT SELECT T2.LocalName FROM country AS T2 WHERE T2.Code2 = \"HU\"",
    "readable_query": "SELECT country.LocalName FROM country AS country        EXCEPT SELECT country.LocalName FROM country AS country WHERE country.Code2 = \"HU\""
  },
  {
    "db_id": "world_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.GNP FROM country AS T1        EXCEPT SELECT T2.GNP FROM country AS T2 WHERE T2.Continent = \"Asia\"",
    "readable_query": "SELECT country.GNP FROM country AS country        EXCEPT SELECT country.GNP FROM country AS country WHERE country.Continent = \"Asia\""
  },
  {
    "db_id": "world_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.seq FROM sqlite_sequence AS T1        EXCEPT SELECT T2.seq FROM sqlite_sequence AS T2 WHERE T2.name = \"city\"",
    "readable_query": "SELECT sqlite_sequence.seq FROM sqlite_sequence AS sqlite_sequence        EXCEPT SELECT sqlite_sequence.seq FROM sqlite_sequence AS sqlite_sequence WHERE sqlite_sequence.name = \"city\""
  },
  {
    "db_id": "world_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.ID FROM city AS T1        EXCEPT SELECT T2.ID FROM city AS T2 WHERE T2.Population = 125766",
    "readable_query": "SELECT city.ID FROM city AS city        EXCEPT SELECT city.ID FROM city AS city WHERE city.Population = 125766"
  },
  {
    "db_id": "world_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Name FROM city AS T1        EXCEPT SELECT T2.Name FROM city AS T2 WHERE T2.ID = 415",
    "readable_query": "SELECT city.Name FROM city AS city        EXCEPT SELECT city.Name FROM city AS city WHERE city.ID = 415"
  },
  {
    "db_id": "concert_singer",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Capacity FROM stadium AS T1 WHERE T1.Location = \"Raith Rovers\"",
    "readable_query": "SELECT stadium.Capacity FROM stadium AS stadium WHERE stadium.Location = \"Raith Rovers\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Name FROM stadium AS T1 WHERE T1.Average = 642",
    "readable_query": "SELECT stadium.Name FROM stadium AS stadium WHERE stadium.Average = 642"
  },
  {
    "db_id": "concert_singer",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Song_release_year FROM singer AS T1 WHERE T1.Country = \"United States\"",
    "readable_query": "SELECT singer.Song_release_year FROM singer AS singer WHERE singer.Country = \"United States\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.concert_ID FROM concert AS T1 WHERE T1.Stadium_ID = \"10\"",
    "readable_query": "SELECT concert.concert_ID FROM concert AS concert WHERE concert.Stadium_ID = \"10\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 WHERE T1.concert_ID = 2",
    "readable_query": "SELECT singer_in_concert.Singer_ID FROM singer_in_concert AS singer_in_concert WHERE singer_in_concert.concert_ID = 2"
  },
  {
    "db_id": "concert_singer",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Lowest FROM stadium AS T1 WHERE T1.Capacity = 10104",
    "readable_query": "SELECT stadium.Lowest FROM stadium AS stadium WHERE stadium.Capacity = 10104"
  },
  {
    "db_id": "concert_singer",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Theme FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Location = \"Stirling Albion\"",
    "readable_query": "SELECT concert.Theme FROM concert AS concert JOIN stadium AS stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Location = \"Stirling Albion\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Stadium_ID FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_ID = 4",
    "readable_query": "SELECT stadium.Stadium_ID FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.concert_ID = 4"
  },
  {
    "db_id": "concert_singer",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.concert_Name FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Highest = 1125",
    "readable_query": "SELECT concert.concert_Name FROM concert AS concert JOIN stadium AS stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Highest = 1125"
  },
  {
    "db_id": "concert_singer",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.concert_Name FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.Singer_ID = \"2\"",
    "readable_query": "SELECT concert.concert_Name FROM concert AS concert JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE singer_in_concert.Singer_ID = \"2\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Singer_ID, count(*) FROM singer_in_concert AS T1  GROUP BY T1.Singer_ID",
    "readable_query": "SELECT singer_in_concert.Singer_ID, count(*) FROM singer_in_concert AS singer_in_concert  GROUP BY singer_in_concert.Singer_ID"
  },
  {
    "db_id": "concert_singer",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.concert_ID, count(*) FROM concert AS T1  GROUP BY T1.concert_ID",
    "readable_query": "SELECT concert.concert_ID, count(*) FROM concert AS concert  GROUP BY concert.concert_ID"
  },
  {
    "db_id": "concert_singer",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Singer_ID, count(*) FROM singer_in_concert AS T1  GROUP BY T1.Singer_ID",
    "readable_query": "SELECT singer_in_concert.Singer_ID, count(*) FROM singer_in_concert AS singer_in_concert  GROUP BY singer_in_concert.Singer_ID"
  },
  {
    "db_id": "concert_singer",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Country, count(*) FROM singer AS T1  GROUP BY T1.Country",
    "readable_query": "SELECT singer.Country, count(*) FROM singer AS singer  GROUP BY singer.Country"
  },
  {
    "db_id": "concert_singer",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Song_Name, count(*) FROM singer AS T1  GROUP BY T1.Song_Name",
    "readable_query": "SELECT singer.Song_Name, count(*) FROM singer AS singer  GROUP BY singer.Song_Name"
  },
  {
    "db_id": "concert_singer",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.concert_ID, count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.concert_ID",
    "readable_query": "SELECT concert.concert_ID, count(*) FROM concert AS concert JOIN stadium AS stadium ON concert.Stadium_ID = stadium.Stadium_ID  GROUP BY concert.concert_ID"
  },
  {
    "db_id": "concert_singer",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Song_release_year, count(*) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Song_release_year",
    "readable_query": "SELECT singer.Song_release_year, count(*) FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID  GROUP BY singer.Song_release_year"
  },
  {
    "db_id": "concert_singer",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Location, count(*) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.Location",
    "readable_query": "SELECT stadium.Location, count(*) FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID  GROUP BY stadium.Location"
  },
  {
    "db_id": "concert_singer",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM singer AS T1",
    "readable_query": "SELECT count(*) FROM singer AS singer"
  },
  {
    "db_id": "concert_singer",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Lowest, T1.Name FROM stadium AS T1",
    "readable_query": "SELECT stadium.Lowest, stadium.Name FROM stadium AS stadium"
  },
  {
    "db_id": "concert_singer",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Stadium_ID, T1.Average FROM stadium AS T1",
    "readable_query": "SELECT stadium.Stadium_ID, stadium.Average FROM stadium AS stadium"
  },
  {
    "db_id": "concert_singer",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Stadium_ID, T1.Highest FROM stadium AS T1",
    "readable_query": "SELECT stadium.Stadium_ID, stadium.Highest FROM stadium AS stadium"
  },
  {
    "db_id": "concert_singer",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Singer_ID, T1.concert_ID FROM singer_in_concert AS T1",
    "readable_query": "SELECT singer_in_concert.Singer_ID, singer_in_concert.concert_ID FROM singer_in_concert AS singer_in_concert"
  },
  {
    "db_id": "concert_singer",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Singer_ID, T1.concert_ID FROM singer_in_concert AS T1",
    "readable_query": "SELECT singer_in_concert.Singer_ID, singer_in_concert.concert_ID FROM singer_in_concert AS singer_in_concert"
  },
  {
    "db_id": "concert_singer",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Theme, T1.concert_ID FROM concert AS T1",
    "readable_query": "SELECT concert.Theme, concert.concert_ID FROM concert AS concert"
  },
  {
    "db_id": "concert_singer",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Singer_ID, T2.Age FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "readable_query": "SELECT singer_in_concert.Singer_ID, singer.Age FROM singer_in_concert AS singer_in_concert JOIN singer AS singer ON singer_in_concert.Singer_ID = singer.Singer_ID"
  },
  {
    "db_id": "concert_singer",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Is_male, T2.Singer_ID FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "readable_query": "SELECT singer.Is_male, singer_in_concert.Singer_ID FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID"
  },
  {
    "db_id": "concert_singer",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Theme, T2.Singer_ID FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID",
    "readable_query": "SELECT concert.Theme, singer_in_concert.Singer_ID FROM concert AS concert JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID"
  },
  {
    "db_id": "concert_singer",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Song_release_year, T2.Singer_ID FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "readable_query": "SELECT singer.Song_release_year, singer_in_concert.Singer_ID FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID"
  },
  {
    "db_id": "concert_singer",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Highest, T2.Year FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID",
    "readable_query": "SELECT stadium.Highest, concert.Year FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID"
  },
  {
    "db_id": "concert_singer",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.concert_Name, T2.concert_ID FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID",
    "readable_query": "SELECT concert.concert_Name, singer_in_concert.concert_ID FROM concert AS concert JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID"
  },
  {
    "db_id": "concert_singer",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Stadium_ID, T1.Lowest FROM stadium AS T1 WHERE T1.Location = \"Stirling Albion\"",
    "readable_query": "SELECT stadium.Stadium_ID, stadium.Lowest FROM stadium AS stadium WHERE stadium.Location = \"Stirling Albion\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Name, T1.Highest FROM stadium AS T1 WHERE T1.Location = \"East Fife\"",
    "readable_query": "SELECT stadium.Name, stadium.Highest FROM stadium AS stadium WHERE stadium.Location = \"East Fife\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Name FROM singer AS T1  GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT singer.Name FROM singer AS singer  GROUP BY singer.Name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.concert_Name FROM concert AS T1  GROUP BY T1.concert_Name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT concert.concert_Name FROM concert AS concert  GROUP BY concert.concert_Name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.concert_Name FROM concert AS T1  GROUP BY T1.concert_Name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT concert.concert_Name FROM concert AS concert  GROUP BY concert.concert_Name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1  GROUP BY T1.Singer_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT singer_in_concert.Singer_ID FROM singer_in_concert AS singer_in_concert  GROUP BY singer_in_concert.Singer_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM singer AS T1 WHERE T1.Is_male = \"F\"",
    "readable_query": "SELECT count(*) FROM singer AS singer WHERE singer.Is_male = \"F\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM singer_in_concert AS T1 WHERE T1.Singer_ID = \"4\"",
    "readable_query": "SELECT count(*) FROM singer_in_concert AS singer_in_concert WHERE singer_in_concert.Singer_ID = \"4\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM singer_in_concert AS T1 WHERE T1.concert_ID = 3",
    "readable_query": "SELECT count(*) FROM singer_in_concert AS singer_in_concert WHERE singer_in_concert.concert_ID = 3"
  },
  {
    "db_id": "concert_singer",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Theme FROM concert AS T1    ORDER BY T1.concert_ID DESC LIMIT 1",
    "readable_query": "SELECT concert.Theme FROM concert AS concert    ORDER BY concert.concert_ID DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Highest FROM stadium AS T1    ORDER BY T1.Average DESC LIMIT 1",
    "readable_query": "SELECT stadium.Highest FROM stadium AS stadium    ORDER BY stadium.Average DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Is_male FROM singer AS T1    ORDER BY T1.Singer_ID DESC LIMIT 1",
    "readable_query": "SELECT singer.Is_male FROM singer AS singer    ORDER BY singer.Singer_ID DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Stadium_ID FROM concert AS T1    ORDER BY T1.concert_ID DESC LIMIT 1",
    "readable_query": "SELECT concert.Stadium_ID FROM concert AS concert    ORDER BY concert.concert_ID DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.concert_Name FROM concert AS T1    ORDER BY T1.concert_ID DESC LIMIT 1",
    "readable_query": "SELECT concert.concert_Name FROM concert AS concert    ORDER BY concert.concert_ID DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Country FROM singer AS T1    ORDER BY T1.Singer_ID DESC LIMIT 1",
    "readable_query": "SELECT singer.Country FROM singer AS singer    ORDER BY singer.Singer_ID DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Highest FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.concert_ID DESC LIMIT 1",
    "readable_query": "SELECT stadium.Highest FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID    ORDER BY concert.concert_ID DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Stadium_ID FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.concert_ID DESC LIMIT 1",
    "readable_query": "SELECT stadium.Stadium_ID FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID    ORDER BY concert.concert_ID DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Stadium_ID FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.Lowest DESC LIMIT 1",
    "readable_query": "SELECT concert.Stadium_ID FROM concert AS concert JOIN stadium AS stadium ON concert.Stadium_ID = stadium.Stadium_ID    ORDER BY stadium.Lowest DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Stadium_ID FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID    ORDER BY T2.concert_ID ASC LIMIT 1",
    "readable_query": "SELECT concert.Stadium_ID FROM concert AS concert JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID    ORDER BY singer_in_concert.concert_ID ASC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Capacity FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.concert_ID ASC LIMIT 1",
    "readable_query": "SELECT stadium.Capacity FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID    ORDER BY concert.concert_ID ASC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Stadium_ID FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.concert_ID ASC LIMIT 1",
    "readable_query": "SELECT stadium.Stadium_ID FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID    ORDER BY concert.concert_ID ASC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Theme FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.Highest ASC LIMIT 1",
    "readable_query": "SELECT concert.Theme FROM concert AS concert JOIN stadium AS stadium ON concert.Stadium_ID = stadium.Stadium_ID    ORDER BY stadium.Highest ASC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.concert_ID ASC LIMIT 1",
    "readable_query": "SELECT singer.Name FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID    ORDER BY singer_in_concert.concert_ID ASC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Theme FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID    ORDER BY T2.concert_ID ASC LIMIT 1",
    "readable_query": "SELECT concert.Theme FROM concert AS concert JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID    ORDER BY singer_in_concert.concert_ID ASC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.concert_ID ASC LIMIT 1",
    "readable_query": "SELECT stadium.Location FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID    ORDER BY concert.concert_ID ASC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Singer_ID, T1.Song_Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.concert_ID DESC LIMIT 1",
    "readable_query": "SELECT singer.Singer_ID, singer.Song_Name FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID    ORDER BY singer_in_concert.concert_ID DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Song_release_year, T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.concert_ID DESC LIMIT 1",
    "readable_query": "SELECT singer.Song_release_year, singer.Name FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID    ORDER BY singer_in_concert.concert_ID DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name, T1.Highest FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.concert_ID DESC LIMIT 1",
    "readable_query": "SELECT stadium.Name, stadium.Highest FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID    ORDER BY concert.concert_ID DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Location, T1.Lowest FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.concert_ID DESC LIMIT 1",
    "readable_query": "SELECT stadium.Location, stadium.Lowest FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID    ORDER BY concert.concert_ID DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Location, T1.Capacity FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.concert_ID DESC LIMIT 1",
    "readable_query": "SELECT stadium.Location, stadium.Capacity FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID    ORDER BY concert.concert_ID DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Stadium_ID, T1.Highest FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.concert_ID DESC LIMIT 1",
    "readable_query": "SELECT stadium.Stadium_ID, stadium.Highest FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID    ORDER BY concert.concert_ID DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Highest, T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.concert_ID DESC LIMIT 1",
    "readable_query": "SELECT stadium.Highest, stadium.Location FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID    ORDER BY concert.concert_ID DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.concert_Name, T1.concert_ID FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.Highest DESC LIMIT 1",
    "readable_query": "SELECT concert.concert_Name, concert.concert_ID FROM concert AS concert JOIN stadium AS stadium ON concert.Stadium_ID = stadium.Stadium_ID    ORDER BY stadium.Highest DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Stadium_ID) FROM stadium AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  stadium.Stadium_ID) FROM stadium AS stadium"
  },
  {
    "db_id": "concert_singer",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Singer_ID) FROM singer_in_concert AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  singer_in_concert.Singer_ID) FROM singer_in_concert AS singer_in_concert"
  },
  {
    "db_id": "concert_singer",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Age) FROM singer AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  singer.Age) FROM singer AS singer"
  },
  {
    "db_id": "concert_singer",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Highest) FROM stadium AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  stadium.Highest) FROM stadium AS stadium"
  },
  {
    "db_id": "concert_singer",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Singer_ID) FROM singer AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  singer.Singer_ID) FROM singer AS singer"
  },
  {
    "db_id": "concert_singer",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Average) FROM stadium AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  stadium.Average) FROM stadium AS stadium"
  },
  {
    "db_id": "concert_singer",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.concert_ID) FROM singer_in_concert AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  singer_in_concert.concert_ID) FROM singer_in_concert AS singer_in_concert"
  },
  {
    "db_id": "concert_singer",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.concert_ID) FROM concert AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  concert.concert_ID) FROM concert AS concert"
  },
  {
    "db_id": "concert_singer",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.concert_ID) FROM concert AS T1",
    "readable_query": "SELECT avg( concert.concert_ID) FROM concert AS concert"
  },
  {
    "db_id": "concert_singer",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Age) FROM singer AS T1",
    "readable_query": "SELECT avg( singer.Age) FROM singer AS singer"
  },
  {
    "db_id": "concert_singer",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Singer_ID) FROM singer AS T1",
    "readable_query": "SELECT avg( singer.Singer_ID) FROM singer AS singer"
  },
  {
    "db_id": "concert_singer",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Lowest) FROM stadium AS T1",
    "readable_query": "SELECT avg( stadium.Lowest) FROM stadium AS stadium"
  },
  {
    "db_id": "concert_singer",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Location FROM stadium AS T1",
    "readable_query": "SELECT stadium.Location FROM stadium AS stadium"
  },
  {
    "db_id": "concert_singer",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Year FROM concert AS T1",
    "readable_query": "SELECT concert.Year FROM concert AS concert"
  },
  {
    "db_id": "concert_singer",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Theme FROM concert AS T1",
    "readable_query": "SELECT concert.Theme FROM concert AS concert"
  },
  {
    "db_id": "concert_singer",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Highest FROM stadium AS T1",
    "readable_query": "SELECT stadium.Highest FROM stadium AS stadium"
  },
  {
    "db_id": "concert_singer",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Capacity FROM stadium AS T1",
    "readable_query": "SELECT stadium.Capacity FROM stadium AS stadium"
  },
  {
    "db_id": "concert_singer",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1",
    "readable_query": "SELECT singer_in_concert.Singer_ID FROM singer_in_concert AS singer_in_concert"
  },
  {
    "db_id": "concert_singer",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Singer_ID FROM singer AS T1",
    "readable_query": "SELECT DISTINCT singer.Singer_ID FROM singer AS singer"
  },
  {
    "db_id": "concert_singer",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Year FROM concert AS T1",
    "readable_query": "SELECT DISTINCT concert.Year FROM concert AS concert"
  },
  {
    "db_id": "concert_singer",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Age FROM singer AS T1",
    "readable_query": "SELECT DISTINCT singer.Age FROM singer AS singer"
  },
  {
    "db_id": "concert_singer",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Stadium_ID FROM stadium AS T1",
    "readable_query": "SELECT DISTINCT stadium.Stadium_ID FROM stadium AS stadium"
  },
  {
    "db_id": "concert_singer",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Highest FROM stadium AS T1",
    "readable_query": "SELECT DISTINCT stadium.Highest FROM stadium AS stadium"
  },
  {
    "db_id": "concert_singer",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Lowest FROM stadium AS T1",
    "readable_query": "SELECT DISTINCT stadium.Lowest FROM stadium AS stadium"
  },
  {
    "db_id": "concert_singer",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Country FROM singer AS T1     ORDER BY T1.Singer_ID ASC",
    "readable_query": "SELECT singer.Country FROM singer AS singer     ORDER BY singer.Singer_ID ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1     ORDER BY T1.concert_ID ASC",
    "readable_query": "SELECT singer_in_concert.Singer_ID FROM singer_in_concert AS singer_in_concert     ORDER BY singer_in_concert.concert_ID ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Highest FROM stadium AS T1     ORDER BY T1.Lowest ASC",
    "readable_query": "SELECT stadium.Highest FROM stadium AS stadium     ORDER BY stadium.Lowest ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Highest FROM stadium AS T1     ORDER BY T1.Average ASC",
    "readable_query": "SELECT stadium.Highest FROM stadium AS stadium     ORDER BY stadium.Average ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Name FROM stadium AS T1     ORDER BY T1.Stadium_ID ASC",
    "readable_query": "SELECT stadium.Name FROM stadium AS stadium     ORDER BY stadium.Stadium_ID ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Stadium_ID FROM stadium AS T1     ORDER BY T1.Average ASC",
    "readable_query": "SELECT stadium.Stadium_ID FROM stadium AS stadium     ORDER BY stadium.Average ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Average FROM stadium AS T1     ORDER BY T1.Stadium_ID ASC",
    "readable_query": "SELECT stadium.Average FROM stadium AS stadium     ORDER BY stadium.Stadium_ID ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Location FROM stadium AS T1     ORDER BY T1.Average ASC",
    "readable_query": "SELECT stadium.Location FROM stadium AS stadium     ORDER BY stadium.Average ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Is_male FROM singer AS T1     ORDER BY T1.Age DESC",
    "readable_query": "SELECT singer.Is_male FROM singer AS singer     ORDER BY singer.Age DESC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Country FROM singer AS T1     ORDER BY T1.Age DESC",
    "readable_query": "SELECT singer.Country FROM singer AS singer     ORDER BY singer.Age DESC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Name FROM singer AS T1     ORDER BY T1.Singer_ID DESC",
    "readable_query": "SELECT singer.Name FROM singer AS singer     ORDER BY singer.Singer_ID DESC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Year FROM concert AS T1     ORDER BY T1.concert_ID DESC",
    "readable_query": "SELECT concert.Year FROM concert AS concert     ORDER BY concert.concert_ID DESC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.concert_Name FROM concert AS T1     ORDER BY T1.concert_ID DESC",
    "readable_query": "SELECT concert.concert_Name FROM concert AS concert     ORDER BY concert.concert_ID DESC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Highest, T1.Average FROM stadium AS T1     ORDER BY T1.Average ASC",
    "readable_query": "SELECT stadium.Highest, stadium.Average FROM stadium AS stadium     ORDER BY stadium.Average ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Country, T1.Is_male FROM singer AS T1     ORDER BY T1.Is_male ASC",
    "readable_query": "SELECT singer.Country, singer.Is_male FROM singer AS singer     ORDER BY singer.Is_male ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.concert_ID, T1.Singer_ID FROM singer_in_concert AS T1     ORDER BY T1.Singer_ID ASC",
    "readable_query": "SELECT singer_in_concert.concert_ID, singer_in_concert.Singer_ID FROM singer_in_concert AS singer_in_concert     ORDER BY singer_in_concert.Singer_ID ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Theme, T1.Year FROM concert AS T1     ORDER BY T1.Year ASC",
    "readable_query": "SELECT concert.Theme, concert.Year FROM concert AS concert     ORDER BY concert.Year ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Stadium_ID FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID JOIN singer_in_concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T2.Year = \"2014\" and T3.Singer_ID = \"4\"",
    "readable_query": "SELECT stadium.Stadium_ID FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE concert.Year = \"2014\" and singer_in_concert.Singer_ID = \"4\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T2.Age = 52 and T3.Stadium_ID = \"2\"",
    "readable_query": "SELECT singer_in_concert.Singer_ID FROM singer_in_concert AS singer_in_concert JOIN singer AS singer ON singer_in_concert.Singer_ID = singer.Singer_ID JOIN concert AS concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE singer.Age = 52 and concert.Stadium_ID = \"2\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Year FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID JOIN singer_in_concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T2.Capacity = 2000 and T3.Singer_ID = \"6\"",
    "readable_query": "SELECT concert.Year FROM concert AS concert JOIN stadium AS stadium ON concert.Stadium_ID = stadium.Stadium_ID JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE stadium.Capacity = 2000 and singer_in_concert.Singer_ID = \"6\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Song_Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T2.concert_ID = 6 and T3.Stadium_ID = \"9\"",
    "readable_query": "SELECT singer.Song_Name FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert AS concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE singer_in_concert.concert_ID = 6 and concert.Stadium_ID = \"9\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Highest FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID JOIN singer_in_concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T2.Stadium_ID = \"1\" and T3.Singer_ID = \"4\"",
    "readable_query": "SELECT stadium.Highest FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE concert.Stadium_ID = \"1\" and singer_in_concert.Singer_ID = \"4\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Singer_ID FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T2.concert_ID = 1 and T3.Year = \"2014\"",
    "readable_query": "SELECT singer.Singer_ID FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert AS concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE singer_in_concert.concert_ID = 1 and concert.Year = \"2014\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.concert_ID FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID JOIN singer AS T3 ON T2.Singer_ID = T3.Singer_ID WHERE T2.Singer_ID = \"4\" and T3.Is_male = \"T\"",
    "readable_query": "SELECT concert.concert_ID FROM concert AS concert JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN singer AS singer ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer_in_concert.Singer_ID = \"4\" and singer.Is_male = \"T\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year = \"2015\" or T2.Year = \"2014\"",
    "readable_query": "SELECT stadium.Location FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year = \"2015\" or concert.Year = \"2014\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.concert_Name FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.concert_ID = 3 or T2.concert_ID = 5",
    "readable_query": "SELECT concert.concert_Name FROM concert AS concert JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE singer_in_concert.concert_ID = 3 or singer_in_concert.concert_ID = 5"
  },
  {
    "db_id": "concert_singer",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Country FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.concert_ID = 3 or T2.concert_ID = 5",
    "readable_query": "SELECT singer.Country FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer_in_concert.concert_ID = 3 or singer_in_concert.concert_ID = 5"
  },
  {
    "db_id": "concert_singer",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Lowest FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year = \"2014\" or T2.Year = \"2014\"",
    "readable_query": "SELECT stadium.Lowest FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year = \"2014\" or concert.Year = \"2014\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Year FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Lowest = 1057 or T2.Lowest = 404",
    "readable_query": "SELECT concert.Year FROM concert AS concert JOIN stadium AS stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Lowest = 1057 or stadium.Lowest = 404"
  },
  {
    "db_id": "concert_singer",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Country FROM singer AS T1 WHERE T1.Age = 29 and T1.Is_male = \"T\"",
    "readable_query": "SELECT singer.Country FROM singer AS singer WHERE singer.Age = 29 and singer.Is_male = \"T\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Location FROM stadium AS T1 WHERE T1.Capacity = 11998 and T1.Stadium_ID = 3",
    "readable_query": "SELECT stadium.Location FROM stadium AS stadium WHERE stadium.Capacity = 11998 and stadium.Stadium_ID = 3"
  },
  {
    "db_id": "concert_singer",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Year FROM concert AS T1 WHERE T1.Stadium_ID = \"7\" and T1.concert_Name = \"Home Visits\"",
    "readable_query": "SELECT concert.Year FROM concert AS concert WHERE concert.Stadium_ID = \"7\" and concert.concert_Name = \"Home Visits\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.concert_ID) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Singer_ID = \"6\" and T2.Age = 32",
    "readable_query": "SELECT DISTINCT count(DISTINCT  singer_in_concert.concert_ID) FROM singer_in_concert AS singer_in_concert JOIN singer AS singer ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer_in_concert.Singer_ID = \"6\" and singer.Age = 32"
  },
  {
    "db_id": "concert_singer",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Singer_ID) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.concert_ID = 4 and T2.Song_Name = \"You\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  singer_in_concert.Singer_ID) FROM singer_in_concert AS singer_in_concert JOIN singer AS singer ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer_in_concert.concert_ID = 4 and singer.Song_Name = \"You\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Stadium_ID) FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Theme = \"Happy Tonight\" and T2.Highest = 1980",
    "readable_query": "SELECT DISTINCT count(DISTINCT  concert.Stadium_ID) FROM concert AS concert JOIN stadium AS stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE concert.Theme = \"Happy Tonight\" and stadium.Highest = 1980"
  },
  {
    "db_id": "concert_singer",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Name FROM singer AS T1 WHERE T1.Is_male = \"F\" or T1.Song_release_year = \"2016\"",
    "readable_query": "SELECT singer.Name FROM singer AS singer WHERE singer.Is_male = \"F\" or singer.Song_release_year = \"2016\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Average FROM stadium AS T1 WHERE T1.Capacity = 11998 or T1.Name = \"Forthbank Stadium\"",
    "readable_query": "SELECT stadium.Average FROM stadium AS stadium WHERE stadium.Capacity = 11998 or stadium.Name = \"Forthbank Stadium\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Theme FROM concert AS T1 WHERE T1.concert_Name = \"Auditions\" or T1.Year = \"2015\"",
    "readable_query": "SELECT concert.Theme FROM concert AS concert WHERE concert.concert_Name = \"Auditions\" or concert.Year = \"2015\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Singer_ID FROM singer AS T1 WHERE T1.Age = 41 or T1.Song_Name = \"Dangerous\"",
    "readable_query": "SELECT singer.Singer_ID FROM singer AS singer WHERE singer.Age = 41 or singer.Song_Name = \"Dangerous\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Song_release_year FROM singer AS T1 WHERE T1.Is_male = \"T\" or T1.Name = \"John Nizinik\"",
    "readable_query": "SELECT singer.Song_release_year FROM singer AS singer WHERE singer.Is_male = \"T\" or singer.Name = \"John Nizinik\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID = \"6\" and T2.concert_ID = 2",
    "readable_query": "SELECT count(*) FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer_in_concert.Singer_ID = \"6\" and singer_in_concert.concert_ID = 2"
  },
  {
    "db_id": "concert_singer",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_Name = \"Week 1\" and T2.concert_ID = 2",
    "readable_query": "SELECT count(*) FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.concert_Name = \"Week 1\" and concert.concert_ID = 2"
  },
  {
    "db_id": "concert_singer",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year = \"2015\" and T2.concert_ID = 1",
    "readable_query": "SELECT count(*) FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year = \"2015\" and concert.concert_ID = 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID = \"2\" and T2.concert_ID = 6",
    "readable_query": "SELECT count(*) FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer_in_concert.Singer_ID = \"2\" and singer_in_concert.concert_ID = 6"
  },
  {
    "db_id": "concert_singer",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Highest FROM stadium AS T1 WHERE T1.Stadium_ID != 9",
    "readable_query": "SELECT stadium.Highest FROM stadium AS stadium WHERE stadium.Stadium_ID != 9"
  },
  {
    "db_id": "concert_singer",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1 WHERE T1.Singer_ID != \"2\"",
    "readable_query": "SELECT singer_in_concert.concert_ID FROM singer_in_concert AS singer_in_concert WHERE singer_in_concert.Singer_ID != \"2\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Age FROM singer AS T1 WHERE T1.Song_Name != \"Love\"",
    "readable_query": "SELECT singer.Age FROM singer AS singer WHERE singer.Song_Name != \"Love\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 WHERE T1.concert_ID != 4",
    "readable_query": "SELECT singer_in_concert.Singer_ID FROM singer_in_concert AS singer_in_concert WHERE singer_in_concert.concert_ID != 4"
  },
  {
    "db_id": "concert_singer",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Country FROM singer AS T1 WHERE T1.Age != 25",
    "readable_query": "SELECT singer.Country FROM singer AS singer WHERE singer.Age != 25"
  },
  {
    "db_id": "concert_singer",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 WHERE T1.concert_ID != 5",
    "readable_query": "SELECT singer_in_concert.Singer_ID FROM singer_in_concert AS singer_in_concert WHERE singer_in_concert.concert_ID != 5"
  },
  {
    "db_id": "concert_singer",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.Stadium_ID != \"10\"",
    "readable_query": "SELECT singer_in_concert.Singer_ID FROM singer_in_concert AS singer_in_concert JOIN concert AS concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Stadium_ID != \"10\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.Year != \"2015\"",
    "readable_query": "SELECT singer_in_concert.concert_ID FROM singer_in_concert AS singer_in_concert JOIN concert AS concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year != \"2015\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Stadium_ID FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.Singer_ID != \"4\"",
    "readable_query": "SELECT concert.Stadium_ID FROM concert AS concert JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE singer_in_concert.Singer_ID != \"4\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.concert_Name FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.concert_ID != 1",
    "readable_query": "SELECT concert.concert_Name FROM concert AS concert JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE singer_in_concert.concert_ID != 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.concert_ID FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Average != 615",
    "readable_query": "SELECT concert.concert_ID FROM concert AS concert JOIN stadium AS stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Average != 615"
  },
  {
    "db_id": "concert_singer",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Average FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_Name != \"Super bootcamp\"",
    "readable_query": "SELECT stadium.Average FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.concert_Name != \"Super bootcamp\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Singer_ID FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.concert_ID = 4",
    "readable_query": "SELECT DISTINCT singer.Singer_ID FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer_in_concert.concert_ID = 4"
  },
  {
    "db_id": "concert_singer",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Song_Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID = \"6\"",
    "readable_query": "SELECT DISTINCT singer.Song_Name FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer_in_concert.Singer_ID = \"6\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Singer_ID FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Country = \"Netherlands\"",
    "readable_query": "SELECT DISTINCT singer_in_concert.Singer_ID FROM singer_in_concert AS singer_in_concert JOIN singer AS singer ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Country = \"Netherlands\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.concert_ID FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.concert_Name = \"Week 1\"",
    "readable_query": "SELECT DISTINCT singer_in_concert.concert_ID FROM singer_in_concert AS singer_in_concert JOIN concert AS concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.concert_Name = \"Week 1\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Capacity FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_Name = \"Super bootcamp\"",
    "readable_query": "SELECT DISTINCT stadium.Capacity FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.concert_Name = \"Super bootcamp\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Singer_ID FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.Year = \"2015\"",
    "readable_query": "SELECT DISTINCT singer_in_concert.Singer_ID FROM singer_in_concert AS singer_in_concert JOIN concert AS concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = \"2015\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Year) FROM concert AS T1 WHERE T1.Theme = \"Happy Tonight\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  concert.Year) FROM concert AS concert WHERE concert.Theme = \"Happy Tonight\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Age) FROM singer AS T1 WHERE T1.Country = \"United States\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  singer.Age) FROM singer AS singer WHERE singer.Country = \"United States\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Location FROM stadium AS T1 WHERE T1.Highest > 1980",
    "readable_query": "SELECT stadium.Location FROM stadium AS stadium WHERE stadium.Highest > 1980"
  },
  {
    "db_id": "concert_singer",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Name FROM stadium AS T1 WHERE T1.Lowest > 411",
    "readable_query": "SELECT stadium.Name FROM stadium AS stadium WHERE stadium.Lowest > 411"
  },
  {
    "db_id": "concert_singer",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Lowest FROM stadium AS T1 WHERE T1.Stadium_ID > 3",
    "readable_query": "SELECT stadium.Lowest FROM stadium AS stadium WHERE stadium.Stadium_ID > 3"
  },
  {
    "db_id": "concert_singer",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Theme, T2.concert_ID, T3.Lowest FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID JOIN stadium AS T3 ON T1.Stadium_ID = T3.Stadium_ID",
    "readable_query": "SELECT concert.Theme, singer_in_concert.concert_ID, stadium.Lowest FROM concert AS concert JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN stadium AS stadium ON concert.Stadium_ID = stadium.Stadium_ID"
  },
  {
    "db_id": "concert_singer",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Country, T2.concert_ID, T3.concert_Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID",
    "readable_query": "SELECT singer.Country, singer_in_concert.concert_ID, concert.concert_Name FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert AS concert ON singer_in_concert.concert_ID = concert.concert_ID"
  },
  {
    "db_id": "concert_singer",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Name, T2.Singer_ID, T3.concert_Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID",
    "readable_query": "SELECT singer.Name, singer_in_concert.Singer_ID, concert.concert_Name FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert AS concert ON singer_in_concert.concert_ID = concert.concert_ID"
  },
  {
    "db_id": "concert_singer",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.concert_Name, T2.Singer_ID, T3.Song_Name FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID JOIN singer AS T3 ON T2.Singer_ID = T3.Singer_ID",
    "readable_query": "SELECT concert.concert_Name, singer_in_concert.Singer_ID, singer.Song_Name FROM concert AS concert JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN singer AS singer ON singer_in_concert.Singer_ID = singer.Singer_ID"
  },
  {
    "db_id": "concert_singer",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.concert_Name, T2.Singer_ID, T3.Average FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID JOIN stadium AS T3 ON T1.Stadium_ID = T3.Stadium_ID",
    "readable_query": "SELECT concert.concert_Name, singer_in_concert.Singer_ID, stadium.Average FROM concert AS concert JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN stadium AS stadium ON concert.Stadium_ID = stadium.Stadium_ID"
  },
  {
    "db_id": "concert_singer",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Stadium_ID, T2.concert_ID, T3.Lowest FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID JOIN stadium AS T3 ON T1.Stadium_ID = T3.Stadium_ID",
    "readable_query": "SELECT concert.Stadium_ID, singer_in_concert.concert_ID, stadium.Lowest FROM concert AS concert JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN stadium AS stadium ON concert.Stadium_ID = stadium.Stadium_ID"
  },
  {
    "db_id": "concert_singer",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Age FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.concert_ID ASC",
    "readable_query": "SELECT singer.Age FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID     ORDER BY singer_in_concert.concert_ID ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.concert_ID FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID     ORDER BY T2.Average ASC",
    "readable_query": "SELECT concert.concert_ID FROM concert AS concert JOIN stadium AS stadium ON concert.Stadium_ID = stadium.Stadium_ID     ORDER BY stadium.Average ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.Age ASC",
    "readable_query": "SELECT singer_in_concert.Singer_ID FROM singer_in_concert AS singer_in_concert JOIN singer AS singer ON singer_in_concert.Singer_ID = singer.Singer_ID     ORDER BY singer.Age ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Year FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID     ORDER BY T2.concert_ID ASC",
    "readable_query": "SELECT concert.Year FROM concert AS concert JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID     ORDER BY singer_in_concert.concert_ID ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Song_release_year FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.concert_ID ASC",
    "readable_query": "SELECT singer.Song_release_year FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID     ORDER BY singer_in_concert.concert_ID ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Is_male FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.concert_ID ASC",
    "readable_query": "SELECT singer.Is_male FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID     ORDER BY singer_in_concert.concert_ID ASC"
  },
  {
    "db_id": "concert_singer",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Capacity FROM stadium AS T1 WHERE T1.Stadium_ID = 4     INTERSECT SELECT T2.Capacity FROM stadium AS T2 WHERE T2.Stadium_ID = 3",
    "readable_query": "SELECT stadium.Capacity FROM stadium AS stadium WHERE stadium.Stadium_ID = 4     INTERSECT SELECT stadium.Capacity FROM stadium AS stadium WHERE stadium.Stadium_ID = 3"
  },
  {
    "db_id": "concert_singer",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 WHERE T1.concert_ID = 1     INTERSECT SELECT T2.Singer_ID FROM singer_in_concert AS T2 WHERE T2.concert_ID = 6",
    "readable_query": "SELECT singer_in_concert.Singer_ID FROM singer_in_concert AS singer_in_concert WHERE singer_in_concert.concert_ID = 1     INTERSECT SELECT singer_in_concert.Singer_ID FROM singer_in_concert AS singer_in_concert WHERE singer_in_concert.concert_ID = 6"
  },
  {
    "db_id": "concert_singer",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1 WHERE T1.Singer_ID = \"4\"     INTERSECT SELECT T2.concert_ID FROM singer_in_concert AS T2 WHERE T2.Singer_ID = \"5\"",
    "readable_query": "SELECT singer_in_concert.concert_ID FROM singer_in_concert AS singer_in_concert WHERE singer_in_concert.Singer_ID = \"4\"     INTERSECT SELECT singer_in_concert.concert_ID FROM singer_in_concert AS singer_in_concert WHERE singer_in_concert.Singer_ID = \"5\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1 WHERE T1.Singer_ID = \"4\"     INTERSECT SELECT T2.concert_ID FROM singer_in_concert AS T2 WHERE T2.Singer_ID = \"4\"",
    "readable_query": "SELECT singer_in_concert.concert_ID FROM singer_in_concert AS singer_in_concert WHERE singer_in_concert.Singer_ID = \"4\"     INTERSECT SELECT singer_in_concert.concert_ID FROM singer_in_concert AS singer_in_concert WHERE singer_in_concert.Singer_ID = \"4\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Name FROM singer AS T1 WHERE T1.Song_release_year = \"2014\"     INTERSECT SELECT T2.Name FROM singer AS T2 WHERE T2.Song_release_year = \"2008\"",
    "readable_query": "SELECT singer.Name FROM singer AS singer WHERE singer.Song_release_year = \"2014\"     INTERSECT SELECT singer.Name FROM singer AS singer WHERE singer.Song_release_year = \"2008\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Stadium_ID FROM concert AS T1 WHERE T1.concert_Name = \"Super bootcamp\"     INTERSECT SELECT T2.Stadium_ID FROM concert AS T2 WHERE T2.concert_Name = \"Week 1\"",
    "readable_query": "SELECT concert.Stadium_ID FROM concert AS concert WHERE concert.concert_Name = \"Super bootcamp\"     INTERSECT SELECT concert.Stadium_ID FROM concert AS concert WHERE concert.concert_Name = \"Week 1\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Theme FROM concert AS T1 WHERE T1.Stadium_ID = \"1\"     INTERSECT SELECT T2.Theme FROM concert AS T2 WHERE T2.Stadium_ID = \"9\"",
    "readable_query": "SELECT concert.Theme FROM concert AS concert WHERE concert.Stadium_ID = \"1\"     INTERSECT SELECT concert.Theme FROM concert AS concert WHERE concert.Stadium_ID = \"9\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.concert_ID) FROM singer_in_concert AS T1 WHERE T1.Singer_ID = \"2\"",
    "readable_query": "SELECT avg( singer_in_concert.concert_ID) FROM singer_in_concert AS singer_in_concert WHERE singer_in_concert.Singer_ID = \"2\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Age) FROM singer AS T1 WHERE T1.Is_male = \"T\"",
    "readable_query": "SELECT avg( singer.Age) FROM singer AS singer WHERE singer.Is_male = \"T\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.concert_ID) FROM singer_in_concert AS T1 WHERE T1.Singer_ID = \"4\"",
    "readable_query": "SELECT avg( singer_in_concert.concert_ID) FROM singer_in_concert AS singer_in_concert WHERE singer_in_concert.Singer_ID = \"4\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Stadium_ID) FROM stadium AS T1 WHERE T1.Capacity = 3960",
    "readable_query": "SELECT avg( stadium.Stadium_ID) FROM stadium AS stadium WHERE stadium.Capacity = 3960"
  },
  {
    "db_id": "concert_singer",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.concert_ID) FROM singer_in_concert AS T1 WHERE T1.Singer_ID = \"5\"",
    "readable_query": "SELECT avg( singer_in_concert.concert_ID) FROM singer_in_concert AS singer_in_concert WHERE singer_in_concert.Singer_ID = \"5\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Age) FROM singer AS T1 WHERE T1.Singer_ID = 4",
    "readable_query": "SELECT avg( singer.Age) FROM singer AS singer WHERE singer.Singer_ID = 4"
  },
  {
    "db_id": "concert_singer",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.concert_ID) FROM concert AS T1 WHERE T1.concert_Name = \"Week 1\"",
    "readable_query": "SELECT avg( concert.concert_ID) FROM concert AS concert WHERE concert.concert_Name = \"Week 1\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_ID = (SELECT max( T23.concert_ID) FROM concert AS T23)",
    "readable_query": "SELECT stadium.Name FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.concert_ID = (SELECT max( concert.concert_ID) FROM concert AS concert)"
  },
  {
    "db_id": "concert_singer",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Age = (SELECT max( T23.Age) FROM singer AS T23)",
    "readable_query": "SELECT singer_in_concert.concert_ID FROM singer_in_concert AS singer_in_concert JOIN singer AS singer ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Age = (SELECT max( singer.Age) FROM singer AS singer)"
  },
  {
    "db_id": "concert_singer",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.concert_ID = (SELECT max( T23.concert_ID) FROM concert AS T23)",
    "readable_query": "SELECT singer_in_concert.Singer_ID FROM singer_in_concert AS singer_in_concert JOIN concert AS concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.concert_ID = (SELECT max( concert.concert_ID) FROM concert AS concert)"
  },
  {
    "db_id": "concert_singer",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Year FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.concert_ID = (SELECT max( T23.concert_ID) FROM singer_in_concert AS T23)",
    "readable_query": "SELECT concert.Year FROM concert AS concert JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE singer_in_concert.concert_ID = (SELECT max( singer_in_concert.concert_ID) FROM singer_in_concert AS singer_in_concert)"
  },
  {
    "db_id": "concert_singer",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Singer_ID FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.concert_ID = (SELECT max( T23.concert_ID) FROM singer_in_concert AS T23)",
    "readable_query": "SELECT singer.Singer_ID FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer_in_concert.concert_ID = (SELECT max( singer_in_concert.concert_ID) FROM singer_in_concert AS singer_in_concert)"
  },
  {
    "db_id": "concert_singer",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Song_Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.concert_ID = (SELECT max( T23.concert_ID) FROM singer_in_concert AS T23)",
    "readable_query": "SELECT singer.Song_Name FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer_in_concert.concert_ID = (SELECT max( singer_in_concert.concert_ID) FROM singer_in_concert AS singer_in_concert)"
  },
  {
    "db_id": "concert_singer",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.concert_ID FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID = (SELECT max( T23.Stadium_ID) FROM stadium AS T23)",
    "readable_query": "SELECT concert.concert_ID FROM concert AS concert JOIN stadium AS stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Stadium_ID = (SELECT max( stadium.Stadium_ID) FROM stadium AS stadium)"
  },
  {
    "db_id": "concert_singer",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Stadium_ID, T2.concert_ID FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID JOIN stadium AS T3 ON T1.Stadium_ID = T3.Stadium_ID WHERE T3.Capacity = 11998 and T2.Singer_ID = \"2\"",
    "readable_query": "SELECT concert.Stadium_ID, singer_in_concert.concert_ID FROM concert AS concert JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN stadium AS stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Capacity = 11998 and singer_in_concert.Singer_ID = \"2\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Average, T2.concert_ID FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID JOIN singer_in_concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.Singer_ID = \"6\" and T2.concert_Name = \"Week 1\"",
    "readable_query": "SELECT stadium.Average, concert.concert_ID FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE singer_in_concert.Singer_ID = \"6\" and concert.concert_Name = \"Week 1\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Average, T2.Theme FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID JOIN singer_in_concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.concert_ID = 4 and T2.concert_Name = \"Week 1\"",
    "readable_query": "SELECT stadium.Average, concert.Theme FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert AS singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE singer_in_concert.concert_ID = 4 and concert.concert_Name = \"Week 1\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Stadium_ID FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Location = \"Brechin City\" GROUP BY T1.Stadium_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT concert.Stadium_ID FROM concert AS concert JOIN stadium AS stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Location = \"Brechin City\" GROUP BY concert.Stadium_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.concert_ID = 6 GROUP BY T1.Singer_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT singer_in_concert.Singer_ID FROM singer_in_concert AS singer_in_concert JOIN concert AS concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.concert_ID = 6 GROUP BY singer_in_concert.Singer_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Name FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Theme = \"Bleeding Love\" GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT stadium.Name FROM stadium AS stadium JOIN concert AS concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Theme = \"Bleeding Love\" GROUP BY stadium.Name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Song_release_year FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID = \"5\" GROUP BY T1.Song_release_year  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT singer.Song_release_year FROM singer AS singer JOIN singer_in_concert AS singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer_in_concert.Singer_ID = \"5\" GROUP BY singer.Song_release_year  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Name FROM singer AS T1        EXCEPT SELECT T2.Name FROM singer AS T2 WHERE T2.Singer_ID = 1",
    "readable_query": "SELECT singer.Name FROM singer AS singer        EXCEPT SELECT singer.Name FROM singer AS singer WHERE singer.Singer_ID = 1"
  },
  {
    "db_id": "concert_singer",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Name FROM singer AS T1        EXCEPT SELECT T2.Name FROM singer AS T2 WHERE T2.Is_male = \"F\"",
    "readable_query": "SELECT singer.Name FROM singer AS singer        EXCEPT SELECT singer.Name FROM singer AS singer WHERE singer.Is_male = \"F\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Stadium_ID FROM stadium AS T1        EXCEPT SELECT T2.Stadium_ID FROM stadium AS T2 WHERE T2.Average = 552",
    "readable_query": "SELECT stadium.Stadium_ID FROM stadium AS stadium        EXCEPT SELECT stadium.Stadium_ID FROM stadium AS stadium WHERE stadium.Average = 552"
  },
  {
    "db_id": "concert_singer",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1        EXCEPT SELECT T2.concert_ID FROM singer_in_concert AS T2 WHERE T2.Singer_ID = \"3\"",
    "readable_query": "SELECT singer_in_concert.concert_ID FROM singer_in_concert AS singer_in_concert        EXCEPT SELECT singer_in_concert.concert_ID FROM singer_in_concert AS singer_in_concert WHERE singer_in_concert.Singer_ID = \"3\""
  },
  {
    "db_id": "concert_singer",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Theme FROM concert AS T1        EXCEPT SELECT T2.Theme FROM concert AS T2 WHERE T2.concert_Name = \"Home Visits\"",
    "readable_query": "SELECT concert.Theme FROM concert AS concert        EXCEPT SELECT concert.Theme FROM concert AS concert WHERE concert.concert_Name = \"Home Visits\""
  },
  {
    "db_id": "wta_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.first_name FROM players AS T1 WHERE T1.birth_date = \"19610611\"",
    "readable_query": "SELECT players.first_name FROM players AS players WHERE players.birth_date = \"19610611\""
  },
  {
    "db_id": "wta_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.ranking_date FROM rankings AS T1 WHERE T1.ranking = 634",
    "readable_query": "SELECT rankings.ranking_date FROM rankings AS rankings WHERE rankings.ranking = 634"
  },
  {
    "db_id": "wta_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.winner_ioc FROM matches AS T1 WHERE T1.draw_size = 128",
    "readable_query": "SELECT matches.winner_ioc FROM matches AS matches WHERE matches.draw_size = 128"
  },
  {
    "db_id": "wta_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.birth_date FROM players AS T1 WHERE T1.country_code = \"THA\"",
    "readable_query": "SELECT players.birth_date FROM players AS players WHERE players.country_code = \"THA\""
  },
  {
    "db_id": "wta_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.first_name FROM players AS T1 WHERE T1.last_name = \"Watanabe Giltz\"",
    "readable_query": "SELECT players.first_name FROM players AS players WHERE players.last_name = \"Watanabe Giltz\""
  },
  {
    "db_id": "wta_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.match_num FROM matches AS T1 WHERE T1.winner_ioc = \"HUN\"",
    "readable_query": "SELECT matches.match_num FROM matches AS matches WHERE matches.winner_ioc = \"HUN\""
  },
  {
    "db_id": "wta_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.ranking FROM rankings AS T1 WHERE T1.ranking_points = 809",
    "readable_query": "SELECT rankings.ranking FROM rankings AS rankings WHERE rankings.ranking_points = 809"
  },
  {
    "db_id": "wta_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.best_of FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.hand = \"L\"",
    "readable_query": "SELECT matches.best_of FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id WHERE players.hand = \"L\""
  },
  {
    "db_id": "wta_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.country_code FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.loser_age = 21.607118412",
    "readable_query": "SELECT players.country_code FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id WHERE matches.loser_age = 21.607118412"
  },
  {
    "db_id": "wta_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.ranking_points FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.birth_date = \"19640628\"",
    "readable_query": "SELECT rankings.ranking_points FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id WHERE players.birth_date = \"19640628\""
  },
  {
    "db_id": "wta_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.country_code FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.minutes = 48",
    "readable_query": "SELECT players.country_code FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id WHERE matches.minutes = 48"
  },
  {
    "db_id": "wta_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.surface FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.player_id = 200650",
    "readable_query": "SELECT matches.surface FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id WHERE players.player_id = 200650"
  },
  {
    "db_id": "wta_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.player_id FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_id = \"2017-0804\"",
    "readable_query": "SELECT players.player_id FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id WHERE matches.tourney_id = \"2017-0804\""
  },
  {
    "db_id": "wta_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.winner_rank, count(*) FROM matches AS T1  GROUP BY T1.winner_rank",
    "readable_query": "SELECT matches.winner_rank, count(*) FROM matches AS matches  GROUP BY matches.winner_rank"
  },
  {
    "db_id": "wta_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.tours, count(*) FROM rankings AS T1  GROUP BY T1.tours",
    "readable_query": "SELECT rankings.tours, count(*) FROM rankings AS rankings  GROUP BY rankings.tours"
  },
  {
    "db_id": "wta_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.round, count(*) FROM matches AS T1  GROUP BY T1.round",
    "readable_query": "SELECT matches.round, count(*) FROM matches AS matches  GROUP BY matches.round"
  },
  {
    "db_id": "wta_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.hand, count(*) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id  GROUP BY T1.hand",
    "readable_query": "SELECT players.hand, count(*) FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id  GROUP BY players.hand"
  },
  {
    "db_id": "wta_1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM players AS T1",
    "readable_query": "SELECT count(*) FROM players AS players"
  },
  {
    "db_id": "wta_1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM matches AS T1",
    "readable_query": "SELECT count(*) FROM matches AS matches"
  },
  {
    "db_id": "wta_1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM rankings AS T1",
    "readable_query": "SELECT count(*) FROM rankings AS rankings"
  },
  {
    "db_id": "wta_1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM matches AS T1",
    "readable_query": "SELECT count(*) FROM matches AS matches"
  },
  {
    "db_id": "wta_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.country_code, T1.last_name FROM players AS T1",
    "readable_query": "SELECT players.country_code, players.last_name FROM players AS players"
  },
  {
    "db_id": "wta_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.birth_date, T1.first_name FROM players AS T1",
    "readable_query": "SELECT players.birth_date, players.first_name FROM players AS players"
  },
  {
    "db_id": "wta_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.tours, T1.ranking_points FROM rankings AS T1",
    "readable_query": "SELECT rankings.tours, rankings.ranking_points FROM rankings AS rankings"
  },
  {
    "db_id": "wta_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.country_code, T1.player_id FROM players AS T1",
    "readable_query": "SELECT players.country_code, players.player_id FROM players AS players"
  },
  {
    "db_id": "wta_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.loser_entry, T1.loser_hand FROM matches AS T1",
    "readable_query": "SELECT matches.loser_entry, matches.loser_hand FROM matches AS matches"
  },
  {
    "db_id": "wta_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.draw_size, T1.loser_age FROM matches AS T1",
    "readable_query": "SELECT matches.draw_size, matches.loser_age FROM matches AS matches"
  },
  {
    "db_id": "wta_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.ranking, T2.player_id FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id",
    "readable_query": "SELECT rankings.ranking, players.player_id FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id"
  },
  {
    "db_id": "wta_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.ranking, T2.birth_date FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id",
    "readable_query": "SELECT rankings.ranking, players.birth_date FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id"
  },
  {
    "db_id": "wta_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.loser_entry, T2.country_code FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id",
    "readable_query": "SELECT matches.loser_entry, players.country_code FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id"
  },
  {
    "db_id": "wta_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.ranking, T2.first_name FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id",
    "readable_query": "SELECT rankings.ranking, players.first_name FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id"
  },
  {
    "db_id": "wta_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.draw_size, T2.birth_date FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id",
    "readable_query": "SELECT matches.draw_size, players.birth_date FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id"
  },
  {
    "db_id": "wta_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.tourney_date, T1.winner_rank_points FROM matches AS T1 WHERE T1.loser_hand = \"L\"",
    "readable_query": "SELECT matches.tourney_date, matches.winner_rank_points FROM matches AS matches WHERE matches.loser_hand = \"L\""
  },
  {
    "db_id": "wta_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.hand, T1.country_code FROM players AS T1 WHERE T1.birth_date = \"19560419\"",
    "readable_query": "SELECT players.hand, players.country_code FROM players AS players WHERE players.birth_date = \"19560419\""
  },
  {
    "db_id": "wta_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.loser_rank_points FROM matches AS T1  GROUP BY T1.loser_rank_points  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT matches.loser_rank_points FROM matches AS matches  GROUP BY matches.loser_rank_points  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.ranking_date FROM rankings AS T1  GROUP BY T1.ranking_date  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT rankings.ranking_date FROM rankings AS rankings  GROUP BY rankings.ranking_date  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.player_id FROM rankings AS T1  GROUP BY T1.player_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT rankings.player_id FROM rankings AS rankings  GROUP BY rankings.player_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.birth_date FROM players AS T1  GROUP BY T1.birth_date  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT players.birth_date FROM players AS players  GROUP BY players.birth_date  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM rankings AS T1 WHERE T1.player_id = 201677",
    "readable_query": "SELECT count(*) FROM rankings AS rankings WHERE rankings.player_id = 201677"
  },
  {
    "db_id": "wta_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM players AS T1 WHERE T1.player_id = 200324",
    "readable_query": "SELECT count(*) FROM players AS players WHERE players.player_id = 200324"
  },
  {
    "db_id": "wta_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM rankings AS T1 WHERE T1.ranking = 381",
    "readable_query": "SELECT count(*) FROM rankings AS rankings WHERE rankings.ranking = 381"
  },
  {
    "db_id": "wta_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM rankings AS T1 WHERE T1.ranking_date = \"20130617\"",
    "readable_query": "SELECT count(*) FROM rankings AS rankings WHERE rankings.ranking_date = \"20130617\""
  },
  {
    "db_id": "wta_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM players AS T1 WHERE T1.hand = \"L\"",
    "readable_query": "SELECT count(*) FROM players AS players WHERE players.hand = \"L\""
  },
  {
    "db_id": "wta_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM rankings AS T1 WHERE T1.ranking = 132",
    "readable_query": "SELECT count(*) FROM rankings AS rankings WHERE rankings.ranking = 132"
  },
  {
    "db_id": "wta_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM matches AS T1 WHERE T1.loser_ht = 169",
    "readable_query": "SELECT count(*) FROM matches AS matches WHERE matches.loser_ht = 169"
  },
  {
    "db_id": "wta_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM players AS T1 WHERE T1.country_code = \"HUN\"",
    "readable_query": "SELECT count(*) FROM players AS players WHERE players.country_code = \"HUN\""
  },
  {
    "db_id": "wta_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.player_id FROM players AS T1    ORDER BY T1.birth_date DESC LIMIT 1",
    "readable_query": "SELECT players.player_id FROM players AS players    ORDER BY players.birth_date DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.tours FROM rankings AS T1    ORDER BY T1.ranking DESC LIMIT 1",
    "readable_query": "SELECT rankings.tours FROM rankings AS rankings    ORDER BY rankings.ranking DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.ranking FROM rankings AS T1    ORDER BY T1.player_id DESC LIMIT 1",
    "readable_query": "SELECT rankings.ranking FROM rankings AS rankings    ORDER BY rankings.player_id DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.tourney_id FROM matches AS T1    ORDER BY T1.winner_seed DESC LIMIT 1",
    "readable_query": "SELECT matches.tourney_id FROM matches AS matches    ORDER BY matches.winner_seed DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.year FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id    ORDER BY T2.birth_date DESC LIMIT 1",
    "readable_query": "SELECT matches.year FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id    ORDER BY players.birth_date DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id    ORDER BY T2.player_id DESC LIMIT 1",
    "readable_query": "SELECT players.first_name FROM players AS players JOIN rankings AS rankings ON players.player_id = rankings.player_id    ORDER BY rankings.player_id DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id    ORDER BY T2.loser_seed DESC LIMIT 1",
    "readable_query": "SELECT players.last_name FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id    ORDER BY matches.loser_seed DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.loser_name FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id    ORDER BY T2.birth_date DESC LIMIT 1",
    "readable_query": "SELECT matches.loser_name FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id    ORDER BY players.birth_date DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.match_num FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id    ORDER BY T2.birth_date DESC LIMIT 1",
    "readable_query": "SELECT matches.match_num FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id    ORDER BY players.birth_date DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.player_id FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id    ORDER BY T2.winner_seed DESC LIMIT 1",
    "readable_query": "SELECT players.player_id FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id    ORDER BY matches.winner_seed DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.tourney_date FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id    ORDER BY T2.birth_date DESC LIMIT 1",
    "readable_query": "SELECT matches.tourney_date FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id    ORDER BY players.birth_date DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.round FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id    ORDER BY T2.birth_date ASC LIMIT 1",
    "readable_query": "SELECT matches.round FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id    ORDER BY players.birth_date ASC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.player_id FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id    ORDER BY T2.birth_date ASC LIMIT 1",
    "readable_query": "SELECT rankings.player_id FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id    ORDER BY players.birth_date ASC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.player_id FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id    ORDER BY T2.best_of ASC LIMIT 1",
    "readable_query": "SELECT players.player_id FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id    ORDER BY matches.best_of ASC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.player_id FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id    ORDER BY T2.ranking_date ASC LIMIT 1",
    "readable_query": "SELECT players.player_id FROM players AS players JOIN rankings AS rankings ON players.player_id = rankings.player_id    ORDER BY rankings.ranking_date ASC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.last_name, T1.country_code FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id    ORDER BY T2.minutes DESC LIMIT 1",
    "readable_query": "SELECT players.last_name, players.country_code FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id    ORDER BY matches.minutes DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.player_id, T1.tours FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id    ORDER BY T2.birth_date DESC LIMIT 1",
    "readable_query": "SELECT rankings.player_id, rankings.tours FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id    ORDER BY players.birth_date DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.country_code, T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id    ORDER BY T2.draw_size DESC LIMIT 1",
    "readable_query": "SELECT players.country_code, players.birth_date FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id    ORDER BY matches.draw_size DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.loser_ioc, T1.match_num FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id    ORDER BY T2.player_id DESC LIMIT 1",
    "readable_query": "SELECT matches.loser_ioc, matches.match_num FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id    ORDER BY players.player_id DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.tours) FROM rankings AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  rankings.tours) FROM rankings AS rankings"
  },
  {
    "db_id": "wta_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.player_id) FROM players AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  players.player_id) FROM players AS players"
  },
  {
    "db_id": "wta_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.loser_rank_points) FROM matches AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  matches.loser_rank_points) FROM matches AS matches"
  },
  {
    "db_id": "wta_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.ranking_points) FROM rankings AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  rankings.ranking_points) FROM rankings AS rankings"
  },
  {
    "db_id": "wta_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.ranking) FROM rankings AS T1",
    "readable_query": "SELECT avg( rankings.ranking) FROM rankings AS rankings"
  },
  {
    "db_id": "wta_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.tours) FROM rankings AS T1",
    "readable_query": "SELECT avg( rankings.tours) FROM rankings AS rankings"
  },
  {
    "db_id": "wta_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.loser_id) FROM matches AS T1",
    "readable_query": "SELECT avg( matches.loser_id) FROM matches AS matches"
  },
  {
    "db_id": "wta_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.tours) FROM rankings AS T1",
    "readable_query": "SELECT avg( rankings.tours) FROM rankings AS rankings"
  },
  {
    "db_id": "wta_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.tours FROM rankings AS T1",
    "readable_query": "SELECT rankings.tours FROM rankings AS rankings"
  },
  {
    "db_id": "wta_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.round FROM matches AS T1",
    "readable_query": "SELECT matches.round FROM matches AS matches"
  },
  {
    "db_id": "wta_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.player_id FROM rankings AS T1",
    "readable_query": "SELECT rankings.player_id FROM rankings AS rankings"
  },
  {
    "db_id": "wta_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.hand FROM players AS T1",
    "readable_query": "SELECT players.hand FROM players AS players"
  },
  {
    "db_id": "wta_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.winner_ioc FROM matches AS T1",
    "readable_query": "SELECT matches.winner_ioc FROM matches AS matches"
  },
  {
    "db_id": "wta_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.first_name FROM players AS T1",
    "readable_query": "SELECT players.first_name FROM players AS players"
  },
  {
    "db_id": "wta_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.ranking FROM rankings AS T1",
    "readable_query": "SELECT rankings.ranking FROM rankings AS rankings"
  },
  {
    "db_id": "wta_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.ranking_date FROM rankings AS T1",
    "readable_query": "SELECT DISTINCT rankings.ranking_date FROM rankings AS rankings"
  },
  {
    "db_id": "wta_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.loser_ht FROM matches AS T1",
    "readable_query": "SELECT DISTINCT matches.loser_ht FROM matches AS matches"
  },
  {
    "db_id": "wta_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.player_id FROM rankings AS T1",
    "readable_query": "SELECT DISTINCT rankings.player_id FROM rankings AS rankings"
  },
  {
    "db_id": "wta_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.winner_name FROM matches AS T1",
    "readable_query": "SELECT DISTINCT matches.winner_name FROM matches AS matches"
  },
  {
    "db_id": "wta_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.loser_age FROM matches AS T1",
    "readable_query": "SELECT DISTINCT matches.loser_age FROM matches AS matches"
  },
  {
    "db_id": "wta_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.best_of FROM matches AS T1",
    "readable_query": "SELECT DISTINCT matches.best_of FROM matches AS matches"
  },
  {
    "db_id": "wta_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.hand FROM players AS T1",
    "readable_query": "SELECT DISTINCT players.hand FROM players AS players"
  },
  {
    "db_id": "wta_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.winner_name FROM matches AS T1     ORDER BY T1.minutes ASC",
    "readable_query": "SELECT matches.winner_name FROM matches AS matches     ORDER BY matches.minutes ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.hand FROM players AS T1     ORDER BY T1.birth_date ASC",
    "readable_query": "SELECT players.hand FROM players AS players     ORDER BY players.birth_date ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.winner_ioc FROM matches AS T1     ORDER BY T1.winner_id ASC",
    "readable_query": "SELECT matches.winner_ioc FROM matches AS matches     ORDER BY matches.winner_id ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.first_name FROM players AS T1     ORDER BY T1.birth_date ASC",
    "readable_query": "SELECT players.first_name FROM players AS players     ORDER BY players.birth_date ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.country_code FROM players AS T1     ORDER BY T1.birth_date ASC",
    "readable_query": "SELECT players.country_code FROM players AS players     ORDER BY players.birth_date ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.winner_rank_points FROM matches AS T1     ORDER BY T1.loser_seed ASC",
    "readable_query": "SELECT matches.winner_rank_points FROM matches AS matches     ORDER BY matches.loser_seed ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.winner_rank FROM matches AS T1     ORDER BY T1.tourney_date DESC",
    "readable_query": "SELECT matches.winner_rank FROM matches AS matches     ORDER BY matches.tourney_date DESC"
  },
  {
    "db_id": "wta_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.loser_rank_points FROM matches AS T1     ORDER BY T1.loser_age DESC",
    "readable_query": "SELECT matches.loser_rank_points FROM matches AS matches     ORDER BY matches.loser_age DESC"
  },
  {
    "db_id": "wta_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.tourney_level FROM matches AS T1     ORDER BY T1.winner_ht DESC",
    "readable_query": "SELECT matches.tourney_level FROM matches AS matches     ORDER BY matches.winner_ht DESC"
  },
  {
    "db_id": "wta_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.ranking_date FROM rankings AS T1     ORDER BY T1.ranking_points DESC",
    "readable_query": "SELECT rankings.ranking_date FROM rankings AS rankings     ORDER BY rankings.ranking_points DESC"
  },
  {
    "db_id": "wta_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.hand FROM players AS T1     ORDER BY T1.player_id DESC",
    "readable_query": "SELECT players.hand FROM players AS players     ORDER BY players.player_id DESC"
  },
  {
    "db_id": "wta_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.winner_id FROM matches AS T1     ORDER BY T1.tourney_date DESC",
    "readable_query": "SELECT matches.winner_id FROM matches AS matches     ORDER BY matches.tourney_date DESC"
  },
  {
    "db_id": "wta_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.player_id, T1.ranking_points FROM rankings AS T1     ORDER BY T1.ranking_points ASC",
    "readable_query": "SELECT rankings.player_id, rankings.ranking_points FROM rankings AS rankings     ORDER BY rankings.ranking_points ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.last_name, T1.player_id FROM players AS T1     ORDER BY T1.player_id ASC",
    "readable_query": "SELECT players.last_name, players.player_id FROM players AS players     ORDER BY players.player_id ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.ranking, T1.ranking_date FROM rankings AS T1     ORDER BY T1.ranking_date ASC",
    "readable_query": "SELECT rankings.ranking, rankings.ranking_date FROM rankings AS rankings     ORDER BY rankings.ranking_date ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.player_id, T1.ranking_date FROM rankings AS T1     ORDER BY T1.ranking_date ASC",
    "readable_query": "SELECT rankings.player_id, rankings.ranking_date FROM rankings AS rankings     ORDER BY rankings.ranking_date ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.player_id, T1.ranking_date FROM rankings AS T1     ORDER BY T1.ranking_date ASC",
    "readable_query": "SELECT rankings.player_id, rankings.ranking_date FROM rankings AS rankings     ORDER BY rankings.ranking_date ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.tourney_date FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id WHERE T2.player_id = 200184 and T3.ranking = 69",
    "readable_query": "SELECT matches.tourney_date FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id JOIN rankings AS rankings ON players.player_id = rankings.player_id WHERE players.player_id = 200184 and rankings.ranking = 69"
  },
  {
    "db_id": "wta_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.loser_age FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id WHERE T2.birth_date = \"19540304\" and T3.ranking = 357",
    "readable_query": "SELECT matches.loser_age FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id JOIN rankings AS rankings ON players.player_id = rankings.player_id WHERE players.birth_date = \"19540304\" and rankings.ranking = 357"
  },
  {
    "db_id": "wta_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.ranking FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id JOIN matches AS T3 ON T2.player_id = T3.winner_id WHERE T2.country_code = \"COL\" and T3.year = 2016",
    "readable_query": "SELECT rankings.ranking FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id JOIN matches AS matches ON players.player_id = matches.winner_id WHERE players.country_code = \"COL\" and matches.year = 2016"
  },
  {
    "db_id": "wta_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.tours FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id JOIN matches AS T3 ON T2.player_id = T3.winner_id WHERE T2.player_id = 200856 and T3.draw_size = 64",
    "readable_query": "SELECT rankings.tours FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id JOIN matches AS matches ON players.player_id = matches.winner_id WHERE players.player_id = 200856 and matches.draw_size = 64"
  },
  {
    "db_id": "wta_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.player_id FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id JOIN rankings AS T3 ON T1.player_id = T3.player_id WHERE T2.loser_seed = 23 and T3.ranking = 621",
    "readable_query": "SELECT players.player_id FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id JOIN rankings AS rankings ON players.player_id = rankings.player_id WHERE matches.loser_seed = 23 and rankings.ranking = 621"
  },
  {
    "db_id": "wta_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.country_code FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id JOIN rankings AS T3 ON T1.player_id = T3.player_id WHERE T2.minutes = 48 and T3.player_id = 203453",
    "readable_query": "SELECT players.country_code FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id JOIN rankings AS rankings ON players.player_id = rankings.player_id WHERE matches.minutes = 48 and rankings.player_id = 203453"
  },
  {
    "db_id": "wta_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.match_num FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id WHERE T2.birth_date = \"19670402\" and T3.tours = 33",
    "readable_query": "SELECT matches.match_num FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id JOIN rankings AS rankings ON players.player_id = rankings.player_id WHERE players.birth_date = \"19670402\" and rankings.tours = 33"
  },
  {
    "db_id": "wta_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.winner_seed FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.first_name = \"Farel\" or T2.first_name = \"Kaia\"",
    "readable_query": "SELECT matches.winner_seed FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id WHERE players.first_name = \"Farel\" or players.first_name = \"Kaia\""
  },
  {
    "db_id": "wta_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.hand FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.tours = 23 or T2.tours = 19",
    "readable_query": "SELECT players.hand FROM players AS players JOIN rankings AS rankings ON players.player_id = rankings.player_id WHERE rankings.tours = 23 or rankings.tours = 19"
  },
  {
    "db_id": "wta_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.hand) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T1.birth_date = \"19530406\" and T2.loser_rank = 66",
    "readable_query": "SELECT DISTINCT count(DISTINCT  players.hand) FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id WHERE players.birth_date = \"19530406\" and matches.loser_rank = 66"
  },
  {
    "db_id": "wta_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.loser_rank_points) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.loser_rank = 14 and T2.birth_date = \"19790413\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  matches.loser_rank_points) FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id WHERE matches.loser_rank = 14 and players.birth_date = \"19790413\""
  },
  {
    "db_id": "wta_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.winner_rank) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_id = \"2016-540\" and T2.hand = \"R\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  matches.winner_rank) FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id WHERE matches.tourney_id = \"2016-540\" and players.hand = \"R\""
  },
  {
    "db_id": "wta_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.last_name) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T1.first_name = \"Gabriela\" and T2.score = \"6-7(10) 7-5 6-4\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  players.last_name) FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id WHERE players.first_name = \"Gabriela\" and matches.score = \"6-7(10) 7-5 6-4\""
  },
  {
    "db_id": "wta_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.player_id) FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T1.tours = 27 and T2.birth_date = \"19470201\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  rankings.player_id) FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id WHERE rankings.tours = 27 and players.birth_date = \"19470201\""
  },
  {
    "db_id": "wta_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.tours) FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T1.ranking_points = 910 and T2.birth_date = \"19750714\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  rankings.tours) FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id WHERE rankings.ranking_points = 910 and players.birth_date = \"19750714\""
  },
  {
    "db_id": "wta_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.ranking_date) FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T1.player_id = 203278 and T2.hand = \"R\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  rankings.ranking_date) FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id WHERE rankings.player_id = 203278 and players.hand = \"R\""
  },
  {
    "db_id": "wta_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.hand) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T1.first_name = \"Sofie\" and T2.ranking_points = 306",
    "readable_query": "SELECT DISTINCT count(DISTINCT  players.hand) FROM players AS players JOIN rankings AS rankings ON players.player_id = rankings.player_id WHERE players.first_name = \"Sofie\" and rankings.ranking_points = 306"
  },
  {
    "db_id": "wta_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.first_name FROM players AS T1 WHERE T1.hand = \"U\" or T1.country_code = \"UZB\"",
    "readable_query": "SELECT players.first_name FROM players AS players WHERE players.hand = \"U\" or players.country_code = \"UZB\""
  },
  {
    "db_id": "wta_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.country_code FROM players AS T1 WHERE T1.hand = \"R\" or T1.first_name = \"Anne Mette\"",
    "readable_query": "SELECT players.country_code FROM players AS players WHERE players.hand = \"R\" or players.first_name = \"Anne Mette\""
  },
  {
    "db_id": "wta_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.round FROM matches AS T1 WHERE T1.tourney_name = \"Bucharest\" or T1.winner_rank = 30",
    "readable_query": "SELECT matches.round FROM matches AS matches WHERE matches.tourney_name = \"Bucharest\" or matches.winner_rank = 30"
  },
  {
    "db_id": "wta_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.country_code FROM players AS T1 WHERE T1.hand = \"U\" or T1.player_id = 200817",
    "readable_query": "SELECT players.country_code FROM players AS players WHERE players.hand = \"U\" or players.player_id = 200817"
  },
  {
    "db_id": "wta_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.loser_age FROM matches AS T1 WHERE T1.loser_ioc = \"ITA\" or T1.winner_id = 201320",
    "readable_query": "SELECT matches.loser_age FROM matches AS matches WHERE matches.loser_ioc = \"ITA\" or matches.winner_id = 201320"
  },
  {
    "db_id": "wta_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.tours FROM rankings AS T1 WHERE T1.ranking = 244 or T1.ranking_date = \"20070702\"",
    "readable_query": "SELECT rankings.tours FROM rankings AS rankings WHERE rankings.ranking = 244 or rankings.ranking_date = \"20070702\""
  },
  {
    "db_id": "wta_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.ranking_points FROM rankings AS T1 WHERE T1.ranking_date = \"20110221\" or T1.tours = 24",
    "readable_query": "SELECT rankings.ranking_points FROM rankings AS rankings WHERE rankings.ranking_date = \"20110221\" or rankings.tours = 24"
  },
  {
    "db_id": "wta_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.birth_date FROM players AS T1 WHERE T1.country_code = \"SCG\" or T1.hand = \"L\"",
    "readable_query": "SELECT players.birth_date FROM players AS players WHERE players.country_code = \"SCG\" or players.hand = \"L\""
  },
  {
    "db_id": "wta_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.hand = \"R\" and T2.player_id = 200910",
    "readable_query": "SELECT count(*) FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id WHERE players.hand = \"R\" and players.player_id = 200910"
  },
  {
    "db_id": "wta_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.loser_seed = 16 and T2.winner_rank_points = 5535",
    "readable_query": "SELECT count(*) FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id WHERE matches.loser_seed = 16 and matches.winner_rank_points = 5535"
  },
  {
    "db_id": "wta_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.first_name = \"Dominique\" and T2.birth_date = \"19630515\"",
    "readable_query": "SELECT count(*) FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id WHERE players.first_name = \"Dominique\" and players.birth_date = \"19630515\""
  },
  {
    "db_id": "wta_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.year = 2017 and T2.loser_seed = 31",
    "readable_query": "SELECT count(*) FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id WHERE matches.year = 2017 and matches.loser_seed = 31"
  },
  {
    "db_id": "wta_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.ranking_date = \"19880215\" and T2.player_id = 202429",
    "readable_query": "SELECT count(*) FROM players AS players JOIN rankings AS rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_date = \"19880215\" and rankings.player_id = 202429"
  },
  {
    "db_id": "wta_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.round = \"QF\" and T2.loser_rank_points = 1571",
    "readable_query": "SELECT count(*) FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id WHERE matches.round = \"QF\" and matches.loser_rank_points = 1571"
  },
  {
    "db_id": "wta_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.birth_date = \"19790608\" and T2.last_name = \"Birioukova\"",
    "readable_query": "SELECT count(*) FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id WHERE players.birth_date = \"19790608\" and players.last_name = \"Birioukova\""
  },
  {
    "db_id": "wta_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.last_name FROM players AS T1 WHERE T1.player_id != 200294",
    "readable_query": "SELECT players.last_name FROM players AS players WHERE players.player_id != 200294"
  },
  {
    "db_id": "wta_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.minutes FROM matches AS T1 WHERE T1.match_num != 156",
    "readable_query": "SELECT matches.minutes FROM matches AS matches WHERE matches.match_num != 156"
  },
  {
    "db_id": "wta_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.ranking_date FROM rankings AS T1 WHERE T1.ranking != 1037",
    "readable_query": "SELECT rankings.ranking_date FROM rankings AS rankings WHERE rankings.ranking != 1037"
  },
  {
    "db_id": "wta_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.player_id FROM rankings AS T1 WHERE T1.ranking_points != 9",
    "readable_query": "SELECT rankings.player_id FROM rankings AS rankings WHERE rankings.ranking_points != 9"
  },
  {
    "db_id": "wta_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.loser_age FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.birth_date != \"19490504\"",
    "readable_query": "SELECT matches.loser_age FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id WHERE players.birth_date != \"19490504\""
  },
  {
    "db_id": "wta_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.winner_ioc != \"SRB\"",
    "readable_query": "SELECT players.birth_date FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id WHERE matches.winner_ioc != \"SRB\""
  },
  {
    "db_id": "wta_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.loser_id FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.country_code != \"ESA\"",
    "readable_query": "SELECT matches.loser_id FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id WHERE players.country_code != \"ESA\""
  },
  {
    "db_id": "wta_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.loser_seed = 31",
    "readable_query": "SELECT DISTINCT players.birth_date FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id WHERE matches.loser_seed = 31"
  },
  {
    "db_id": "wta_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.loser_rank FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.last_name = \"Bartkowicz\"",
    "readable_query": "SELECT DISTINCT matches.loser_rank FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id WHERE players.last_name = \"Bartkowicz\""
  },
  {
    "db_id": "wta_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.minutes FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.last_name = \"Weisenberger\"",
    "readable_query": "SELECT DISTINCT matches.minutes FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id WHERE players.last_name = \"Weisenberger\""
  },
  {
    "db_id": "wta_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.ranking_date = \"20070924\"",
    "readable_query": "SELECT DISTINCT players.first_name FROM players AS players JOIN rankings AS rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_date = \"20070924\""
  },
  {
    "db_id": "wta_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.loser_name = \"Dominika Cibulkova\"",
    "readable_query": "SELECT DISTINCT players.last_name FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id WHERE matches.loser_name = \"Dominika Cibulkova\""
  },
  {
    "db_id": "wta_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.winner_name FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.birth_date = \"19621009\"",
    "readable_query": "SELECT DISTINCT matches.winner_name FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id WHERE players.birth_date = \"19621009\""
  },
  {
    "db_id": "wta_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.tourney_id FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.hand = \"R\"",
    "readable_query": "SELECT DISTINCT matches.tourney_id FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id WHERE players.hand = \"R\""
  },
  {
    "db_id": "wta_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.loser_name FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.hand = \"L\"",
    "readable_query": "SELECT DISTINCT matches.loser_name FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id WHERE players.hand = \"L\""
  },
  {
    "db_id": "wta_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.ranking_date FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.first_name = \"Alena\"",
    "readable_query": "SELECT DISTINCT rankings.ranking_date FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id WHERE players.first_name = \"Alena\""
  },
  {
    "db_id": "wta_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.ranking_points) FROM rankings AS T1 WHERE T1.player_id = 206136",
    "readable_query": "SELECT DISTINCT count(DISTINCT  rankings.ranking_points) FROM rankings AS rankings WHERE rankings.player_id = 206136"
  },
  {
    "db_id": "wta_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.ranking) FROM rankings AS T1 WHERE T1.tours = 13",
    "readable_query": "SELECT DISTINCT count(DISTINCT  rankings.ranking) FROM rankings AS rankings WHERE rankings.tours = 13"
  },
  {
    "db_id": "wta_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.tours) FROM rankings AS T1 WHERE T1.ranking_points = 974",
    "readable_query": "SELECT DISTINCT count(DISTINCT  rankings.tours) FROM rankings AS rankings WHERE rankings.ranking_points = 974"
  },
  {
    "db_id": "wta_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.player_id) FROM rankings AS T1 WHERE T1.tours = 14",
    "readable_query": "SELECT DISTINCT count(DISTINCT  rankings.player_id) FROM rankings AS rankings WHERE rankings.tours = 14"
  },
  {
    "db_id": "wta_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.loser_ht) FROM matches AS T1 WHERE T1.tourney_name = \"Budapest\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  matches.loser_ht) FROM matches AS matches WHERE matches.tourney_name = \"Budapest\""
  },
  {
    "db_id": "wta_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.ranking_date) FROM rankings AS T1 WHERE T1.ranking = 770",
    "readable_query": "SELECT DISTINCT count(DISTINCT  rankings.ranking_date) FROM rankings AS rankings WHERE rankings.ranking = 770"
  },
  {
    "db_id": "wta_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.loser_ht FROM matches AS T1 WHERE T1.match_num > 199",
    "readable_query": "SELECT matches.loser_ht FROM matches AS matches WHERE matches.match_num > 199"
  },
  {
    "db_id": "wta_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.ranking_points FROM rankings AS T1 WHERE T1.player_id > 202389",
    "readable_query": "SELECT rankings.ranking_points FROM rankings AS rankings WHERE rankings.player_id > 202389"
  },
  {
    "db_id": "wta_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.tourney_date FROM matches AS T1 WHERE T1.winner_rank > 33",
    "readable_query": "SELECT matches.tourney_date FROM matches AS matches WHERE matches.winner_rank > 33"
  },
  {
    "db_id": "wta_1",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.tours, T2.player_id, T3.year FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id JOIN matches AS T3 ON T2.player_id = T3.winner_id",
    "readable_query": "SELECT rankings.tours, players.player_id, matches.year FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id JOIN matches AS matches ON players.player_id = matches.winner_id"
  },
  {
    "db_id": "wta_1",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.tourney_id, T2.country_code, T3.ranking FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id",
    "readable_query": "SELECT matches.tourney_id, players.country_code, rankings.ranking FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id JOIN rankings AS rankings ON players.player_id = rankings.player_id"
  },
  {
    "db_id": "wta_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.country_code FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id     ORDER BY T2.loser_rank ASC",
    "readable_query": "SELECT players.country_code FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id     ORDER BY matches.loser_rank ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.loser_ht FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id     ORDER BY T2.player_id ASC",
    "readable_query": "SELECT matches.loser_ht FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id     ORDER BY players.player_id ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id     ORDER BY T2.tourney_date ASC",
    "readable_query": "SELECT players.first_name FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id     ORDER BY matches.tourney_date ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.ranking_date FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id     ORDER BY T2.player_id ASC",
    "readable_query": "SELECT rankings.ranking_date FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id     ORDER BY players.player_id ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.player_id FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id     ORDER BY T2.ranking_points ASC",
    "readable_query": "SELECT players.player_id FROM players AS players JOIN rankings AS rankings ON players.player_id = rankings.player_id     ORDER BY rankings.ranking_points ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id     ORDER BY T2.loser_age ASC",
    "readable_query": "SELECT players.birth_date FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id     ORDER BY matches.loser_age ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id     ORDER BY T2.tours ASC",
    "readable_query": "SELECT players.last_name FROM players AS players JOIN rankings AS rankings ON players.player_id = rankings.player_id     ORDER BY rankings.tours ASC"
  },
  {
    "db_id": "wta_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.loser_name FROM matches AS T1 WHERE T1.round = \"BR\"     INTERSECT SELECT T2.loser_name FROM matches AS T2 WHERE T2.round = \"QF\"",
    "readable_query": "SELECT matches.loser_name FROM matches AS matches WHERE matches.round = \"BR\"     INTERSECT SELECT matches.loser_name FROM matches AS matches WHERE matches.round = \"QF\""
  },
  {
    "db_id": "wta_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.tours FROM rankings AS T1 WHERE T1.player_id = 206147     INTERSECT SELECT T2.tours FROM rankings AS T2 WHERE T2.player_id = 202623",
    "readable_query": "SELECT rankings.tours FROM rankings AS rankings WHERE rankings.player_id = 206147     INTERSECT SELECT rankings.tours FROM rankings AS rankings WHERE rankings.player_id = 202623"
  },
  {
    "db_id": "wta_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.ranking FROM rankings AS T1 WHERE T1.ranking_date = \"19880523\"     INTERSECT SELECT T2.ranking FROM rankings AS T2 WHERE T2.ranking_date = \"20040705\"",
    "readable_query": "SELECT rankings.ranking FROM rankings AS rankings WHERE rankings.ranking_date = \"19880523\"     INTERSECT SELECT rankings.ranking FROM rankings AS rankings WHERE rankings.ranking_date = \"20040705\""
  },
  {
    "db_id": "wta_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.hand FROM players AS T1 WHERE T1.last_name = \"Ganz\"     INTERSECT SELECT T2.hand FROM players AS T2 WHERE T2.last_name = \"Newton\"",
    "readable_query": "SELECT players.hand FROM players AS players WHERE players.last_name = \"Ganz\"     INTERSECT SELECT players.hand FROM players AS players WHERE players.last_name = \"Newton\""
  },
  {
    "db_id": "wta_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.birth_date FROM players AS T1 WHERE T1.country_code = \"MDA\"     INTERSECT SELECT T2.birth_date FROM players AS T2 WHERE T2.country_code = \"ISL\"",
    "readable_query": "SELECT players.birth_date FROM players AS players WHERE players.country_code = \"MDA\"     INTERSECT SELECT players.birth_date FROM players AS players WHERE players.country_code = \"ISL\""
  },
  {
    "db_id": "wta_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.loser_id) FROM matches AS T1 WHERE T1.loser_seed = 26",
    "readable_query": "SELECT avg( matches.loser_id) FROM matches AS matches WHERE matches.loser_seed = 26"
  },
  {
    "db_id": "wta_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.winner_seed) FROM matches AS T1 WHERE T1.score = \"6-3 2-6 6-3\"",
    "readable_query": "SELECT avg( matches.winner_seed) FROM matches AS matches WHERE matches.score = \"6-3 2-6 6-3\""
  },
  {
    "db_id": "wta_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.loser_age) FROM matches AS T1 WHERE T1.loser_ht = 179",
    "readable_query": "SELECT avg( matches.loser_age) FROM matches AS matches WHERE matches.loser_ht = 179"
  },
  {
    "db_id": "wta_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.ranking) FROM rankings AS T1 WHERE T1.ranking_date = \"20020923\"",
    "readable_query": "SELECT avg( rankings.ranking) FROM rankings AS rankings WHERE rankings.ranking_date = \"20020923\""
  },
  {
    "db_id": "wta_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.round FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.player_id = (SELECT max( T23.player_id) FROM players AS T23)",
    "readable_query": "SELECT matches.round FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id WHERE players.player_id = (SELECT max( players.player_id) FROM players AS players)"
  },
  {
    "db_id": "wta_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.year FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.player_id = (SELECT max( T23.player_id) FROM players AS T23)",
    "readable_query": "SELECT matches.year FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id WHERE players.player_id = (SELECT max( players.player_id) FROM players AS players)"
  },
  {
    "db_id": "wta_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.ranking FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.birth_date = (SELECT max( T23.birth_date) FROM players AS T23)",
    "readable_query": "SELECT rankings.ranking FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id WHERE players.birth_date = (SELECT max( players.birth_date) FROM players AS players)"
  },
  {
    "db_id": "wta_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.player_id FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.winner_ht = (SELECT max( T23.winner_ht) FROM matches AS T23)",
    "readable_query": "SELECT players.player_id FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id WHERE matches.winner_ht = (SELECT max( matches.winner_ht) FROM matches AS matches)"
  },
  {
    "db_id": "wta_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.winner_ioc FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.player_id = (SELECT max( T23.player_id) FROM players AS T23)",
    "readable_query": "SELECT matches.winner_ioc FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id WHERE players.player_id = (SELECT max( players.player_id) FROM players AS players)"
  },
  {
    "db_id": "wta_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.ranking_date, T2.hand FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id JOIN matches AS T3 ON T2.player_id = T3.winner_id WHERE T3.winner_name = \"Petra Kvitova\" and T2.first_name = \"Miriam\"",
    "readable_query": "SELECT rankings.ranking_date, players.hand FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id JOIN matches AS matches ON players.player_id = matches.winner_id WHERE matches.winner_name = \"Petra Kvitova\" and players.first_name = \"Miriam\""
  },
  {
    "db_id": "wta_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.last_name, T2.ranking_points FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id JOIN matches AS T3 ON T1.player_id = T3.winner_id WHERE T3.winner_ioc = \"ROU\" and T2.tours = 10",
    "readable_query": "SELECT players.last_name, rankings.ranking_points FROM players AS players JOIN rankings AS rankings ON players.player_id = rankings.player_id JOIN matches AS matches ON players.player_id = matches.winner_id WHERE matches.winner_ioc = \"ROU\" and rankings.tours = 10"
  },
  {
    "db_id": "wta_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.player_id, T2.ranking_date FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id JOIN matches AS T3 ON T1.player_id = T3.winner_id WHERE T3.tourney_name = \"Washington\" and T2.ranking = 276",
    "readable_query": "SELECT players.player_id, rankings.ranking_date FROM players AS players JOIN rankings AS rankings ON players.player_id = rankings.player_id JOIN matches AS matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = \"Washington\" and rankings.ranking = 276"
  },
  {
    "db_id": "wta_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.winner_rank_points, T2.birth_date FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id WHERE T3.ranking_points = 1185 and T2.country_code = \"GUD\"",
    "readable_query": "SELECT matches.winner_rank_points, players.birth_date FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id JOIN rankings AS rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = 1185 and players.country_code = \"GUD\""
  },
  {
    "db_id": "wta_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.ranking, T2.first_name FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id JOIN matches AS T3 ON T2.player_id = T3.winner_id WHERE T3.winner_ht = 174 and T2.player_id = 200534",
    "readable_query": "SELECT rankings.ranking, players.first_name FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id JOIN matches AS matches ON players.player_id = matches.winner_id WHERE matches.winner_ht = 174 and players.player_id = 200534"
  },
  {
    "db_id": "wta_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.match_num, T2.birth_date FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id WHERE T3.ranking_date = \"20060911\" and T2.last_name = \"Dmitrieva\"",
    "readable_query": "SELECT matches.match_num, players.birth_date FROM matches AS matches JOIN players AS players ON matches.winner_id = players.player_id JOIN rankings AS rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_date = \"20060911\" and players.last_name = \"Dmitrieva\""
  },
  {
    "db_id": "wta_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.birth_date FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.tours = 3 GROUP BY T1.birth_date  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT players.birth_date FROM players AS players JOIN rankings AS rankings ON players.player_id = rankings.player_id WHERE rankings.tours = 3 GROUP BY players.birth_date  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.tours FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.player_id = 200793 GROUP BY T1.tours  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT rankings.tours FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id WHERE players.player_id = 200793 GROUP BY rankings.tours  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.winner_seed = 27 GROUP BY T1.birth_date  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT players.birth_date FROM players AS players JOIN matches AS matches ON players.player_id = matches.winner_id WHERE matches.winner_seed = 27 GROUP BY players.birth_date  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.ranking_points FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.last_name = \"Sawyer\" GROUP BY T1.ranking_points  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT rankings.ranking_points FROM rankings AS rankings JOIN players AS players ON rankings.player_id = players.player_id WHERE players.last_name = \"Sawyer\" GROUP BY rankings.ranking_points  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "wta_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.winner_entry FROM matches AS T1        EXCEPT SELECT T2.winner_entry FROM matches AS T2 WHERE T2.winner_rank = 31",
    "readable_query": "SELECT matches.winner_entry FROM matches AS matches        EXCEPT SELECT matches.winner_entry FROM matches AS matches WHERE matches.winner_rank = 31"
  },
  {
    "db_id": "wta_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.tours FROM rankings AS T1        EXCEPT SELECT T2.tours FROM rankings AS T2 WHERE T2.ranking_points = 363",
    "readable_query": "SELECT rankings.tours FROM rankings AS rankings        EXCEPT SELECT rankings.tours FROM rankings AS rankings WHERE rankings.ranking_points = 363"
  },
  {
    "db_id": "wta_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.last_name FROM players AS T1        EXCEPT SELECT T2.last_name FROM players AS T2 WHERE T2.hand = \"U\"",
    "readable_query": "SELECT players.last_name FROM players AS players        EXCEPT SELECT players.last_name FROM players AS players WHERE players.hand = \"U\""
  },
  {
    "db_id": "wta_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.winner_name FROM matches AS T1        EXCEPT SELECT T2.winner_name FROM matches AS T2 WHERE T2.winner_hand = \"L\"",
    "readable_query": "SELECT matches.winner_name FROM matches AS matches        EXCEPT SELECT matches.winner_name FROM matches AS matches WHERE matches.winner_hand = \"L\""
  },
  {
    "db_id": "wta_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.ranking_date FROM rankings AS T1        EXCEPT SELECT T2.ranking_date FROM rankings AS T2 WHERE T2.ranking_points = 2762",
    "readable_query": "SELECT rankings.ranking_date FROM rankings AS rankings        EXCEPT SELECT rankings.ranking_date FROM rankings AS rankings WHERE rankings.ranking_points = 2762"
  },
  {
    "db_id": "wta_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.last_name FROM players AS T1        EXCEPT SELECT T2.last_name FROM players AS T2 WHERE T2.country_code = \"BAH\"",
    "readable_query": "SELECT players.last_name FROM players AS players        EXCEPT SELECT players.last_name FROM players AS players WHERE players.country_code = \"BAH\""
  },
  {
    "db_id": "course_teach",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Staring_Date FROM course AS T1 WHERE T1.Course_ID = 2",
    "readable_query": "SELECT course.Staring_Date FROM course AS course WHERE course.Course_ID = 2"
  },
  {
    "db_id": "course_teach",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Grade FROM course_arrange AS T1 WHERE T1.Teacher_ID = 7",
    "readable_query": "SELECT course_arrange.Grade FROM course_arrange AS course_arrange WHERE course_arrange.Teacher_ID = 7"
  },
  {
    "db_id": "course_teach",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Name FROM teacher AS T1 WHERE T1.Teacher_ID = 7",
    "readable_query": "SELECT teacher.Name FROM teacher AS teacher WHERE teacher.Teacher_ID = 7"
  },
  {
    "db_id": "course_teach",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Grade FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course = \"Sports\"",
    "readable_query": "SELECT course_arrange.Grade FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = \"Sports\""
  },
  {
    "db_id": "course_teach",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Grade FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Name = \"Joseph Huts\"",
    "readable_query": "SELECT course_arrange.Grade FROM course_arrange AS course_arrange JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE teacher.Name = \"Joseph Huts\""
  },
  {
    "db_id": "course_teach",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Age FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Grade = 1",
    "readable_query": "SELECT teacher.Age FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID WHERE course_arrange.Grade = 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Grade = 5",
    "readable_query": "SELECT teacher.Name FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID WHERE course_arrange.Grade = 5"
  },
  {
    "db_id": "course_teach",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Staring_Date, count(*) FROM course AS T1  GROUP BY T1.Staring_Date",
    "readable_query": "SELECT course.Staring_Date, count(*) FROM course AS course  GROUP BY course.Staring_Date"
  },
  {
    "db_id": "course_teach",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Teacher_ID, count(*) FROM teacher AS T1  GROUP BY T1.Teacher_ID",
    "readable_query": "SELECT teacher.Teacher_ID, count(*) FROM teacher AS teacher  GROUP BY teacher.Teacher_ID"
  },
  {
    "db_id": "course_teach",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Teacher_ID, count(*) FROM teacher AS T1  GROUP BY T1.Teacher_ID",
    "readable_query": "SELECT teacher.Teacher_ID, count(*) FROM teacher AS teacher  GROUP BY teacher.Teacher_ID"
  },
  {
    "db_id": "course_teach",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Hometown, count(*) FROM teacher AS T1  GROUP BY T1.Hometown",
    "readable_query": "SELECT teacher.Hometown, count(*) FROM teacher AS teacher  GROUP BY teacher.Hometown"
  },
  {
    "db_id": "course_teach",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Course_ID, count(*) FROM course AS T1  GROUP BY T1.Course_ID",
    "readable_query": "SELECT course.Course_ID, count(*) FROM course AS course  GROUP BY course.Course_ID"
  },
  {
    "db_id": "course_teach",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Course, count(*) FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID  GROUP BY T1.Course",
    "readable_query": "SELECT course.Course, count(*) FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID  GROUP BY course.Course"
  },
  {
    "db_id": "course_teach",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Course_ID, count(*) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID  GROUP BY T1.Course_ID",
    "readable_query": "SELECT course_arrange.Course_ID, count(*) FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID  GROUP BY course_arrange.Course_ID"
  },
  {
    "db_id": "course_teach",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Course_ID, count(*) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID  GROUP BY T1.Course_ID",
    "readable_query": "SELECT course_arrange.Course_ID, count(*) FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID  GROUP BY course_arrange.Course_ID"
  },
  {
    "db_id": "course_teach",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Teacher_ID, count(*) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID  GROUP BY T1.Teacher_ID",
    "readable_query": "SELECT course_arrange.Teacher_ID, count(*) FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID  GROUP BY course_arrange.Teacher_ID"
  },
  {
    "db_id": "course_teach",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Teacher_ID, count(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Teacher_ID",
    "readable_query": "SELECT teacher.Teacher_ID, count(*) FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID  GROUP BY teacher.Teacher_ID"
  },
  {
    "db_id": "course_teach",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Name, count(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name",
    "readable_query": "SELECT teacher.Name, count(*) FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID  GROUP BY teacher.Name"
  },
  {
    "db_id": "course_teach",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM teacher AS T1",
    "readable_query": "SELECT count(*) FROM teacher AS teacher"
  },
  {
    "db_id": "course_teach",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Staring_Date, T1.Course_ID FROM course AS T1",
    "readable_query": "SELECT course.Staring_Date, course.Course_ID FROM course AS course"
  },
  {
    "db_id": "course_teach",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Course, T1.Course_ID FROM course AS T1",
    "readable_query": "SELECT course.Course, course.Course_ID FROM course AS course"
  },
  {
    "db_id": "course_teach",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Staring_Date, T1.Course FROM course AS T1",
    "readable_query": "SELECT course.Staring_Date, course.Course FROM course AS course"
  },
  {
    "db_id": "course_teach",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Course_ID, T1.Course FROM course AS T1",
    "readable_query": "SELECT course.Course_ID, course.Course FROM course AS course"
  },
  {
    "db_id": "course_teach",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Course_ID, T1.Course FROM course AS T1",
    "readable_query": "SELECT course.Course_ID, course.Course FROM course AS course"
  },
  {
    "db_id": "course_teach",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Hometown, T1.Age FROM teacher AS T1",
    "readable_query": "SELECT teacher.Hometown, teacher.Age FROM teacher AS teacher"
  },
  {
    "db_id": "course_teach",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Course_ID, T1.Grade FROM course_arrange AS T1",
    "readable_query": "SELECT course_arrange.Course_ID, course_arrange.Grade FROM course_arrange AS course_arrange"
  },
  {
    "db_id": "course_teach",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Name, T1.Hometown FROM teacher AS T1",
    "readable_query": "SELECT teacher.Name, teacher.Hometown FROM teacher AS teacher"
  },
  {
    "db_id": "course_teach",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Course_ID, T2.Teacher_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID",
    "readable_query": "SELECT course.Course_ID, course_arrange.Teacher_ID FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID"
  },
  {
    "db_id": "course_teach",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Course_ID, T2.Age FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID",
    "readable_query": "SELECT course_arrange.Course_ID, teacher.Age FROM course_arrange AS course_arrange JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID"
  },
  {
    "db_id": "course_teach",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Name, T1.Hometown FROM teacher AS T1 WHERE T1.Teacher_ID = 7",
    "readable_query": "SELECT teacher.Name, teacher.Hometown FROM teacher AS teacher WHERE teacher.Teacher_ID = 7"
  },
  {
    "db_id": "course_teach",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Age, T1.Name FROM teacher AS T1 WHERE T1.Hometown = \"Bolton County Borough\"",
    "readable_query": "SELECT teacher.Age, teacher.Name FROM teacher AS teacher WHERE teacher.Hometown = \"Bolton County Borough\""
  },
  {
    "db_id": "course_teach",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Teacher_ID, T1.Course_ID FROM course_arrange AS T1 WHERE T1.Grade = 3",
    "readable_query": "SELECT course_arrange.Teacher_ID, course_arrange.Course_ID FROM course_arrange AS course_arrange WHERE course_arrange.Grade = 3"
  },
  {
    "db_id": "course_teach",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Teacher_ID, T1.Age FROM teacher AS T1 WHERE T1.Hometown = \"Turton Urban District\"",
    "readable_query": "SELECT teacher.Teacher_ID, teacher.Age FROM teacher AS teacher WHERE teacher.Hometown = \"Turton Urban District\""
  },
  {
    "db_id": "course_teach",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Course_ID, T1.Grade FROM course_arrange AS T1 WHERE T1.Teacher_ID = 5",
    "readable_query": "SELECT course_arrange.Course_ID, course_arrange.Grade FROM course_arrange AS course_arrange WHERE course_arrange.Teacher_ID = 5"
  },
  {
    "db_id": "course_teach",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Teacher_ID, T1.Grade FROM course_arrange AS T1 WHERE T1.Course_ID = 2",
    "readable_query": "SELECT course_arrange.Teacher_ID, course_arrange.Grade FROM course_arrange AS course_arrange WHERE course_arrange.Course_ID = 2"
  },
  {
    "db_id": "course_teach",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Teacher_ID, T1.Grade FROM course_arrange AS T1 WHERE T1.Course_ID = 10",
    "readable_query": "SELECT course_arrange.Teacher_ID, course_arrange.Grade FROM course_arrange AS course_arrange WHERE course_arrange.Course_ID = 10"
  },
  {
    "db_id": "course_teach",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Name FROM teacher AS T1  GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT teacher.Name FROM teacher AS teacher  GROUP BY teacher.Name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Course FROM course AS T1  GROUP BY T1.Course  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT course.Course FROM course AS course  GROUP BY course.Course  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Age FROM teacher AS T1  GROUP BY T1.Age  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT teacher.Age FROM teacher AS teacher  GROUP BY teacher.Age  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Hometown FROM teacher AS T1  GROUP BY T1.Hometown  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT teacher.Hometown FROM teacher AS teacher  GROUP BY teacher.Hometown  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Teacher_ID FROM teacher AS T1  GROUP BY T1.Teacher_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT teacher.Teacher_ID FROM teacher AS teacher  GROUP BY teacher.Teacher_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Name FROM teacher AS T1  GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT teacher.Name FROM teacher AS teacher  GROUP BY teacher.Name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM course AS T1 WHERE T1.Staring_Date = \"17 May\"",
    "readable_query": "SELECT count(*) FROM course AS course WHERE course.Staring_Date = \"17 May\""
  },
  {
    "db_id": "course_teach",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM course_arrange AS T1 WHERE T1.Grade = 4",
    "readable_query": "SELECT count(*) FROM course_arrange AS course_arrange WHERE course_arrange.Grade = 4"
  },
  {
    "db_id": "course_teach",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM course_arrange AS T1 WHERE T1.Course_ID = 5",
    "readable_query": "SELECT count(*) FROM course_arrange AS course_arrange WHERE course_arrange.Course_ID = 5"
  },
  {
    "db_id": "course_teach",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM course_arrange AS T1 WHERE T1.Teacher_ID = 3",
    "readable_query": "SELECT count(*) FROM course_arrange AS course_arrange WHERE course_arrange.Teacher_ID = 3"
  },
  {
    "db_id": "course_teach",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM course AS T1 WHERE T1.Course = \"Sports\"",
    "readable_query": "SELECT count(*) FROM course AS course WHERE course.Course = \"Sports\""
  },
  {
    "db_id": "course_teach",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Age FROM teacher AS T1    ORDER BY T1.Teacher_ID DESC LIMIT 1",
    "readable_query": "SELECT teacher.Age FROM teacher AS teacher    ORDER BY teacher.Teacher_ID DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Grade FROM course_arrange AS T1    ORDER BY T1.Teacher_ID DESC LIMIT 1",
    "readable_query": "SELECT course_arrange.Grade FROM course_arrange AS course_arrange    ORDER BY course_arrange.Teacher_ID DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID    ORDER BY T2.Grade DESC LIMIT 1",
    "readable_query": "SELECT teacher.Name FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID    ORDER BY course_arrange.Grade DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID    ORDER BY T2.Teacher_ID DESC LIMIT 1",
    "readable_query": "SELECT course_arrange.Course_ID FROM course_arrange AS course_arrange JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID    ORDER BY teacher.Teacher_ID DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID    ORDER BY T2.Course_ID DESC LIMIT 1",
    "readable_query": "SELECT course_arrange.Teacher_ID FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID    ORDER BY course.Course_ID DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Teacher_ID FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID    ORDER BY T2.Grade DESC LIMIT 1",
    "readable_query": "SELECT teacher.Teacher_ID FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID    ORDER BY course_arrange.Grade DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID    ORDER BY T2.Teacher_ID DESC LIMIT 1",
    "readable_query": "SELECT course.Course FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID    ORDER BY course_arrange.Teacher_ID DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID    ORDER BY T2.Teacher_ID DESC LIMIT 1",
    "readable_query": "SELECT teacher.Name FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID    ORDER BY course_arrange.Teacher_ID DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Teacher_ID FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID    ORDER BY T2.Grade ASC LIMIT 1",
    "readable_query": "SELECT teacher.Teacher_ID FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID    ORDER BY course_arrange.Grade ASC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID    ORDER BY T2.Course_ID ASC LIMIT 1",
    "readable_query": "SELECT course_arrange.Teacher_ID FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID    ORDER BY course.Course_ID ASC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Grade FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID    ORDER BY T2.Teacher_ID ASC LIMIT 1",
    "readable_query": "SELECT course_arrange.Grade FROM course_arrange AS course_arrange JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID    ORDER BY teacher.Teacher_ID ASC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Staring_Date FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID    ORDER BY T2.Course_ID ASC LIMIT 1",
    "readable_query": "SELECT course.Staring_Date FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID    ORDER BY course_arrange.Course_ID ASC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Hometown FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID    ORDER BY T2.Course_ID ASC LIMIT 1",
    "readable_query": "SELECT teacher.Hometown FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID    ORDER BY course_arrange.Course_ID ASC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID    ORDER BY T2.Course_ID ASC LIMIT 1",
    "readable_query": "SELECT course.Course FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID    ORDER BY course_arrange.Course_ID ASC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Hometown, T1.Teacher_ID FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID    ORDER BY T2.Grade DESC LIMIT 1",
    "readable_query": "SELECT teacher.Hometown, teacher.Teacher_ID FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID    ORDER BY course_arrange.Grade DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Course_ID, T1.Grade FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID    ORDER BY T2.Teacher_ID DESC LIMIT 1",
    "readable_query": "SELECT course_arrange.Course_ID, course_arrange.Grade FROM course_arrange AS course_arrange JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID    ORDER BY teacher.Teacher_ID DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Staring_Date, T1.Course_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID    ORDER BY T2.Teacher_ID DESC LIMIT 1",
    "readable_query": "SELECT course.Staring_Date, course.Course_ID FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID    ORDER BY course_arrange.Teacher_ID DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Course, T1.Staring_Date FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID    ORDER BY T2.Teacher_ID DESC LIMIT 1",
    "readable_query": "SELECT course.Course, course.Staring_Date FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID    ORDER BY course_arrange.Teacher_ID DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Course_ID) FROM course AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  course.Course_ID) FROM course AS course"
  },
  {
    "db_id": "course_teach",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Hometown) FROM teacher AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  teacher.Hometown) FROM teacher AS teacher"
  },
  {
    "db_id": "course_teach",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Teacher_ID) FROM teacher AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  teacher.Teacher_ID) FROM teacher AS teacher"
  },
  {
    "db_id": "course_teach",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Course_ID) FROM course AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  course.Course_ID) FROM course AS course"
  },
  {
    "db_id": "course_teach",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Teacher_ID) FROM teacher AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  teacher.Teacher_ID) FROM teacher AS teacher"
  },
  {
    "db_id": "course_teach",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Staring_Date) FROM course AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  course.Staring_Date) FROM course AS course"
  },
  {
    "db_id": "course_teach",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Staring_Date) FROM course AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  course.Staring_Date) FROM course AS course"
  },
  {
    "db_id": "course_teach",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Course_ID) FROM course_arrange AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  course_arrange.Course_ID) FROM course_arrange AS course_arrange"
  },
  {
    "db_id": "course_teach",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Grade) FROM course_arrange AS T1",
    "readable_query": "SELECT avg( course_arrange.Grade) FROM course_arrange AS course_arrange"
  },
  {
    "db_id": "course_teach",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Teacher_ID) FROM teacher AS T1",
    "readable_query": "SELECT avg( teacher.Teacher_ID) FROM teacher AS teacher"
  },
  {
    "db_id": "course_teach",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Course_ID) FROM course AS T1",
    "readable_query": "SELECT avg( course.Course_ID) FROM course AS course"
  },
  {
    "db_id": "course_teach",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Age FROM teacher AS T1",
    "readable_query": "SELECT teacher.Age FROM teacher AS teacher"
  },
  {
    "db_id": "course_teach",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Grade FROM course_arrange AS T1",
    "readable_query": "SELECT course_arrange.Grade FROM course_arrange AS course_arrange"
  },
  {
    "db_id": "course_teach",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Name FROM teacher AS T1",
    "readable_query": "SELECT teacher.Name FROM teacher AS teacher"
  },
  {
    "db_id": "course_teach",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1",
    "readable_query": "SELECT course_arrange.Course_ID FROM course_arrange AS course_arrange"
  },
  {
    "db_id": "course_teach",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Staring_Date FROM course AS T1",
    "readable_query": "SELECT DISTINCT course.Staring_Date FROM course AS course"
  },
  {
    "db_id": "course_teach",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Course_ID FROM course AS T1",
    "readable_query": "SELECT DISTINCT course.Course_ID FROM course AS course"
  },
  {
    "db_id": "course_teach",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Hometown FROM teacher AS T1",
    "readable_query": "SELECT DISTINCT teacher.Hometown FROM teacher AS teacher"
  },
  {
    "db_id": "course_teach",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Teacher_ID FROM teacher AS T1",
    "readable_query": "SELECT DISTINCT teacher.Teacher_ID FROM teacher AS teacher"
  },
  {
    "db_id": "course_teach",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1     ORDER BY T1.Grade ASC",
    "readable_query": "SELECT course_arrange.Course_ID FROM course_arrange AS course_arrange     ORDER BY course_arrange.Grade ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Hometown FROM teacher AS T1     ORDER BY T1.Teacher_ID ASC",
    "readable_query": "SELECT teacher.Hometown FROM teacher AS teacher     ORDER BY teacher.Teacher_ID ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1     ORDER BY T1.Grade ASC",
    "readable_query": "SELECT course_arrange.Teacher_ID FROM course_arrange AS course_arrange     ORDER BY course_arrange.Grade ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Staring_Date FROM course AS T1     ORDER BY T1.Course_ID ASC",
    "readable_query": "SELECT course.Staring_Date FROM course AS course     ORDER BY course.Course_ID ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Course FROM course AS T1     ORDER BY T1.Course_ID DESC",
    "readable_query": "SELECT course.Course FROM course AS course     ORDER BY course.Course_ID DESC"
  },
  {
    "db_id": "course_teach",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Grade FROM course_arrange AS T1     ORDER BY T1.Course_ID DESC",
    "readable_query": "SELECT course_arrange.Grade FROM course_arrange AS course_arrange     ORDER BY course_arrange.Course_ID DESC"
  },
  {
    "db_id": "course_teach",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Grade FROM course_arrange AS T1     ORDER BY T1.Teacher_ID DESC",
    "readable_query": "SELECT course_arrange.Grade FROM course_arrange AS course_arrange     ORDER BY course_arrange.Teacher_ID DESC"
  },
  {
    "db_id": "course_teach",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1     ORDER BY T1.Course_ID DESC",
    "readable_query": "SELECT course_arrange.Teacher_ID FROM course_arrange AS course_arrange     ORDER BY course_arrange.Course_ID DESC"
  },
  {
    "db_id": "course_teach",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1     ORDER BY T1.Grade DESC",
    "readable_query": "SELECT course_arrange.Course_ID FROM course_arrange AS course_arrange     ORDER BY course_arrange.Grade DESC"
  },
  {
    "db_id": "course_teach",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1     ORDER BY T1.Course_ID DESC",
    "readable_query": "SELECT course_arrange.Teacher_ID FROM course_arrange AS course_arrange     ORDER BY course_arrange.Course_ID DESC"
  },
  {
    "db_id": "course_teach",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Teacher_ID, T1.Grade FROM course_arrange AS T1     ORDER BY T1.Grade ASC",
    "readable_query": "SELECT course_arrange.Teacher_ID, course_arrange.Grade FROM course_arrange AS course_arrange     ORDER BY course_arrange.Grade ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Course_ID, T1.Course FROM course AS T1     ORDER BY T1.Course ASC",
    "readable_query": "SELECT course.Course_ID, course.Course FROM course AS course     ORDER BY course.Course ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Staring_Date, T1.Course_ID FROM course AS T1     ORDER BY T1.Course_ID ASC",
    "readable_query": "SELECT course.Staring_Date, course.Course_ID FROM course AS course     ORDER BY course.Course_ID ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Grade, T1.Course_ID FROM course_arrange AS T1     ORDER BY T1.Course_ID ASC",
    "readable_query": "SELECT course_arrange.Grade, course_arrange.Course_ID FROM course_arrange AS course_arrange     ORDER BY course_arrange.Course_ID ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Teacher_ID, T1.Name FROM teacher AS T1     ORDER BY T1.Name ASC",
    "readable_query": "SELECT teacher.Teacher_ID, teacher.Name FROM teacher AS teacher     ORDER BY teacher.Name ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Teacher_ID, T1.Grade FROM course_arrange AS T1     ORDER BY T1.Grade ASC",
    "readable_query": "SELECT course_arrange.Teacher_ID, course_arrange.Grade FROM course_arrange AS course_arrange     ORDER BY course_arrange.Grade ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Age, T1.Name FROM teacher AS T1     ORDER BY T1.Name ASC",
    "readable_query": "SELECT teacher.Age, teacher.Name FROM teacher AS teacher     ORDER BY teacher.Name ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T2.Grade = 7 and T3.Staring_Date = \"17 May\"",
    "readable_query": "SELECT teacher.Name FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course AS course ON course_arrange.Course_ID = course.Course_ID WHERE course_arrange.Grade = 7 and course.Staring_Date = \"17 May\""
  },
  {
    "db_id": "course_teach",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Teacher_ID FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T2.Grade = 3 and T3.Staring_Date = \"13 May\"",
    "readable_query": "SELECT teacher.Teacher_ID FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course AS course ON course_arrange.Course_ID = course.Course_ID WHERE course_arrange.Grade = 3 and course.Staring_Date = \"13 May\""
  },
  {
    "db_id": "course_teach",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T2.Grade = 7 and T3.Hometown = \"Horwich Urban District\"",
    "readable_query": "SELECT course.Course FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE course_arrange.Grade = 7 and teacher.Hometown = \"Horwich Urban District\""
  },
  {
    "db_id": "course_teach",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Staring_Date FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T2.Course_ID = 5 and T3.Name = \"Kearsley Brown\"",
    "readable_query": "SELECT course.Staring_Date FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE course_arrange.Course_ID = 5 and teacher.Name = \"Kearsley Brown\""
  },
  {
    "db_id": "course_teach",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Age FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T2.Course_ID = 2 and T3.Staring_Date = \"13 May\"",
    "readable_query": "SELECT teacher.Age FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course AS course ON course_arrange.Course_ID = course.Course_ID WHERE course_arrange.Course_ID = 2 and course.Staring_Date = \"13 May\""
  },
  {
    "db_id": "course_teach",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Grade FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID = T3.Course_ID WHERE T2.Teacher_ID = 7 and T3.Staring_Date = \"11 May\"",
    "readable_query": "SELECT course_arrange.Grade FROM course_arrange AS course_arrange JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID JOIN course AS course ON course_arrange.Course_ID = course.Course_ID WHERE teacher.Teacher_ID = 7 and course.Staring_Date = \"11 May\""
  },
  {
    "db_id": "course_teach",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Age FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T2.Teacher_ID = 3 and T3.Course = \"Math\"",
    "readable_query": "SELECT teacher.Age FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course AS course ON course_arrange.Course_ID = course.Course_ID WHERE course_arrange.Teacher_ID = 3 and course.Course = \"Math\""
  },
  {
    "db_id": "course_teach",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Grade FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course_ID = 2 and T3.Name = \"Lucy Wong\"",
    "readable_query": "SELECT course_arrange.Grade FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE course.Course_ID = 2 and teacher.Name = \"Lucy Wong\""
  },
  {
    "db_id": "course_teach",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course_ID = 4 or T2.Course_ID = 3",
    "readable_query": "SELECT course.Course FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID WHERE course_arrange.Course_ID = 4 or course_arrange.Course_ID = 3"
  },
  {
    "db_id": "course_teach",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course_ID = 3 or T2.Course_ID = 2",
    "readable_query": "SELECT course.Course FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID WHERE course_arrange.Course_ID = 3 or course_arrange.Course_ID = 2"
  },
  {
    "db_id": "course_teach",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Grade FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Age = \"32\" or T2.Age = \"26\"",
    "readable_query": "SELECT course_arrange.Grade FROM course_arrange AS course_arrange JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE teacher.Age = \"32\" or teacher.Age = \"26\""
  },
  {
    "db_id": "course_teach",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Staring_Date FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Grade = 7 or T2.Grade = 3",
    "readable_query": "SELECT course.Staring_Date FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID WHERE course_arrange.Grade = 7 or course_arrange.Grade = 3"
  },
  {
    "db_id": "course_teach",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Staring_Date = \"7 May\" or T2.Staring_Date = \"9 May\"",
    "readable_query": "SELECT course_arrange.Course_ID FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID WHERE course.Staring_Date = \"7 May\" or course.Staring_Date = \"9 May\""
  },
  {
    "db_id": "course_teach",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1 WHERE T1.Grade = 3 and T1.Teacher_ID = 2",
    "readable_query": "SELECT course_arrange.Course_ID FROM course_arrange AS course_arrange WHERE course_arrange.Grade = 3 and course_arrange.Teacher_ID = 2"
  },
  {
    "db_id": "course_teach",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Teacher_ID FROM teacher AS T1 WHERE T1.Age = \"41\" and T1.Hometown = \"Bolton County Borough\"",
    "readable_query": "SELECT teacher.Teacher_ID FROM teacher AS teacher WHERE teacher.Age = \"41\" and teacher.Hometown = \"Bolton County Borough\""
  },
  {
    "db_id": "course_teach",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 WHERE T1.Course_ID = 3 and T1.Grade = 1",
    "readable_query": "SELECT course_arrange.Teacher_ID FROM course_arrange AS course_arrange WHERE course_arrange.Course_ID = 3 and course_arrange.Grade = 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Course FROM course AS T1 WHERE T1.Staring_Date = \"6 May\" and T1.Course_ID = 5",
    "readable_query": "SELECT course.Course FROM course AS course WHERE course.Staring_Date = \"6 May\" and course.Course_ID = 5"
  },
  {
    "db_id": "course_teach",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Teacher_ID FROM teacher AS T1 WHERE T1.Name = \"Joseph Huts\" and T1.Age = \"32\"",
    "readable_query": "SELECT teacher.Teacher_ID FROM teacher AS teacher WHERE teacher.Name = \"Joseph Huts\" and teacher.Age = \"32\""
  },
  {
    "db_id": "course_teach",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Hometown FROM teacher AS T1 WHERE T1.Age = \"41\" and T1.Name = \"Gustaaf Deloor\"",
    "readable_query": "SELECT teacher.Hometown FROM teacher AS teacher WHERE teacher.Age = \"41\" and teacher.Name = \"Gustaaf Deloor\""
  },
  {
    "db_id": "course_teach",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1 WHERE T1.Grade = 4 and T1.Teacher_ID = 5",
    "readable_query": "SELECT course_arrange.Course_ID FROM course_arrange AS course_arrange WHERE course_arrange.Grade = 4 and course_arrange.Teacher_ID = 5"
  },
  {
    "db_id": "course_teach",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Teacher_ID) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T1.Age = \"29\" and T2.Grade = 4",
    "readable_query": "SELECT DISTINCT count(DISTINCT  teacher.Teacher_ID) FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID WHERE teacher.Age = \"29\" and course_arrange.Grade = 4"
  },
  {
    "db_id": "course_teach",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Grade) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T1.Course_ID = 10 and T2.Age = \"45\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  course_arrange.Grade) FROM course_arrange AS course_arrange JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE course_arrange.Course_ID = 10 and teacher.Age = \"45\""
  },
  {
    "db_id": "course_teach",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Age FROM teacher AS T1 WHERE T1.Name = \"Lucy Wong\" or T1.Teacher_ID = 6",
    "readable_query": "SELECT teacher.Age FROM teacher AS teacher WHERE teacher.Name = \"Lucy Wong\" or teacher.Teacher_ID = 6"
  },
  {
    "db_id": "course_teach",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Age FROM teacher AS T1 WHERE T1.Teacher_ID = 1 or T1.Name = \"Lucy Wong\"",
    "readable_query": "SELECT teacher.Age FROM teacher AS teacher WHERE teacher.Teacher_ID = 1 or teacher.Name = \"Lucy Wong\""
  },
  {
    "db_id": "course_teach",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1 WHERE T1.Teacher_ID = 5 or T1.Grade = 3",
    "readable_query": "SELECT course_arrange.Course_ID FROM course_arrange AS course_arrange WHERE course_arrange.Teacher_ID = 5 or course_arrange.Grade = 3"
  },
  {
    "db_id": "course_teach",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Grade FROM course_arrange AS T1 WHERE T1.Course_ID = 2 or T1.Teacher_ID = 2",
    "readable_query": "SELECT course_arrange.Grade FROM course_arrange AS course_arrange WHERE course_arrange.Course_ID = 2 or course_arrange.Teacher_ID = 2"
  },
  {
    "db_id": "course_teach",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course = \"French\" and T2.Course_ID = 5",
    "readable_query": "SELECT count(*) FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = \"French\" and course.Course_ID = 5"
  },
  {
    "db_id": "course_teach",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID = 2 and T2.Age = \"26\"",
    "readable_query": "SELECT count(*) FROM course_arrange AS course_arrange JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE teacher.Teacher_ID = 2 and teacher.Age = \"26\""
  },
  {
    "db_id": "course_teach",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Teacher_ID = 5 and T2.Grade = 7",
    "readable_query": "SELECT count(*) FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID WHERE course_arrange.Teacher_ID = 5 and course_arrange.Grade = 7"
  },
  {
    "db_id": "course_teach",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Hometown FROM teacher AS T1 WHERE T1.Teacher_ID != 6",
    "readable_query": "SELECT teacher.Hometown FROM teacher AS teacher WHERE teacher.Teacher_ID != 6"
  },
  {
    "db_id": "course_teach",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Age FROM teacher AS T1 WHERE T1.Name != \"Lucy Wong\"",
    "readable_query": "SELECT teacher.Age FROM teacher AS teacher WHERE teacher.Name != \"Lucy Wong\""
  },
  {
    "db_id": "course_teach",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 WHERE T1.Course_ID != 4",
    "readable_query": "SELECT course_arrange.Teacher_ID FROM course_arrange AS course_arrange WHERE course_arrange.Course_ID != 4"
  },
  {
    "db_id": "course_teach",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Staring_Date FROM course AS T1 WHERE T1.Course != \"Geography\"",
    "readable_query": "SELECT course.Staring_Date FROM course AS course WHERE course.Course != \"Geography\""
  },
  {
    "db_id": "course_teach",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Staring_Date FROM course AS T1 WHERE T1.Course != \"Music\"",
    "readable_query": "SELECT course.Staring_Date FROM course AS course WHERE course.Course != \"Music\""
  },
  {
    "db_id": "course_teach",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Grade FROM course_arrange AS T1 WHERE T1.Teacher_ID != 3",
    "readable_query": "SELECT course_arrange.Grade FROM course_arrange AS course_arrange WHERE course_arrange.Teacher_ID != 3"
  },
  {
    "db_id": "course_teach",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Teacher_ID FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Course_ID != 2",
    "readable_query": "SELECT teacher.Teacher_ID FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID WHERE course_arrange.Course_ID != 2"
  },
  {
    "db_id": "course_teach",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Staring_Date != \"10 May\"",
    "readable_query": "SELECT course_arrange.Teacher_ID FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID WHERE course.Staring_Date != \"10 May\""
  },
  {
    "db_id": "course_teach",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Age FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Course_ID != 2",
    "readable_query": "SELECT teacher.Age FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID WHERE course_arrange.Course_ID != 2"
  },
  {
    "db_id": "course_teach",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Course_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Teacher_ID != 6",
    "readable_query": "SELECT course.Course_ID FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID WHERE course_arrange.Teacher_ID != 6"
  },
  {
    "db_id": "course_teach",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course != \"Music\"",
    "readable_query": "SELECT course_arrange.Course_ID FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course != \"Music\""
  },
  {
    "db_id": "course_teach",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Grade FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Staring_Date != \"15 May\"",
    "readable_query": "SELECT course_arrange.Grade FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID WHERE course.Staring_Date != \"15 May\""
  },
  {
    "db_id": "course_teach",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Grade FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Age = \"32\"",
    "readable_query": "SELECT DISTINCT course_arrange.Grade FROM course_arrange AS course_arrange JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE teacher.Age = \"32\""
  },
  {
    "db_id": "course_teach",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Teacher_ID FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Course_ID = 4",
    "readable_query": "SELECT DISTINCT teacher.Teacher_ID FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID WHERE course_arrange.Course_ID = 4"
  },
  {
    "db_id": "course_teach",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Staring_Date FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Grade = 4",
    "readable_query": "SELECT DISTINCT course.Staring_Date FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID WHERE course_arrange.Grade = 4"
  },
  {
    "db_id": "course_teach",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Teacher_ID = 2",
    "readable_query": "SELECT DISTINCT course.Course FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID WHERE course_arrange.Teacher_ID = 2"
  },
  {
    "db_id": "course_teach",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Course_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Teacher_ID = 2",
    "readable_query": "SELECT DISTINCT course.Course_ID FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID WHERE course_arrange.Teacher_ID = 2"
  },
  {
    "db_id": "course_teach",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Course) FROM course AS T1 WHERE T1.Course_ID = 3",
    "readable_query": "SELECT DISTINCT count(DISTINCT  course.Course) FROM course AS course WHERE course.Course_ID = 3"
  },
  {
    "db_id": "course_teach",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM teacher AS T1 WHERE T1.Teacher_ID = 4",
    "readable_query": "SELECT DISTINCT count(DISTINCT  teacher.Name) FROM teacher AS teacher WHERE teacher.Teacher_ID = 4"
  },
  {
    "db_id": "course_teach",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 WHERE T1.Course_ID > 2",
    "readable_query": "SELECT course_arrange.Teacher_ID FROM course_arrange AS course_arrange WHERE course_arrange.Course_ID > 2"
  },
  {
    "db_id": "course_teach",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 WHERE T1.Grade > 7",
    "readable_query": "SELECT course_arrange.Teacher_ID FROM course_arrange AS course_arrange WHERE course_arrange.Grade > 7"
  },
  {
    "db_id": "course_teach",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Course FROM course AS T1 WHERE T1.Course_ID > 5",
    "readable_query": "SELECT course.Course FROM course AS course WHERE course.Course_ID > 5"
  },
  {
    "db_id": "course_teach",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Course FROM course AS T1 WHERE T1.Course_ID > 4",
    "readable_query": "SELECT course.Course FROM course AS course WHERE course.Course_ID > 4"
  },
  {
    "db_id": "course_teach",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Name FROM teacher AS T1 WHERE T1.Teacher_ID > 7",
    "readable_query": "SELECT teacher.Name FROM teacher AS teacher WHERE teacher.Teacher_ID > 7"
  },
  {
    "db_id": "course_teach",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Course_ID, T2.Staring_Date, T3.Hometown FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID",
    "readable_query": "SELECT course_arrange.Course_ID, course.Staring_Date, teacher.Hometown FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID"
  },
  {
    "db_id": "course_teach",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Teacher_ID, T2.Course_ID, T3.Age FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID",
    "readable_query": "SELECT course_arrange.Teacher_ID, course.Course_ID, teacher.Age FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID"
  },
  {
    "db_id": "course_teach",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Hometown, T2.Course_ID, T3.Staring_Date FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID",
    "readable_query": "SELECT teacher.Hometown, course_arrange.Course_ID, course.Staring_Date FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course AS course ON course_arrange.Course_ID = course.Course_ID"
  },
  {
    "db_id": "course_teach",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Staring_Date, T2.Course_ID, T3.Teacher_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID",
    "readable_query": "SELECT course.Staring_Date, course_arrange.Course_ID, teacher.Teacher_ID FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID"
  },
  {
    "db_id": "course_teach",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Age, T2.Teacher_ID, T3.Staring_Date FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID",
    "readable_query": "SELECT teacher.Age, course_arrange.Teacher_ID, course.Staring_Date FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course AS course ON course_arrange.Course_ID = course.Course_ID"
  },
  {
    "db_id": "course_teach",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Grade, T2.Name, T3.Course FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID = T3.Course_ID",
    "readable_query": "SELECT course_arrange.Grade, teacher.Name, course.Course FROM course_arrange AS course_arrange JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID JOIN course AS course ON course_arrange.Course_ID = course.Course_ID"
  },
  {
    "db_id": "course_teach",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Name, T2.Teacher_ID, T3.Staring_Date FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID",
    "readable_query": "SELECT teacher.Name, course_arrange.Teacher_ID, course.Staring_Date FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course AS course ON course_arrange.Course_ID = course.Course_ID"
  },
  {
    "db_id": "course_teach",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Teacher_ID, T2.Course_ID, T3.Hometown FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID",
    "readable_query": "SELECT course_arrange.Teacher_ID, course.Course_ID, teacher.Hometown FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID"
  },
  {
    "db_id": "course_teach",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID     ORDER BY T2.Course_ID ASC",
    "readable_query": "SELECT course.Course FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID     ORDER BY course_arrange.Course_ID ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Course_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID     ORDER BY T2.Teacher_ID ASC",
    "readable_query": "SELECT course.Course_ID FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID     ORDER BY course_arrange.Teacher_ID ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Age FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID     ORDER BY T2.Course_ID ASC",
    "readable_query": "SELECT teacher.Age FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID     ORDER BY course_arrange.Course_ID ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID     ORDER BY T2.Grade ASC",
    "readable_query": "SELECT teacher.Name FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID     ORDER BY course_arrange.Grade ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID     ORDER BY T2.Grade ASC",
    "readable_query": "SELECT course.Course FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID     ORDER BY course_arrange.Grade ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Age FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID     ORDER BY T2.Teacher_ID ASC",
    "readable_query": "SELECT teacher.Age FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID     ORDER BY course_arrange.Teacher_ID ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Staring_Date FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID     ORDER BY T2.Teacher_ID ASC",
    "readable_query": "SELECT course.Staring_Date FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID     ORDER BY course_arrange.Teacher_ID ASC"
  },
  {
    "db_id": "course_teach",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Grade FROM course_arrange AS T1 WHERE T1.Teacher_ID = 3     INTERSECT SELECT T2.Grade FROM course_arrange AS T2 WHERE T2.Teacher_ID = 3",
    "readable_query": "SELECT course_arrange.Grade FROM course_arrange AS course_arrange WHERE course_arrange.Teacher_ID = 3     INTERSECT SELECT course_arrange.Grade FROM course_arrange AS course_arrange WHERE course_arrange.Teacher_ID = 3"
  },
  {
    "db_id": "course_teach",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Teacher_ID FROM teacher AS T1 WHERE T1.Age = \"32\"     INTERSECT SELECT T2.Teacher_ID FROM teacher AS T2 WHERE T2.Age = \"26\"",
    "readable_query": "SELECT teacher.Teacher_ID FROM teacher AS teacher WHERE teacher.Age = \"32\"     INTERSECT SELECT teacher.Teacher_ID FROM teacher AS teacher WHERE teacher.Age = \"26\""
  },
  {
    "db_id": "course_teach",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Age FROM teacher AS T1 WHERE T1.Teacher_ID = 5     INTERSECT SELECT T2.Age FROM teacher AS T2 WHERE T2.Teacher_ID = 5",
    "readable_query": "SELECT teacher.Age FROM teacher AS teacher WHERE teacher.Teacher_ID = 5     INTERSECT SELECT teacher.Age FROM teacher AS teacher WHERE teacher.Teacher_ID = 5"
  },
  {
    "db_id": "course_teach",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Age FROM teacher AS T1 WHERE T1.Teacher_ID = 7     INTERSECT SELECT T2.Age FROM teacher AS T2 WHERE T2.Teacher_ID = 1",
    "readable_query": "SELECT teacher.Age FROM teacher AS teacher WHERE teacher.Teacher_ID = 7     INTERSECT SELECT teacher.Age FROM teacher AS teacher WHERE teacher.Teacher_ID = 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Staring_Date FROM course AS T1 WHERE T1.Course = \"Language Arts\"     INTERSECT SELECT T2.Staring_Date FROM course AS T2 WHERE T2.Course = \"French\"",
    "readable_query": "SELECT course.Staring_Date FROM course AS course WHERE course.Course = \"Language Arts\"     INTERSECT SELECT course.Staring_Date FROM course AS course WHERE course.Course = \"French\""
  },
  {
    "db_id": "course_teach",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 WHERE T1.Course_ID = 3     INTERSECT SELECT T2.Teacher_ID FROM course_arrange AS T2 WHERE T2.Course_ID = 5",
    "readable_query": "SELECT course_arrange.Teacher_ID FROM course_arrange AS course_arrange WHERE course_arrange.Course_ID = 3     INTERSECT SELECT course_arrange.Teacher_ID FROM course_arrange AS course_arrange WHERE course_arrange.Course_ID = 5"
  },
  {
    "db_id": "course_teach",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Staring_Date FROM course AS T1 WHERE T1.Course = \"Science\"     INTERSECT SELECT T2.Staring_Date FROM course AS T2 WHERE T2.Course = \"Bible\"",
    "readable_query": "SELECT course.Staring_Date FROM course AS course WHERE course.Course = \"Science\"     INTERSECT SELECT course.Staring_Date FROM course AS course WHERE course.Course = \"Bible\""
  },
  {
    "db_id": "course_teach",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Grade) FROM course_arrange AS T1 WHERE T1.Teacher_ID = 6",
    "readable_query": "SELECT avg( course_arrange.Grade) FROM course_arrange AS course_arrange WHERE course_arrange.Teacher_ID = 6"
  },
  {
    "db_id": "course_teach",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Course_ID) FROM course AS T1 WHERE T1.Course = \"Geography\"",
    "readable_query": "SELECT avg( course.Course_ID) FROM course AS course WHERE course.Course = \"Geography\""
  },
  {
    "db_id": "course_teach",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Teacher_ID) FROM teacher AS T1 WHERE T1.Name = \"Kearsley Brown\"",
    "readable_query": "SELECT avg( teacher.Teacher_ID) FROM teacher AS teacher WHERE teacher.Name = \"Kearsley Brown\""
  },
  {
    "db_id": "course_teach",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Course_ID) FROM course_arrange AS T1 WHERE T1.Grade = 7",
    "readable_query": "SELECT avg( course_arrange.Course_ID) FROM course_arrange AS course_arrange WHERE course_arrange.Grade = 7"
  },
  {
    "db_id": "course_teach",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Grade) FROM course_arrange AS T1 WHERE T1.Course_ID = 5",
    "readable_query": "SELECT avg( course_arrange.Grade) FROM course_arrange AS course_arrange WHERE course_arrange.Course_ID = 5"
  },
  {
    "db_id": "course_teach",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Teacher_ID) FROM course_arrange AS T1 WHERE T1.Course_ID = 3",
    "readable_query": "SELECT avg( course_arrange.Teacher_ID) FROM course_arrange AS course_arrange WHERE course_arrange.Course_ID = 3"
  },
  {
    "db_id": "course_teach",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Course_ID) FROM course AS T1 WHERE T1.Course = \"Geography\"",
    "readable_query": "SELECT avg( course.Course_ID) FROM course AS course WHERE course.Course = \"Geography\""
  },
  {
    "db_id": "course_teach",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Age FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID = (SELECT max( T23.Teacher_ID) FROM course_arrange AS T23)",
    "readable_query": "SELECT teacher.Age FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID WHERE course_arrange.Teacher_ID = (SELECT max( course_arrange.Teacher_ID) FROM course_arrange AS course_arrange)"
  },
  {
    "db_id": "course_teach",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course_ID = (SELECT max( T23.Course_ID) FROM course_arrange AS T23)",
    "readable_query": "SELECT course.Course FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID WHERE course_arrange.Course_ID = (SELECT max( course_arrange.Course_ID) FROM course_arrange AS course_arrange)"
  },
  {
    "db_id": "course_teach",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Grade = (SELECT max( T23.Grade) FROM course_arrange AS T23)",
    "readable_query": "SELECT course.Course FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID WHERE course_arrange.Grade = (SELECT max( course_arrange.Grade) FROM course_arrange AS course_arrange)"
  },
  {
    "db_id": "course_teach",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Course_ID, T2.Teacher_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T3.Hometown = \"Farnworth Municipal Borough\" and T2.Grade = 5",
    "readable_query": "SELECT course.Course_ID, course_arrange.Teacher_ID FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE teacher.Hometown = \"Farnworth Municipal Borough\" and course_arrange.Grade = 5"
  },
  {
    "db_id": "course_teach",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Course_ID, T2.Teacher_ID FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID = T3.Course_ID WHERE T3.Course = \"Sports\" and T2.Hometown = \"Kearsley Urban District\"",
    "readable_query": "SELECT course_arrange.Course_ID, teacher.Teacher_ID FROM course_arrange AS course_arrange JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID JOIN course AS course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = \"Sports\" and teacher.Hometown = \"Kearsley Urban District\""
  },
  {
    "db_id": "course_teach",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Staring_Date, T2.Teacher_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T3.Age = \"33\" and T2.Grade = 4",
    "readable_query": "SELECT course.Staring_Date, course_arrange.Teacher_ID FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE teacher.Age = \"33\" and course_arrange.Grade = 4"
  },
  {
    "db_id": "course_teach",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Grade, T2.Teacher_ID FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID = T3.Course_ID WHERE T3.Course = \"Science\" and T2.Age = \"41\"",
    "readable_query": "SELECT course_arrange.Grade, teacher.Teacher_ID FROM course_arrange AS course_arrange JOIN teacher AS teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID JOIN course AS course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = \"Science\" and teacher.Age = \"41\""
  },
  {
    "db_id": "course_teach",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Age FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID = 5 GROUP BY T1.Age  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT teacher.Age FROM teacher AS teacher JOIN course_arrange AS course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID WHERE course_arrange.Teacher_ID = 5 GROUP BY teacher.Age  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Staring_Date FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Grade = 7 GROUP BY T1.Staring_Date  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT course.Staring_Date FROM course AS course JOIN course_arrange AS course_arrange ON course.Course_ID = course_arrange.Course_ID WHERE course_arrange.Grade = 7 GROUP BY course.Staring_Date  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course = \"Science\" GROUP BY T1.Course_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT course_arrange.Course_ID FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = \"Science\" GROUP BY course_arrange.Course_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course_ID = 6 GROUP BY T1.Teacher_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT course_arrange.Teacher_ID FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course_ID = 6 GROUP BY course_arrange.Teacher_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course = \"Math\" GROUP BY T1.Teacher_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT course_arrange.Teacher_ID FROM course_arrange AS course_arrange JOIN course AS course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = \"Math\" GROUP BY course_arrange.Teacher_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "course_teach",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Staring_Date FROM course AS T1        EXCEPT SELECT T2.Staring_Date FROM course AS T2 WHERE T2.Course_ID = 5",
    "readable_query": "SELECT course.Staring_Date FROM course AS course        EXCEPT SELECT course.Staring_Date FROM course AS course WHERE course.Course_ID = 5"
  },
  {
    "db_id": "course_teach",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Age FROM teacher AS T1        EXCEPT SELECT T2.Age FROM teacher AS T2 WHERE T2.Teacher_ID = 6",
    "readable_query": "SELECT teacher.Age FROM teacher AS teacher        EXCEPT SELECT teacher.Age FROM teacher AS teacher WHERE teacher.Teacher_ID = 6"
  },
  {
    "db_id": "course_teach",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Course_ID FROM course AS T1        EXCEPT SELECT T2.Course_ID FROM course AS T2 WHERE T2.Staring_Date = \"7 May\"",
    "readable_query": "SELECT course.Course_ID FROM course AS course        EXCEPT SELECT course.Course_ID FROM course AS course WHERE course.Staring_Date = \"7 May\""
  },
  {
    "db_id": "course_teach",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Course_ID FROM course AS T1        EXCEPT SELECT T2.Course_ID FROM course AS T2 WHERE T2.Course = \"Health\"",
    "readable_query": "SELECT course.Course_ID FROM course AS course        EXCEPT SELECT course.Course_ID FROM course AS course WHERE course.Course = \"Health\""
  },
  {
    "db_id": "course_teach",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1        EXCEPT SELECT T2.Course_ID FROM course_arrange AS T2 WHERE T2.Teacher_ID = 6",
    "readable_query": "SELECT course_arrange.Course_ID FROM course_arrange AS course_arrange        EXCEPT SELECT course_arrange.Course_ID FROM course_arrange AS course_arrange WHERE course_arrange.Teacher_ID = 6"
  },
  {
    "db_id": "singer",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Singer_ID FROM singer AS T1 WHERE T1.Net_Worth_Millions = 14.3",
    "readable_query": "SELECT singer.Singer_ID FROM singer AS singer WHERE singer.Net_Worth_Millions = 14.3"
  },
  {
    "db_id": "singer",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1 WHERE T1.Birth_Year = 1961.0",
    "readable_query": "SELECT singer.Net_Worth_Millions FROM singer AS singer WHERE singer.Birth_Year = 1961.0"
  },
  {
    "db_id": "singer",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Birth_Year FROM singer AS T1 WHERE T1.Net_Worth_Millions = 12.7",
    "readable_query": "SELECT singer.Birth_Year FROM singer AS singer WHERE singer.Net_Worth_Millions = 12.7"
  },
  {
    "db_id": "singer",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Highest_Position FROM song AS T1 WHERE T1.Song_ID = 5",
    "readable_query": "SELECT song.Highest_Position FROM song AS song WHERE song.Song_ID = 5"
  },
  {
    "db_id": "singer",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1 WHERE T1.Citizenship = \"France\"",
    "readable_query": "SELECT singer.Net_Worth_Millions FROM singer AS singer WHERE singer.Citizenship = \"France\""
  },
  {
    "db_id": "singer",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Title FROM song AS T1 WHERE T1.Song_ID = 6",
    "readable_query": "SELECT song.Title FROM song AS song WHERE song.Song_ID = 6"
  },
  {
    "db_id": "singer",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Citizenship FROM singer AS T1 WHERE T1.Net_Worth_Millions = 30.0",
    "readable_query": "SELECT singer.Citizenship FROM singer AS singer WHERE singer.Net_Worth_Millions = 30.0"
  },
  {
    "db_id": "singer",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Title FROM song AS T1 WHERE T1.Highest_Position = 1.0",
    "readable_query": "SELECT song.Title FROM song AS song WHERE song.Highest_Position = 1.0"
  },
  {
    "db_id": "singer",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Sales FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Citizenship = \"Germany\"",
    "readable_query": "SELECT song.Sales FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Citizenship = \"Germany\""
  },
  {
    "db_id": "singer",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Title FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Name = \"Christy Walton\"",
    "readable_query": "SELECT song.Title FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Name = \"Christy Walton\""
  },
  {
    "db_id": "singer",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Birth_Year FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales = 275000.0",
    "readable_query": "SELECT singer.Birth_Year FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales = 275000.0"
  },
  {
    "db_id": "singer",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Name, count(*) FROM singer AS T1  GROUP BY T1.Name",
    "readable_query": "SELECT singer.Name, count(*) FROM singer AS singer  GROUP BY singer.Name"
  },
  {
    "db_id": "singer",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Singer_ID, count(*) FROM singer AS T1  GROUP BY T1.Singer_ID",
    "readable_query": "SELECT singer.Singer_ID, count(*) FROM singer AS singer  GROUP BY singer.Singer_ID"
  },
  {
    "db_id": "singer",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Sales, count(*) FROM song AS T1  GROUP BY T1.Sales",
    "readable_query": "SELECT song.Sales, count(*) FROM song AS song  GROUP BY song.Sales"
  },
  {
    "db_id": "singer",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Sales, count(*) FROM song AS T1  GROUP BY T1.Sales",
    "readable_query": "SELECT song.Sales, count(*) FROM song AS song  GROUP BY song.Sales"
  },
  {
    "db_id": "singer",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Birth_Year, count(*) FROM singer AS T1  GROUP BY T1.Birth_Year",
    "readable_query": "SELECT singer.Birth_Year, count(*) FROM singer AS singer  GROUP BY singer.Birth_Year"
  },
  {
    "db_id": "singer",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Citizenship, count(*) FROM singer AS T1  GROUP BY T1.Citizenship",
    "readable_query": "SELECT singer.Citizenship, count(*) FROM singer AS singer  GROUP BY singer.Citizenship"
  },
  {
    "db_id": "singer",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Citizenship, count(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Citizenship",
    "readable_query": "SELECT singer.Citizenship, count(*) FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID  GROUP BY singer.Citizenship"
  },
  {
    "db_id": "singer",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Singer_ID, count(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Singer_ID",
    "readable_query": "SELECT singer.Singer_ID, count(*) FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID  GROUP BY singer.Singer_ID"
  },
  {
    "db_id": "singer",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Sales, count(*) FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Sales",
    "readable_query": "SELECT song.Sales, count(*) FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID  GROUP BY song.Sales"
  },
  {
    "db_id": "singer",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Name, count(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name",
    "readable_query": "SELECT singer.Name, count(*) FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID  GROUP BY singer.Name"
  },
  {
    "db_id": "singer",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Sales, count(*) FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Sales",
    "readable_query": "SELECT song.Sales, count(*) FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID  GROUP BY song.Sales"
  },
  {
    "db_id": "singer",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Singer_ID, count(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Singer_ID",
    "readable_query": "SELECT singer.Singer_ID, count(*) FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID  GROUP BY singer.Singer_ID"
  },
  {
    "db_id": "singer",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Highest_Position, T1.Singer_ID FROM song AS T1",
    "readable_query": "SELECT song.Highest_Position, song.Singer_ID FROM song AS song"
  },
  {
    "db_id": "singer",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Birth_Year, T1.Citizenship FROM singer AS T1",
    "readable_query": "SELECT singer.Birth_Year, singer.Citizenship FROM singer AS singer"
  },
  {
    "db_id": "singer",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Singer_ID, T2.Sales FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "readable_query": "SELECT singer.Singer_ID, song.Sales FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID"
  },
  {
    "db_id": "singer",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Citizenship, T2.Song_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "readable_query": "SELECT singer.Citizenship, song.Song_ID FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID"
  },
  {
    "db_id": "singer",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Name, T2.Title FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "readable_query": "SELECT singer.Name, song.Title FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID"
  },
  {
    "db_id": "singer",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Singer_ID, T2.Song_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "readable_query": "SELECT singer.Singer_ID, song.Song_ID FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID"
  },
  {
    "db_id": "singer",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Citizenship, T2.Highest_Position FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "readable_query": "SELECT singer.Citizenship, song.Highest_Position FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID"
  },
  {
    "db_id": "singer",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Title, T2.Net_Worth_Millions FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "readable_query": "SELECT song.Title, singer.Net_Worth_Millions FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID"
  },
  {
    "db_id": "singer",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Birth_Year, T2.Song_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "readable_query": "SELECT singer.Birth_Year, song.Song_ID FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID"
  },
  {
    "db_id": "singer",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Birth_Year, T1.Citizenship FROM singer AS T1 WHERE T1.Net_Worth_Millions = 30.0",
    "readable_query": "SELECT singer.Birth_Year, singer.Citizenship FROM singer AS singer WHERE singer.Net_Worth_Millions = 30.0"
  },
  {
    "db_id": "singer",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Sales, T1.Title FROM song AS T1 WHERE T1.Song_ID = 5",
    "readable_query": "SELECT song.Sales, song.Title FROM song AS song WHERE song.Song_ID = 5"
  },
  {
    "db_id": "singer",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Net_Worth_Millions, T1.Birth_Year FROM singer AS T1 WHERE T1.Citizenship = \"United States\"",
    "readable_query": "SELECT singer.Net_Worth_Millions, singer.Birth_Year FROM singer AS singer WHERE singer.Citizenship = \"United States\""
  },
  {
    "db_id": "singer",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Highest_Position, T1.Song_ID FROM song AS T1 WHERE T1.Sales = 300000.0",
    "readable_query": "SELECT song.Highest_Position, song.Song_ID FROM song AS song WHERE song.Sales = 300000.0"
  },
  {
    "db_id": "singer",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Name FROM singer AS T1  GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT singer.Name FROM singer AS singer  GROUP BY singer.Name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1  GROUP BY T1.Net_Worth_Millions  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT singer.Net_Worth_Millions FROM singer AS singer  GROUP BY singer.Net_Worth_Millions  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Birth_Year FROM singer AS T1  GROUP BY T1.Birth_Year  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT singer.Birth_Year FROM singer AS singer  GROUP BY singer.Birth_Year  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Song_ID FROM song AS T1  GROUP BY T1.Song_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT song.Song_ID FROM song AS song  GROUP BY song.Song_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1  GROUP BY T1.Net_Worth_Millions  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT singer.Net_Worth_Millions FROM singer AS singer  GROUP BY singer.Net_Worth_Millions  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Highest_Position FROM song AS T1  GROUP BY T1.Highest_Position  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT song.Highest_Position FROM song AS song  GROUP BY song.Highest_Position  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Singer_ID FROM song AS T1  GROUP BY T1.Singer_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT song.Singer_ID FROM song AS song  GROUP BY song.Singer_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Citizenship FROM singer AS T1  GROUP BY T1.Citizenship  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT singer.Citizenship FROM singer AS singer  GROUP BY singer.Citizenship  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Title FROM song AS T1  GROUP BY T1.Title  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT song.Title FROM song AS song  GROUP BY song.Title  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM song AS T1 WHERE T1.Highest_Position = 1.0",
    "readable_query": "SELECT count(*) FROM song AS song WHERE song.Highest_Position = 1.0"
  },
  {
    "db_id": "singer",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM song AS T1 WHERE T1.Highest_Position = 3.0",
    "readable_query": "SELECT count(*) FROM song AS song WHERE song.Highest_Position = 3.0"
  },
  {
    "db_id": "singer",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM singer AS T1 WHERE T1.Birth_Year = 1944.0",
    "readable_query": "SELECT count(*) FROM singer AS singer WHERE singer.Birth_Year = 1944.0"
  },
  {
    "db_id": "singer",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM song AS T1 WHERE T1.Title = \"Left Outside Alone\"",
    "readable_query": "SELECT count(*) FROM song AS song WHERE song.Title = \"Left Outside Alone\""
  },
  {
    "db_id": "singer",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM song AS T1 WHERE T1.Song_ID = 8",
    "readable_query": "SELECT count(*) FROM song AS song WHERE song.Song_ID = 8"
  },
  {
    "db_id": "singer",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Singer_ID FROM singer AS T1    ORDER BY T1.Net_Worth_Millions DESC LIMIT 1",
    "readable_query": "SELECT singer.Singer_ID FROM singer AS singer    ORDER BY singer.Net_Worth_Millions DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Title FROM song AS T1    ORDER BY T1.Song_ID DESC LIMIT 1",
    "readable_query": "SELECT song.Title FROM song AS song    ORDER BY song.Song_ID DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Singer_ID FROM song AS T1    ORDER BY T1.Sales DESC LIMIT 1",
    "readable_query": "SELECT song.Singer_ID FROM song AS song    ORDER BY song.Sales DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Song_ID FROM song AS T1    ORDER BY T1.Highest_Position DESC LIMIT 1",
    "readable_query": "SELECT song.Song_ID FROM song AS song    ORDER BY song.Highest_Position DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Birth_Year FROM singer AS T1    ORDER BY T1.Net_Worth_Millions DESC LIMIT 1",
    "readable_query": "SELECT singer.Birth_Year FROM singer AS singer    ORDER BY singer.Net_Worth_Millions DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Highest_Position FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Singer_ID DESC LIMIT 1",
    "readable_query": "SELECT song.Highest_Position FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID    ORDER BY singer.Singer_ID DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Highest_Position DESC LIMIT 1",
    "readable_query": "SELECT singer.Singer_ID FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID    ORDER BY song.Highest_Position DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Song_ID DESC LIMIT 1",
    "readable_query": "SELECT singer.Net_Worth_Millions FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID    ORDER BY song.Song_ID DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Singer_ID DESC LIMIT 1",
    "readable_query": "SELECT singer.Net_Worth_Millions FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID    ORDER BY song.Singer_ID DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Highest_Position DESC LIMIT 1",
    "readable_query": "SELECT singer.Net_Worth_Millions FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID    ORDER BY song.Highest_Position DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Birth_Year FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Singer_ID ASC LIMIT 1",
    "readable_query": "SELECT singer.Birth_Year FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID    ORDER BY song.Singer_ID ASC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Song_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Singer_ID ASC LIMIT 1",
    "readable_query": "SELECT song.Song_ID FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID    ORDER BY singer.Singer_ID ASC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Song_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Birth_Year ASC LIMIT 1",
    "readable_query": "SELECT song.Song_ID FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID    ORDER BY singer.Birth_Year ASC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Birth_Year FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Sales ASC LIMIT 1",
    "readable_query": "SELECT singer.Birth_Year FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID    ORDER BY song.Sales ASC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Sales ASC LIMIT 1",
    "readable_query": "SELECT singer.Name FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID    ORDER BY song.Sales ASC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Highest_Position ASC LIMIT 1",
    "readable_query": "SELECT singer.Singer_ID FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID    ORDER BY song.Highest_Position ASC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Net_Worth_Millions, T1.Birth_Year FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Highest_Position DESC LIMIT 1",
    "readable_query": "SELECT singer.Net_Worth_Millions, singer.Birth_Year FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID    ORDER BY song.Highest_Position DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Song_ID, T1.Title FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Singer_ID DESC LIMIT 1",
    "readable_query": "SELECT song.Song_ID, song.Title FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID    ORDER BY singer.Singer_ID DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Sales, T1.Title FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Singer_ID DESC LIMIT 1",
    "readable_query": "SELECT song.Sales, song.Title FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID    ORDER BY singer.Singer_ID DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Sales, T1.Song_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Singer_ID DESC LIMIT 1",
    "readable_query": "SELECT song.Sales, song.Song_ID FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID    ORDER BY singer.Singer_ID DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Citizenship, T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Highest_Position DESC LIMIT 1",
    "readable_query": "SELECT singer.Citizenship, singer.Name FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID    ORDER BY song.Highest_Position DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Singer_ID, T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Song_ID DESC LIMIT 1",
    "readable_query": "SELECT singer.Singer_ID, singer.Name FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID    ORDER BY song.Song_ID DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Net_Worth_Millions) FROM singer AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  singer.Net_Worth_Millions) FROM singer AS singer"
  },
  {
    "db_id": "singer",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Title) FROM song AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  song.Title) FROM song AS song"
  },
  {
    "db_id": "singer",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Singer_ID) FROM song AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  song.Singer_ID) FROM song AS song"
  },
  {
    "db_id": "singer",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Singer_ID) FROM singer AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  singer.Singer_ID) FROM singer AS singer"
  },
  {
    "db_id": "singer",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Net_Worth_Millions) FROM singer AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  singer.Net_Worth_Millions) FROM singer AS singer"
  },
  {
    "db_id": "singer",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM singer AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  singer.Name) FROM singer AS singer"
  },
  {
    "db_id": "singer",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Birth_Year) FROM singer AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  singer.Birth_Year) FROM singer AS singer"
  },
  {
    "db_id": "singer",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Singer_ID) FROM singer AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  singer.Singer_ID) FROM singer AS singer"
  },
  {
    "db_id": "singer",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Singer_ID) FROM song AS T1",
    "readable_query": "SELECT avg( song.Singer_ID) FROM song AS song"
  },
  {
    "db_id": "singer",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Birth_Year) FROM singer AS T1",
    "readable_query": "SELECT avg( singer.Birth_Year) FROM singer AS singer"
  },
  {
    "db_id": "singer",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Net_Worth_Millions) FROM singer AS T1",
    "readable_query": "SELECT avg( singer.Net_Worth_Millions) FROM singer AS singer"
  },
  {
    "db_id": "singer",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Sales FROM song AS T1",
    "readable_query": "SELECT song.Sales FROM song AS song"
  },
  {
    "db_id": "singer",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Highest_Position FROM song AS T1",
    "readable_query": "SELECT song.Highest_Position FROM song AS song"
  },
  {
    "db_id": "singer",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Singer_ID FROM song AS T1",
    "readable_query": "SELECT song.Singer_ID FROM song AS song"
  },
  {
    "db_id": "singer",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Singer_ID FROM singer AS T1",
    "readable_query": "SELECT singer.Singer_ID FROM singer AS singer"
  },
  {
    "db_id": "singer",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Highest_Position FROM song AS T1",
    "readable_query": "SELECT song.Highest_Position FROM song AS song"
  },
  {
    "db_id": "singer",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Citizenship FROM singer AS T1",
    "readable_query": "SELECT singer.Citizenship FROM singer AS singer"
  },
  {
    "db_id": "singer",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Citizenship FROM singer AS T1",
    "readable_query": "SELECT DISTINCT singer.Citizenship FROM singer AS singer"
  },
  {
    "db_id": "singer",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Sales FROM song AS T1",
    "readable_query": "SELECT DISTINCT song.Sales FROM song AS song"
  },
  {
    "db_id": "singer",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Highest_Position FROM song AS T1",
    "readable_query": "SELECT DISTINCT song.Highest_Position FROM song AS song"
  },
  {
    "db_id": "singer",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Song_ID FROM song AS T1",
    "readable_query": "SELECT DISTINCT song.Song_ID FROM song AS song"
  },
  {
    "db_id": "singer",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Singer_ID FROM singer AS T1     ORDER BY T1.Birth_Year ASC",
    "readable_query": "SELECT singer.Singer_ID FROM singer AS singer     ORDER BY singer.Birth_Year ASC"
  },
  {
    "db_id": "singer",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Song_ID FROM song AS T1     ORDER BY T1.Sales ASC",
    "readable_query": "SELECT song.Song_ID FROM song AS song     ORDER BY song.Sales ASC"
  },
  {
    "db_id": "singer",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Singer_ID FROM singer AS T1     ORDER BY T1.Net_Worth_Millions ASC",
    "readable_query": "SELECT singer.Singer_ID FROM singer AS singer     ORDER BY singer.Net_Worth_Millions ASC"
  },
  {
    "db_id": "singer",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Highest_Position FROM song AS T1     ORDER BY T1.Singer_ID ASC",
    "readable_query": "SELECT song.Highest_Position FROM song AS song     ORDER BY song.Singer_ID ASC"
  },
  {
    "db_id": "singer",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Citizenship FROM singer AS T1     ORDER BY T1.Net_Worth_Millions ASC",
    "readable_query": "SELECT singer.Citizenship FROM singer AS singer     ORDER BY singer.Net_Worth_Millions ASC"
  },
  {
    "db_id": "singer",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Singer_ID FROM song AS T1     ORDER BY T1.Highest_Position ASC",
    "readable_query": "SELECT song.Singer_ID FROM song AS song     ORDER BY song.Highest_Position ASC"
  },
  {
    "db_id": "singer",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1     ORDER BY T1.Birth_Year ASC",
    "readable_query": "SELECT singer.Net_Worth_Millions FROM singer AS singer     ORDER BY singer.Birth_Year ASC"
  },
  {
    "db_id": "singer",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Singer_ID FROM singer AS T1     ORDER BY T1.Net_Worth_Millions DESC",
    "readable_query": "SELECT singer.Singer_ID FROM singer AS singer     ORDER BY singer.Net_Worth_Millions DESC"
  },
  {
    "db_id": "singer",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Highest_Position FROM song AS T1     ORDER BY T1.Sales DESC",
    "readable_query": "SELECT song.Highest_Position FROM song AS song     ORDER BY song.Sales DESC"
  },
  {
    "db_id": "singer",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Citizenship FROM singer AS T1     ORDER BY T1.Net_Worth_Millions DESC",
    "readable_query": "SELECT singer.Citizenship FROM singer AS singer     ORDER BY singer.Net_Worth_Millions DESC"
  },
  {
    "db_id": "singer",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Birth_Year FROM singer AS T1     ORDER BY T1.Net_Worth_Millions DESC",
    "readable_query": "SELECT singer.Birth_Year FROM singer AS singer     ORDER BY singer.Net_Worth_Millions DESC"
  },
  {
    "db_id": "singer",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Singer_ID, T1.Title FROM song AS T1     ORDER BY T1.Title ASC",
    "readable_query": "SELECT song.Singer_ID, song.Title FROM song AS song     ORDER BY song.Title ASC"
  },
  {
    "db_id": "singer",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Net_Worth_Millions, T1.Citizenship FROM singer AS T1     ORDER BY T1.Citizenship ASC",
    "readable_query": "SELECT singer.Net_Worth_Millions, singer.Citizenship FROM singer AS singer     ORDER BY singer.Citizenship ASC"
  },
  {
    "db_id": "singer",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Net_Worth_Millions, T1.Singer_ID FROM singer AS T1     ORDER BY T1.Singer_ID ASC",
    "readable_query": "SELECT singer.Net_Worth_Millions, singer.Singer_ID FROM singer AS singer     ORDER BY singer.Singer_ID ASC"
  },
  {
    "db_id": "singer",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Net_Worth_Millions, T1.Name FROM singer AS T1     ORDER BY T1.Name ASC",
    "readable_query": "SELECT singer.Net_Worth_Millions, singer.Name FROM singer AS singer     ORDER BY singer.Name ASC"
  },
  {
    "db_id": "singer",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Citizenship FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID = 3 or T2.Song_ID = 4",
    "readable_query": "SELECT singer.Citizenship FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Song_ID = 3 or song.Song_ID = 4"
  },
  {
    "db_id": "singer",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID = 7 or T2.Song_ID = 6",
    "readable_query": "SELECT singer.Name FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Song_ID = 7 or song.Song_ID = 6"
  },
  {
    "db_id": "singer",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Sales FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Net_Worth_Millions = 28.8 or T2.Net_Worth_Millions = 12.7",
    "readable_query": "SELECT song.Sales FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Net_Worth_Millions = 28.8 or singer.Net_Worth_Millions = 12.7"
  },
  {
    "db_id": "singer",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Singer_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Name = \"Alice Walton\" or T2.Name = \"Jacqueline Mars\"",
    "readable_query": "SELECT song.Singer_ID FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Name = \"Alice Walton\" or singer.Name = \"Jacqueline Mars\""
  },
  {
    "db_id": "singer",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Sales FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Citizenship = \"Germany\" or T2.Citizenship = \"France\"",
    "readable_query": "SELECT song.Sales FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Citizenship = \"Germany\" or singer.Citizenship = \"France\""
  },
  {
    "db_id": "singer",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Citizenship FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID = 5 or T2.Song_ID = 6",
    "readable_query": "SELECT singer.Citizenship FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Song_ID = 5 or song.Song_ID = 6"
  },
  {
    "db_id": "singer",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Title FROM song AS T1 WHERE T1.Sales = 292000.0 and T1.Song_ID = 2",
    "readable_query": "SELECT song.Title FROM song AS song WHERE song.Sales = 292000.0 and song.Song_ID = 2"
  },
  {
    "db_id": "singer",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Highest_Position FROM song AS T1 WHERE T1.Sales = 292000.0 and T1.Song_ID = 8",
    "readable_query": "SELECT song.Highest_Position FROM song AS song WHERE song.Sales = 292000.0 and song.Song_ID = 8"
  },
  {
    "db_id": "singer",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Title FROM song AS T1 WHERE T1.Highest_Position = 3.0 and T1.Sales = 552407.0",
    "readable_query": "SELECT song.Title FROM song AS song WHERE song.Highest_Position = 3.0 and song.Sales = 552407.0"
  },
  {
    "db_id": "singer",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Singer_ID) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Name = \"Susanne Klatten\" and T2.Song_ID = 3",
    "readable_query": "SELECT DISTINCT count(DISTINCT  singer.Singer_ID) FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE singer.Name = \"Susanne Klatten\" and song.Song_ID = 3"
  },
  {
    "db_id": "singer",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Song_ID) FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales = 351421.0 and T2.Citizenship = \"Chile\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  song.Song_ID) FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE song.Sales = 351421.0 and singer.Citizenship = \"Chile\""
  },
  {
    "db_id": "singer",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Singer_ID) FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Highest_Position = 1.0 and T2.Net_Worth_Millions = 12.7",
    "readable_query": "SELECT DISTINCT count(DISTINCT  song.Singer_ID) FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE song.Highest_Position = 1.0 and singer.Net_Worth_Millions = 12.7"
  },
  {
    "db_id": "singer",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Title) FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Highest_Position = 3.0 and T2.Net_Worth_Millions = 26.3",
    "readable_query": "SELECT DISTINCT count(DISTINCT  song.Title) FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE song.Highest_Position = 3.0 and singer.Net_Worth_Millions = 26.3"
  },
  {
    "db_id": "singer",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Title) FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales = 300000.0 and T2.Citizenship = \"France\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  song.Title) FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE song.Sales = 300000.0 and singer.Citizenship = \"France\""
  },
  {
    "db_id": "singer",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Song_ID) FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Title = \"Left Outside Alone\" and T2.Citizenship = \"Chile\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  song.Song_ID) FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE song.Title = \"Left Outside Alone\" and singer.Citizenship = \"Chile\""
  },
  {
    "db_id": "singer",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Highest_Position FROM song AS T1 WHERE T1.Singer_ID = 6 or T1.Song_ID = 2",
    "readable_query": "SELECT song.Highest_Position FROM song AS song WHERE song.Singer_ID = 6 or song.Song_ID = 2"
  },
  {
    "db_id": "singer",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Name FROM singer AS T1 WHERE T1.Singer_ID = 6 or T1.Net_Worth_Millions = 12.7",
    "readable_query": "SELECT singer.Name FROM singer AS singer WHERE singer.Singer_ID = 6 or singer.Net_Worth_Millions = 12.7"
  },
  {
    "db_id": "singer",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Highest_Position FROM song AS T1 WHERE T1.Sales = 300000.0 or T1.Title = \"All This Time\"",
    "readable_query": "SELECT song.Highest_Position FROM song AS song WHERE song.Sales = 300000.0 or song.Title = \"All This Time\""
  },
  {
    "db_id": "singer",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1 WHERE T1.Name = \"Abigail Johnson\" or T1.Birth_Year = 1942.0",
    "readable_query": "SELECT singer.Net_Worth_Millions FROM singer AS singer WHERE singer.Name = \"Abigail Johnson\" or singer.Birth_Year = 1942.0"
  },
  {
    "db_id": "singer",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Singer_ID FROM singer AS T1 WHERE T1.Citizenship = \"Chile\" or T1.Net_Worth_Millions = 28.8",
    "readable_query": "SELECT singer.Singer_ID FROM singer AS singer WHERE singer.Citizenship = \"Chile\" or singer.Net_Worth_Millions = 28.8"
  },
  {
    "db_id": "singer",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Highest_Position FROM song AS T1 WHERE T1.Song_ID = 6 or T1.Title = \"Left Outside Alone\"",
    "readable_query": "SELECT song.Highest_Position FROM song AS song WHERE song.Song_ID = 6 or song.Title = \"Left Outside Alone\""
  },
  {
    "db_id": "singer",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Birth_Year FROM singer AS T1 WHERE T1.Net_Worth_Millions = 17.8 or T1.Singer_ID = 1",
    "readable_query": "SELECT singer.Birth_Year FROM singer AS singer WHERE singer.Net_Worth_Millions = 17.8 or singer.Singer_ID = 1"
  },
  {
    "db_id": "singer",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales = 552407.0 and T2.Highest_Position = 3.0",
    "readable_query": "SELECT count(*) FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales = 552407.0 and song.Highest_Position = 3.0"
  },
  {
    "db_id": "singer",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales = 335000.0 and T2.Singer_ID = 2",
    "readable_query": "SELECT count(*) FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales = 335000.0 and song.Singer_ID = 2"
  },
  {
    "db_id": "singer",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Name = \"Christy Walton\" and T2.Citizenship = \"France\"",
    "readable_query": "SELECT count(*) FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Name = \"Christy Walton\" and singer.Citizenship = \"France\""
  },
  {
    "db_id": "singer",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Citizenship = \"France\" and T2.Singer_ID = 8",
    "readable_query": "SELECT count(*) FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Citizenship = \"France\" and singer.Singer_ID = 8"
  },
  {
    "db_id": "singer",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Title FROM song AS T1 WHERE T1.Sales != 351421.0",
    "readable_query": "SELECT song.Title FROM song AS song WHERE song.Sales != 351421.0"
  },
  {
    "db_id": "singer",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Song_ID FROM song AS T1 WHERE T1.Highest_Position != 1.0",
    "readable_query": "SELECT song.Song_ID FROM song AS song WHERE song.Highest_Position != 1.0"
  },
  {
    "db_id": "singer",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Birth_Year FROM singer AS T1 WHERE T1.Net_Worth_Millions != 28.8",
    "readable_query": "SELECT singer.Birth_Year FROM singer AS singer WHERE singer.Net_Worth_Millions != 28.8"
  },
  {
    "db_id": "singer",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Sales FROM song AS T1 WHERE T1.Highest_Position != 1.0",
    "readable_query": "SELECT song.Sales FROM song AS song WHERE song.Highest_Position != 1.0"
  },
  {
    "db_id": "singer",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Birth_Year FROM singer AS T1 WHERE T1.Citizenship != \"Germany\"",
    "readable_query": "SELECT singer.Birth_Year FROM singer AS singer WHERE singer.Citizenship != \"Germany\""
  },
  {
    "db_id": "singer",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1 WHERE T1.Singer_ID != 5",
    "readable_query": "SELECT singer.Net_Worth_Millions FROM singer AS singer WHERE singer.Singer_ID != 5"
  },
  {
    "db_id": "singer",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Citizenship FROM singer AS T1 WHERE T1.Birth_Year != 1953.0",
    "readable_query": "SELECT singer.Citizenship FROM singer AS singer WHERE singer.Birth_Year != 1953.0"
  },
  {
    "db_id": "singer",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Birth_Year FROM singer AS T1 WHERE T1.Name != \"Gina Rinehart\"",
    "readable_query": "SELECT singer.Birth_Year FROM singer AS singer WHERE singer.Name != \"Gina Rinehart\""
  },
  {
    "db_id": "singer",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Sales FROM song AS T1 WHERE T1.Song_ID != 7",
    "readable_query": "SELECT song.Sales FROM song AS song WHERE song.Song_ID != 7"
  },
  {
    "db_id": "singer",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Highest_Position FROM song AS T1 WHERE T1.Title != \"All This Time\"",
    "readable_query": "SELECT song.Highest_Position FROM song AS song WHERE song.Title != \"All This Time\""
  },
  {
    "db_id": "singer",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Highest_Position FROM song AS T1 WHERE T1.Song_ID != 7",
    "readable_query": "SELECT song.Highest_Position FROM song AS song WHERE song.Song_ID != 7"
  },
  {
    "db_id": "singer",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID != 8",
    "readable_query": "SELECT singer.Net_Worth_Millions FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Song_ID != 8"
  },
  {
    "db_id": "singer",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID != 1",
    "readable_query": "SELECT singer.Net_Worth_Millions FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Singer_ID != 1"
  },
  {
    "db_id": "singer",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID != 1",
    "readable_query": "SELECT singer.Singer_ID FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Song_ID != 1"
  },
  {
    "db_id": "singer",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Song_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Birth_Year != 1944.0",
    "readable_query": "SELECT song.Song_ID FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Birth_Year != 1944.0"
  },
  {
    "db_id": "singer",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Sales FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Net_Worth_Millions != 14.3",
    "readable_query": "SELECT song.Sales FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Net_Worth_Millions != 14.3"
  },
  {
    "db_id": "singer",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales = 1094000.0",
    "readable_query": "SELECT DISTINCT singer.Singer_ID FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales = 1094000.0"
  },
  {
    "db_id": "singer",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Net_Worth_Millions FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Title = \"Left Outside Alone\"",
    "readable_query": "SELECT DISTINCT singer.Net_Worth_Millions FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Title = \"Left Outside Alone\""
  },
  {
    "db_id": "singer",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales = 292000.0",
    "readable_query": "SELECT DISTINCT singer.Name FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales = 292000.0"
  },
  {
    "db_id": "singer",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Birth_Year FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID = 6",
    "readable_query": "SELECT DISTINCT singer.Birth_Year FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Singer_ID = 6"
  },
  {
    "db_id": "singer",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Highest_Position = 3.0",
    "readable_query": "SELECT DISTINCT singer.Singer_ID FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Highest_Position = 3.0"
  },
  {
    "db_id": "singer",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Highest_Position) FROM song AS T1 WHERE T1.Song_ID = 8",
    "readable_query": "SELECT DISTINCT count(DISTINCT  song.Highest_Position) FROM song AS song WHERE song.Song_ID = 8"
  },
  {
    "db_id": "singer",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Birth_Year) FROM singer AS T1 WHERE T1.Singer_ID = 3",
    "readable_query": "SELECT DISTINCT count(DISTINCT  singer.Birth_Year) FROM singer AS singer WHERE singer.Singer_ID = 3"
  },
  {
    "db_id": "singer",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM singer AS T1 WHERE T1.Citizenship = \"Germany\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  singer.Name) FROM singer AS singer WHERE singer.Citizenship = \"Germany\""
  },
  {
    "db_id": "singer",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Birth_Year) FROM singer AS T1 WHERE T1.Net_Worth_Millions = 28.8",
    "readable_query": "SELECT DISTINCT count(DISTINCT  singer.Birth_Year) FROM singer AS singer WHERE singer.Net_Worth_Millions = 28.8"
  },
  {
    "db_id": "singer",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Title) FROM song AS T1 WHERE T1.Singer_ID = 2",
    "readable_query": "SELECT DISTINCT count(DISTINCT  song.Title) FROM song AS song WHERE song.Singer_ID = 2"
  },
  {
    "db_id": "singer",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Highest_Position) FROM song AS T1 WHERE T1.Sales = 351421.0",
    "readable_query": "SELECT DISTINCT count(DISTINCT  song.Highest_Position) FROM song AS song WHERE song.Sales = 351421.0"
  },
  {
    "db_id": "singer",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Birth_Year FROM singer AS T1 WHERE T1.Singer_ID > 5",
    "readable_query": "SELECT singer.Birth_Year FROM singer AS singer WHERE singer.Singer_ID > 5"
  },
  {
    "db_id": "singer",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Sales FROM song AS T1 WHERE T1.Highest_Position > 3.0",
    "readable_query": "SELECT song.Sales FROM song AS song WHERE song.Highest_Position > 3.0"
  },
  {
    "db_id": "singer",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Birth_Year FROM singer AS T1 WHERE T1.Singer_ID > 7",
    "readable_query": "SELECT singer.Birth_Year FROM singer AS singer WHERE singer.Singer_ID > 7"
  },
  {
    "db_id": "singer",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Singer_ID FROM song AS T1 WHERE T1.Highest_Position > 3.0",
    "readable_query": "SELECT song.Singer_ID FROM song AS song WHERE song.Highest_Position > 3.0"
  },
  {
    "db_id": "singer",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Name FROM singer AS T1 WHERE T1.Singer_ID > 4",
    "readable_query": "SELECT singer.Name FROM singer AS singer WHERE singer.Singer_ID > 4"
  },
  {
    "db_id": "singer",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Sales FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.Net_Worth_Millions ASC",
    "readable_query": "SELECT song.Sales FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID     ORDER BY singer.Net_Worth_Millions ASC"
  },
  {
    "db_id": "singer",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Birth_Year FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.Song_ID ASC",
    "readable_query": "SELECT singer.Birth_Year FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID     ORDER BY song.Song_ID ASC"
  },
  {
    "db_id": "singer",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Title FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.Net_Worth_Millions ASC",
    "readable_query": "SELECT song.Title FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID     ORDER BY singer.Net_Worth_Millions ASC"
  },
  {
    "db_id": "singer",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.Sales ASC",
    "readable_query": "SELECT singer.Net_Worth_Millions FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID     ORDER BY song.Sales ASC"
  },
  {
    "db_id": "singer",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Name FROM singer AS T1 WHERE T1.Birth_Year = 1948.0     INTERSECT SELECT T2.Name FROM singer AS T2 WHERE T2.Birth_Year = 1962.0",
    "readable_query": "SELECT singer.Name FROM singer AS singer WHERE singer.Birth_Year = 1948.0     INTERSECT SELECT singer.Name FROM singer AS singer WHERE singer.Birth_Year = 1962.0"
  },
  {
    "db_id": "singer",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Singer_ID FROM singer AS T1 WHERE T1.Net_Worth_Millions = 17.4     INTERSECT SELECT T2.Singer_ID FROM singer AS T2 WHERE T2.Net_Worth_Millions = 28.8",
    "readable_query": "SELECT singer.Singer_ID FROM singer AS singer WHERE singer.Net_Worth_Millions = 17.4     INTERSECT SELECT singer.Singer_ID FROM singer AS singer WHERE singer.Net_Worth_Millions = 28.8"
  },
  {
    "db_id": "singer",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Song_ID FROM song AS T1 WHERE T1.Singer_ID = 7     INTERSECT SELECT T2.Song_ID FROM song AS T2 WHERE T2.Singer_ID = 5",
    "readable_query": "SELECT song.Song_ID FROM song AS song WHERE song.Singer_ID = 7     INTERSECT SELECT song.Song_ID FROM song AS song WHERE song.Singer_ID = 5"
  },
  {
    "db_id": "singer",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Song_ID) FROM song AS T1 WHERE T1.Singer_ID = 6",
    "readable_query": "SELECT avg( song.Song_ID) FROM song AS song WHERE song.Singer_ID = 6"
  },
  {
    "db_id": "singer",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Birth_Year) FROM singer AS T1 WHERE T1.Singer_ID = 8",
    "readable_query": "SELECT avg( singer.Birth_Year) FROM singer AS singer WHERE singer.Singer_ID = 8"
  },
  {
    "db_id": "singer",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Singer_ID) FROM singer AS T1 WHERE T1.Citizenship = \"Australia\"",
    "readable_query": "SELECT avg( singer.Singer_ID) FROM singer AS singer WHERE singer.Citizenship = \"Australia\""
  },
  {
    "db_id": "singer",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Highest_Position) FROM song AS T1 WHERE T1.Sales = 351421.0",
    "readable_query": "SELECT avg( song.Highest_Position) FROM song AS song WHERE song.Sales = 351421.0"
  },
  {
    "db_id": "singer",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Highest_Position) FROM song AS T1 WHERE T1.Title = \"Left Outside Alone\"",
    "readable_query": "SELECT avg( song.Highest_Position) FROM song AS song WHERE song.Title = \"Left Outside Alone\""
  },
  {
    "db_id": "singer",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Birth_Year) FROM singer AS T1 WHERE T1.Citizenship = \"France\"",
    "readable_query": "SELECT avg( singer.Birth_Year) FROM singer AS singer WHERE singer.Citizenship = \"France\""
  },
  {
    "db_id": "singer",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Singer_ID) FROM singer AS T1 WHERE T1.Name = \"Gina Rinehart\"",
    "readable_query": "SELECT avg( singer.Singer_ID) FROM singer AS singer WHERE singer.Name = \"Gina Rinehart\""
  },
  {
    "db_id": "singer",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Sales FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Net_Worth_Millions = (SELECT max( T23.Net_Worth_Millions) FROM singer AS T23)",
    "readable_query": "SELECT song.Sales FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Net_Worth_Millions = (SELECT max( singer.Net_Worth_Millions) FROM singer AS singer)"
  },
  {
    "db_id": "singer",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Song_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID = (SELECT max( T23.Singer_ID) FROM singer AS T23)",
    "readable_query": "SELECT song.Song_ID FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Singer_ID = (SELECT max( singer.Singer_ID) FROM singer AS singer)"
  },
  {
    "db_id": "singer",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID = (SELECT max( T23.Singer_ID) FROM song AS T23)",
    "readable_query": "SELECT singer.Name FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Singer_ID = (SELECT max( song.Singer_ID) FROM song AS song)"
  },
  {
    "db_id": "singer",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Citizenship FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales = (SELECT max( T23.Sales) FROM song AS T23)",
    "readable_query": "SELECT singer.Citizenship FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales = (SELECT max( song.Sales) FROM song AS song)"
  },
  {
    "db_id": "singer",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Highest_Position = (SELECT max( T23.Highest_Position) FROM song AS T23)",
    "readable_query": "SELECT singer.Singer_ID FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Highest_Position = (SELECT max( song.Highest_Position) FROM song AS song)"
  },
  {
    "db_id": "singer",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales = (SELECT max( T23.Sales) FROM song AS T23)",
    "readable_query": "SELECT singer.Singer_ID FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales = (SELECT max( song.Sales) FROM song AS song)"
  },
  {
    "db_id": "singer",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Highest_Position FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Birth_Year = (SELECT max( T23.Birth_Year) FROM singer AS T23)",
    "readable_query": "SELECT song.Highest_Position FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Birth_Year = (SELECT max( singer.Birth_Year) FROM singer AS singer)"
  },
  {
    "db_id": "singer",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Song_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Net_Worth_Millions = (SELECT max( T23.Net_Worth_Millions) FROM singer AS T23)",
    "readable_query": "SELECT song.Song_ID FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Net_Worth_Millions = (SELECT max( singer.Net_Worth_Millions) FROM singer AS singer)"
  },
  {
    "db_id": "singer",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Citizenship FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales = (SELECT max( T23.Sales) FROM song AS T23)",
    "readable_query": "SELECT singer.Citizenship FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales = (SELECT max( song.Sales) FROM song AS song)"
  },
  {
    "db_id": "singer",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Citizenship FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID = (SELECT max( T23.Song_ID) FROM song AS T23)",
    "readable_query": "SELECT singer.Citizenship FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Song_ID = (SELECT max( song.Song_ID) FROM song AS song)"
  },
  {
    "db_id": "singer",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Song_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Name = \"Gina Rinehart\" GROUP BY T1.Song_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT song.Song_ID FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Name = \"Gina Rinehart\" GROUP BY song.Song_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID = 6 GROUP BY T1.Net_Worth_Millions  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT singer.Net_Worth_Millions FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Song_ID = 6 GROUP BY singer.Net_Worth_Millions  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Title FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID = 3 GROUP BY T1.Title  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT song.Title FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Singer_ID = 3 GROUP BY song.Title  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Highest_Position FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Birth_Year = 1962.0 GROUP BY T1.Highest_Position  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT song.Highest_Position FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Birth_Year = 1962.0 GROUP BY song.Highest_Position  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Highest_Position FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Name = \"Christy Walton\" GROUP BY T1.Highest_Position  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT song.Highest_Position FROM song AS song JOIN singer AS singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Name = \"Christy Walton\" GROUP BY song.Highest_Position  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Birth_Year FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID = 3 GROUP BY T1.Birth_Year  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT singer.Birth_Year FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Song_ID = 3 GROUP BY singer.Birth_Year  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales = 292000.0 GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT singer.Name FROM singer AS singer JOIN song AS song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales = 292000.0 GROUP BY singer.Name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "singer",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Citizenship FROM singer AS T1        EXCEPT SELECT T2.Citizenship FROM singer AS T2 WHERE T2.Net_Worth_Millions = 12.7",
    "readable_query": "SELECT singer.Citizenship FROM singer AS singer        EXCEPT SELECT singer.Citizenship FROM singer AS singer WHERE singer.Net_Worth_Millions = 12.7"
  },
  {
    "db_id": "singer",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Citizenship FROM singer AS T1        EXCEPT SELECT T2.Citizenship FROM singer AS T2 WHERE T2.Net_Worth_Millions = 17.8",
    "readable_query": "SELECT singer.Citizenship FROM singer AS singer        EXCEPT SELECT singer.Citizenship FROM singer AS singer WHERE singer.Net_Worth_Millions = 17.8"
  },
  {
    "db_id": "singer",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1        EXCEPT SELECT T2.Net_Worth_Millions FROM singer AS T2 WHERE T2.Birth_Year = 1953.0",
    "readable_query": "SELECT singer.Net_Worth_Millions FROM singer AS singer        EXCEPT SELECT singer.Net_Worth_Millions FROM singer AS singer WHERE singer.Birth_Year = 1953.0"
  },
  {
    "db_id": "voter_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.state FROM VOTES AS T1 WHERE T1.contestant_number = 2",
    "readable_query": "SELECT votes.state FROM VOTES AS votes WHERE votes.contestant_number = 2"
  },
  {
    "db_id": "voter_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 WHERE T1.contestant_number = 7",
    "readable_query": "SELECT contestants.contestant_name FROM CONTESTANTS AS contestants WHERE contestants.contestant_number = 7"
  },
  {
    "db_id": "voter_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1 WHERE T1.contestant_name = \"Nita Coster\"",
    "readable_query": "SELECT contestants.contestant_number FROM CONTESTANTS AS contestants WHERE contestants.contestant_name = \"Nita Coster\""
  },
  {
    "db_id": "voter_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 WHERE T1.area_code = 954",
    "readable_query": "SELECT area_code_state.state FROM AREA_CODE_STATE AS area_code_state WHERE area_code_state.area_code = 954"
  },
  {
    "db_id": "voter_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.phone_number = 7182887233",
    "readable_query": "SELECT contestants.contestant_number FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number WHERE votes.phone_number = 7182887233"
  },
  {
    "db_id": "voter_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.state = \"CA\"",
    "readable_query": "SELECT area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state WHERE votes.state = \"CA\""
  },
  {
    "db_id": "voter_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.state FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = \"Jessie Eichman\"",
    "readable_query": "SELECT votes.state FROM VOTES AS votes JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = \"Jessie Eichman\""
  },
  {
    "db_id": "voter_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.vote_id = 2",
    "readable_query": "SELECT area_code_state.state FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state WHERE votes.vote_id = 2"
  },
  {
    "db_id": "voter_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.contestant_number, count(*) FROM CONTESTANTS AS T1  GROUP BY T1.contestant_number",
    "readable_query": "SELECT contestants.contestant_number, count(*) FROM CONTESTANTS AS contestants  GROUP BY contestants.contestant_number"
  },
  {
    "db_id": "voter_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.created, count(*) FROM VOTES AS T1  GROUP BY T1.created",
    "readable_query": "SELECT votes.created, count(*) FROM VOTES AS votes  GROUP BY votes.created"
  },
  {
    "db_id": "voter_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.vote_id, count(*) FROM VOTES AS T1  GROUP BY T1.vote_id",
    "readable_query": "SELECT votes.vote_id, count(*) FROM VOTES AS votes  GROUP BY votes.vote_id"
  },
  {
    "db_id": "voter_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.vote_id, count(*) FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state  GROUP BY T1.vote_id",
    "readable_query": "SELECT votes.vote_id, count(*) FROM VOTES AS votes JOIN AREA_CODE_STATE AS area_code_state ON votes.state = area_code_state.state  GROUP BY votes.vote_id"
  },
  {
    "db_id": "voter_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.vote_id, count(*) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T1.vote_id",
    "readable_query": "SELECT votes.vote_id, count(*) FROM VOTES AS votes JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number  GROUP BY votes.vote_id"
  },
  {
    "db_id": "voter_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.state, count(*) FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state  GROUP BY T1.state",
    "readable_query": "SELECT area_code_state.state, count(*) FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state  GROUP BY area_code_state.state"
  },
  {
    "db_id": "voter_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.contestant_name, count(*) FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T1.contestant_name",
    "readable_query": "SELECT contestants.contestant_name, count(*) FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number  GROUP BY contestants.contestant_name"
  },
  {
    "db_id": "voter_1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM CONTESTANTS AS T1",
    "readable_query": "SELECT count(*) FROM CONTESTANTS AS contestants"
  },
  {
    "db_id": "voter_1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM VOTES AS T1",
    "readable_query": "SELECT count(*) FROM VOTES AS votes"
  },
  {
    "db_id": "voter_1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM CONTESTANTS AS T1",
    "readable_query": "SELECT count(*) FROM CONTESTANTS AS contestants"
  },
  {
    "db_id": "voter_1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM VOTES AS T1",
    "readable_query": "SELECT count(*) FROM VOTES AS votes"
  },
  {
    "db_id": "voter_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.state, T1.contestant_number FROM VOTES AS T1",
    "readable_query": "SELECT votes.state, votes.contestant_number FROM VOTES AS votes"
  },
  {
    "db_id": "voter_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.contestant_name, T1.contestant_number FROM CONTESTANTS AS T1",
    "readable_query": "SELECT contestants.contestant_name, contestants.contestant_number FROM CONTESTANTS AS contestants"
  },
  {
    "db_id": "voter_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.state, T1.contestant_number FROM VOTES AS T1",
    "readable_query": "SELECT votes.state, votes.contestant_number FROM VOTES AS votes"
  },
  {
    "db_id": "voter_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.state, T2.contestant_name FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number",
    "readable_query": "SELECT votes.state, contestants.contestant_name FROM VOTES AS votes JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number"
  },
  {
    "db_id": "voter_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.contestant_number, T2.vote_id FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number",
    "readable_query": "SELECT contestants.contestant_number, votes.vote_id FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number"
  },
  {
    "db_id": "voter_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.vote_id, T2.contestant_name FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number",
    "readable_query": "SELECT votes.vote_id, contestants.contestant_name FROM VOTES AS votes JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number"
  },
  {
    "db_id": "voter_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.vote_id, T2.contestant_number FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number",
    "readable_query": "SELECT votes.vote_id, contestants.contestant_number FROM VOTES AS votes JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number"
  },
  {
    "db_id": "voter_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.state, T1.contestant_number FROM VOTES AS T1 WHERE T1.created = \"2018-03-09 19:03:36\"",
    "readable_query": "SELECT votes.state, votes.contestant_number FROM VOTES AS votes WHERE votes.created = \"2018-03-09 19:03:36\""
  },
  {
    "db_id": "voter_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.contestant_number, T1.phone_number FROM VOTES AS T1 WHERE T1.created = \"2018-03-09 19:03:21\"",
    "readable_query": "SELECT votes.contestant_number, votes.phone_number FROM VOTES AS votes WHERE votes.created = \"2018-03-09 19:03:21\""
  },
  {
    "db_id": "voter_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.vote_id, T1.state FROM VOTES AS T1 WHERE T1.created = \"2018-03-09 19:03:39\"",
    "readable_query": "SELECT votes.vote_id, votes.state FROM VOTES AS votes WHERE votes.created = \"2018-03-09 19:03:39\""
  },
  {
    "db_id": "voter_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.created, T1.state FROM VOTES AS T1 WHERE T1.phone_number = 7182887233",
    "readable_query": "SELECT votes.created, votes.state FROM VOTES AS votes WHERE votes.phone_number = 7182887233"
  },
  {
    "db_id": "voter_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.created, T1.phone_number FROM VOTES AS T1 WHERE T1.contestant_number = 2",
    "readable_query": "SELECT votes.created, votes.phone_number FROM VOTES AS votes WHERE votes.contestant_number = 2"
  },
  {
    "db_id": "voter_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.vote_id, T1.contestant_number FROM VOTES AS T1 WHERE T1.phone_number = 6209222712",
    "readable_query": "SELECT votes.vote_id, votes.contestant_number FROM VOTES AS votes WHERE votes.phone_number = 6209222712"
  },
  {
    "db_id": "voter_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.phone_number FROM VOTES AS T1  GROUP BY T1.phone_number  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT votes.phone_number FROM VOTES AS votes  GROUP BY votes.phone_number  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.vote_id FROM VOTES AS T1  GROUP BY T1.vote_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT votes.vote_id FROM VOTES AS votes  GROUP BY votes.vote_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM AREA_CODE_STATE AS T1 WHERE T1.area_code = 704",
    "readable_query": "SELECT count(*) FROM AREA_CODE_STATE AS area_code_state WHERE area_code_state.area_code = 704"
  },
  {
    "db_id": "voter_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM AREA_CODE_STATE AS T1 WHERE T1.area_code = 380",
    "readable_query": "SELECT count(*) FROM AREA_CODE_STATE AS area_code_state WHERE area_code_state.area_code = 380"
  },
  {
    "db_id": "voter_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM VOTES AS T1 WHERE T1.state = \"NY\"",
    "readable_query": "SELECT count(*) FROM VOTES AS votes WHERE votes.state = \"NY\""
  },
  {
    "db_id": "voter_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM VOTES AS T1 WHERE T1.contestant_number = 5",
    "readable_query": "SELECT count(*) FROM VOTES AS votes WHERE votes.contestant_number = 5"
  },
  {
    "db_id": "voter_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM AREA_CODE_STATE AS T1 WHERE T1.area_code = 215",
    "readable_query": "SELECT count(*) FROM AREA_CODE_STATE AS area_code_state WHERE area_code_state.area_code = 215"
  },
  {
    "db_id": "voter_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM AREA_CODE_STATE AS T1 WHERE T1.state = \"NY\"",
    "readable_query": "SELECT count(*) FROM AREA_CODE_STATE AS area_code_state WHERE area_code_state.state = \"NY\""
  },
  {
    "db_id": "voter_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.state FROM VOTES AS T1    ORDER BY T1.created DESC LIMIT 1",
    "readable_query": "SELECT votes.state FROM VOTES AS votes    ORDER BY votes.created DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.created FROM VOTES AS T1    ORDER BY T1.vote_id DESC LIMIT 1",
    "readable_query": "SELECT votes.created FROM VOTES AS votes    ORDER BY votes.vote_id DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.phone_number FROM VOTES AS T1    ORDER BY T1.created DESC LIMIT 1",
    "readable_query": "SELECT votes.phone_number FROM VOTES AS votes    ORDER BY votes.created DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1    ORDER BY T1.area_code DESC LIMIT 1",
    "readable_query": "SELECT area_code_state.state FROM AREA_CODE_STATE AS area_code_state    ORDER BY area_code_state.area_code DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.contestant_number FROM VOTES AS T1    ORDER BY T1.vote_id DESC LIMIT 1",
    "readable_query": "SELECT votes.contestant_number FROM VOTES AS votes    ORDER BY votes.vote_id DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.state FROM VOTES AS T1    ORDER BY T1.vote_id DESC LIMIT 1",
    "readable_query": "SELECT votes.state FROM VOTES AS votes    ORDER BY votes.vote_id DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.created FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number    ORDER BY T2.contestant_number DESC LIMIT 1",
    "readable_query": "SELECT votes.created FROM VOTES AS votes JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number    ORDER BY contestants.contestant_number DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state    ORDER BY T2.phone_number DESC LIMIT 1",
    "readable_query": "SELECT area_code_state.state FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state    ORDER BY votes.phone_number DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.contestant_number FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state    ORDER BY T2.area_code DESC LIMIT 1",
    "readable_query": "SELECT votes.contestant_number FROM VOTES AS votes JOIN AREA_CODE_STATE AS area_code_state ON votes.state = area_code_state.state    ORDER BY area_code_state.area_code DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.phone_number FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number    ORDER BY T2.contestant_number DESC LIMIT 1",
    "readable_query": "SELECT votes.phone_number FROM VOTES AS votes JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number    ORDER BY contestants.contestant_number DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.vote_id FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number    ORDER BY T2.contestant_number ASC LIMIT 1",
    "readable_query": "SELECT votes.vote_id FROM VOTES AS votes JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number    ORDER BY contestants.contestant_number ASC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state    ORDER BY T2.created ASC LIMIT 1",
    "readable_query": "SELECT area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state    ORDER BY votes.created ASC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state    ORDER BY T2.contestant_number ASC LIMIT 1",
    "readable_query": "SELECT area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state    ORDER BY votes.contestant_number ASC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state    ORDER BY T2.contestant_number ASC LIMIT 1",
    "readable_query": "SELECT area_code_state.state FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state    ORDER BY votes.contestant_number ASC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.vote_id FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state    ORDER BY T2.area_code ASC LIMIT 1",
    "readable_query": "SELECT votes.vote_id FROM VOTES AS votes JOIN AREA_CODE_STATE AS area_code_state ON votes.state = area_code_state.state    ORDER BY area_code_state.area_code ASC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number    ORDER BY T2.phone_number ASC LIMIT 1",
    "readable_query": "SELECT contestants.contestant_number FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number    ORDER BY votes.phone_number ASC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state    ORDER BY T2.contestant_number ASC LIMIT 1",
    "readable_query": "SELECT area_code_state.state FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state    ORDER BY votes.contestant_number ASC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.phone_number, T1.created FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state    ORDER BY T2.area_code DESC LIMIT 1",
    "readable_query": "SELECT votes.phone_number, votes.created FROM VOTES AS votes JOIN AREA_CODE_STATE AS area_code_state ON votes.state = area_code_state.state    ORDER BY area_code_state.area_code DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.area_code, T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state    ORDER BY T2.phone_number DESC LIMIT 1",
    "readable_query": "SELECT area_code_state.area_code, area_code_state.state FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state    ORDER BY votes.phone_number DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.state, T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state    ORDER BY T2.created DESC LIMIT 1",
    "readable_query": "SELECT area_code_state.state, area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state    ORDER BY votes.created DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.contestant_number) FROM VOTES AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  votes.contestant_number) FROM VOTES AS votes"
  },
  {
    "db_id": "voter_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.contestant_number) FROM CONTESTANTS AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  contestants.contestant_number) FROM CONTESTANTS AS contestants"
  },
  {
    "db_id": "voter_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.contestant_number) FROM VOTES AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  votes.contestant_number) FROM VOTES AS votes"
  },
  {
    "db_id": "voter_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.contestant_number) FROM CONTESTANTS AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  contestants.contestant_number) FROM CONTESTANTS AS contestants"
  },
  {
    "db_id": "voter_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.area_code) FROM AREA_CODE_STATE AS T1",
    "readable_query": "SELECT avg( area_code_state.area_code) FROM AREA_CODE_STATE AS area_code_state"
  },
  {
    "db_id": "voter_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.phone_number) FROM VOTES AS T1",
    "readable_query": "SELECT avg( votes.phone_number) FROM VOTES AS votes"
  },
  {
    "db_id": "voter_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.area_code) FROM AREA_CODE_STATE AS T1",
    "readable_query": "SELECT avg( area_code_state.area_code) FROM AREA_CODE_STATE AS area_code_state"
  },
  {
    "db_id": "voter_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.contestant_number) FROM CONTESTANTS AS T1",
    "readable_query": "SELECT avg( contestants.contestant_number) FROM CONTESTANTS AS contestants"
  },
  {
    "db_id": "voter_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1",
    "readable_query": "SELECT area_code_state.state FROM AREA_CODE_STATE AS area_code_state"
  },
  {
    "db_id": "voter_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.state FROM VOTES AS T1",
    "readable_query": "SELECT votes.state FROM VOTES AS votes"
  },
  {
    "db_id": "voter_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.created FROM VOTES AS T1",
    "readable_query": "SELECT votes.created FROM VOTES AS votes"
  },
  {
    "db_id": "voter_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.phone_number FROM VOTES AS T1",
    "readable_query": "SELECT votes.phone_number FROM VOTES AS votes"
  },
  {
    "db_id": "voter_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1",
    "readable_query": "SELECT contestants.contestant_number FROM CONTESTANTS AS contestants"
  },
  {
    "db_id": "voter_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.vote_id FROM VOTES AS T1",
    "readable_query": "SELECT DISTINCT votes.vote_id FROM VOTES AS votes"
  },
  {
    "db_id": "voter_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.contestant_number FROM CONTESTANTS AS T1",
    "readable_query": "SELECT DISTINCT contestants.contestant_number FROM CONTESTANTS AS contestants"
  },
  {
    "db_id": "voter_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.vote_id FROM VOTES AS T1",
    "readable_query": "SELECT DISTINCT votes.vote_id FROM VOTES AS votes"
  },
  {
    "db_id": "voter_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.area_code FROM AREA_CODE_STATE AS T1",
    "readable_query": "SELECT DISTINCT area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state"
  },
  {
    "db_id": "voter_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.state FROM AREA_CODE_STATE AS T1",
    "readable_query": "SELECT DISTINCT area_code_state.state FROM AREA_CODE_STATE AS area_code_state"
  },
  {
    "db_id": "voter_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.contestant_number FROM VOTES AS T1",
    "readable_query": "SELECT DISTINCT votes.contestant_number FROM VOTES AS votes"
  },
  {
    "db_id": "voter_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.phone_number FROM VOTES AS T1",
    "readable_query": "SELECT DISTINCT votes.phone_number FROM VOTES AS votes"
  },
  {
    "db_id": "voter_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.phone_number FROM VOTES AS T1     ORDER BY T1.created ASC",
    "readable_query": "SELECT votes.phone_number FROM VOTES AS votes     ORDER BY votes.created ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.vote_id FROM VOTES AS T1     ORDER BY T1.phone_number ASC",
    "readable_query": "SELECT votes.vote_id FROM VOTES AS votes     ORDER BY votes.phone_number ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.vote_id FROM VOTES AS T1     ORDER BY T1.created ASC",
    "readable_query": "SELECT votes.vote_id FROM VOTES AS votes     ORDER BY votes.created ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.state FROM VOTES AS T1     ORDER BY T1.phone_number ASC",
    "readable_query": "SELECT votes.state FROM VOTES AS votes     ORDER BY votes.phone_number ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.created FROM VOTES AS T1     ORDER BY T1.contestant_number ASC",
    "readable_query": "SELECT votes.created FROM VOTES AS votes     ORDER BY votes.contestant_number ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1     ORDER BY T1.area_code ASC",
    "readable_query": "SELECT area_code_state.state FROM AREA_CODE_STATE AS area_code_state     ORDER BY area_code_state.area_code ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.contestant_number FROM VOTES AS T1     ORDER BY T1.created ASC",
    "readable_query": "SELECT votes.contestant_number FROM VOTES AS votes     ORDER BY votes.created ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.contestant_number FROM VOTES AS T1     ORDER BY T1.vote_id ASC",
    "readable_query": "SELECT votes.contestant_number FROM VOTES AS votes     ORDER BY votes.vote_id ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.contestant_number FROM VOTES AS T1     ORDER BY T1.phone_number ASC",
    "readable_query": "SELECT votes.contestant_number FROM VOTES AS votes     ORDER BY votes.phone_number ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.created FROM VOTES AS T1     ORDER BY T1.vote_id DESC",
    "readable_query": "SELECT votes.created FROM VOTES AS votes     ORDER BY votes.vote_id DESC"
  },
  {
    "db_id": "voter_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.contestant_number FROM VOTES AS T1     ORDER BY T1.vote_id DESC",
    "readable_query": "SELECT votes.contestant_number FROM VOTES AS votes     ORDER BY votes.vote_id DESC"
  },
  {
    "db_id": "voter_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.vote_id FROM VOTES AS T1     ORDER BY T1.phone_number DESC",
    "readable_query": "SELECT votes.vote_id FROM VOTES AS votes     ORDER BY votes.phone_number DESC"
  },
  {
    "db_id": "voter_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1     ORDER BY T1.contestant_number DESC",
    "readable_query": "SELECT contestants.contestant_name FROM CONTESTANTS AS contestants     ORDER BY contestants.contestant_number DESC"
  },
  {
    "db_id": "voter_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.state FROM VOTES AS T1     ORDER BY T1.created DESC",
    "readable_query": "SELECT votes.state FROM VOTES AS votes     ORDER BY votes.created DESC"
  },
  {
    "db_id": "voter_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1     ORDER BY T1.area_code DESC",
    "readable_query": "SELECT area_code_state.state FROM AREA_CODE_STATE AS area_code_state     ORDER BY area_code_state.area_code DESC"
  },
  {
    "db_id": "voter_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.vote_id FROM VOTES AS T1     ORDER BY T1.created DESC",
    "readable_query": "SELECT votes.vote_id FROM VOTES AS votes     ORDER BY votes.created DESC"
  },
  {
    "db_id": "voter_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.contestant_number FROM VOTES AS T1     ORDER BY T1.phone_number DESC",
    "readable_query": "SELECT votes.contestant_number FROM VOTES AS votes     ORDER BY votes.phone_number DESC"
  },
  {
    "db_id": "voter_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.contestant_number FROM VOTES AS T1     ORDER BY T1.created DESC",
    "readable_query": "SELECT votes.contestant_number FROM VOTES AS votes     ORDER BY votes.created DESC"
  },
  {
    "db_id": "voter_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.phone_number FROM VOTES AS T1     ORDER BY T1.created DESC",
    "readable_query": "SELECT votes.phone_number FROM VOTES AS votes     ORDER BY votes.created DESC"
  },
  {
    "db_id": "voter_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1     ORDER BY T1.area_code DESC",
    "readable_query": "SELECT area_code_state.state FROM AREA_CODE_STATE AS area_code_state     ORDER BY area_code_state.area_code DESC"
  },
  {
    "db_id": "voter_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.phone_number, T1.vote_id FROM VOTES AS T1     ORDER BY T1.vote_id ASC",
    "readable_query": "SELECT votes.phone_number, votes.vote_id FROM VOTES AS votes     ORDER BY votes.vote_id ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.state, T1.area_code FROM AREA_CODE_STATE AS T1     ORDER BY T1.area_code ASC",
    "readable_query": "SELECT area_code_state.state, area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state     ORDER BY area_code_state.area_code ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state JOIN CONTESTANTS AS T3 ON T2.contestant_number = T3.contestant_number WHERE T2.vote_id = 1 and T3.contestant_number = 1",
    "readable_query": "SELECT area_code_state.state FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number WHERE votes.vote_id = 1 and contestants.contestant_number = 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.vote_id FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state JOIN CONTESTANTS AS T3 ON T1.contestant_number = T3.contestant_number WHERE T2.area_code = 805 and T3.contestant_number = 1",
    "readable_query": "SELECT votes.vote_id FROM VOTES AS votes JOIN AREA_CODE_STATE AS area_code_state ON votes.state = area_code_state.state JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number WHERE area_code_state.area_code = 805 and contestants.contestant_number = 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T2.state = T3.state WHERE T2.phone_number = 7148407040 and T3.state = \"KS\"",
    "readable_query": "SELECT contestants.contestant_number FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number JOIN AREA_CODE_STATE AS area_code_state ON votes.state = area_code_state.state WHERE votes.phone_number = 7148407040 and area_code_state.state = \"KS\""
  },
  {
    "db_id": "voter_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T2.state = T3.state WHERE T2.vote_id = 5 and T3.state = \"NH\"",
    "readable_query": "SELECT contestants.contestant_name FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number JOIN AREA_CODE_STATE AS area_code_state ON votes.state = area_code_state.state WHERE votes.vote_id = 5 and area_code_state.state = \"NH\""
  },
  {
    "db_id": "voter_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.phone_number = 7182887233 or T2.phone_number = 7148407040",
    "readable_query": "SELECT area_code_state.state FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state WHERE votes.phone_number = 7182887233 or votes.phone_number = 7148407040"
  },
  {
    "db_id": "voter_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.phone_number = 6209222712 or T2.phone_number = 7182887233",
    "readable_query": "SELECT area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state WHERE votes.phone_number = 6209222712 or votes.phone_number = 7182887233"
  },
  {
    "db_id": "voter_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.state FROM VOTES AS T1 WHERE T1.created = \"2018-03-09 19:03:40\" and T1.contestant_number = 2",
    "readable_query": "SELECT votes.state FROM VOTES AS votes WHERE votes.created = \"2018-03-09 19:03:40\" and votes.contestant_number = 2"
  },
  {
    "db_id": "voter_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.state FROM VOTES AS T1 WHERE T1.phone_number = 5112677315 and T1.vote_id = 1",
    "readable_query": "SELECT votes.state FROM VOTES AS votes WHERE votes.phone_number = 5112677315 and votes.vote_id = 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.contestant_number FROM VOTES AS T1 WHERE T1.vote_id = 2 and T1.phone_number = 7182887233",
    "readable_query": "SELECT votes.contestant_number FROM VOTES AS votes WHERE votes.vote_id = 2 and votes.phone_number = 7182887233"
  },
  {
    "db_id": "voter_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.vote_id FROM VOTES AS T1 WHERE T1.contestant_number = 2 and T1.state = \"NY\"",
    "readable_query": "SELECT votes.vote_id FROM VOTES AS votes WHERE votes.contestant_number = 2 and votes.state = \"NY\""
  },
  {
    "db_id": "voter_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.vote_id FROM VOTES AS T1 WHERE T1.phone_number = 7148407040 and T1.state = \"NY\"",
    "readable_query": "SELECT votes.vote_id FROM VOTES AS votes WHERE votes.phone_number = 7148407040 and votes.state = \"NY\""
  },
  {
    "db_id": "voter_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.state FROM VOTES AS T1 WHERE T1.contestant_number = 2 and T1.phone_number = 5112677315",
    "readable_query": "SELECT votes.state FROM VOTES AS votes WHERE votes.contestant_number = 2 and votes.phone_number = 5112677315"
  },
  {
    "db_id": "voter_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.area_code) FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T1.state = \"NC\" and T2.vote_id = 1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  area_code_state.area_code) FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state WHERE area_code_state.state = \"NC\" and votes.vote_id = 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.area_code) FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T1.state = \"KS\" and T2.phone_number = 7148407040",
    "readable_query": "SELECT DISTINCT count(DISTINCT  area_code_state.area_code) FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state WHERE area_code_state.state = \"KS\" and votes.phone_number = 7148407040"
  },
  {
    "db_id": "voter_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.contestant_name) FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.contestant_number = 3 and T2.created = \"2018-03-09 19:03:39\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  contestants.contestant_name) FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number WHERE contestants.contestant_number = 3 and votes.created = \"2018-03-09 19:03:39\""
  },
  {
    "db_id": "voter_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.contestant_number) FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.contestant_name = \"Kurt Walser\" and T2.state = \"NJ\n\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  contestants.contestant_number) FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number WHERE contestants.contestant_name = \"Kurt Walser\" and votes.state = \"NJ\n\""
  },
  {
    "db_id": "voter_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.state) FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state WHERE T1.contestant_number = 2 and T2.area_code = 804",
    "readable_query": "SELECT DISTINCT count(DISTINCT  votes.state) FROM VOTES AS votes JOIN AREA_CODE_STATE AS area_code_state ON votes.state = area_code_state.state WHERE votes.contestant_number = 2 and area_code_state.area_code = 804"
  },
  {
    "db_id": "voter_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.contestant_number) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.created = \"2018-03-09 19:03:39\" and T2.contestant_name = \"Tabatha Gehling\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  votes.contestant_number) FROM VOTES AS votes JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number WHERE votes.created = \"2018-03-09 19:03:39\" and contestants.contestant_name = \"Tabatha Gehling\""
  },
  {
    "db_id": "voter_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.contestant_name) FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.contestant_number = 7 and T2.created = \"2018-03-09 19:03:40\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  contestants.contestant_name) FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number WHERE contestants.contestant_number = 7 and votes.created = \"2018-03-09 19:03:40\""
  },
  {
    "db_id": "voter_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.phone_number FROM VOTES AS T1 WHERE T1.vote_id = 1 or T1.created = \"2018-03-09 19:03:40\"",
    "readable_query": "SELECT votes.phone_number FROM VOTES AS votes WHERE votes.vote_id = 1 or votes.created = \"2018-03-09 19:03:40\""
  },
  {
    "db_id": "voter_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.contestant_number FROM VOTES AS T1 WHERE T1.phone_number = 7148407040 or T1.state = \"NJ\n\"",
    "readable_query": "SELECT votes.contestant_number FROM VOTES AS votes WHERE votes.phone_number = 7148407040 or votes.state = \"NJ\n\""
  },
  {
    "db_id": "voter_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.created FROM VOTES AS T1 WHERE T1.contestant_number = 5 or T1.phone_number = 7182887233",
    "readable_query": "SELECT votes.created FROM VOTES AS votes WHERE votes.contestant_number = 5 or votes.phone_number = 7182887233"
  },
  {
    "db_id": "voter_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.phone_number FROM VOTES AS T1 WHERE T1.created = \"2018-03-09 19:03:21\" or T1.vote_id = 1",
    "readable_query": "SELECT votes.phone_number FROM VOTES AS votes WHERE votes.created = \"2018-03-09 19:03:21\" or votes.vote_id = 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.contestant_number FROM VOTES AS T1 WHERE T1.state = \"NJ\n\" or T1.vote_id = 2",
    "readable_query": "SELECT votes.contestant_number FROM VOTES AS votes WHERE votes.state = \"NJ\n\" or votes.vote_id = 2"
  },
  {
    "db_id": "voter_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.phone_number FROM VOTES AS T1 WHERE T1.contestant_number = 5 or T1.vote_id = 1",
    "readable_query": "SELECT votes.phone_number FROM VOTES AS votes WHERE votes.contestant_number = 5 or votes.vote_id = 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.vote_id FROM VOTES AS T1 WHERE T1.phone_number = 7148407040 or T1.contestant_number = 2",
    "readable_query": "SELECT votes.vote_id FROM VOTES AS votes WHERE votes.phone_number = 7148407040 or votes.contestant_number = 2"
  },
  {
    "db_id": "voter_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.vote_id FROM VOTES AS T1 WHERE T1.created = \"2018-03-09 19:03:36\" or T1.state = \"CA\"",
    "readable_query": "SELECT votes.vote_id FROM VOTES AS votes WHERE votes.created = \"2018-03-09 19:03:36\" or votes.state = \"CA\""
  },
  {
    "db_id": "voter_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.contestant_number FROM VOTES AS T1 WHERE T1.created = \"2018-03-09 19:03:36\" or T1.vote_id = 5",
    "readable_query": "SELECT votes.contestant_number FROM VOTES AS votes WHERE votes.created = \"2018-03-09 19:03:36\" or votes.vote_id = 5"
  },
  {
    "db_id": "voter_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.created = \"2018-03-09 19:03:36\" and T2.phone_number = 5112677315",
    "readable_query": "SELECT count(*) FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state WHERE votes.created = \"2018-03-09 19:03:36\" and votes.phone_number = 5112677315"
  },
  {
    "db_id": "voter_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.created = \"2018-03-09 19:03:36\" and T2.phone_number = 5112677315",
    "readable_query": "SELECT count(*) FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number WHERE votes.created = \"2018-03-09 19:03:36\" and votes.phone_number = 5112677315"
  },
  {
    "db_id": "voter_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.state = \"CA\" and T2.contestant_number = 2",
    "readable_query": "SELECT count(*) FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number WHERE votes.state = \"CA\" and votes.contestant_number = 2"
  },
  {
    "db_id": "voter_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 WHERE T1.state != \"AZ\"",
    "readable_query": "SELECT area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state WHERE area_code_state.state != \"AZ\""
  },
  {
    "db_id": "voter_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.phone_number FROM VOTES AS T1 WHERE T1.contestant_number != 5",
    "readable_query": "SELECT votes.phone_number FROM VOTES AS votes WHERE votes.contestant_number != 5"
  },
  {
    "db_id": "voter_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.state != \"NJ\n\"",
    "readable_query": "SELECT contestants.contestant_name FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number WHERE votes.state != \"NJ\n\""
  },
  {
    "db_id": "voter_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.contestant_number FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state WHERE T2.area_code != 408",
    "readable_query": "SELECT votes.contestant_number FROM VOTES AS votes JOIN AREA_CODE_STATE AS area_code_state ON votes.state = area_code_state.state WHERE area_code_state.area_code != 408"
  },
  {
    "db_id": "voter_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.state FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name != \"Kelly Clauss\"",
    "readable_query": "SELECT votes.state FROM VOTES AS votes JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name != \"Kelly Clauss\""
  },
  {
    "db_id": "voter_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.phone_number FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_number != 5",
    "readable_query": "SELECT votes.phone_number FROM VOTES AS votes JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_number != 5"
  },
  {
    "db_id": "voter_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.phone_number FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state WHERE T2.area_code != 762",
    "readable_query": "SELECT votes.phone_number FROM VOTES AS votes JOIN AREA_CODE_STATE AS area_code_state ON votes.state = area_code_state.state WHERE area_code_state.area_code != 762"
  },
  {
    "db_id": "voter_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.state != \"CA\"",
    "readable_query": "SELECT contestants.contestant_name FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number WHERE votes.state != \"CA\""
  },
  {
    "db_id": "voter_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.created != \"2018-03-09 19:03:36\"",
    "readable_query": "SELECT area_code_state.state FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state WHERE votes.created != \"2018-03-09 19:03:36\""
  },
  {
    "db_id": "voter_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.vote_id = 2",
    "readable_query": "SELECT DISTINCT area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state WHERE votes.vote_id = 2"
  },
  {
    "db_id": "voter_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.contestant_number FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.state = \"NY\"",
    "readable_query": "SELECT DISTINCT contestants.contestant_number FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number WHERE votes.state = \"NY\""
  },
  {
    "db_id": "voter_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.vote_id = 3",
    "readable_query": "SELECT DISTINCT area_code_state.state FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state WHERE votes.vote_id = 3"
  },
  {
    "db_id": "voter_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.phone_number = 5112677315",
    "readable_query": "SELECT DISTINCT contestants.contestant_name FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number WHERE votes.phone_number = 5112677315"
  },
  {
    "db_id": "voter_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.contestant_number) FROM VOTES AS T1 WHERE T1.phone_number = 6209222712",
    "readable_query": "SELECT DISTINCT count(DISTINCT  votes.contestant_number) FROM VOTES AS votes WHERE votes.phone_number = 6209222712"
  },
  {
    "db_id": "voter_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.state) FROM AREA_CODE_STATE AS T1 WHERE T1.area_code = 808",
    "readable_query": "SELECT DISTINCT count(DISTINCT  area_code_state.state) FROM AREA_CODE_STATE AS area_code_state WHERE area_code_state.area_code = 808"
  },
  {
    "db_id": "voter_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.vote_id) FROM VOTES AS T1 WHERE T1.contestant_number = 2",
    "readable_query": "SELECT DISTINCT count(DISTINCT  votes.vote_id) FROM VOTES AS votes WHERE votes.contestant_number = 2"
  },
  {
    "db_id": "voter_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.state) FROM AREA_CODE_STATE AS T1 WHERE T1.area_code = 260",
    "readable_query": "SELECT DISTINCT count(DISTINCT  area_code_state.state) FROM AREA_CODE_STATE AS area_code_state WHERE area_code_state.area_code = 260"
  },
  {
    "db_id": "voter_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.contestant_name) FROM CONTESTANTS AS T1 WHERE T1.contestant_number = 9",
    "readable_query": "SELECT DISTINCT count(DISTINCT  contestants.contestant_name) FROM CONTESTANTS AS contestants WHERE contestants.contestant_number = 9"
  },
  {
    "db_id": "voter_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.state) FROM AREA_CODE_STATE AS T1 WHERE T1.area_code = 515",
    "readable_query": "SELECT DISTINCT count(DISTINCT  area_code_state.state) FROM AREA_CODE_STATE AS area_code_state WHERE area_code_state.area_code = 515"
  },
  {
    "db_id": "voter_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.state FROM VOTES AS T1 WHERE T1.phone_number > 6209222712",
    "readable_query": "SELECT votes.state FROM VOTES AS votes WHERE votes.phone_number > 6209222712"
  },
  {
    "db_id": "voter_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 WHERE T1.contestant_number > 9",
    "readable_query": "SELECT contestants.contestant_name FROM CONTESTANTS AS contestants WHERE contestants.contestant_number > 9"
  },
  {
    "db_id": "voter_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 WHERE T1.area_code > 857",
    "readable_query": "SELECT area_code_state.state FROM AREA_CODE_STATE AS area_code_state WHERE area_code_state.area_code > 857"
  },
  {
    "db_id": "voter_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 WHERE T1.contestant_number > 5",
    "readable_query": "SELECT contestants.contestant_name FROM CONTESTANTS AS contestants WHERE contestants.contestant_number > 5"
  },
  {
    "db_id": "voter_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.state FROM VOTES AS T1 WHERE T1.phone_number > 6209222712",
    "readable_query": "SELECT votes.state FROM VOTES AS votes WHERE votes.phone_number > 6209222712"
  },
  {
    "db_id": "voter_1",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.contestant_number, T2.contestant_name, T3.state FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T1.state = T3.state",
    "readable_query": "SELECT votes.contestant_number, contestants.contestant_name, area_code_state.state FROM VOTES AS votes JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number JOIN AREA_CODE_STATE AS area_code_state ON votes.state = area_code_state.state"
  },
  {
    "db_id": "voter_1",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.contestant_number, T2.state, T3.contestant_name FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state JOIN CONTESTANTS AS T3 ON T1.contestant_number = T3.contestant_number",
    "readable_query": "SELECT votes.contestant_number, area_code_state.state, contestants.contestant_name FROM VOTES AS votes JOIN AREA_CODE_STATE AS area_code_state ON votes.state = area_code_state.state JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number"
  },
  {
    "db_id": "voter_1",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.area_code, T2.state, T3.contestant_name FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state JOIN CONTESTANTS AS T3 ON T2.contestant_number = T3.contestant_number",
    "readable_query": "SELECT area_code_state.area_code, votes.state, contestants.contestant_name FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number"
  },
  {
    "db_id": "voter_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.created FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number     ORDER BY T2.contestant_number ASC",
    "readable_query": "SELECT votes.created FROM VOTES AS votes JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number     ORDER BY contestants.contestant_number ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state     ORDER BY T2.contestant_number ASC",
    "readable_query": "SELECT area_code_state.state FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state     ORDER BY votes.contestant_number ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state     ORDER BY T2.phone_number ASC",
    "readable_query": "SELECT area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state     ORDER BY votes.phone_number ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.contestant_number FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state     ORDER BY T2.area_code ASC",
    "readable_query": "SELECT votes.contestant_number FROM VOTES AS votes JOIN AREA_CODE_STATE AS area_code_state ON votes.state = area_code_state.state     ORDER BY area_code_state.area_code ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state     ORDER BY T2.created ASC",
    "readable_query": "SELECT area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state     ORDER BY votes.created ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state     ORDER BY T2.phone_number ASC",
    "readable_query": "SELECT area_code_state.state FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state     ORDER BY votes.phone_number ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.phone_number FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number     ORDER BY T2.contestant_number ASC",
    "readable_query": "SELECT votes.phone_number FROM VOTES AS votes JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number     ORDER BY contestants.contestant_number ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number     ORDER BY T2.vote_id ASC",
    "readable_query": "SELECT contestants.contestant_number FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number     ORDER BY votes.vote_id ASC"
  },
  {
    "db_id": "voter_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.vote_id FROM VOTES AS T1 WHERE T1.contestant_number = 3     INTERSECT SELECT T2.vote_id FROM VOTES AS T2 WHERE T2.contestant_number = 2",
    "readable_query": "SELECT votes.vote_id FROM VOTES AS votes WHERE votes.contestant_number = 3     INTERSECT SELECT votes.vote_id FROM VOTES AS votes WHERE votes.contestant_number = 2"
  },
  {
    "db_id": "voter_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1 WHERE T1.contestant_name = \"Kurt Walser\"     INTERSECT SELECT T2.contestant_number FROM CONTESTANTS AS T2 WHERE T2.contestant_name = \"Allie Rogalski\"",
    "readable_query": "SELECT contestants.contestant_number FROM CONTESTANTS AS contestants WHERE contestants.contestant_name = \"Kurt Walser\"     INTERSECT SELECT contestants.contestant_number FROM CONTESTANTS AS contestants WHERE contestants.contestant_name = \"Allie Rogalski\""
  },
  {
    "db_id": "voter_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 WHERE T1.contestant_number = 10     INTERSECT SELECT T2.contestant_name FROM CONTESTANTS AS T2 WHERE T2.contestant_number = 10",
    "readable_query": "SELECT contestants.contestant_name FROM CONTESTANTS AS contestants WHERE contestants.contestant_number = 10     INTERSECT SELECT contestants.contestant_name FROM CONTESTANTS AS contestants WHERE contestants.contestant_number = 10"
  },
  {
    "db_id": "voter_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1 WHERE T1.contestant_name = \"Jessie Eichman\"     INTERSECT SELECT T2.contestant_number FROM CONTESTANTS AS T2 WHERE T2.contestant_name = \"Jessie Eichman\"",
    "readable_query": "SELECT contestants.contestant_number FROM CONTESTANTS AS contestants WHERE contestants.contestant_name = \"Jessie Eichman\"     INTERSECT SELECT contestants.contestant_number FROM CONTESTANTS AS contestants WHERE contestants.contestant_name = \"Jessie Eichman\""
  },
  {
    "db_id": "voter_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 WHERE T1.state = \"CO\"     INTERSECT SELECT T2.area_code FROM AREA_CODE_STATE AS T2 WHERE T2.state = \"MS\"",
    "readable_query": "SELECT area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state WHERE area_code_state.state = \"CO\"     INTERSECT SELECT area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state WHERE area_code_state.state = \"MS\""
  },
  {
    "db_id": "voter_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.area_code) FROM AREA_CODE_STATE AS T1 WHERE T1.state = \"PA\"",
    "readable_query": "SELECT avg( area_code_state.area_code) FROM AREA_CODE_STATE AS area_code_state WHERE area_code_state.state = \"PA\""
  },
  {
    "db_id": "voter_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.area_code) FROM AREA_CODE_STATE AS T1 WHERE T1.state = \"ID\"",
    "readable_query": "SELECT avg( area_code_state.area_code) FROM AREA_CODE_STATE AS area_code_state WHERE area_code_state.state = \"ID\""
  },
  {
    "db_id": "voter_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.contestant_number) FROM CONTESTANTS AS T1 WHERE T1.contestant_name = \"Ericka Dieter\"",
    "readable_query": "SELECT avg( contestants.contestant_number) FROM CONTESTANTS AS contestants WHERE contestants.contestant_name = \"Ericka Dieter\""
  },
  {
    "db_id": "voter_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.contestant_number) FROM CONTESTANTS AS T1 WHERE T1.contestant_name = \"Allie Rogalski\"",
    "readable_query": "SELECT avg( contestants.contestant_number) FROM CONTESTANTS AS contestants WHERE contestants.contestant_name = \"Allie Rogalski\""
  },
  {
    "db_id": "voter_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.area_code) FROM AREA_CODE_STATE AS T1 WHERE T1.state = \"HI\"",
    "readable_query": "SELECT avg( area_code_state.area_code) FROM AREA_CODE_STATE AS area_code_state WHERE area_code_state.state = \"HI\""
  },
  {
    "db_id": "voter_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.vote_id = (SELECT max( T23.vote_id) FROM VOTES AS T23)",
    "readable_query": "SELECT area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state WHERE votes.vote_id = (SELECT max( votes.vote_id) FROM VOTES AS votes)"
  },
  {
    "db_id": "voter_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.vote_id = (SELECT max( T23.vote_id) FROM VOTES AS T23)",
    "readable_query": "SELECT area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state WHERE votes.vote_id = (SELECT max( votes.vote_id) FROM VOTES AS votes)"
  },
  {
    "db_id": "voter_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.vote_id = (SELECT max( T23.vote_id) FROM VOTES AS T23)",
    "readable_query": "SELECT area_code_state.state FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state WHERE votes.vote_id = (SELECT max( votes.vote_id) FROM VOTES AS votes)"
  },
  {
    "db_id": "voter_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.phone_number = (SELECT max( T23.phone_number) FROM VOTES AS T23)",
    "readable_query": "SELECT area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state WHERE votes.phone_number = (SELECT max( votes.phone_number) FROM VOTES AS votes)"
  },
  {
    "db_id": "voter_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.created = (SELECT max( T23.created) FROM VOTES AS T23)",
    "readable_query": "SELECT contestants.contestant_name FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number WHERE votes.created = (SELECT max( votes.created) FROM VOTES AS votes)"
  },
  {
    "db_id": "voter_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.created = (SELECT max( T23.created) FROM VOTES AS T23)",
    "readable_query": "SELECT contestants.contestant_name FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number WHERE votes.created = (SELECT max( votes.created) FROM VOTES AS votes)"
  },
  {
    "db_id": "voter_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.vote_id = (SELECT max( T23.vote_id) FROM VOTES AS T23)",
    "readable_query": "SELECT contestants.contestant_name FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number WHERE votes.vote_id = (SELECT max( votes.vote_id) FROM VOTES AS votes)"
  },
  {
    "db_id": "voter_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.phone_number = (SELECT max( T23.phone_number) FROM VOTES AS T23)",
    "readable_query": "SELECT contestants.contestant_number FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number WHERE votes.phone_number = (SELECT max( votes.phone_number) FROM VOTES AS votes)"
  },
  {
    "db_id": "voter_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.state, T2.phone_number FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state JOIN CONTESTANTS AS T3 ON T2.contestant_number = T3.contestant_number WHERE T3.contestant_number = 4 and T2.vote_id = 5",
    "readable_query": "SELECT area_code_state.state, votes.phone_number FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_number = 4 and votes.vote_id = 5"
  },
  {
    "db_id": "voter_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.contestant_name, T2.created FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T2.state = T3.state WHERE T3.state = \"ID\" and T2.contestant_number = 5",
    "readable_query": "SELECT contestants.contestant_name, votes.created FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number JOIN AREA_CODE_STATE AS area_code_state ON votes.state = area_code_state.state WHERE area_code_state.state = \"ID\" and votes.contestant_number = 5"
  },
  {
    "db_id": "voter_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.created, T2.contestant_name FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T1.state = T3.state WHERE T3.area_code = 310 and T2.contestant_number = 4",
    "readable_query": "SELECT votes.created, contestants.contestant_name FROM VOTES AS votes JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number JOIN AREA_CODE_STATE AS area_code_state ON votes.state = area_code_state.state WHERE area_code_state.area_code = 310 and contestants.contestant_number = 4"
  },
  {
    "db_id": "voter_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.contestant_name, T2.contestant_number FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T2.state = T3.state WHERE T3.area_code = 386 and T2.created = \"2018-03-09 19:03:40\"",
    "readable_query": "SELECT contestants.contestant_name, votes.contestant_number FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number JOIN AREA_CODE_STATE AS area_code_state ON votes.state = area_code_state.state WHERE area_code_state.area_code = 386 and votes.created = \"2018-03-09 19:03:40\""
  },
  {
    "db_id": "voter_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.contestant_number FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = \"Ericka Dieter\" GROUP BY T1.contestant_number  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT votes.contestant_number FROM VOTES AS votes JOIN CONTESTANTS AS contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = \"Ericka Dieter\" GROUP BY votes.contestant_number  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.state FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state WHERE T2.area_code = 806 GROUP BY T1.state  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT votes.state FROM VOTES AS votes JOIN AREA_CODE_STATE AS area_code_state ON votes.state = area_code_state.state WHERE area_code_state.area_code = 806 GROUP BY votes.state  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.vote_id = 5 GROUP BY T1.area_code  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state JOIN VOTES AS votes ON area_code_state.state = votes.state WHERE votes.vote_id = 5 GROUP BY area_code_state.area_code  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.vote_id = 1 GROUP BY T1.contestant_name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT contestants.contestant_name FROM CONTESTANTS AS contestants JOIN VOTES AS votes ON contestants.contestant_number = votes.contestant_number WHERE votes.vote_id = 1 GROUP BY contestants.contestant_name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "voter_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1        EXCEPT SELECT T2.contestant_number FROM CONTESTANTS AS T2 WHERE T2.contestant_name = \"Tabatha Gehling\"",
    "readable_query": "SELECT contestants.contestant_number FROM CONTESTANTS AS contestants        EXCEPT SELECT contestants.contestant_number FROM CONTESTANTS AS contestants WHERE contestants.contestant_name = \"Tabatha Gehling\""
  },
  {
    "db_id": "voter_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1        EXCEPT SELECT T2.contestant_name FROM CONTESTANTS AS T2 WHERE T2.contestant_number = 9",
    "readable_query": "SELECT contestants.contestant_name FROM CONTESTANTS AS contestants        EXCEPT SELECT contestants.contestant_name FROM CONTESTANTS AS contestants WHERE contestants.contestant_number = 9"
  },
  {
    "db_id": "voter_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1        EXCEPT SELECT T2.area_code FROM AREA_CODE_STATE AS T2 WHERE T2.state = \"AK\"",
    "readable_query": "SELECT area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state        EXCEPT SELECT area_code_state.area_code FROM AREA_CODE_STATE AS area_code_state WHERE area_code_state.state = \"AK\""
  },
  {
    "db_id": "voter_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.created FROM VOTES AS T1        EXCEPT SELECT T2.created FROM VOTES AS T2 WHERE T2.vote_id = 3",
    "readable_query": "SELECT votes.created FROM VOTES AS votes        EXCEPT SELECT votes.created FROM VOTES AS votes WHERE votes.vote_id = 3"
  },
  {
    "db_id": "voter_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1        EXCEPT SELECT T2.contestant_number FROM CONTESTANTS AS T2 WHERE T2.contestant_name = \"Loraine NygrenTania Mattioli\"",
    "readable_query": "SELECT contestants.contestant_number FROM CONTESTANTS AS contestants        EXCEPT SELECT contestants.contestant_number FROM CONTESTANTS AS contestants WHERE contestants.contestant_name = \"Loraine NygrenTania Mattioli\""
  },
  {
    "db_id": "voter_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1        EXCEPT SELECT T2.contestant_name FROM CONTESTANTS AS T2 WHERE T2.contestant_number = 1",
    "readable_query": "SELECT contestants.contestant_name FROM CONTESTANTS AS contestants        EXCEPT SELECT contestants.contestant_name FROM CONTESTANTS AS contestants WHERE contestants.contestant_number = 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Name FROM conductor AS T1 WHERE T1.Year_of_Work = 11",
    "readable_query": "SELECT conductor.Name FROM conductor AS conductor WHERE conductor.Year_of_Work = 11"
  },
  {
    "db_id": "orchestra",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Performance_ID FROM show AS T1 WHERE T1.Show_ID = 1",
    "readable_query": "SELECT show.Performance_ID FROM show AS show WHERE show.Show_ID = 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Year_of_Work FROM conductor AS T1 WHERE T1.Age = 42",
    "readable_query": "SELECT conductor.Year_of_Work FROM conductor AS conductor WHERE conductor.Age = 42"
  },
  {
    "db_id": "orchestra",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Result FROM show AS T1 WHERE T1.Performance_ID = 1",
    "readable_query": "SELECT show.Result FROM show AS show WHERE show.Performance_ID = 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Orchestra FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID = 5",
    "readable_query": "SELECT orchestra.Orchestra FROM orchestra AS orchestra JOIN performance AS performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Performance_ID = 5"
  },
  {
    "db_id": "orchestra",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Weekly_rank FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Orchestra_ID = 5",
    "readable_query": "SELECT performance.Weekly_rank FROM performance AS performance JOIN orchestra AS orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE orchestra.Orchestra_ID = 5"
  },
  {
    "db_id": "orchestra",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Share FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Orchestra = \"Detroit Symphony Orchestra\"",
    "readable_query": "SELECT performance.Share FROM performance AS performance JOIN orchestra AS orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE orchestra.Orchestra = \"Detroit Symphony Orchestra\""
  },
  {
    "db_id": "orchestra",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Orchestra, count(*) FROM orchestra AS T1  GROUP BY T1.Orchestra",
    "readable_query": "SELECT orchestra.Orchestra, count(*) FROM orchestra AS orchestra  GROUP BY orchestra.Orchestra"
  },
  {
    "db_id": "orchestra",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Age, count(*) FROM conductor AS T1  GROUP BY T1.Age",
    "readable_query": "SELECT conductor.Age, count(*) FROM conductor AS conductor  GROUP BY conductor.Age"
  },
  {
    "db_id": "orchestra",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Name, count(*) FROM conductor AS T1  GROUP BY T1.Name",
    "readable_query": "SELECT conductor.Name, count(*) FROM conductor AS conductor  GROUP BY conductor.Name"
  },
  {
    "db_id": "orchestra",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Year_of_Work, count(*) FROM conductor AS T1  GROUP BY T1.Year_of_Work",
    "readable_query": "SELECT conductor.Year_of_Work, count(*) FROM conductor AS conductor  GROUP BY conductor.Year_of_Work"
  },
  {
    "db_id": "orchestra",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Share, count(*) FROM performance AS T1  GROUP BY T1.Share",
    "readable_query": "SELECT performance.Share, count(*) FROM performance AS performance  GROUP BY performance.Share"
  },
  {
    "db_id": "orchestra",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Date, count(*) FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID  GROUP BY T1.Date",
    "readable_query": "SELECT performance.Date, count(*) FROM performance AS performance JOIN orchestra AS orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID  GROUP BY performance.Date"
  },
  {
    "db_id": "orchestra",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Orchestra_ID, count(*) FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Orchestra_ID",
    "readable_query": "SELECT orchestra.Orchestra_ID, count(*) FROM orchestra AS orchestra JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID  GROUP BY orchestra.Orchestra_ID"
  },
  {
    "db_id": "orchestra",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Record_Company, count(*) FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Record_Company",
    "readable_query": "SELECT orchestra.Record_Company, count(*) FROM orchestra AS orchestra JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID  GROUP BY orchestra.Record_Company"
  },
  {
    "db_id": "orchestra",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Name, count(*) FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Name",
    "readable_query": "SELECT conductor.Name, count(*) FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID  GROUP BY conductor.Name"
  },
  {
    "db_id": "orchestra",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Orchestra, count(*) FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Orchestra",
    "readable_query": "SELECT orchestra.Orchestra, count(*) FROM orchestra AS orchestra JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID  GROUP BY orchestra.Orchestra"
  },
  {
    "db_id": "orchestra",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM performance AS T1",
    "readable_query": "SELECT count(*) FROM performance AS performance"
  },
  {
    "db_id": "orchestra",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM conductor AS T1",
    "readable_query": "SELECT count(*) FROM conductor AS conductor"
  },
  {
    "db_id": "orchestra",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Type, T1.Performance_ID FROM performance AS T1",
    "readable_query": "SELECT performance.Type, performance.Performance_ID FROM performance AS performance"
  },
  {
    "db_id": "orchestra",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Orchestra, T1.Orchestra_ID FROM orchestra AS T1",
    "readable_query": "SELECT orchestra.Orchestra, orchestra.Orchestra_ID FROM orchestra AS orchestra"
  },
  {
    "db_id": "orchestra",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Show_ID, T1.Performance_ID FROM show AS T1",
    "readable_query": "SELECT show.Show_ID, show.Performance_ID FROM show AS show"
  },
  {
    "db_id": "orchestra",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Attendance, T1.Result FROM show AS T1",
    "readable_query": "SELECT show.Attendance, show.Result FROM show AS show"
  },
  {
    "db_id": "orchestra",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Year_of_Work, T1.Nationality FROM conductor AS T1",
    "readable_query": "SELECT conductor.Year_of_Work, conductor.Nationality FROM conductor AS conductor"
  },
  {
    "db_id": "orchestra",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Name, T2.Record_Company FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",
    "readable_query": "SELECT conductor.Name, orchestra.Record_Company FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID"
  },
  {
    "db_id": "orchestra",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.If_first_show, T2.Share FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID",
    "readable_query": "SELECT show.If_first_show, performance.Share FROM show AS show JOIN performance AS performance ON show.Performance_ID = performance.Performance_ID"
  },
  {
    "db_id": "orchestra",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Nationality, T2.Major_Record_Format FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",
    "readable_query": "SELECT conductor.Nationality, orchestra.Major_Record_Format FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID"
  },
  {
    "db_id": "orchestra",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Name, T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",
    "readable_query": "SELECT conductor.Name, orchestra.Orchestra FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID"
  },
  {
    "db_id": "orchestra",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Performance_ID, T1.Show_ID FROM show AS T1 WHERE T1.Result = \"T\"",
    "readable_query": "SELECT show.Performance_ID, show.Show_ID FROM show AS show WHERE show.Result = \"T\""
  },
  {
    "db_id": "orchestra",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Conductor_ID, T1.Year_of_Founded FROM orchestra AS T1 WHERE T1.Orchestra = \"Montreal Symphony Orchestra\"",
    "readable_query": "SELECT orchestra.Conductor_ID, orchestra.Year_of_Founded FROM orchestra AS orchestra WHERE orchestra.Orchestra = \"Montreal Symphony Orchestra\""
  },
  {
    "db_id": "orchestra",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Name, T1.Age FROM conductor AS T1 WHERE T1.Conductor_ID = 9",
    "readable_query": "SELECT conductor.Name, conductor.Age FROM conductor AS conductor WHERE conductor.Conductor_ID = 9"
  },
  {
    "db_id": "orchestra",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Attendance, T1.Show_ID FROM show AS T1 WHERE T1.If_first_show = \"St. Mirren Park\"",
    "readable_query": "SELECT show.Attendance, show.Show_ID FROM show AS show WHERE show.If_first_show = \"St. Mirren Park\""
  },
  {
    "db_id": "orchestra",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Weekly_rank FROM performance AS T1  GROUP BY T1.Weekly_rank  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT performance.Weekly_rank FROM performance AS performance  GROUP BY performance.Weekly_rank  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Orchestra_ID FROM orchestra AS T1  GROUP BY T1.Orchestra_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT orchestra.Orchestra_ID FROM orchestra AS orchestra  GROUP BY orchestra.Orchestra_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Orchestra_ID FROM orchestra AS T1  GROUP BY T1.Orchestra_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT orchestra.Orchestra_ID FROM orchestra AS orchestra  GROUP BY orchestra.Orchestra_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Performance_ID FROM performance AS T1  GROUP BY T1.Performance_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT performance.Performance_ID FROM performance AS performance  GROUP BY performance.Performance_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Name FROM conductor AS T1  GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT conductor.Name FROM conductor AS conductor  GROUP BY conductor.Name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Orchestra_ID FROM performance AS T1  GROUP BY T1.Orchestra_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT performance.Orchestra_ID FROM performance AS performance  GROUP BY performance.Orchestra_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM performance AS T1 WHERE T1.Performance_ID = 10",
    "readable_query": "SELECT count(*) FROM performance AS performance WHERE performance.Performance_ID = 10"
  },
  {
    "db_id": "orchestra",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM show AS T1 WHERE T1.Show_ID = 5",
    "readable_query": "SELECT count(*) FROM show AS show WHERE show.Show_ID = 5"
  },
  {
    "db_id": "orchestra",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM orchestra AS T1 WHERE T1.Record_Company = \"Deutsche Grammophon\"",
    "readable_query": "SELECT count(*) FROM orchestra AS orchestra WHERE orchestra.Record_Company = \"Deutsche Grammophon\""
  },
  {
    "db_id": "orchestra",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM performance AS T1 WHERE T1.Date = \"15 June\"",
    "readable_query": "SELECT count(*) FROM performance AS performance WHERE performance.Date = \"15 June\""
  },
  {
    "db_id": "orchestra",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM conductor AS T1 WHERE T1.Conductor_ID = 9",
    "readable_query": "SELECT count(*) FROM conductor AS conductor WHERE conductor.Conductor_ID = 9"
  },
  {
    "db_id": "orchestra",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM conductor AS T1 WHERE T1.Name = \"Robert Craft\"",
    "readable_query": "SELECT count(*) FROM conductor AS conductor WHERE conductor.Name = \"Robert Craft\""
  },
  {
    "db_id": "orchestra",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM orchestra AS T1 WHERE T1.Orchestra = \"San Francisco Symphony Orchestra\"",
    "readable_query": "SELECT count(*) FROM orchestra AS orchestra WHERE orchestra.Orchestra = \"San Francisco Symphony Orchestra\""
  },
  {
    "db_id": "orchestra",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM show AS T1 WHERE T1.If_first_show = \"St. Mirren Park\"",
    "readable_query": "SELECT count(*) FROM show AS show WHERE show.If_first_show = \"St. Mirren Park\""
  },
  {
    "db_id": "orchestra",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Show_ID FROM show AS T1    ORDER BY T1.Attendance DESC LIMIT 1",
    "readable_query": "SELECT show.Show_ID FROM show AS show    ORDER BY show.Attendance DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Performance_ID FROM show AS T1    ORDER BY T1.Attendance DESC LIMIT 1",
    "readable_query": "SELECT show.Performance_ID FROM show AS show    ORDER BY show.Attendance DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Show_ID FROM show AS T1    ORDER BY T1.Performance_ID DESC LIMIT 1",
    "readable_query": "SELECT show.Show_ID FROM show AS show    ORDER BY show.Performance_ID DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Type FROM performance AS T1    ORDER BY T1.Performance_ID DESC LIMIT 1",
    "readable_query": "SELECT performance.Type FROM performance AS performance    ORDER BY performance.Performance_ID DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Result FROM show AS T1    ORDER BY T1.Performance_ID DESC LIMIT 1",
    "readable_query": "SELECT show.Result FROM show AS show    ORDER BY show.Performance_ID DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.If_first_show FROM show AS T1    ORDER BY T1.Performance_ID DESC LIMIT 1",
    "readable_query": "SELECT show.If_first_show FROM show AS show    ORDER BY show.Performance_ID DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Show_ID FROM show AS T1    ORDER BY T1.Performance_ID DESC LIMIT 1",
    "readable_query": "SELECT show.Show_ID FROM show AS show    ORDER BY show.Performance_ID DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.If_first_show FROM show AS T1    ORDER BY T1.Performance_ID DESC LIMIT 1",
    "readable_query": "SELECT show.If_first_show FROM show AS show    ORDER BY show.Performance_ID DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Record_Company FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID    ORDER BY T2.Age DESC LIMIT 1",
    "readable_query": "SELECT orchestra.Record_Company FROM orchestra AS orchestra JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID    ORDER BY conductor.Age DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Record_Company FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID    ORDER BY T2.Conductor_ID DESC LIMIT 1",
    "readable_query": "SELECT orchestra.Record_Company FROM orchestra AS orchestra JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID    ORDER BY conductor.Conductor_ID DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Weekly_rank FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID    ORDER BY T2.Orchestra_ID ASC LIMIT 1",
    "readable_query": "SELECT performance.Weekly_rank FROM performance AS performance JOIN orchestra AS orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID    ORDER BY orchestra.Orchestra_ID ASC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Weekly_rank, T1.Type FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID    ORDER BY T2.Attendance DESC LIMIT 1",
    "readable_query": "SELECT performance.Weekly_rank, performance.Type FROM performance AS performance JOIN show AS show ON performance.Performance_ID = show.Performance_ID    ORDER BY show.Attendance DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Year_of_Founded, T1.Record_Company FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID    ORDER BY T2.Orchestra_ID DESC LIMIT 1",
    "readable_query": "SELECT orchestra.Year_of_Founded, orchestra.Record_Company FROM orchestra AS orchestra JOIN performance AS performance ON orchestra.Orchestra_ID = performance.Orchestra_ID    ORDER BY performance.Orchestra_ID DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Orchestra_ID, T1.Share FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID    ORDER BY T2.Year_of_Founded DESC LIMIT 1",
    "readable_query": "SELECT performance.Orchestra_ID, performance.Share FROM performance AS performance JOIN orchestra AS orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID    ORDER BY orchestra.Year_of_Founded DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name, T1.Conductor_ID FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID    ORDER BY T2.Orchestra_ID DESC LIMIT 1",
    "readable_query": "SELECT conductor.Name, conductor.Conductor_ID FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID    ORDER BY orchestra.Orchestra_ID DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Show_ID, T1.If_first_show FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID    ORDER BY T2.Performance_ID DESC LIMIT 1",
    "readable_query": "SELECT show.Show_ID, show.If_first_show FROM show AS show JOIN performance AS performance ON show.Performance_ID = performance.Performance_ID    ORDER BY performance.Performance_ID DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Share, T1.Orchestra_ID FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID    ORDER BY T2.Conductor_ID DESC LIMIT 1",
    "readable_query": "SELECT performance.Share, performance.Orchestra_ID FROM performance AS performance JOIN orchestra AS orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID    ORDER BY orchestra.Conductor_ID DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Record_Company, T1.Conductor_ID FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID    ORDER BY T2.Year_of_Work DESC LIMIT 1",
    "readable_query": "SELECT orchestra.Record_Company, orchestra.Conductor_ID FROM orchestra AS orchestra JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID    ORDER BY conductor.Year_of_Work DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Share) FROM performance AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  performance.Share) FROM performance AS performance"
  },
  {
    "db_id": "orchestra",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Orchestra) FROM orchestra AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  orchestra.Orchestra) FROM orchestra AS orchestra"
  },
  {
    "db_id": "orchestra",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Age) FROM conductor AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  conductor.Age) FROM conductor AS conductor"
  },
  {
    "db_id": "orchestra",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Show_ID) FROM show AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  show.Show_ID) FROM show AS show"
  },
  {
    "db_id": "orchestra",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Conductor_ID) FROM conductor AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  conductor.Conductor_ID) FROM conductor AS conductor"
  },
  {
    "db_id": "orchestra",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Weekly_rank) FROM performance AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  performance.Weekly_rank) FROM performance AS performance"
  },
  {
    "db_id": "orchestra",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Year_of_Work) FROM conductor AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  conductor.Year_of_Work) FROM conductor AS conductor"
  },
  {
    "db_id": "orchestra",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Year_of_Work) FROM conductor AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  conductor.Year_of_Work) FROM conductor AS conductor"
  },
  {
    "db_id": "orchestra",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Attendance) FROM show AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  show.Attendance) FROM show AS show"
  },
  {
    "db_id": "orchestra",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Conductor_ID) FROM conductor AS T1",
    "readable_query": "SELECT avg( conductor.Conductor_ID) FROM conductor AS conductor"
  },
  {
    "db_id": "orchestra",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Age) FROM conductor AS T1",
    "readable_query": "SELECT avg( conductor.Age) FROM conductor AS conductor"
  },
  {
    "db_id": "orchestra",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Conductor_ID) FROM orchestra AS T1",
    "readable_query": "SELECT avg( orchestra.Conductor_ID) FROM orchestra AS orchestra"
  },
  {
    "db_id": "orchestra",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Performance_ID) FROM performance AS T1",
    "readable_query": "SELECT avg( performance.Performance_ID) FROM performance AS performance"
  },
  {
    "db_id": "orchestra",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Performance_ID) FROM show AS T1",
    "readable_query": "SELECT avg( show.Performance_ID) FROM show AS show"
  },
  {
    "db_id": "orchestra",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Orchestra_ID) FROM orchestra AS T1",
    "readable_query": "SELECT avg( orchestra.Orchestra_ID) FROM orchestra AS orchestra"
  },
  {
    "db_id": "orchestra",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Conductor_ID) FROM orchestra AS T1",
    "readable_query": "SELECT avg( orchestra.Conductor_ID) FROM orchestra AS orchestra"
  },
  {
    "db_id": "orchestra",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Year_of_Founded) FROM orchestra AS T1",
    "readable_query": "SELECT avg( orchestra.Year_of_Founded) FROM orchestra AS orchestra"
  },
  {
    "db_id": "orchestra",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.If_first_show FROM show AS T1",
    "readable_query": "SELECT show.If_first_show FROM show AS show"
  },
  {
    "db_id": "orchestra",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Name FROM conductor AS T1",
    "readable_query": "SELECT conductor.Name FROM conductor AS conductor"
  },
  {
    "db_id": "orchestra",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Conductor_ID FROM orchestra AS T1",
    "readable_query": "SELECT orchestra.Conductor_ID FROM orchestra AS orchestra"
  },
  {
    "db_id": "orchestra",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Performance_ID FROM show AS T1",
    "readable_query": "SELECT DISTINCT show.Performance_ID FROM show AS show"
  },
  {
    "db_id": "orchestra",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Orchestra FROM orchestra AS T1",
    "readable_query": "SELECT DISTINCT orchestra.Orchestra FROM orchestra AS orchestra"
  },
  {
    "db_id": "orchestra",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Attendance FROM show AS T1",
    "readable_query": "SELECT DISTINCT show.Attendance FROM show AS show"
  },
  {
    "db_id": "orchestra",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Name FROM conductor AS T1",
    "readable_query": "SELECT DISTINCT conductor.Name FROM conductor AS conductor"
  },
  {
    "db_id": "orchestra",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Show_ID FROM show AS T1",
    "readable_query": "SELECT DISTINCT show.Show_ID FROM show AS show"
  },
  {
    "db_id": "orchestra",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Result FROM show AS T1",
    "readable_query": "SELECT DISTINCT show.Result FROM show AS show"
  },
  {
    "db_id": "orchestra",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Age FROM conductor AS T1",
    "readable_query": "SELECT DISTINCT conductor.Age FROM conductor AS conductor"
  },
  {
    "db_id": "orchestra",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Orchestra FROM orchestra AS T1     ORDER BY T1.Conductor_ID ASC",
    "readable_query": "SELECT orchestra.Orchestra FROM orchestra AS orchestra     ORDER BY orchestra.Conductor_ID ASC"
  },
  {
    "db_id": "orchestra",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Major_Record_Format FROM orchestra AS T1     ORDER BY T1.Year_of_Founded ASC",
    "readable_query": "SELECT orchestra.Major_Record_Format FROM orchestra AS orchestra     ORDER BY orchestra.Year_of_Founded ASC"
  },
  {
    "db_id": "orchestra",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Attendance FROM show AS T1     ORDER BY T1.Performance_ID ASC",
    "readable_query": "SELECT show.Attendance FROM show AS show     ORDER BY show.Performance_ID ASC"
  },
  {
    "db_id": "orchestra",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Performance_ID FROM show AS T1     ORDER BY T1.Show_ID ASC",
    "readable_query": "SELECT show.Performance_ID FROM show AS show     ORDER BY show.Show_ID ASC"
  },
  {
    "db_id": "orchestra",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Performance_ID FROM show AS T1     ORDER BY T1.Attendance ASC",
    "readable_query": "SELECT show.Performance_ID FROM show AS show     ORDER BY show.Attendance ASC"
  },
  {
    "db_id": "orchestra",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Show_ID FROM show AS T1     ORDER BY T1.Attendance DESC",
    "readable_query": "SELECT show.Show_ID FROM show AS show     ORDER BY show.Attendance DESC"
  },
  {
    "db_id": "orchestra",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Result FROM show AS T1     ORDER BY T1.Show_ID DESC",
    "readable_query": "SELECT show.Result FROM show AS show     ORDER BY show.Show_ID DESC"
  },
  {
    "db_id": "orchestra",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Orchestra_ID FROM orchestra AS T1     ORDER BY T1.Year_of_Founded DESC",
    "readable_query": "SELECT orchestra.Orchestra_ID FROM orchestra AS orchestra     ORDER BY orchestra.Year_of_Founded DESC"
  },
  {
    "db_id": "orchestra",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Share FROM performance AS T1     ORDER BY T1.Orchestra_ID DESC",
    "readable_query": "SELECT performance.Share FROM performance AS performance     ORDER BY performance.Orchestra_ID DESC"
  },
  {
    "db_id": "orchestra",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Nationality FROM conductor AS T1     ORDER BY T1.Conductor_ID DESC",
    "readable_query": "SELECT conductor.Nationality FROM conductor AS conductor     ORDER BY conductor.Conductor_ID DESC"
  },
  {
    "db_id": "orchestra",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Age, T1.Year_of_Work FROM conductor AS T1     ORDER BY T1.Year_of_Work ASC",
    "readable_query": "SELECT conductor.Age, conductor.Year_of_Work FROM conductor AS conductor     ORDER BY conductor.Year_of_Work ASC"
  },
  {
    "db_id": "orchestra",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Performance_ID, T1.Share FROM performance AS T1     ORDER BY T1.Share ASC",
    "readable_query": "SELECT performance.Performance_ID, performance.Share FROM performance AS performance     ORDER BY performance.Share ASC"
  },
  {
    "db_id": "orchestra",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Record_Company, T1.Orchestra_ID FROM orchestra AS T1     ORDER BY T1.Orchestra_ID ASC",
    "readable_query": "SELECT orchestra.Record_Company, orchestra.Orchestra_ID FROM orchestra AS orchestra     ORDER BY orchestra.Orchestra_ID ASC"
  },
  {
    "db_id": "orchestra",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Conductor_ID, T1.Age FROM conductor AS T1     ORDER BY T1.Age ASC",
    "readable_query": "SELECT conductor.Conductor_ID, conductor.Age FROM conductor AS conductor     ORDER BY conductor.Age ASC"
  },
  {
    "db_id": "orchestra",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Attendance, T1.Show_ID FROM show AS T1     ORDER BY T1.Show_ID ASC",
    "readable_query": "SELECT show.Attendance, show.Show_ID FROM show AS show     ORDER BY show.Show_ID ASC"
  },
  {
    "db_id": "orchestra",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Result FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID JOIN orchestra AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID WHERE T2.Weekly_rank = \"TBC\" and T3.Major_Record_Format = \"CD / LP\"",
    "readable_query": "SELECT show.Result FROM show AS show JOIN performance AS performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra AS orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE performance.Weekly_rank = \"TBC\" and orchestra.Major_Record_Format = \"CD / LP\""
  },
  {
    "db_id": "orchestra",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Attendance FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID JOIN orchestra AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID WHERE T2.Performance_ID = 6 and T3.Year_of_Founded = 2007.0",
    "readable_query": "SELECT show.Attendance FROM show AS show JOIN performance AS performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra AS orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE performance.Performance_ID = 6 and orchestra.Year_of_Founded = 2007.0"
  },
  {
    "db_id": "orchestra",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Performance_ID FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID JOIN orchestra AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID WHERE T2.Weekly_rank = \"TBC\" and T3.Year_of_Founded = 2007.0",
    "readable_query": "SELECT show.Performance_ID FROM show AS show JOIN performance AS performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra AS orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE performance.Weekly_rank = \"TBC\" and orchestra.Year_of_Founded = 2007.0"
  },
  {
    "db_id": "orchestra",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Conductor_ID FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID JOIN show AS T3 ON T2.Performance_ID = T3.Performance_ID WHERE T2.Performance_ID = 2 and T3.Result = \"F\"",
    "readable_query": "SELECT orchestra.Conductor_ID FROM orchestra AS orchestra JOIN performance AS performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show AS show ON performance.Performance_ID = show.Performance_ID WHERE performance.Performance_ID = 2 and show.Result = \"F\""
  },
  {
    "db_id": "orchestra",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Orchestra FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID JOIN show AS T3 ON T2.Performance_ID = T3.Performance_ID WHERE T2.Date = \"14 June\" and T3.Show_ID = 3",
    "readable_query": "SELECT orchestra.Orchestra FROM orchestra AS orchestra JOIN performance AS performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show AS show ON performance.Performance_ID = show.Performance_ID WHERE performance.Date = \"14 June\" and show.Show_ID = 3"
  },
  {
    "db_id": "orchestra",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Orchestra FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Name = \"Seiji Ozawa\" or T2.Name = \"Seiji Ozawa\"",
    "readable_query": "SELECT orchestra.Orchestra FROM orchestra AS orchestra JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID WHERE conductor.Name = \"Seiji Ozawa\" or conductor.Name = \"Seiji Ozawa\""
  },
  {
    "db_id": "orchestra",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Conductor_ID FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Orchestra_ID = 7 or T2.Orchestra_ID = 11",
    "readable_query": "SELECT conductor.Conductor_ID FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Orchestra_ID = 7 or orchestra.Orchestra_ID = 11"
  },
  {
    "db_id": "orchestra",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Orchestra FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Work = 6 or T2.Year_of_Work = 20",
    "readable_query": "SELECT orchestra.Orchestra FROM orchestra AS orchestra JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID WHERE conductor.Year_of_Work = 6 or conductor.Year_of_Work = 20"
  },
  {
    "db_id": "orchestra",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Attendance FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Weekly_rank = \"TBC\" or T2.Weekly_rank = \"2\"",
    "readable_query": "SELECT show.Attendance FROM show AS show JOIN performance AS performance ON show.Performance_ID = performance.Performance_ID WHERE performance.Weekly_rank = \"TBC\" or performance.Weekly_rank = \"2\""
  },
  {
    "db_id": "orchestra",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Year_of_Founded FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Work = 11 or T2.Year_of_Work = 10",
    "readable_query": "SELECT orchestra.Year_of_Founded FROM orchestra AS orchestra JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID WHERE conductor.Year_of_Work = 11 or conductor.Year_of_Work = 10"
  },
  {
    "db_id": "orchestra",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Date FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Conductor_ID = 7 or T2.Conductor_ID = 6",
    "readable_query": "SELECT performance.Date FROM performance AS performance JOIN orchestra AS orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE orchestra.Conductor_ID = 7 or orchestra.Conductor_ID = 6"
  },
  {
    "db_id": "orchestra",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Nationality FROM conductor AS T1 WHERE T1.Conductor_ID = 8 and T1.Name = \"Charles Dutoit\"",
    "readable_query": "SELECT conductor.Nationality FROM conductor AS conductor WHERE conductor.Conductor_ID = 8 and conductor.Name = \"Charles Dutoit\""
  },
  {
    "db_id": "orchestra",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Nationality FROM conductor AS T1 WHERE T1.Year_of_Work = 11 and T1.Name = \"Robert Craft\"",
    "readable_query": "SELECT conductor.Nationality FROM conductor AS conductor WHERE conductor.Year_of_Work = 11 and conductor.Name = \"Robert Craft\""
  },
  {
    "db_id": "orchestra",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Type FROM performance AS T1 WHERE T1.Date = \"10 June\" and T1.Weekly_rank = \"7\"",
    "readable_query": "SELECT performance.Type FROM performance AS performance WHERE performance.Date = \"10 June\" and performance.Weekly_rank = \"7\""
  },
  {
    "db_id": "orchestra",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Year_of_Founded FROM orchestra AS T1 WHERE T1.Conductor_ID = 11 and T1.Orchestra = \"San Francisco Symphony Orchestra\"",
    "readable_query": "SELECT orchestra.Year_of_Founded FROM orchestra AS orchestra WHERE orchestra.Conductor_ID = 11 and orchestra.Orchestra = \"San Francisco Symphony Orchestra\""
  },
  {
    "db_id": "orchestra",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Orchestra_ID FROM performance AS T1 WHERE T1.Type = \"Auditions 1\" and T1.Weekly_rank = \"7\"",
    "readable_query": "SELECT performance.Orchestra_ID FROM performance AS performance WHERE performance.Type = \"Auditions 1\" and performance.Weekly_rank = \"7\""
  },
  {
    "db_id": "orchestra",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Weekly_rank) FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T1.Share = \"38.1%\" and T2.Show_ID = 3",
    "readable_query": "SELECT DISTINCT count(DISTINCT  performance.Weekly_rank) FROM performance AS performance JOIN show AS show ON performance.Performance_ID = show.Performance_ID WHERE performance.Share = \"38.1%\" and show.Show_ID = 3"
  },
  {
    "db_id": "orchestra",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Result) FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T1.If_first_show = \"St. Mirren Park\" and T2.Type = \"Semi-final 3\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  show.Result) FROM show AS show JOIN performance AS performance ON show.Performance_ID = performance.Performance_ID WHERE show.If_first_show = \"St. Mirren Park\" and performance.Type = \"Semi-final 3\""
  },
  {
    "db_id": "orchestra",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Orchestra_ID) FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T1.Performance_ID = 4 and T2.Year_of_Founded = 2002.0",
    "readable_query": "SELECT DISTINCT count(DISTINCT  performance.Orchestra_ID) FROM performance AS performance JOIN orchestra AS orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE performance.Performance_ID = 4 and orchestra.Year_of_Founded = 2002.0"
  },
  {
    "db_id": "orchestra",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Year_of_Work) FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Conductor_ID = 5 and T2.Major_Record_Format = \"DVD\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  conductor.Year_of_Work) FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE conductor.Conductor_ID = 5 and orchestra.Major_Record_Format = \"DVD\""
  },
  {
    "db_id": "orchestra",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Year_of_Founded FROM orchestra AS T1 WHERE T1.Conductor_ID = 4 or T1.Orchestra_ID = 4",
    "readable_query": "SELECT orchestra.Year_of_Founded FROM orchestra AS orchestra WHERE orchestra.Conductor_ID = 4 or orchestra.Orchestra_ID = 4"
  },
  {
    "db_id": "orchestra",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Name FROM conductor AS T1 WHERE T1.Conductor_ID = 1 or T1.Year_of_Work = 12",
    "readable_query": "SELECT conductor.Name FROM conductor AS conductor WHERE conductor.Conductor_ID = 1 or conductor.Year_of_Work = 12"
  },
  {
    "db_id": "orchestra",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Record_Company FROM orchestra AS T1 WHERE T1.Year_of_Founded = 2009.0 or T1.Conductor_ID = 8",
    "readable_query": "SELECT orchestra.Record_Company FROM orchestra AS orchestra WHERE orchestra.Year_of_Founded = 2009.0 or orchestra.Conductor_ID = 8"
  },
  {
    "db_id": "orchestra",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Attendance FROM show AS T1 WHERE T1.Performance_ID = 5 or T1.Result = \"F\"",
    "readable_query": "SELECT show.Attendance FROM show AS show WHERE show.Performance_ID = 5 or show.Result = \"F\""
  },
  {
    "db_id": "orchestra",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.If_first_show = \"Glebe Park\" and T2.Performance_ID = 1",
    "readable_query": "SELECT count(*) FROM performance AS performance JOIN show AS show ON performance.Performance_ID = show.Performance_ID WHERE show.If_first_show = \"Glebe Park\" and show.Performance_ID = 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Show_ID = 3 and T2.If_first_show = \"Fir Park\"",
    "readable_query": "SELECT count(*) FROM performance AS performance JOIN show AS show ON performance.Performance_ID = show.Performance_ID WHERE show.Show_ID = 3 and show.If_first_show = \"Fir Park\""
  },
  {
    "db_id": "orchestra",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Share = \"29.3%\" and T2.Orchestra_ID = 5",
    "readable_query": "SELECT count(*) FROM show AS show JOIN performance AS performance ON show.Performance_ID = performance.Performance_ID WHERE performance.Share = \"29.3%\" and performance.Orchestra_ID = 5"
  },
  {
    "db_id": "orchestra",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Orchestra FROM orchestra AS T1 WHERE T1.Conductor_ID != 10",
    "readable_query": "SELECT orchestra.Orchestra FROM orchestra AS orchestra WHERE orchestra.Conductor_ID != 10"
  },
  {
    "db_id": "orchestra",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Year_of_Founded FROM orchestra AS T1 WHERE T1.Orchestra_ID != 6",
    "readable_query": "SELECT orchestra.Year_of_Founded FROM orchestra AS orchestra WHERE orchestra.Orchestra_ID != 6"
  },
  {
    "db_id": "orchestra",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Orchestra_ID FROM orchestra AS T1 WHERE T1.Orchestra != \"London Symphony Orchestra\"",
    "readable_query": "SELECT orchestra.Orchestra_ID FROM orchestra AS orchestra WHERE orchestra.Orchestra != \"London Symphony Orchestra\""
  },
  {
    "db_id": "orchestra",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Major_Record_Format FROM orchestra AS T1 WHERE T1.Orchestra_ID != 2",
    "readable_query": "SELECT orchestra.Major_Record_Format FROM orchestra AS orchestra WHERE orchestra.Orchestra_ID != 2"
  },
  {
    "db_id": "orchestra",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Orchestra_ID FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Age != 43",
    "readable_query": "SELECT orchestra.Orchestra_ID FROM orchestra AS orchestra JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID WHERE conductor.Age != 43"
  },
  {
    "db_id": "orchestra",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Show_ID FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Performance_ID != 8",
    "readable_query": "SELECT show.Show_ID FROM show AS show JOIN performance AS performance ON show.Performance_ID = performance.Performance_ID WHERE performance.Performance_ID != 8"
  },
  {
    "db_id": "orchestra",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Year_of_Work FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Record_Company != \"Deutsche Grammophon\"",
    "readable_query": "SELECT conductor.Year_of_Work FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Record_Company != \"Deutsche Grammophon\""
  },
  {
    "db_id": "orchestra",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Conductor_ID FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Record_Company != \"Deutsche Grammophon\"",
    "readable_query": "SELECT conductor.Conductor_ID FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Record_Company != \"Deutsche Grammophon\""
  },
  {
    "db_id": "orchestra",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Performance_ID FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.If_first_show != \"St. Mirren Park\"",
    "readable_query": "SELECT performance.Performance_ID FROM performance AS performance JOIN show AS show ON performance.Performance_ID = show.Performance_ID WHERE show.If_first_show != \"St. Mirren Park\""
  },
  {
    "db_id": "orchestra",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Weekly_rank FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Orchestra != \"Royal Concertgebouw Orchestra\"",
    "readable_query": "SELECT performance.Weekly_rank FROM performance AS performance JOIN orchestra AS orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE orchestra.Orchestra != \"Royal Concertgebouw Orchestra\""
  },
  {
    "db_id": "orchestra",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Type FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Performance_ID = 3",
    "readable_query": "SELECT DISTINCT performance.Type FROM performance AS performance JOIN show AS show ON performance.Performance_ID = show.Performance_ID WHERE show.Performance_ID = 3"
  },
  {
    "db_id": "orchestra",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Attendance FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Weekly_rank = \"13\"",
    "readable_query": "SELECT DISTINCT show.Attendance FROM show AS show JOIN performance AS performance ON show.Performance_ID = performance.Performance_ID WHERE performance.Weekly_rank = \"13\""
  },
  {
    "db_id": "orchestra",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Result FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Type = \"Auditions 5\"",
    "readable_query": "SELECT DISTINCT show.Result FROM show AS show JOIN performance AS performance ON show.Performance_ID = performance.Performance_ID WHERE performance.Type = \"Auditions 5\""
  },
  {
    "db_id": "orchestra",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Orchestra_ID) FROM orchestra AS T1 WHERE T1.Major_Record_Format = \"CD\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  orchestra.Orchestra_ID) FROM orchestra AS orchestra WHERE orchestra.Major_Record_Format = \"CD\""
  },
  {
    "db_id": "orchestra",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Performance_ID) FROM show AS T1 WHERE T1.Attendance = 1026.0",
    "readable_query": "SELECT DISTINCT count(DISTINCT  show.Performance_ID) FROM show AS show WHERE show.Attendance = 1026.0"
  },
  {
    "db_id": "orchestra",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.If_first_show) FROM show AS T1 WHERE T1.Result = \"F\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  show.If_first_show) FROM show AS show WHERE show.Result = \"F\""
  },
  {
    "db_id": "orchestra",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Conductor_ID) FROM orchestra AS T1 WHERE T1.Orchestra = \"Seattle Symphony Orchestra\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  orchestra.Conductor_ID) FROM orchestra AS orchestra WHERE orchestra.Orchestra = \"Seattle Symphony Orchestra\""
  },
  {
    "db_id": "orchestra",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Year_of_Founded) FROM orchestra AS T1 WHERE T1.Major_Record_Format = \"CD\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  orchestra.Year_of_Founded) FROM orchestra AS orchestra WHERE orchestra.Major_Record_Format = \"CD\""
  },
  {
    "db_id": "orchestra",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Nationality) FROM conductor AS T1 WHERE T1.Name = \"Robert Craft\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  conductor.Nationality) FROM conductor AS conductor WHERE conductor.Name = \"Robert Craft\""
  },
  {
    "db_id": "orchestra",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Date) FROM performance AS T1 WHERE T1.Type = \"Live final\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  performance.Date) FROM performance AS performance WHERE performance.Type = \"Live final\""
  },
  {
    "db_id": "orchestra",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Attendance FROM show AS T1 WHERE T1.Performance_ID > 5",
    "readable_query": "SELECT show.Attendance FROM show AS show WHERE show.Performance_ID > 5"
  },
  {
    "db_id": "orchestra",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Show_ID FROM show AS T1 WHERE T1.Attendance > 1026.0",
    "readable_query": "SELECT show.Show_ID FROM show AS show WHERE show.Attendance > 1026.0"
  },
  {
    "db_id": "orchestra",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Orchestra_ID FROM orchestra AS T1 WHERE T1.Conductor_ID > 11",
    "readable_query": "SELECT orchestra.Orchestra_ID FROM orchestra AS orchestra WHERE orchestra.Conductor_ID > 11"
  },
  {
    "db_id": "orchestra",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Age FROM conductor AS T1 WHERE T1.Year_of_Work > 11",
    "readable_query": "SELECT conductor.Age FROM conductor AS conductor WHERE conductor.Year_of_Work > 11"
  },
  {
    "db_id": "orchestra",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Major_Record_Format FROM orchestra AS T1 WHERE T1.Conductor_ID > 10",
    "readable_query": "SELECT orchestra.Major_Record_Format FROM orchestra AS orchestra WHERE orchestra.Conductor_ID > 10"
  },
  {
    "db_id": "orchestra",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Age FROM conductor AS T1 WHERE T1.Conductor_ID > 7",
    "readable_query": "SELECT conductor.Age FROM conductor AS conductor WHERE conductor.Conductor_ID > 7"
  },
  {
    "db_id": "orchestra",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.If_first_show, T2.Performance_ID, T3.Orchestra_ID FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID JOIN orchestra AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID",
    "readable_query": "SELECT show.If_first_show, performance.Performance_ID, orchestra.Orchestra_ID FROM show AS show JOIN performance AS performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra AS orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID"
  },
  {
    "db_id": "orchestra",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Performance_ID, T2.Share, T3.Orchestra_ID FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID JOIN orchestra AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID",
    "readable_query": "SELECT show.Performance_ID, performance.Share, orchestra.Orchestra_ID FROM show AS show JOIN performance AS performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra AS orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID"
  },
  {
    "db_id": "orchestra",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Orchestra_ID, T2.Year_of_Work, T3.Share FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T1.Orchestra_ID = T3.Orchestra_ID",
    "readable_query": "SELECT orchestra.Orchestra_ID, conductor.Year_of_Work, performance.Share FROM orchestra AS orchestra JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID JOIN performance AS performance ON orchestra.Orchestra_ID = performance.Orchestra_ID"
  },
  {
    "db_id": "orchestra",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Age, T2.Orchestra_ID, T3.Weekly_rank FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID",
    "readable_query": "SELECT conductor.Age, orchestra.Orchestra_ID, performance.Weekly_rank FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance AS performance ON orchestra.Orchestra_ID = performance.Orchestra_ID"
  },
  {
    "db_id": "orchestra",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Year_of_Founded, T2.Type, T3.Year_of_Work FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID JOIN conductor AS T3 ON T1.Conductor_ID = T3.Conductor_ID",
    "readable_query": "SELECT orchestra.Year_of_Founded, performance.Type, conductor.Year_of_Work FROM orchestra AS orchestra JOIN performance AS performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID"
  },
  {
    "db_id": "orchestra",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Name, T2.Orchestra_ID, T3.Weekly_rank FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID",
    "readable_query": "SELECT conductor.Name, orchestra.Orchestra_ID, performance.Weekly_rank FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance AS performance ON orchestra.Orchestra_ID = performance.Orchestra_ID"
  },
  {
    "db_id": "orchestra",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Age, T2.Conductor_ID, T3.Date FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID",
    "readable_query": "SELECT conductor.Age, orchestra.Conductor_ID, performance.Date FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance AS performance ON orchestra.Orchestra_ID = performance.Orchestra_ID"
  },
  {
    "db_id": "orchestra",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Conductor_ID, T2.Name, T3.Share FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T1.Orchestra_ID = T3.Orchestra_ID",
    "readable_query": "SELECT orchestra.Conductor_ID, conductor.Name, performance.Share FROM orchestra AS orchestra JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID JOIN performance AS performance ON orchestra.Orchestra_ID = performance.Orchestra_ID"
  },
  {
    "db_id": "orchestra",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Orchestra_ID FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID     ORDER BY T2.Performance_ID ASC",
    "readable_query": "SELECT orchestra.Orchestra_ID FROM orchestra AS orchestra JOIN performance AS performance ON orchestra.Orchestra_ID = performance.Orchestra_ID     ORDER BY performance.Performance_ID ASC"
  },
  {
    "db_id": "orchestra",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Conductor_ID FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID     ORDER BY T2.Year_of_Founded ASC",
    "readable_query": "SELECT conductor.Conductor_ID FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID     ORDER BY orchestra.Year_of_Founded ASC"
  },
  {
    "db_id": "orchestra",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Major_Record_Format FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID     ORDER BY T2.Age ASC",
    "readable_query": "SELECT orchestra.Major_Record_Format FROM orchestra AS orchestra JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID     ORDER BY conductor.Age ASC"
  },
  {
    "db_id": "orchestra",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Orchestra FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID     ORDER BY T2.Year_of_Work ASC",
    "readable_query": "SELECT orchestra.Orchestra FROM orchestra AS orchestra JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID     ORDER BY conductor.Year_of_Work ASC"
  },
  {
    "db_id": "orchestra",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID     ORDER BY T2.Orchestra_ID ASC",
    "readable_query": "SELECT conductor.Name FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID     ORDER BY orchestra.Orchestra_ID ASC"
  },
  {
    "db_id": "orchestra",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Age FROM conductor AS T1 WHERE T1.Nationality = \"UK\"     INTERSECT SELECT T2.Age FROM conductor AS T2 WHERE T2.Nationality = \"France\"",
    "readable_query": "SELECT conductor.Age FROM conductor AS conductor WHERE conductor.Nationality = \"UK\"     INTERSECT SELECT conductor.Age FROM conductor AS conductor WHERE conductor.Nationality = \"France\""
  },
  {
    "db_id": "orchestra",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Weekly_rank FROM performance AS T1 WHERE T1.Performance_ID = 4     INTERSECT SELECT T2.Weekly_rank FROM performance AS T2 WHERE T2.Performance_ID = 11",
    "readable_query": "SELECT performance.Weekly_rank FROM performance AS performance WHERE performance.Performance_ID = 4     INTERSECT SELECT performance.Weekly_rank FROM performance AS performance WHERE performance.Performance_ID = 11"
  },
  {
    "db_id": "orchestra",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Year_of_Founded FROM orchestra AS T1 WHERE T1.Conductor_ID = 10     INTERSECT SELECT T2.Year_of_Founded FROM orchestra AS T2 WHERE T2.Conductor_ID = 2",
    "readable_query": "SELECT orchestra.Year_of_Founded FROM orchestra AS orchestra WHERE orchestra.Conductor_ID = 10     INTERSECT SELECT orchestra.Year_of_Founded FROM orchestra AS orchestra WHERE orchestra.Conductor_ID = 2"
  },
  {
    "db_id": "orchestra",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Show_ID) FROM show AS T1 WHERE T1.If_first_show = \"Glebe Park\"",
    "readable_query": "SELECT avg( show.Show_ID) FROM show AS show WHERE show.If_first_show = \"Glebe Park\""
  },
  {
    "db_id": "orchestra",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Orchestra_ID) FROM orchestra AS T1 WHERE T1.Orchestra = \"San Francisco Symphony Orchestra\"",
    "readable_query": "SELECT avg( orchestra.Orchestra_ID) FROM orchestra AS orchestra WHERE orchestra.Orchestra = \"San Francisco Symphony Orchestra\""
  },
  {
    "db_id": "orchestra",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Year_of_Work) FROM conductor AS T1 WHERE T1.Name = \"Antal Dor\u00e1ti\"",
    "readable_query": "SELECT avg( conductor.Year_of_Work) FROM conductor AS conductor WHERE conductor.Name = \"Antal Dor\u00e1ti\""
  },
  {
    "db_id": "orchestra",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Orchestra_ID) FROM performance AS T1 WHERE T1.Share = \"38.1%\"",
    "readable_query": "SELECT avg( performance.Orchestra_ID) FROM performance AS performance WHERE performance.Share = \"38.1%\""
  },
  {
    "db_id": "orchestra",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Year_of_Founded) FROM orchestra AS T1 WHERE T1.Conductor_ID = 9",
    "readable_query": "SELECT avg( orchestra.Year_of_Founded) FROM orchestra AS orchestra WHERE orchestra.Conductor_ID = 9"
  },
  {
    "db_id": "orchestra",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Orchestra_ID) FROM performance AS T1 WHERE T1.Type = \"Auditions 4\"",
    "readable_query": "SELECT avg( performance.Orchestra_ID) FROM performance AS performance WHERE performance.Type = \"Auditions 4\""
  },
  {
    "db_id": "orchestra",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Result FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Orchestra_ID = (SELECT max( T23.Orchestra_ID) FROM performance AS T23)",
    "readable_query": "SELECT show.Result FROM show AS show JOIN performance AS performance ON show.Performance_ID = performance.Performance_ID WHERE performance.Orchestra_ID = (SELECT max( performance.Orchestra_ID) FROM performance AS performance)"
  },
  {
    "db_id": "orchestra",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Performance_ID FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Orchestra_ID = (SELECT max( T23.Orchestra_ID) FROM performance AS T23)",
    "readable_query": "SELECT show.Performance_ID FROM show AS show JOIN performance AS performance ON show.Performance_ID = performance.Performance_ID WHERE performance.Orchestra_ID = (SELECT max( performance.Orchestra_ID) FROM performance AS performance)"
  },
  {
    "db_id": "orchestra",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Nationality FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Conductor_ID = (SELECT max( T23.Conductor_ID) FROM orchestra AS T23)",
    "readable_query": "SELECT conductor.Nationality FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Conductor_ID = (SELECT max( orchestra.Conductor_ID) FROM orchestra AS orchestra)"
  },
  {
    "db_id": "orchestra",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Major_Record_Format FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Work = (SELECT max( T23.Year_of_Work) FROM conductor AS T23)",
    "readable_query": "SELECT orchestra.Major_Record_Format FROM orchestra AS orchestra JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID WHERE conductor.Year_of_Work = (SELECT max( conductor.Year_of_Work) FROM conductor AS conductor)"
  },
  {
    "db_id": "orchestra",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Conductor_ID FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Orchestra_ID = (SELECT max( T23.Orchestra_ID) FROM orchestra AS T23)",
    "readable_query": "SELECT conductor.Conductor_ID FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Orchestra_ID = (SELECT max( orchestra.Orchestra_ID) FROM orchestra AS orchestra)"
  },
  {
    "db_id": "orchestra",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Conductor_ID FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Orchestra_ID = (SELECT max( T23.Orchestra_ID) FROM orchestra AS T23)",
    "readable_query": "SELECT conductor.Conductor_ID FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Orchestra_ID = (SELECT max( orchestra.Orchestra_ID) FROM orchestra AS orchestra)"
  },
  {
    "db_id": "orchestra",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Orchestra_ID, T2.Age FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T1.Orchestra_ID = T3.Orchestra_ID WHERE T3.Type = \"Semi-final 3\" and T2.Name = \"Paul Jorgensen\"",
    "readable_query": "SELECT orchestra.Orchestra_ID, conductor.Age FROM orchestra AS orchestra JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID JOIN performance AS performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Type = \"Semi-final 3\" and conductor.Name = \"Paul Jorgensen\""
  },
  {
    "db_id": "orchestra",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Conductor_ID, T2.Year_of_Founded FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID WHERE T3.Share = \"34.0%\" and T2.Orchestra_ID = 4",
    "readable_query": "SELECT conductor.Conductor_ID, orchestra.Year_of_Founded FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance AS performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Share = \"34.0%\" and orchestra.Orchestra_ID = 4"
  },
  {
    "db_id": "orchestra",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Major_Record_Format, T2.Performance_ID FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID JOIN conductor AS T3 ON T1.Conductor_ID = T3.Conductor_ID WHERE T3.Age = 43 and T2.Share = \"34%\"",
    "readable_query": "SELECT orchestra.Major_Record_Format, performance.Performance_ID FROM orchestra AS orchestra JOIN performance AS performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN conductor AS conductor ON orchestra.Conductor_ID = conductor.Conductor_ID WHERE conductor.Age = 43 and performance.Share = \"34%\""
  },
  {
    "db_id": "orchestra",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Performance_ID FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Attendance = 1925.0 GROUP BY T1.Performance_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT performance.Performance_ID FROM performance AS performance JOIN show AS show ON performance.Performance_ID = show.Performance_ID WHERE show.Attendance = 1925.0 GROUP BY performance.Performance_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Year_of_Work FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Orchestra = \"Columbia Symphony Orchestra\" GROUP BY T1.Year_of_Work  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT conductor.Year_of_Work FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Orchestra = \"Columbia Symphony Orchestra\" GROUP BY conductor.Year_of_Work  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Nationality FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Conductor_ID = 4 GROUP BY T1.Nationality  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT conductor.Nationality FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Conductor_ID = 4 GROUP BY conductor.Nationality  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Year_of_Work FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded = 2009.0 GROUP BY T1.Year_of_Work  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT conductor.Year_of_Work FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded = 2009.0 GROUP BY conductor.Year_of_Work  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Orchestra_ID FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Attendance = 1026.0 GROUP BY T1.Orchestra_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT performance.Orchestra_ID FROM performance AS performance JOIN show AS show ON performance.Performance_ID = show.Performance_ID WHERE show.Attendance = 1026.0 GROUP BY performance.Orchestra_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Age FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Major_Record_Format = \"CD\" GROUP BY T1.Age  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT conductor.Age FROM conductor AS conductor JOIN orchestra AS orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Major_Record_Format = \"CD\" GROUP BY conductor.Age  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Date FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Performance_ID = 5 GROUP BY T1.Date  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT performance.Date FROM performance AS performance JOIN show AS show ON performance.Performance_ID = show.Performance_ID WHERE show.Performance_ID = 5 GROUP BY performance.Date  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "orchestra",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Conductor_ID FROM conductor AS T1        EXCEPT SELECT T2.Conductor_ID FROM conductor AS T2 WHERE T2.Nationality = \"USA\"",
    "readable_query": "SELECT conductor.Conductor_ID FROM conductor AS conductor        EXCEPT SELECT conductor.Conductor_ID FROM conductor AS conductor WHERE conductor.Nationality = \"USA\""
  },
  {
    "db_id": "orchestra",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Age FROM conductor AS T1        EXCEPT SELECT T2.Age FROM conductor AS T2 WHERE T2.Year_of_Work = 6",
    "readable_query": "SELECT conductor.Age FROM conductor AS conductor        EXCEPT SELECT conductor.Age FROM conductor AS conductor WHERE conductor.Year_of_Work = 6"
  },
  {
    "db_id": "orchestra",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Orchestra_ID FROM orchestra AS T1        EXCEPT SELECT T2.Orchestra_ID FROM orchestra AS T2 WHERE T2.Year_of_Founded = 2002.0",
    "readable_query": "SELECT orchestra.Orchestra_ID FROM orchestra AS orchestra        EXCEPT SELECT orchestra.Orchestra_ID FROM orchestra AS orchestra WHERE orchestra.Year_of_Founded = 2002.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.id FROM TV_series AS T1 WHERE T1.Viewers_m = \"6.09\"",
    "readable_query": "SELECT tv_series.id FROM TV_series AS tv_series WHERE tv_series.Viewers_m = \"6.09\""
  },
  {
    "db_id": "tvshow",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.series_name FROM TV_Channel AS T1 WHERE T1.Pay_per_view_PPV = \"no\"",
    "readable_query": "SELECT tv_channel.series_name FROM TV_Channel AS tv_channel WHERE tv_channel.Pay_per_view_PPV = \"no\""
  },
  {
    "db_id": "tvshow",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Content FROM TV_Channel AS T1 WHERE T1.series_name = \"Rock TV\"",
    "readable_query": "SELECT tv_channel.Content FROM TV_Channel AS tv_channel WHERE tv_channel.series_name = \"Rock TV\""
  },
  {
    "db_id": "tvshow",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.id FROM TV_series AS T1 WHERE T1.Share = 9.0",
    "readable_query": "SELECT tv_series.id FROM TV_series AS tv_series WHERE tv_series.Share = 9.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.18_49_Rating_Share FROM TV_series AS T1 WHERE T1.id = 10.0",
    "readable_query": "SELECT tv_series.18_49_Rating_Share FROM TV_series AS tv_series WHERE tv_series.id = 10.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.id FROM Cartoon AS T1 WHERE T1.Title = \"Day of the Dark Knight!\"",
    "readable_query": "SELECT cartoon.id FROM Cartoon AS cartoon WHERE cartoon.Title = \"Day of the Dark Knight!\""
  },
  {
    "db_id": "tvshow",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Package_Option FROM TV_Channel AS T1 WHERE T1.id = \"708\"",
    "readable_query": "SELECT tv_channel.Package_Option FROM TV_Channel AS tv_channel WHERE tv_channel.id = \"708\""
  },
  {
    "db_id": "tvshow",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Directed_by FROM Cartoon AS T1 WHERE T1.id = 8.0",
    "readable_query": "SELECT cartoon.Directed_by FROM Cartoon AS cartoon WHERE cartoon.id = 8.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Episode FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Country = \"United Kingdom\"",
    "readable_query": "SELECT tv_series.Episode FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id WHERE tv_channel.Country = \"United Kingdom\""
  },
  {
    "db_id": "tvshow",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.18_49_Rating_Share FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Pay_per_view_PPV = \"no\"",
    "readable_query": "SELECT tv_series.18_49_Rating_Share FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id WHERE tv_channel.Pay_per_view_PPV = \"no\""
  },
  {
    "db_id": "tvshow",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Channel FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Pixel_aspect_ratio_PAR = \"4:3\"",
    "readable_query": "SELECT tv_series.Channel FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id WHERE tv_channel.Pixel_aspect_ratio_PAR = \"4:3\""
  },
  {
    "db_id": "tvshow",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.id FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Hight_definition_TV = \"no\"",
    "readable_query": "SELECT cartoon.id FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id WHERE tv_channel.Hight_definition_TV = \"no\""
  },
  {
    "db_id": "tvshow",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.id, count(*) FROM Cartoon AS T1  GROUP BY T1.id",
    "readable_query": "SELECT cartoon.id, count(*) FROM Cartoon AS cartoon  GROUP BY cartoon.id"
  },
  {
    "db_id": "tvshow",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Air_Date, count(*) FROM TV_series AS T1  GROUP BY T1.Air_Date",
    "readable_query": "SELECT tv_series.Air_Date, count(*) FROM TV_series AS tv_series  GROUP BY tv_series.Air_Date"
  },
  {
    "db_id": "tvshow",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Channel, count(*) FROM TV_series AS T1  GROUP BY T1.Channel",
    "readable_query": "SELECT tv_series.Channel, count(*) FROM TV_series AS tv_series  GROUP BY tv_series.Channel"
  },
  {
    "db_id": "tvshow",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.id, count(*) FROM TV_series AS T1  GROUP BY T1.id",
    "readable_query": "SELECT tv_series.id, count(*) FROM TV_series AS tv_series  GROUP BY tv_series.id"
  },
  {
    "db_id": "tvshow",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Directed_by, count(*) FROM Cartoon AS T1  GROUP BY T1.Directed_by",
    "readable_query": "SELECT cartoon.Directed_by, count(*) FROM Cartoon AS cartoon  GROUP BY cartoon.Directed_by"
  },
  {
    "db_id": "tvshow",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Package_Option, count(*) FROM TV_Channel AS T1  GROUP BY T1.Package_Option",
    "readable_query": "SELECT tv_channel.Package_Option, count(*) FROM TV_Channel AS tv_channel  GROUP BY tv_channel.Package_Option"
  },
  {
    "db_id": "tvshow",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Channel, count(*) FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id  GROUP BY T1.Channel",
    "readable_query": "SELECT cartoon.Channel, count(*) FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id  GROUP BY cartoon.Channel"
  },
  {
    "db_id": "tvshow",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Original_air_date, count(*) FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id  GROUP BY T1.Original_air_date",
    "readable_query": "SELECT cartoon.Original_air_date, count(*) FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id  GROUP BY cartoon.Original_air_date"
  },
  {
    "db_id": "tvshow",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Directed_by, count(*) FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id  GROUP BY T1.Directed_by",
    "readable_query": "SELECT cartoon.Directed_by, count(*) FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id  GROUP BY cartoon.Directed_by"
  },
  {
    "db_id": "tvshow",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Rating, count(*) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id  GROUP BY T1.Rating",
    "readable_query": "SELECT tv_series.Rating, count(*) FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id  GROUP BY tv_series.Rating"
  },
  {
    "db_id": "tvshow",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Written_by, T1.Original_air_date FROM Cartoon AS T1",
    "readable_query": "SELECT cartoon.Written_by, cartoon.Original_air_date FROM Cartoon AS cartoon"
  },
  {
    "db_id": "tvshow",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Written_by, T1.id FROM Cartoon AS T1",
    "readable_query": "SELECT cartoon.Written_by, cartoon.id FROM Cartoon AS cartoon"
  },
  {
    "db_id": "tvshow",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.id, T1.Episode FROM TV_series AS T1",
    "readable_query": "SELECT tv_series.id, tv_series.Episode FROM TV_series AS tv_series"
  },
  {
    "db_id": "tvshow",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Rating, T1.Channel FROM TV_series AS T1",
    "readable_query": "SELECT tv_series.Rating, tv_series.Channel FROM TV_series AS tv_series"
  },
  {
    "db_id": "tvshow",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Content, T2.18_49_Rating_Share FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel",
    "readable_query": "SELECT tv_channel.Content, tv_series.18_49_Rating_Share FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel"
  },
  {
    "db_id": "tvshow",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Production_code, T2.Hight_definition_TV FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id",
    "readable_query": "SELECT cartoon.Production_code, tv_channel.Hight_definition_TV FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id"
  },
  {
    "db_id": "tvshow",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Channel, T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id",
    "readable_query": "SELECT cartoon.Channel, tv_channel.series_name FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id"
  },
  {
    "db_id": "tvshow",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Air_Date, T2.Country FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id",
    "readable_query": "SELECT tv_series.Air_Date, tv_channel.Country FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id"
  },
  {
    "db_id": "tvshow",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.series_name, T2.Directed_by FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel",
    "readable_query": "SELECT tv_channel.series_name, cartoon.Directed_by FROM TV_Channel AS tv_channel JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel"
  },
  {
    "db_id": "tvshow",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Share, T2.Pay_per_view_PPV FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id",
    "readable_query": "SELECT tv_series.Share, tv_channel.Pay_per_view_PPV FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id"
  },
  {
    "db_id": "tvshow",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Directed_by, T2.Pixel_aspect_ratio_PAR FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id",
    "readable_query": "SELECT cartoon.Directed_by, tv_channel.Pixel_aspect_ratio_PAR FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id"
  },
  {
    "db_id": "tvshow",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Share, T1.Rating FROM TV_series AS T1 WHERE T1.id = 4.0",
    "readable_query": "SELECT tv_series.Share, tv_series.Rating FROM TV_series AS tv_series WHERE tv_series.id = 4.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Share, T1.Weekly_Rank FROM TV_series AS T1 WHERE T1.id = 10.0",
    "readable_query": "SELECT tv_series.Share, tv_series.Weekly_Rank FROM TV_series AS tv_series WHERE tv_series.id = 10.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Channel, T1.Original_air_date FROM Cartoon AS T1 WHERE T1.id = 4.0",
    "readable_query": "SELECT cartoon.Channel, cartoon.Original_air_date FROM Cartoon AS cartoon WHERE cartoon.id = 4.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Channel, T1.Written_by FROM Cartoon AS T1 WHERE T1.Directed_by = \"Ben Jones\"",
    "readable_query": "SELECT cartoon.Channel, cartoon.Written_by FROM Cartoon AS cartoon WHERE cartoon.Directed_by = \"Ben Jones\""
  },
  {
    "db_id": "tvshow",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.id, T1.Production_code FROM Cartoon AS T1 WHERE T1.Directed_by = \"Ben Jones\"",
    "readable_query": "SELECT cartoon.id, cartoon.Production_code FROM Cartoon AS cartoon WHERE cartoon.Directed_by = \"Ben Jones\""
  },
  {
    "db_id": "tvshow",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Air_Date, T1.id FROM TV_series AS T1 WHERE T1.Weekly_Rank = 70.0",
    "readable_query": "SELECT tv_series.Air_Date, tv_series.id FROM TV_series AS tv_series WHERE tv_series.Weekly_Rank = 70.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Weekly_Rank FROM TV_series AS T1  GROUP BY T1.Weekly_Rank  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT tv_series.Weekly_Rank FROM TV_series AS tv_series  GROUP BY tv_series.Weekly_Rank  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Air_Date FROM TV_series AS T1  GROUP BY T1.Air_Date  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT tv_series.Air_Date FROM TV_series AS tv_series  GROUP BY tv_series.Air_Date  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Cartoon AS T1 WHERE T1.id = 8.0",
    "readable_query": "SELECT count(*) FROM Cartoon AS cartoon WHERE cartoon.id = 8.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM TV_Channel AS T1 WHERE T1.Content = \"music\"",
    "readable_query": "SELECT count(*) FROM TV_Channel AS tv_channel WHERE tv_channel.Content = \"music\""
  },
  {
    "db_id": "tvshow",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Cartoon AS T1 WHERE T1.Title = \"Return of the Fearsome Fangs!\"",
    "readable_query": "SELECT count(*) FROM Cartoon AS cartoon WHERE cartoon.Title = \"Return of the Fearsome Fangs!\""
  },
  {
    "db_id": "tvshow",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Cartoon AS T1 WHERE T1.id = 5.0",
    "readable_query": "SELECT count(*) FROM Cartoon AS cartoon WHERE cartoon.id = 5.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Written_by FROM Cartoon AS T1    ORDER BY T1.Production_code DESC LIMIT 1",
    "readable_query": "SELECT cartoon.Written_by FROM Cartoon AS cartoon    ORDER BY cartoon.Production_code DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Production_code FROM Cartoon AS T1    ORDER BY T1.id DESC LIMIT 1",
    "readable_query": "SELECT cartoon.Production_code FROM Cartoon AS cartoon    ORDER BY cartoon.id DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Weekly_Rank FROM TV_series AS T1    ORDER BY T1.Share DESC LIMIT 1",
    "readable_query": "SELECT tv_series.Weekly_Rank FROM TV_series AS tv_series    ORDER BY tv_series.Share DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.18_49_Rating_Share FROM TV_series AS T1    ORDER BY T1.Share DESC LIMIT 1",
    "readable_query": "SELECT tv_series.18_49_Rating_Share FROM TV_series AS tv_series    ORDER BY tv_series.Share DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Channel FROM Cartoon AS T1    ORDER BY T1.id DESC LIMIT 1",
    "readable_query": "SELECT cartoon.Channel FROM Cartoon AS cartoon    ORDER BY cartoon.id DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Original_air_date FROM Cartoon AS T1    ORDER BY T1.id DESC LIMIT 1",
    "readable_query": "SELECT cartoon.Original_air_date FROM Cartoon AS cartoon    ORDER BY cartoon.id DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.id FROM Cartoon AS T1    ORDER BY T1.Production_code DESC LIMIT 1",
    "readable_query": "SELECT cartoon.id FROM Cartoon AS cartoon    ORDER BY cartoon.Production_code DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Country FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Share DESC LIMIT 1",
    "readable_query": "SELECT tv_channel.Country FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel    ORDER BY tv_series.Share DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Pay_per_view_PPV FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel    ORDER BY T2.Production_code DESC LIMIT 1",
    "readable_query": "SELECT tv_channel.Pay_per_view_PPV FROM TV_Channel AS tv_channel JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel    ORDER BY cartoon.Production_code DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.id FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Share DESC LIMIT 1",
    "readable_query": "SELECT tv_channel.id FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel    ORDER BY tv_series.Share DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Language FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Weekly_Rank DESC LIMIT 1",
    "readable_query": "SELECT tv_channel.Language FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel    ORDER BY tv_series.Weekly_Rank DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel    ORDER BY T2.id ASC LIMIT 1",
    "readable_query": "SELECT tv_channel.Country FROM TV_Channel AS tv_channel JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel    ORDER BY cartoon.id ASC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Package_Option FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.id ASC LIMIT 1",
    "readable_query": "SELECT tv_channel.Package_Option FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel    ORDER BY tv_series.id ASC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Pixel_aspect_ratio_PAR FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Weekly_Rank ASC LIMIT 1",
    "readable_query": "SELECT tv_channel.Pixel_aspect_ratio_PAR FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel    ORDER BY tv_series.Weekly_Rank ASC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Country FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.id ASC LIMIT 1",
    "readable_query": "SELECT tv_channel.Country FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel    ORDER BY tv_series.id ASC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Hight_definition_TV FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Share ASC LIMIT 1",
    "readable_query": "SELECT tv_channel.Hight_definition_TV FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel    ORDER BY tv_series.Share ASC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Content FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel    ORDER BY T2.id ASC LIMIT 1",
    "readable_query": "SELECT tv_channel.Content FROM TV_Channel AS tv_channel JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel    ORDER BY cartoon.id ASC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Country FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.id ASC LIMIT 1",
    "readable_query": "SELECT tv_channel.Country FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel    ORDER BY tv_series.id ASC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Pay_per_view_PPV FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Weekly_Rank ASC LIMIT 1",
    "readable_query": "SELECT tv_channel.Pay_per_view_PPV FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel    ORDER BY tv_series.Weekly_Rank ASC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Pixel_aspect_ratio_PAR, T1.Country FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.id DESC LIMIT 1",
    "readable_query": "SELECT tv_channel.Pixel_aspect_ratio_PAR, tv_channel.Country FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel    ORDER BY tv_series.id DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Package_Option, T1.Language FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Weekly_Rank DESC LIMIT 1",
    "readable_query": "SELECT tv_channel.Package_Option, tv_channel.Language FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel    ORDER BY tv_series.Weekly_Rank DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Pixel_aspect_ratio_PAR, T1.id FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Share DESC LIMIT 1",
    "readable_query": "SELECT tv_channel.Pixel_aspect_ratio_PAR, tv_channel.id FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel    ORDER BY tv_series.Share DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.series_name) FROM TV_Channel AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  tv_channel.series_name) FROM TV_Channel AS tv_channel"
  },
  {
    "db_id": "tvshow",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Episode) FROM TV_series AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  tv_series.Episode) FROM TV_series AS tv_series"
  },
  {
    "db_id": "tvshow",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Original_air_date) FROM Cartoon AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  cartoon.Original_air_date) FROM Cartoon AS cartoon"
  },
  {
    "db_id": "tvshow",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Production_code) FROM Cartoon AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  cartoon.Production_code) FROM Cartoon AS cartoon"
  },
  {
    "db_id": "tvshow",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.id) FROM TV_series AS T1",
    "readable_query": "SELECT avg( tv_series.id) FROM TV_series AS tv_series"
  },
  {
    "db_id": "tvshow",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Production_code) FROM Cartoon AS T1",
    "readable_query": "SELECT avg( cartoon.Production_code) FROM Cartoon AS cartoon"
  },
  {
    "db_id": "tvshow",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.id FROM Cartoon AS T1",
    "readable_query": "SELECT cartoon.id FROM Cartoon AS cartoon"
  },
  {
    "db_id": "tvshow",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.id FROM TV_series AS T1",
    "readable_query": "SELECT tv_series.id FROM TV_series AS tv_series"
  },
  {
    "db_id": "tvshow",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Channel FROM Cartoon AS T1",
    "readable_query": "SELECT cartoon.Channel FROM Cartoon AS cartoon"
  },
  {
    "db_id": "tvshow",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Directed_by FROM Cartoon AS T1",
    "readable_query": "SELECT cartoon.Directed_by FROM Cartoon AS cartoon"
  },
  {
    "db_id": "tvshow",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.18_49_Rating_Share FROM TV_series AS T1",
    "readable_query": "SELECT DISTINCT tv_series.18_49_Rating_Share FROM TV_series AS tv_series"
  },
  {
    "db_id": "tvshow",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Country FROM TV_Channel AS T1",
    "readable_query": "SELECT DISTINCT tv_channel.Country FROM TV_Channel AS tv_channel"
  },
  {
    "db_id": "tvshow",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Channel FROM Cartoon AS T1",
    "readable_query": "SELECT DISTINCT cartoon.Channel FROM Cartoon AS cartoon"
  },
  {
    "db_id": "tvshow",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Hight_definition_TV FROM TV_Channel AS T1",
    "readable_query": "SELECT DISTINCT tv_channel.Hight_definition_TV FROM TV_Channel AS tv_channel"
  },
  {
    "db_id": "tvshow",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.series_name FROM TV_Channel AS T1",
    "readable_query": "SELECT DISTINCT tv_channel.series_name FROM TV_Channel AS tv_channel"
  },
  {
    "db_id": "tvshow",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Channel FROM Cartoon AS T1     ORDER BY T1.Production_code ASC",
    "readable_query": "SELECT cartoon.Channel FROM Cartoon AS cartoon     ORDER BY cartoon.Production_code ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Air_Date FROM TV_series AS T1     ORDER BY T1.Share ASC",
    "readable_query": "SELECT tv_series.Air_Date FROM TV_series AS tv_series     ORDER BY tv_series.Share ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Rating FROM TV_series AS T1     ORDER BY T1.Weekly_Rank ASC",
    "readable_query": "SELECT tv_series.Rating FROM TV_series AS tv_series     ORDER BY tv_series.Weekly_Rank ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Viewers_m FROM TV_series AS T1     ORDER BY T1.Weekly_Rank ASC",
    "readable_query": "SELECT tv_series.Viewers_m FROM TV_series AS tv_series     ORDER BY tv_series.Weekly_Rank ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.id FROM TV_series AS T1     ORDER BY T1.Weekly_Rank ASC",
    "readable_query": "SELECT tv_series.id FROM TV_series AS tv_series     ORDER BY tv_series.Weekly_Rank ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Channel FROM Cartoon AS T1     ORDER BY T1.id ASC",
    "readable_query": "SELECT cartoon.Channel FROM Cartoon AS cartoon     ORDER BY cartoon.id ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Title FROM Cartoon AS T1     ORDER BY T1.id ASC",
    "readable_query": "SELECT cartoon.Title FROM Cartoon AS cartoon     ORDER BY cartoon.id ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Title FROM Cartoon AS T1     ORDER BY T1.id DESC",
    "readable_query": "SELECT cartoon.Title FROM Cartoon AS cartoon     ORDER BY cartoon.id DESC"
  },
  {
    "db_id": "tvshow",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Title FROM Cartoon AS T1     ORDER BY T1.Production_code DESC",
    "readable_query": "SELECT cartoon.Title FROM Cartoon AS cartoon     ORDER BY cartoon.Production_code DESC"
  },
  {
    "db_id": "tvshow",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.18_49_Rating_Share FROM TV_series AS T1     ORDER BY T1.id DESC",
    "readable_query": "SELECT tv_series.18_49_Rating_Share FROM TV_series AS tv_series     ORDER BY tv_series.id DESC"
  },
  {
    "db_id": "tvshow",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.id FROM TV_series AS T1     ORDER BY T1.Weekly_Rank DESC",
    "readable_query": "SELECT tv_series.id FROM TV_series AS tv_series     ORDER BY tv_series.Weekly_Rank DESC"
  },
  {
    "db_id": "tvshow",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Share FROM TV_series AS T1     ORDER BY T1.Weekly_Rank DESC",
    "readable_query": "SELECT tv_series.Share FROM TV_series AS tv_series     ORDER BY tv_series.Weekly_Rank DESC"
  },
  {
    "db_id": "tvshow",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Air_Date FROM TV_series AS T1     ORDER BY T1.id DESC",
    "readable_query": "SELECT tv_series.Air_Date FROM TV_series AS tv_series     ORDER BY tv_series.id DESC"
  },
  {
    "db_id": "tvshow",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Channel, T1.Air_Date FROM TV_series AS T1     ORDER BY T1.Air_Date ASC",
    "readable_query": "SELECT tv_series.Channel, tv_series.Air_Date FROM TV_series AS tv_series     ORDER BY tv_series.Air_Date ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Share, T1.Viewers_m FROM TV_series AS T1     ORDER BY T1.Viewers_m ASC",
    "readable_query": "SELECT tv_series.Share, tv_series.Viewers_m FROM TV_series AS tv_series     ORDER BY tv_series.Viewers_m ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.id, T1.Channel FROM Cartoon AS T1     ORDER BY T1.Channel ASC",
    "readable_query": "SELECT cartoon.id, cartoon.Channel FROM Cartoon AS cartoon     ORDER BY cartoon.Channel ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Package_Option, T1.series_name FROM TV_Channel AS T1     ORDER BY T1.series_name ASC",
    "readable_query": "SELECT tv_channel.Package_Option, tv_channel.series_name FROM TV_Channel AS tv_channel     ORDER BY tv_channel.series_name ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Rating, T1.Share FROM TV_series AS T1     ORDER BY T1.Share ASC",
    "readable_query": "SELECT tv_series.Rating, tv_series.Share FROM TV_series AS tv_series     ORDER BY tv_series.Share ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Production_code, T1.Channel FROM Cartoon AS T1     ORDER BY T1.Channel ASC",
    "readable_query": "SELECT cartoon.Production_code, cartoon.Channel FROM Cartoon AS cartoon     ORDER BY cartoon.Channel ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Viewers_m, T1.18_49_Rating_Share FROM TV_series AS T1     ORDER BY T1.18_49_Rating_Share ASC",
    "readable_query": "SELECT tv_series.Viewers_m, tv_series.18_49_Rating_Share FROM TV_series AS tv_series     ORDER BY tv_series.18_49_Rating_Share ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Pixel_aspect_ratio_PAR FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel JOIN Cartoon AS T3 ON T1.id = T3.Channel WHERE T2.Viewers_m = \"5.75\" and T3.Written_by = \"Adam Beechen\"",
    "readable_query": "SELECT tv_channel.Pixel_aspect_ratio_PAR FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel WHERE tv_series.Viewers_m = \"5.75\" and cartoon.Written_by = \"Adam Beechen\""
  },
  {
    "db_id": "tvshow",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Written_by FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN TV_series AS T3 ON T2.id = T3.Channel WHERE T2.Language = \"Italian\" and T3.Weekly_Rank = 43.0",
    "readable_query": "SELECT cartoon.Written_by FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel WHERE tv_channel.Language = \"Italian\" and tv_series.Weekly_Rank = 43.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Weekly_Rank FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN Cartoon AS T3 ON T2.id = T3.Channel WHERE T2.series_name = \"Radio Capital TiV\u00f9\" and T3.Directed_by = \"Brandon Vietti\"",
    "readable_query": "SELECT tv_series.Weekly_Rank FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel WHERE tv_channel.series_name = \"Radio Capital TiV\u00f9\" and cartoon.Directed_by = \"Brandon Vietti\""
  },
  {
    "db_id": "tvshow",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Written_by FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN TV_series AS T3 ON T2.id = T3.Channel WHERE T2.Package_Option = \"Sky Famiglia + Sky HD\" and T3.Episode = \"Winterland\"",
    "readable_query": "SELECT cartoon.Written_by FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel WHERE tv_channel.Package_Option = \"Sky Famiglia + Sky HD\" and tv_series.Episode = \"Winterland\""
  },
  {
    "db_id": "tvshow",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Channel FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN Cartoon AS T3 ON T2.id = T3.Channel WHERE T2.id = \"719\" and T3.Title = \"Invasion of the Secret Santas!\"",
    "readable_query": "SELECT tv_series.Channel FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel WHERE tv_channel.id = \"719\" and cartoon.Title = \"Invasion of the Secret Santas!\""
  },
  {
    "db_id": "tvshow",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Channel FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN TV_series AS T3 ON T2.id = T3.Channel WHERE T2.Content = \"music\" and T3.id = 3.0",
    "readable_query": "SELECT cartoon.Channel FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel WHERE tv_channel.Content = \"music\" and tv_series.id = 3.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN TV_series AS T3 ON T2.id = T3.Channel WHERE T2.Pixel_aspect_ratio_PAR = \"4:3\" and T3.Viewers_m = \"8.23\"",
    "readable_query": "SELECT cartoon.Title FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel WHERE tv_channel.Pixel_aspect_ratio_PAR = \"4:3\" and tv_series.Viewers_m = \"8.23\""
  },
  {
    "db_id": "tvshow",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.id FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN TV_series AS T3 ON T2.id = T3.Channel WHERE T2.Pixel_aspect_ratio_PAR = \"16:9\" and T3.Viewers_m = \"6.06\"",
    "readable_query": "SELECT cartoon.id FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel WHERE tv_channel.Pixel_aspect_ratio_PAR = \"16:9\" and tv_series.Viewers_m = \"6.06\""
  },
  {
    "db_id": "tvshow",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.id FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Content = \"music\" or T2.Content = \"music\"",
    "readable_query": "SELECT cartoon.id FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id WHERE tv_channel.Content = \"music\" or tv_channel.Content = \"music\""
  },
  {
    "db_id": "tvshow",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Channel FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Package_Option = \"Option\" or T2.Package_Option = \"Sky Famiglia\"",
    "readable_query": "SELECT cartoon.Channel FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id WHERE tv_channel.Package_Option = \"Option\" or tv_channel.Package_Option = \"Sky Famiglia\""
  },
  {
    "db_id": "tvshow",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Channel FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = \"Sky Radio\" or T2.series_name = \"MTV Classic\"",
    "readable_query": "SELECT cartoon.Channel FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id WHERE tv_channel.series_name = \"Sky Radio\" or tv_channel.series_name = \"MTV Classic\""
  },
  {
    "db_id": "tvshow",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Air_Date FROM TV_series AS T1 WHERE T1.Viewers_m = \"6.94\" and T1.id = 4.0",
    "readable_query": "SELECT tv_series.Air_Date FROM TV_series AS tv_series WHERE tv_series.Viewers_m = \"6.94\" and tv_series.id = 4.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Air_Date FROM TV_series AS T1 WHERE T1.Rating = \"4.4\" and T1.Viewers_m = \"6.09\"",
    "readable_query": "SELECT tv_series.Air_Date FROM TV_series AS tv_series WHERE tv_series.Rating = \"4.4\" and tv_series.Viewers_m = \"6.09\""
  },
  {
    "db_id": "tvshow",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Episode FROM TV_series AS T1 WHERE T1.Share = 9.0 and T1.Air_Date = \"December 10, 2007\"",
    "readable_query": "SELECT tv_series.Episode FROM TV_series AS tv_series WHERE tv_series.Share = 9.0 and tv_series.Air_Date = \"December 10, 2007\""
  },
  {
    "db_id": "tvshow",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.id FROM TV_Channel AS T1 WHERE T1.Package_Option = \"Sky Famiglia\" and T1.Content = \"music\"",
    "readable_query": "SELECT tv_channel.id FROM TV_Channel AS tv_channel WHERE tv_channel.Package_Option = \"Sky Famiglia\" and tv_channel.Content = \"music\""
  },
  {
    "db_id": "tvshow",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Weekly_Rank FROM TV_series AS T1 WHERE T1.Share = 6.0 and T1.Episode = \"Home By Another Way\"",
    "readable_query": "SELECT tv_series.Weekly_Rank FROM TV_series AS tv_series WHERE tv_series.Share = 6.0 and tv_series.Episode = \"Home By Another Way\""
  },
  {
    "db_id": "tvshow",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Weekly_Rank FROM TV_series AS T1 WHERE T1.Rating = \"3.8\" and T1.id = 11.0",
    "readable_query": "SELECT tv_series.Weekly_Rank FROM TV_series AS tv_series WHERE tv_series.Rating = \"3.8\" and tv_series.id = 11.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Air_Date) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Viewers_m = \"6.94\" and T2.Pay_per_view_PPV = \"no\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  tv_series.Air_Date) FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id WHERE tv_series.Viewers_m = \"6.94\" and tv_channel.Pay_per_view_PPV = \"no\""
  },
  {
    "db_id": "tvshow",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Original_air_date) FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.id = 4.0 and T2.series_name = \"MTV Live HD\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  cartoon.Original_air_date) FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id WHERE cartoon.id = 4.0 and tv_channel.series_name = \"MTV Live HD\""
  },
  {
    "db_id": "tvshow",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Channel) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.id = 6.0 and T2.Pay_per_view_PPV = \"no\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  tv_series.Channel) FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id WHERE tv_series.id = 6.0 and tv_channel.Pay_per_view_PPV = \"no\""
  },
  {
    "db_id": "tvshow",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Pay_per_view_PPV) FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.id = \"728\" and T2.Production_code = 112.0",
    "readable_query": "SELECT DISTINCT count(DISTINCT  tv_channel.Pay_per_view_PPV) FROM TV_Channel AS tv_channel JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel WHERE tv_channel.id = \"728\" and cartoon.Production_code = 112.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Rating) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Share = 6.0 and T2.Hight_definition_TV = \"yes\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  tv_series.Rating) FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id WHERE tv_series.Share = 6.0 and tv_channel.Hight_definition_TV = \"yes\""
  },
  {
    "db_id": "tvshow",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Channel) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Share = 5.0 and T2.Pay_per_view_PPV = \"no\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  tv_series.Channel) FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id WHERE tv_series.Share = 5.0 and tv_channel.Pay_per_view_PPV = \"no\""
  },
  {
    "db_id": "tvshow",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Original_air_date FROM Cartoon AS T1 WHERE T1.Directed_by = \"Brandon Vietti\" or T1.Title = \"Enter the Outsiders!\"",
    "readable_query": "SELECT cartoon.Original_air_date FROM Cartoon AS cartoon WHERE cartoon.Directed_by = \"Brandon Vietti\" or cartoon.Title = \"Enter the Outsiders!\""
  },
  {
    "db_id": "tvshow",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Viewers_m FROM TV_series AS T1 WHERE T1.Weekly_Rank = 72.0 or T1.id = 6.0",
    "readable_query": "SELECT tv_series.Viewers_m FROM TV_series AS tv_series WHERE tv_series.Weekly_Rank = 72.0 or tv_series.id = 6.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Content FROM TV_Channel AS T1 WHERE T1.series_name = \"myDeejay\" or T1.Package_Option = \"Option\"",
    "readable_query": "SELECT tv_channel.Content FROM TV_Channel AS tv_channel WHERE tv_channel.series_name = \"myDeejay\" or tv_channel.Package_Option = \"Option\""
  },
  {
    "db_id": "tvshow",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Production_code FROM Cartoon AS T1 WHERE T1.Title = \"The Rise of the Blue Beetle!\" or T1.Written_by = \"J. M. DeMatteis\"",
    "readable_query": "SELECT cartoon.Production_code FROM Cartoon AS cartoon WHERE cartoon.Title = \"The Rise of the Blue Beetle!\" or cartoon.Written_by = \"J. M. DeMatteis\""
  },
  {
    "db_id": "tvshow",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Viewers_m = \"6.05\" and T2.Channel = \"701\"",
    "readable_query": "SELECT count(*) FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel WHERE tv_series.Viewers_m = \"6.05\" and tv_series.Channel = \"701\""
  },
  {
    "db_id": "tvshow",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.id = \"700\" and T2.Pay_per_view_PPV = \"no\"",
    "readable_query": "SELECT count(*) FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id WHERE tv_channel.id = \"700\" and tv_channel.Pay_per_view_PPV = \"no\""
  },
  {
    "db_id": "tvshow",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Package_Option = \"no ( FTV )\" and T2.Content = \"music\"",
    "readable_query": "SELECT count(*) FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id WHERE tv_channel.Package_Option = \"no ( FTV )\" and tv_channel.Content = \"music\""
  },
  {
    "db_id": "tvshow",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = \"MTV Music\" and T2.Package_Option = \"Sky Famiglia\"",
    "readable_query": "SELECT count(*) FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id WHERE tv_channel.series_name = \"MTV Music\" and tv_channel.Package_Option = \"Sky Famiglia\""
  },
  {
    "db_id": "tvshow",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Hight_definition_TV = \"no\" and T2.Content = \"music\"",
    "readable_query": "SELECT count(*) FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id WHERE tv_channel.Hight_definition_TV = \"no\" and tv_channel.Content = \"music\""
  },
  {
    "db_id": "tvshow",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = \"Michael Jelenic\" and T2.Title = \"Deep Cover for Batman!\"",
    "readable_query": "SELECT count(*) FROM TV_Channel AS tv_channel JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel WHERE cartoon.Written_by = \"Michael Jelenic\" and cartoon.Title = \"Deep Cover for Batman!\""
  },
  {
    "db_id": "tvshow",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Content = \"music\" and T2.Pay_per_view_PPV = \"no\"",
    "readable_query": "SELECT count(*) FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id WHERE tv_channel.Content = \"music\" and tv_channel.Pay_per_view_PPV = \"no\""
  },
  {
    "db_id": "tvshow",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Production_code FROM Cartoon AS T1 WHERE T1.id != 6.0",
    "readable_query": "SELECT cartoon.Production_code FROM Cartoon AS cartoon WHERE cartoon.id != 6.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Content FROM TV_Channel AS T1 WHERE T1.series_name != \"MTV Dance\"",
    "readable_query": "SELECT tv_channel.Content FROM TV_Channel AS tv_channel WHERE tv_channel.series_name != \"MTV Dance\""
  },
  {
    "db_id": "tvshow",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Written_by FROM Cartoon AS T1 WHERE T1.Production_code != 107.0",
    "readable_query": "SELECT cartoon.Written_by FROM Cartoon AS cartoon WHERE cartoon.Production_code != 107.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Written_by FROM Cartoon AS T1 WHERE T1.Title != \"Return of the Fearsome Fangs!\"",
    "readable_query": "SELECT cartoon.Written_by FROM Cartoon AS cartoon WHERE cartoon.Title != \"Return of the Fearsome Fangs!\""
  },
  {
    "db_id": "tvshow",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Content FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Air_Date != \"September 24, 2007\"",
    "readable_query": "SELECT tv_channel.Content FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel WHERE tv_series.Air_Date != \"September 24, 2007\""
  },
  {
    "db_id": "tvshow",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Hight_definition_TV FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Rating != \"4.3\"",
    "readable_query": "SELECT tv_channel.Hight_definition_TV FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel WHERE tv_series.Rating != \"4.3\""
  },
  {
    "db_id": "tvshow",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Air_Date FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Package_Option != \"Option\"",
    "readable_query": "SELECT tv_series.Air_Date FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id WHERE tv_channel.Package_Option != \"Option\""
  },
  {
    "db_id": "tvshow",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Written_by FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Pay_per_view_PPV = \"no\"",
    "readable_query": "SELECT DISTINCT cartoon.Written_by FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id WHERE tv_channel.Pay_per_view_PPV = \"no\""
  },
  {
    "db_id": "tvshow",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Original_air_date = \"February20,2009\"",
    "readable_query": "SELECT DISTINCT tv_channel.Country FROM TV_Channel AS tv_channel JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel WHERE cartoon.Original_air_date = \"February20,2009\""
  },
  {
    "db_id": "tvshow",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.id FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Package_Option = \"Sky Famiglia + Sky HD\"",
    "readable_query": "SELECT DISTINCT cartoon.id FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id WHERE tv_channel.Package_Option = \"Sky Famiglia + Sky HD\""
  },
  {
    "db_id": "tvshow",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Pixel_aspect_ratio_PAR) FROM TV_Channel AS T1 WHERE T1.id = \"709\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  tv_channel.Pixel_aspect_ratio_PAR) FROM TV_Channel AS tv_channel WHERE tv_channel.id = \"709\""
  },
  {
    "db_id": "tvshow",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Pixel_aspect_ratio_PAR) FROM TV_Channel AS T1 WHERE T1.Content = \"music\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  tv_channel.Pixel_aspect_ratio_PAR) FROM TV_Channel AS tv_channel WHERE tv_channel.Content = \"music\""
  },
  {
    "db_id": "tvshow",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Production_code) FROM Cartoon AS T1 WHERE T1.Written_by = \"Steven Melching\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  cartoon.Production_code) FROM Cartoon AS cartoon WHERE cartoon.Written_by = \"Steven Melching\""
  },
  {
    "db_id": "tvshow",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Viewers_m) FROM TV_series AS T1 WHERE T1.id = 11.0",
    "readable_query": "SELECT DISTINCT count(DISTINCT  tv_series.Viewers_m) FROM TV_series AS tv_series WHERE tv_series.id = 11.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Production_code) FROM Cartoon AS T1 WHERE T1.Title = \"Fall of the Blue Beetle!\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  cartoon.Production_code) FROM Cartoon AS cartoon WHERE cartoon.Title = \"Fall of the Blue Beetle!\""
  },
  {
    "db_id": "tvshow",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Episode) FROM TV_series AS T1 WHERE T1.Viewers_m = \"9.16\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  tv_series.Episode) FROM TV_series AS tv_series WHERE tv_series.Viewers_m = \"9.16\""
  },
  {
    "db_id": "tvshow",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Hight_definition_TV) FROM TV_Channel AS T1 WHERE T1.id = \"709\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  tv_channel.Hight_definition_TV) FROM TV_Channel AS tv_channel WHERE tv_channel.id = \"709\""
  },
  {
    "db_id": "tvshow",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Production_code) FROM Cartoon AS T1 WHERE T1.id = 1.0",
    "readable_query": "SELECT DISTINCT count(DISTINCT  cartoon.Production_code) FROM Cartoon AS cartoon WHERE cartoon.id = 1.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Pay_per_view_PPV) FROM TV_Channel AS T1 WHERE T1.series_name = \"Hip Hop TV\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  tv_channel.Pay_per_view_PPV) FROM TV_Channel AS tv_channel WHERE tv_channel.series_name = \"Hip Hop TV\""
  },
  {
    "db_id": "tvshow",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Title) FROM Cartoon AS T1 WHERE T1.Written_by = \"Adam Beechen\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  cartoon.Title) FROM Cartoon AS cartoon WHERE cartoon.Written_by = \"Adam Beechen\""
  },
  {
    "db_id": "tvshow",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Share) FROM TV_series AS T1 WHERE T1.Weekly_Rank = 72.0",
    "readable_query": "SELECT DISTINCT count(DISTINCT  tv_series.Share) FROM TV_series AS tv_series WHERE tv_series.Weekly_Rank = 72.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Rating FROM TV_series AS T1 WHERE T1.id > 2.0",
    "readable_query": "SELECT tv_series.Rating FROM TV_series AS tv_series WHERE tv_series.id > 2.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.id FROM TV_series AS T1 WHERE T1.Weekly_Rank > 62.0",
    "readable_query": "SELECT tv_series.id FROM TV_series AS tv_series WHERE tv_series.Weekly_Rank > 62.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Air_Date FROM TV_series AS T1 WHERE T1.Weekly_Rank > 80.0",
    "readable_query": "SELECT tv_series.Air_Date FROM TV_series AS tv_series WHERE tv_series.Weekly_Rank > 80.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Production_code FROM Cartoon AS T1 WHERE T1.id > 1.0",
    "readable_query": "SELECT cartoon.Production_code FROM Cartoon AS cartoon WHERE cartoon.id > 1.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Title FROM Cartoon AS T1 WHERE T1.id > 10.0",
    "readable_query": "SELECT cartoon.Title FROM Cartoon AS cartoon WHERE cartoon.id > 10.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.id, T2.Hight_definition_TV, T3.Channel FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN TV_series AS T3 ON T2.id = T3.Channel",
    "readable_query": "SELECT cartoon.id, tv_channel.Hight_definition_TV, tv_series.Channel FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel"
  },
  {
    "db_id": "tvshow",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Rating, T2.id, T3.Production_code FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN Cartoon AS T3 ON T2.id = T3.Channel",
    "readable_query": "SELECT tv_series.Rating, tv_channel.id, cartoon.Production_code FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel"
  },
  {
    "db_id": "tvshow",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Pay_per_view_PPV, T2.Viewers_m, T3.Title FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel JOIN Cartoon AS T3 ON T1.id = T3.Channel",
    "readable_query": "SELECT tv_channel.Pay_per_view_PPV, tv_series.Viewers_m, cartoon.Title FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel"
  },
  {
    "db_id": "tvshow",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.series_name, T2.Written_by, T3.Rating FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel JOIN TV_series AS T3 ON T1.id = T3.Channel",
    "readable_query": "SELECT tv_channel.series_name, cartoon.Written_by, tv_series.Rating FROM TV_Channel AS tv_channel JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel"
  },
  {
    "db_id": "tvshow",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Channel, T2.Country, T3.Title FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN Cartoon AS T3 ON T2.id = T3.Channel",
    "readable_query": "SELECT tv_series.Channel, tv_channel.Country, cartoon.Title FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel"
  },
  {
    "db_id": "tvshow",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Title, T2.id, T3.18_49_Rating_Share FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN TV_series AS T3 ON T2.id = T3.Channel",
    "readable_query": "SELECT cartoon.Title, tv_channel.id, tv_series.18_49_Rating_Share FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel"
  },
  {
    "db_id": "tvshow",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Pay_per_view_PPV FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel     ORDER BY T2.id ASC",
    "readable_query": "SELECT tv_channel.Pay_per_view_PPV FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel     ORDER BY tv_series.id ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Country FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel     ORDER BY T2.id ASC",
    "readable_query": "SELECT tv_channel.Country FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel     ORDER BY tv_series.id ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Pixel_aspect_ratio_PAR FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel     ORDER BY T2.id ASC",
    "readable_query": "SELECT tv_channel.Pixel_aspect_ratio_PAR FROM TV_Channel AS tv_channel JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel     ORDER BY cartoon.id ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel     ORDER BY T2.Share ASC",
    "readable_query": "SELECT tv_channel.series_name FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel     ORDER BY tv_series.Share ASC"
  },
  {
    "db_id": "tvshow",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Episode FROM TV_series AS T1 WHERE T1.Share = 6.0     INTERSECT SELECT T2.Episode FROM TV_series AS T2 WHERE T2.Share = 9.0",
    "readable_query": "SELECT tv_series.Episode FROM TV_series AS tv_series WHERE tv_series.Share = 6.0     INTERSECT SELECT tv_series.Episode FROM TV_series AS tv_series WHERE tv_series.Share = 9.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Air_Date FROM TV_series AS T1 WHERE T1.Viewers_m = \"6.75\"     INTERSECT SELECT T2.Air_Date FROM TV_series AS T2 WHERE T2.Viewers_m = \"6.09\"",
    "readable_query": "SELECT tv_series.Air_Date FROM TV_series AS tv_series WHERE tv_series.Viewers_m = \"6.75\"     INTERSECT SELECT tv_series.Air_Date FROM TV_series AS tv_series WHERE tv_series.Viewers_m = \"6.09\""
  },
  {
    "db_id": "tvshow",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Country FROM TV_Channel AS T1 WHERE T1.id = \"705\"     INTERSECT SELECT T2.Country FROM TV_Channel AS T2 WHERE T2.id = \"708\"",
    "readable_query": "SELECT tv_channel.Country FROM TV_Channel AS tv_channel WHERE tv_channel.id = \"705\"     INTERSECT SELECT tv_channel.Country FROM TV_Channel AS tv_channel WHERE tv_channel.id = \"708\""
  },
  {
    "db_id": "tvshow",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.id FROM Cartoon AS T1 WHERE T1.Original_air_date = \"December5,2008\"     INTERSECT SELECT T2.id FROM Cartoon AS T2 WHERE T2.Original_air_date = \"January9,2009\"",
    "readable_query": "SELECT cartoon.id FROM Cartoon AS cartoon WHERE cartoon.Original_air_date = \"December5,2008\"     INTERSECT SELECT cartoon.id FROM Cartoon AS cartoon WHERE cartoon.Original_air_date = \"January9,2009\""
  },
  {
    "db_id": "tvshow",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Episode FROM TV_series AS T1 WHERE T1.Viewers_m = \"6.75\"     INTERSECT SELECT T2.Episode FROM TV_series AS T2 WHERE T2.Viewers_m = \"5.13\"",
    "readable_query": "SELECT tv_series.Episode FROM TV_series AS tv_series WHERE tv_series.Viewers_m = \"6.75\"     INTERSECT SELECT tv_series.Episode FROM TV_series AS tv_series WHERE tv_series.Viewers_m = \"5.13\""
  },
  {
    "db_id": "tvshow",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Country FROM TV_Channel AS T1 WHERE T1.Content = \"music\"     INTERSECT SELECT T2.Country FROM TV_Channel AS T2 WHERE T2.Content = \"music\"",
    "readable_query": "SELECT tv_channel.Country FROM TV_Channel AS tv_channel WHERE tv_channel.Content = \"music\"     INTERSECT SELECT tv_channel.Country FROM TV_Channel AS tv_channel WHERE tv_channel.Content = \"music\""
  },
  {
    "db_id": "tvshow",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Production_code) FROM Cartoon AS T1 WHERE T1.Title = \"Day of the Dark Knight!\"",
    "readable_query": "SELECT avg( cartoon.Production_code) FROM Cartoon AS cartoon WHERE cartoon.Title = \"Day of the Dark Knight!\""
  },
  {
    "db_id": "tvshow",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.id) FROM Cartoon AS T1 WHERE T1.Production_code = 101.0",
    "readable_query": "SELECT avg( cartoon.id) FROM Cartoon AS cartoon WHERE cartoon.Production_code = 101.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Weekly_Rank) FROM TV_series AS T1 WHERE T1.Rating = \"5.3\"",
    "readable_query": "SELECT avg( tv_series.Weekly_Rank) FROM TV_series AS tv_series WHERE tv_series.Rating = \"5.3\""
  },
  {
    "db_id": "tvshow",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.id) FROM TV_series AS T1 WHERE T1.Share = 9.0",
    "readable_query": "SELECT avg( tv_series.id) FROM TV_series AS tv_series WHERE tv_series.Share = 9.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Country FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Weekly_Rank = (SELECT max( T23.Weekly_Rank) FROM TV_series AS T23)",
    "readable_query": "SELECT tv_channel.Country FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel WHERE tv_series.Weekly_Rank = (SELECT max( tv_series.Weekly_Rank) FROM TV_series AS tv_series)"
  },
  {
    "db_id": "tvshow",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Pay_per_view_PPV FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.id = (SELECT max( T23.id) FROM TV_series AS T23)",
    "readable_query": "SELECT tv_channel.Pay_per_view_PPV FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel WHERE tv_series.id = (SELECT max( tv_series.id) FROM TV_series AS tv_series)"
  },
  {
    "db_id": "tvshow",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.id FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Production_code = (SELECT max( T23.Production_code) FROM Cartoon AS T23)",
    "readable_query": "SELECT tv_channel.id FROM TV_Channel AS tv_channel JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel WHERE cartoon.Production_code = (SELECT max( cartoon.Production_code) FROM Cartoon AS cartoon)"
  },
  {
    "db_id": "tvshow",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Channel, T2.Hight_definition_TV FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN TV_series AS T3 ON T2.id = T3.Channel WHERE T3.Weekly_Rank = 68.0 and T2.Language = \"English\"",
    "readable_query": "SELECT cartoon.Channel, tv_channel.Hight_definition_TV FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel WHERE tv_series.Weekly_Rank = 68.0 and tv_channel.Language = \"English\""
  },
  {
    "db_id": "tvshow",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Channel, T2.Pixel_aspect_ratio_PAR FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN TV_series AS T3 ON T2.id = T3.Channel WHERE T3.id = 10.0 and T2.Pay_per_view_PPV = \"no\"",
    "readable_query": "SELECT cartoon.Channel, tv_channel.Pixel_aspect_ratio_PAR FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel WHERE tv_series.id = 10.0 and tv_channel.Pay_per_view_PPV = \"no\""
  },
  {
    "db_id": "tvshow",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Country, T2.Channel FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel JOIN TV_series AS T3 ON T1.id = T3.Channel WHERE T3.Viewers_m = \"6.05\" and T2.Production_code = 108.0",
    "readable_query": "SELECT tv_channel.Country, cartoon.Channel FROM TV_Channel AS tv_channel JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel WHERE tv_series.Viewers_m = \"6.05\" and cartoon.Production_code = 108.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Hight_definition_TV, T2.Channel FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel JOIN Cartoon AS T3 ON T1.id = T3.Channel WHERE T3.Original_air_date = \"January9,2009\" and T2.Share = 9.0",
    "readable_query": "SELECT tv_channel.Hight_definition_TV, tv_series.Channel FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel JOIN Cartoon AS cartoon ON tv_channel.id = cartoon.Channel WHERE cartoon.Original_air_date = \"January9,2009\" and tv_series.Share = 9.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Country FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.id = 8.0 GROUP BY T1.Country  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT tv_channel.Country FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel WHERE tv_series.id = 8.0 GROUP BY tv_channel.Country  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.id FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Rating = \"3.7\" GROUP BY T1.id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT tv_channel.id FROM TV_Channel AS tv_channel JOIN TV_series AS tv_series ON tv_channel.id = tv_series.Channel WHERE tv_series.Rating = \"3.7\" GROUP BY tv_channel.id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.id FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Pixel_aspect_ratio_PAR = \"4:3\" GROUP BY T1.id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT cartoon.id FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id WHERE tv_channel.Pixel_aspect_ratio_PAR = \"4:3\" GROUP BY cartoon.id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Viewers_m FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Hight_definition_TV = \"no\" GROUP BY T1.Viewers_m  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT tv_series.Viewers_m FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id WHERE tv_channel.Hight_definition_TV = \"no\" GROUP BY tv_series.Viewers_m  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.18_49_Rating_Share FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Country = \"Poland\" GROUP BY T1.18_49_Rating_Share  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT tv_series.18_49_Rating_Share FROM TV_series AS tv_series JOIN TV_Channel AS tv_channel ON tv_series.Channel = tv_channel.id WHERE tv_channel.Country = \"Poland\" GROUP BY tv_series.18_49_Rating_Share  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Language = \"Italian\" GROUP BY T1.Title  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT cartoon.Title FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id WHERE tv_channel.Language = \"Italian\" GROUP BY cartoon.Title  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.id FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Country = \"United Kingdom\" GROUP BY T1.id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT cartoon.id FROM Cartoon AS cartoon JOIN TV_Channel AS tv_channel ON cartoon.Channel = tv_channel.id WHERE tv_channel.Country = \"United Kingdom\" GROUP BY cartoon.id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "tvshow",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Share FROM TV_series AS T1        EXCEPT SELECT T2.Share FROM TV_series AS T2 WHERE T2.id = 5.0",
    "readable_query": "SELECT tv_series.Share FROM TV_series AS tv_series        EXCEPT SELECT tv_series.Share FROM TV_series AS tv_series WHERE tv_series.id = 5.0"
  },
  {
    "db_id": "tvshow",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Production_code FROM Cartoon AS T1        EXCEPT SELECT T2.Production_code FROM Cartoon AS T2 WHERE T2.Directed_by = \"Michael Chang\"",
    "readable_query": "SELECT cartoon.Production_code FROM Cartoon AS cartoon        EXCEPT SELECT cartoon.Production_code FROM Cartoon AS cartoon WHERE cartoon.Directed_by = \"Michael Chang\""
  },
  {
    "db_id": "tvshow",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Production_code FROM Cartoon AS T1        EXCEPT SELECT T2.Production_code FROM Cartoon AS T2 WHERE T2.Written_by = \"Todd Casey\"",
    "readable_query": "SELECT cartoon.Production_code FROM Cartoon AS cartoon        EXCEPT SELECT cartoon.Production_code FROM Cartoon AS cartoon WHERE cartoon.Written_by = \"Todd Casey\""
  },
  {
    "db_id": "tvshow",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Viewers_m FROM TV_series AS T1        EXCEPT SELECT T2.Viewers_m FROM TV_series AS T2 WHERE T2.id = 11.0",
    "readable_query": "SELECT tv_series.Viewers_m FROM TV_series AS tv_series        EXCEPT SELECT tv_series.Viewers_m FROM TV_series AS tv_series WHERE tv_series.id = 11.0"
  },
  {
    "db_id": "battle_death",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.location FROM ship AS T1 WHERE T1.lost_in_battle = 6",
    "readable_query": "SELECT ship.location FROM ship AS ship WHERE ship.lost_in_battle = 6"
  },
  {
    "db_id": "battle_death",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.id FROM battle AS T1 WHERE T1.name = \"Battle of Adrianople\"",
    "readable_query": "SELECT battle.id FROM battle AS battle WHERE battle.name = \"Battle of Adrianople\""
  },
  {
    "db_id": "battle_death",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.date FROM battle AS T1 WHERE T1.latin_commander = \"Thierry de Termond\"",
    "readable_query": "SELECT battle.date FROM battle AS battle WHERE battle.latin_commander = \"Thierry de Termond\""
  },
  {
    "db_id": "battle_death",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.note FROM death AS T1 WHERE T1.injured = 5",
    "readable_query": "SELECT death.note FROM death AS death WHERE death.injured = 5"
  },
  {
    "db_id": "battle_death",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.id FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = \"Bacchus\"",
    "readable_query": "SELECT battle.id FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle WHERE ship.name = \"Bacchus\""
  },
  {
    "db_id": "battle_death",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.id FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.lost_in_battle = 4",
    "readable_query": "SELECT death.id FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id WHERE ship.lost_in_battle = 4"
  },
  {
    "db_id": "battle_death",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.result FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.id = 7",
    "readable_query": "SELECT battle.result FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle WHERE ship.id = 7"
  },
  {
    "db_id": "battle_death",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.tonnage FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T2.latin_commander = \"John of Brienne\"",
    "readable_query": "SELECT ship.tonnage FROM ship AS ship JOIN battle AS battle ON ship.lost_in_battle = battle.id WHERE battle.latin_commander = \"John of Brienne\""
  },
  {
    "db_id": "battle_death",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.ship_type FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T2.killed = 8",
    "readable_query": "SELECT ship.ship_type FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id WHERE death.killed = 8"
  },
  {
    "db_id": "battle_death",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.killed FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = \"225\"",
    "readable_query": "SELECT death.killed FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = \"225\""
  },
  {
    "db_id": "battle_death",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.name FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T2.injured = 0",
    "readable_query": "SELECT ship.name FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id WHERE death.injured = 0"
  },
  {
    "db_id": "battle_death",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.name FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T2.note = \"Erraboru, Chhattisgarh\"",
    "readable_query": "SELECT ship.name FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id WHERE death.note = \"Erraboru, Chhattisgarh\""
  },
  {
    "db_id": "battle_death",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.latin_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = \"Brig\"",
    "readable_query": "SELECT battle.latin_commander FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle WHERE ship.ship_type = \"Brig\""
  },
  {
    "db_id": "battle_death",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.lost_in_battle, count(*) FROM ship AS T1  GROUP BY T1.lost_in_battle",
    "readable_query": "SELECT ship.lost_in_battle, count(*) FROM ship AS ship  GROUP BY ship.lost_in_battle"
  },
  {
    "db_id": "battle_death",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.killed, count(*) FROM death AS T1  GROUP BY T1.killed",
    "readable_query": "SELECT death.killed, count(*) FROM death AS death  GROUP BY death.killed"
  },
  {
    "db_id": "battle_death",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.location, count(*) FROM ship AS T1  GROUP BY T1.location",
    "readable_query": "SELECT ship.location, count(*) FROM ship AS ship  GROUP BY ship.location"
  },
  {
    "db_id": "battle_death",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.disposition_of_ship, count(*) FROM ship AS T1  GROUP BY T1.disposition_of_ship",
    "readable_query": "SELECT ship.disposition_of_ship, count(*) FROM ship AS ship  GROUP BY ship.disposition_of_ship"
  },
  {
    "db_id": "battle_death",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.bulgarian_commander, count(*) FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle  GROUP BY T1.bulgarian_commander",
    "readable_query": "SELECT battle.bulgarian_commander, count(*) FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle  GROUP BY battle.bulgarian_commander"
  },
  {
    "db_id": "battle_death",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.tonnage, count(*) FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id  GROUP BY T1.tonnage",
    "readable_query": "SELECT ship.tonnage, count(*) FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id  GROUP BY ship.tonnage"
  },
  {
    "db_id": "battle_death",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.tonnage, count(*) FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id  GROUP BY T1.tonnage",
    "readable_query": "SELECT ship.tonnage, count(*) FROM ship AS ship JOIN battle AS battle ON ship.lost_in_battle = battle.id  GROUP BY ship.tonnage"
  },
  {
    "db_id": "battle_death",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.name, count(*) FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id  GROUP BY T1.name",
    "readable_query": "SELECT ship.name, count(*) FROM ship AS ship JOIN battle AS battle ON ship.lost_in_battle = battle.id  GROUP BY ship.name"
  },
  {
    "db_id": "battle_death",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.date, count(*) FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle  GROUP BY T1.date",
    "readable_query": "SELECT battle.date, count(*) FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle  GROUP BY battle.date"
  },
  {
    "db_id": "battle_death",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM battle AS T1",
    "readable_query": "SELECT count(*) FROM battle AS battle"
  },
  {
    "db_id": "battle_death",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM death AS T1",
    "readable_query": "SELECT count(*) FROM death AS death"
  },
  {
    "db_id": "battle_death",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM ship AS T1",
    "readable_query": "SELECT count(*) FROM ship AS ship"
  },
  {
    "db_id": "battle_death",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.killed, T1.id FROM death AS T1",
    "readable_query": "SELECT death.killed, death.id FROM death AS death"
  },
  {
    "db_id": "battle_death",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.lost_in_battle, T1.tonnage FROM ship AS T1",
    "readable_query": "SELECT ship.lost_in_battle, ship.tonnage FROM ship AS ship"
  },
  {
    "db_id": "battle_death",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.name, T1.location FROM ship AS T1",
    "readable_query": "SELECT ship.name, ship.location FROM ship AS ship"
  },
  {
    "db_id": "battle_death",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.id, T1.note FROM death AS T1",
    "readable_query": "SELECT death.id, death.note FROM death AS death"
  },
  {
    "db_id": "battle_death",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.note, T1.id FROM death AS T1",
    "readable_query": "SELECT death.note, death.id FROM death AS death"
  },
  {
    "db_id": "battle_death",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.bulgarian_commander, T2.tonnage FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle",
    "readable_query": "SELECT battle.bulgarian_commander, ship.tonnage FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle"
  },
  {
    "db_id": "battle_death",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.note, T2.lost_in_battle FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id",
    "readable_query": "SELECT death.note, ship.lost_in_battle FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id"
  },
  {
    "db_id": "battle_death",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.caused_by_ship_id, T2.ship_type FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id",
    "readable_query": "SELECT death.caused_by_ship_id, ship.ship_type FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id"
  },
  {
    "db_id": "battle_death",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.tonnage, T2.note FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id",
    "readable_query": "SELECT ship.tonnage, death.note FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id"
  },
  {
    "db_id": "battle_death",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.injured, T1.note FROM death AS T1 WHERE T1.caused_by_ship_id = 1",
    "readable_query": "SELECT death.injured, death.note FROM death AS death WHERE death.caused_by_ship_id = 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.id, T1.caused_by_ship_id FROM death AS T1 WHERE T1.note = \"Gajapati, Odisha\"",
    "readable_query": "SELECT death.id, death.caused_by_ship_id FROM death AS death WHERE death.note = \"Gajapati, Odisha\""
  },
  {
    "db_id": "battle_death",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.disposition_of_ship, T1.lost_in_battle FROM ship AS T1 WHERE T1.location = \"SW Approaches\"",
    "readable_query": "SELECT ship.disposition_of_ship, ship.lost_in_battle FROM ship AS ship WHERE ship.location = \"SW Approaches\""
  },
  {
    "db_id": "battle_death",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.ship_type, T1.id FROM ship AS T1 WHERE T1.disposition_of_ship = \"Scuttled\"",
    "readable_query": "SELECT ship.ship_type, ship.id FROM ship AS ship WHERE ship.disposition_of_ship = \"Scuttled\""
  },
  {
    "db_id": "battle_death",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.ship_type, T1.name FROM ship AS T1 WHERE T1.disposition_of_ship = \"Captured\"",
    "readable_query": "SELECT ship.ship_type, ship.name FROM ship AS ship WHERE ship.disposition_of_ship = \"Captured\""
  },
  {
    "db_id": "battle_death",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.result FROM battle AS T1  GROUP BY T1.result  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT battle.result FROM battle AS battle  GROUP BY battle.result  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.latin_commander FROM battle AS T1  GROUP BY T1.latin_commander  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT battle.latin_commander FROM battle AS battle  GROUP BY battle.latin_commander  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.bulgarian_commander FROM battle AS T1  GROUP BY T1.bulgarian_commander  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT battle.bulgarian_commander FROM battle AS battle  GROUP BY battle.bulgarian_commander  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.id FROM ship AS T1  GROUP BY T1.id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT ship.id FROM ship AS ship  GROUP BY ship.id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM ship AS T1 WHERE T1.ship_type = \"8 gun Brig\"",
    "readable_query": "SELECT count(*) FROM ship AS ship WHERE ship.ship_type = \"8 gun Brig\""
  },
  {
    "db_id": "battle_death",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM battle AS T1 WHERE T1.result = \"Two Year Truce\"",
    "readable_query": "SELECT count(*) FROM battle AS battle WHERE battle.result = \"Two Year Truce\""
  },
  {
    "db_id": "battle_death",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM death AS T1 WHERE T1.id = 2",
    "readable_query": "SELECT count(*) FROM death AS death WHERE death.id = 2"
  },
  {
    "db_id": "battle_death",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM battle AS T1 WHERE T1.result = \"Latin victory\"",
    "readable_query": "SELECT count(*) FROM battle AS battle WHERE battle.result = \"Latin victory\""
  },
  {
    "db_id": "battle_death",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM death AS T1 WHERE T1.id = 8",
    "readable_query": "SELECT count(*) FROM death AS death WHERE death.id = 8"
  },
  {
    "db_id": "battle_death",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM death AS T1 WHERE T1.id = 4",
    "readable_query": "SELECT count(*) FROM death AS death WHERE death.id = 4"
  },
  {
    "db_id": "battle_death",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.id FROM ship AS T1    ORDER BY T1.lost_in_battle DESC LIMIT 1",
    "readable_query": "SELECT ship.id FROM ship AS ship    ORDER BY ship.lost_in_battle DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.name FROM battle AS T1    ORDER BY T1.id DESC LIMIT 1",
    "readable_query": "SELECT battle.name FROM battle AS battle    ORDER BY battle.id DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.date FROM battle AS T1    ORDER BY T1.id DESC LIMIT 1",
    "readable_query": "SELECT battle.date FROM battle AS battle    ORDER BY battle.id DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.caused_by_ship_id FROM death AS T1    ORDER BY T1.id DESC LIMIT 1",
    "readable_query": "SELECT death.caused_by_ship_id FROM death AS death    ORDER BY death.id DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.disposition_of_ship FROM ship AS T1    ORDER BY T1.lost_in_battle DESC LIMIT 1",
    "readable_query": "SELECT ship.disposition_of_ship FROM ship AS ship    ORDER BY ship.lost_in_battle DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.location FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id    ORDER BY T2.caused_by_ship_id DESC LIMIT 1",
    "readable_query": "SELECT ship.location FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id    ORDER BY death.caused_by_ship_id DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle    ORDER BY T2.lost_in_battle DESC LIMIT 1",
    "readable_query": "SELECT battle.bulgarian_commander FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle    ORDER BY ship.lost_in_battle DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.result FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle    ORDER BY T2.lost_in_battle DESC LIMIT 1",
    "readable_query": "SELECT battle.result FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle    ORDER BY ship.lost_in_battle DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.name FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id    ORDER BY T2.killed DESC LIMIT 1",
    "readable_query": "SELECT ship.name FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id    ORDER BY death.killed DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.note FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id    ORDER BY T2.id DESC LIMIT 1",
    "readable_query": "SELECT death.note FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id    ORDER BY ship.id DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.ship_type FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id    ORDER BY T2.injured ASC LIMIT 1",
    "readable_query": "SELECT ship.ship_type FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id    ORDER BY death.injured ASC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.id FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id    ORDER BY T2.caused_by_ship_id ASC LIMIT 1",
    "readable_query": "SELECT ship.id FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id    ORDER BY death.caused_by_ship_id ASC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.killed FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id    ORDER BY T2.lost_in_battle ASC LIMIT 1",
    "readable_query": "SELECT death.killed FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id    ORDER BY ship.lost_in_battle ASC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.result FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle    ORDER BY T2.lost_in_battle ASC LIMIT 1",
    "readable_query": "SELECT battle.result FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle    ORDER BY ship.lost_in_battle ASC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.latin_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle    ORDER BY T2.lost_in_battle ASC LIMIT 1",
    "readable_query": "SELECT battle.latin_commander FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle    ORDER BY ship.lost_in_battle ASC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.note FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id    ORDER BY T2.id ASC LIMIT 1",
    "readable_query": "SELECT death.note FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id    ORDER BY ship.id ASC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.bulgarian_commander, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle    ORDER BY T2.lost_in_battle DESC LIMIT 1",
    "readable_query": "SELECT battle.bulgarian_commander, battle.name FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle    ORDER BY ship.lost_in_battle DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.disposition_of_ship, T1.location FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id    ORDER BY T2.id DESC LIMIT 1",
    "readable_query": "SELECT ship.disposition_of_ship, ship.location FROM ship AS ship JOIN battle AS battle ON ship.lost_in_battle = battle.id    ORDER BY battle.id DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.latin_commander, T1.result FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle    ORDER BY T2.lost_in_battle DESC LIMIT 1",
    "readable_query": "SELECT battle.latin_commander, battle.result FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle    ORDER BY ship.lost_in_battle DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.caused_by_ship_id, T1.note FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id    ORDER BY T2.lost_in_battle DESC LIMIT 1",
    "readable_query": "SELECT death.caused_by_ship_id, death.note FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id    ORDER BY ship.lost_in_battle DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.location, T1.disposition_of_ship FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id    ORDER BY T2.id DESC LIMIT 1",
    "readable_query": "SELECT ship.location, ship.disposition_of_ship FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id    ORDER BY death.id DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.injured, T1.id FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id    ORDER BY T2.lost_in_battle DESC LIMIT 1",
    "readable_query": "SELECT death.injured, death.id FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id    ORDER BY ship.lost_in_battle DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.latin_commander) FROM battle AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  battle.latin_commander) FROM battle AS battle"
  },
  {
    "db_id": "battle_death",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.injured) FROM death AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  death.injured) FROM death AS death"
  },
  {
    "db_id": "battle_death",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.bulgarian_commander) FROM battle AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  battle.bulgarian_commander) FROM battle AS battle"
  },
  {
    "db_id": "battle_death",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.location) FROM ship AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  ship.location) FROM ship AS ship"
  },
  {
    "db_id": "battle_death",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.name) FROM battle AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  battle.name) FROM battle AS battle"
  },
  {
    "db_id": "battle_death",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.id) FROM death AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  death.id) FROM death AS death"
  },
  {
    "db_id": "battle_death",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.injured) FROM death AS T1",
    "readable_query": "SELECT avg( death.injured) FROM death AS death"
  },
  {
    "db_id": "battle_death",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.caused_by_ship_id) FROM death AS T1",
    "readable_query": "SELECT avg( death.caused_by_ship_id) FROM death AS death"
  },
  {
    "db_id": "battle_death",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.id) FROM ship AS T1",
    "readable_query": "SELECT avg( ship.id) FROM ship AS ship"
  },
  {
    "db_id": "battle_death",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.name FROM ship AS T1",
    "readable_query": "SELECT ship.name FROM ship AS ship"
  },
  {
    "db_id": "battle_death",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.latin_commander FROM battle AS T1",
    "readable_query": "SELECT battle.latin_commander FROM battle AS battle"
  },
  {
    "db_id": "battle_death",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.disposition_of_ship FROM ship AS T1",
    "readable_query": "SELECT ship.disposition_of_ship FROM ship AS ship"
  },
  {
    "db_id": "battle_death",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.injured FROM death AS T1",
    "readable_query": "SELECT death.injured FROM death AS death"
  },
  {
    "db_id": "battle_death",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.bulgarian_commander FROM battle AS T1",
    "readable_query": "SELECT DISTINCT battle.bulgarian_commander FROM battle AS battle"
  },
  {
    "db_id": "battle_death",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.injured FROM death AS T1",
    "readable_query": "SELECT DISTINCT death.injured FROM death AS death"
  },
  {
    "db_id": "battle_death",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.location FROM ship AS T1",
    "readable_query": "SELECT DISTINCT ship.location FROM ship AS ship"
  },
  {
    "db_id": "battle_death",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.caused_by_ship_id FROM death AS T1     ORDER BY T1.injured ASC",
    "readable_query": "SELECT death.caused_by_ship_id FROM death AS death     ORDER BY death.injured ASC"
  },
  {
    "db_id": "battle_death",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.tonnage FROM ship AS T1     ORDER BY T1.id ASC",
    "readable_query": "SELECT ship.tonnage FROM ship AS ship     ORDER BY ship.id ASC"
  },
  {
    "db_id": "battle_death",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.result FROM battle AS T1     ORDER BY T1.id ASC",
    "readable_query": "SELECT battle.result FROM battle AS battle     ORDER BY battle.id ASC"
  },
  {
    "db_id": "battle_death",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.name FROM battle AS T1     ORDER BY T1.id ASC",
    "readable_query": "SELECT battle.name FROM battle AS battle     ORDER BY battle.id ASC"
  },
  {
    "db_id": "battle_death",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.id FROM death AS T1     ORDER BY T1.injured ASC",
    "readable_query": "SELECT death.id FROM death AS death     ORDER BY death.injured ASC"
  },
  {
    "db_id": "battle_death",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.name FROM ship AS T1     ORDER BY T1.lost_in_battle DESC",
    "readable_query": "SELECT ship.name FROM ship AS ship     ORDER BY ship.lost_in_battle DESC"
  },
  {
    "db_id": "battle_death",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.injured FROM death AS T1     ORDER BY T1.id DESC",
    "readable_query": "SELECT death.injured FROM death AS death     ORDER BY death.id DESC"
  },
  {
    "db_id": "battle_death",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.ship_type FROM ship AS T1     ORDER BY T1.lost_in_battle DESC",
    "readable_query": "SELECT ship.ship_type FROM ship AS ship     ORDER BY ship.lost_in_battle DESC"
  },
  {
    "db_id": "battle_death",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.id FROM death AS T1     ORDER BY T1.injured DESC",
    "readable_query": "SELECT death.id FROM death AS death     ORDER BY death.injured DESC"
  },
  {
    "db_id": "battle_death",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.bulgarian_commander, T1.id FROM battle AS T1     ORDER BY T1.id ASC",
    "readable_query": "SELECT battle.bulgarian_commander, battle.id FROM battle AS battle     ORDER BY battle.id ASC"
  },
  {
    "db_id": "battle_death",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.name, T1.location FROM ship AS T1     ORDER BY T1.location ASC",
    "readable_query": "SELECT ship.name, ship.location FROM ship AS ship     ORDER BY ship.location ASC"
  },
  {
    "db_id": "battle_death",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.killed, T1.note FROM death AS T1     ORDER BY T1.note ASC",
    "readable_query": "SELECT death.killed, death.note FROM death AS death     ORDER BY death.note ASC"
  },
  {
    "db_id": "battle_death",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.id, T1.caused_by_ship_id FROM death AS T1     ORDER BY T1.caused_by_ship_id ASC",
    "readable_query": "SELECT death.id, death.caused_by_ship_id FROM death AS death     ORDER BY death.caused_by_ship_id ASC"
  },
  {
    "db_id": "battle_death",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.id, T1.disposition_of_ship FROM ship AS T1     ORDER BY T1.disposition_of_ship ASC",
    "readable_query": "SELECT ship.id, ship.disposition_of_ship FROM ship AS ship     ORDER BY ship.disposition_of_ship ASC"
  },
  {
    "db_id": "battle_death",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id JOIN battle AS T3 ON T2.lost_in_battle = T3.id WHERE T2.name = \"Bacchus\" and T3.id = 8",
    "readable_query": "SELECT death.injured FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id JOIN battle AS battle ON ship.lost_in_battle = battle.id WHERE ship.name = \"Bacchus\" and battle.id = 8"
  },
  {
    "db_id": "battle_death",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id WHERE T2.tonnage = \"t\" and T3.injured = 5",
    "readable_query": "SELECT battle.name FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle JOIN death AS death ON ship.id = death.caused_by_ship_id WHERE ship.tonnage = \"t\" and death.injured = 5"
  },
  {
    "db_id": "battle_death",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id WHERE T2.disposition_of_ship = \"Captured\" and T3.caused_by_ship_id = 3",
    "readable_query": "SELECT battle.date FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle JOIN death AS death ON ship.id = death.caused_by_ship_id WHERE ship.disposition_of_ship = \"Captured\" and death.caused_by_ship_id = 3"
  },
  {
    "db_id": "battle_death",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.caused_by_ship_id FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id JOIN battle AS T3 ON T2.lost_in_battle = T3.id WHERE T2.lost_in_battle = 4 and T3.result = \"Latin victory\"",
    "readable_query": "SELECT death.caused_by_ship_id FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id JOIN battle AS battle ON ship.lost_in_battle = battle.id WHERE ship.lost_in_battle = 4 and battle.result = \"Latin victory\""
  },
  {
    "db_id": "battle_death",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = \"Brig\" or T2.ship_type = \"18-gun Brig\"",
    "readable_query": "SELECT battle.date FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle WHERE ship.ship_type = \"Brig\" or ship.ship_type = \"18-gun Brig\""
  },
  {
    "db_id": "battle_death",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = \"8 gun Brig\" or T2.ship_type = \"18-gun Brig\"",
    "readable_query": "SELECT battle.bulgarian_commander FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle WHERE ship.ship_type = \"8 gun Brig\" or ship.ship_type = \"18-gun Brig\""
  },
  {
    "db_id": "battle_death",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.note FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = \"391\" or T2.tonnage = \"225\"",
    "readable_query": "SELECT death.note FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = \"391\" or ship.tonnage = \"225\""
  },
  {
    "db_id": "battle_death",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.tonnage FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T2.latin_commander = \"Unknown\" or T2.latin_commander = \"Henry I\"",
    "readable_query": "SELECT ship.tonnage FROM ship AS ship JOIN battle AS battle ON ship.lost_in_battle = battle.id WHERE battle.latin_commander = \"Unknown\" or battle.latin_commander = \"Henry I\""
  },
  {
    "db_id": "battle_death",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.id FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = \"Bon Accord\" or T2.name = \"Three Brothers\"",
    "readable_query": "SELECT battle.id FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle WHERE ship.name = \"Bon Accord\" or ship.name = \"Three Brothers\""
  },
  {
    "db_id": "battle_death",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.ship_type FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T2.bulgarian_commander = \"Ivan Asen II\" or T2.bulgarian_commander = \"Kaloyan\"",
    "readable_query": "SELECT ship.ship_type FROM ship AS ship JOIN battle AS battle ON ship.lost_in_battle = battle.id WHERE battle.bulgarian_commander = \"Ivan Asen II\" or battle.bulgarian_commander = \"Kaloyan\""
  },
  {
    "db_id": "battle_death",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.killed FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.id = 4 or T2.id = 1",
    "readable_query": "SELECT death.killed FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id WHERE ship.id = 4 or ship.id = 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.ship_type FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T2.result = \"Two Year Truce\" or T2.result = \"Two Year Truce\"",
    "readable_query": "SELECT ship.ship_type FROM ship AS ship JOIN battle AS battle ON ship.lost_in_battle = battle.id WHERE battle.result = \"Two Year Truce\" or battle.result = \"Two Year Truce\""
  },
  {
    "db_id": "battle_death",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.name FROM battle AS T1 WHERE T1.date = \"1235\" and T1.result = \"Two Year Truce\"",
    "readable_query": "SELECT battle.name FROM battle AS battle WHERE battle.date = \"1235\" and battle.result = \"Two Year Truce\""
  },
  {
    "db_id": "battle_death",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.lost_in_battle FROM ship AS T1 WHERE T1.tonnage = \"391\" and T1.ship_type = \"18-gun Brig\"",
    "readable_query": "SELECT ship.lost_in_battle FROM ship AS ship WHERE ship.tonnage = \"391\" and ship.ship_type = \"18-gun Brig\""
  },
  {
    "db_id": "battle_death",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.injured FROM death AS T1 WHERE T1.killed = 14 and T1.note = \"Gajapati, Odisha\"",
    "readable_query": "SELECT death.injured FROM death AS death WHERE death.killed = 14 and death.note = \"Gajapati, Odisha\""
  },
  {
    "db_id": "battle_death",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.injured FROM death AS T1 WHERE T1.caused_by_ship_id = 1 and T1.note = \"Gajapati, Odisha\"",
    "readable_query": "SELECT death.injured FROM death AS death WHERE death.caused_by_ship_id = 1 and death.note = \"Gajapati, Odisha\""
  },
  {
    "db_id": "battle_death",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.killed FROM death AS T1 WHERE T1.id = 13 and T1.caused_by_ship_id = 6",
    "readable_query": "SELECT death.killed FROM death AS death WHERE death.id = 13 and death.caused_by_ship_id = 6"
  },
  {
    "db_id": "battle_death",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.id FROM ship AS T1 WHERE T1.tonnage = \"t\" and T1.name = \"Bacchus\"",
    "readable_query": "SELECT ship.id FROM ship AS ship WHERE ship.tonnage = \"t\" and ship.name = \"Bacchus\""
  },
  {
    "db_id": "battle_death",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.id) FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T1.ship_type = \"8 gun Brig\" and T2.bulgarian_commander = \"Unknown\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  ship.id) FROM ship AS ship JOIN battle AS battle ON ship.lost_in_battle = battle.id WHERE ship.ship_type = \"8 gun Brig\" and battle.bulgarian_commander = \"Unknown\""
  },
  {
    "db_id": "battle_death",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.id) FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T1.name = \"Battle of Boruy\" and T2.disposition_of_ship = \"Captured\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  battle.id) FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle WHERE battle.name = \"Battle of Boruy\" and ship.disposition_of_ship = \"Captured\""
  },
  {
    "db_id": "battle_death",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.name FROM ship AS T1 WHERE T1.disposition_of_ship = \"Captured\" or T1.tonnage = \"391\"",
    "readable_query": "SELECT ship.name FROM ship AS ship WHERE ship.disposition_of_ship = \"Captured\" or ship.tonnage = \"391\""
  },
  {
    "db_id": "battle_death",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.name FROM ship AS T1 WHERE T1.ship_type = \"Brig\" or T1.lost_in_battle = 8",
    "readable_query": "SELECT ship.name FROM ship AS ship WHERE ship.ship_type = \"Brig\" or ship.lost_in_battle = 8"
  },
  {
    "db_id": "battle_death",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.caused_by_ship_id FROM death AS T1 WHERE T1.id = 12 or T1.injured = 0",
    "readable_query": "SELECT death.caused_by_ship_id FROM death AS death WHERE death.id = 12 or death.injured = 0"
  },
  {
    "db_id": "battle_death",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.tonnage FROM ship AS T1 WHERE T1.ship_type = \"18-gun Brig\" or T1.lost_in_battle = 8",
    "readable_query": "SELECT ship.tonnage FROM ship AS ship WHERE ship.ship_type = \"18-gun Brig\" or ship.lost_in_battle = 8"
  },
  {
    "db_id": "battle_death",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.result FROM battle AS T1 WHERE T1.bulgarian_commander = \"Boril\" or T1.date = \"1235\"",
    "readable_query": "SELECT battle.result FROM battle AS battle WHERE battle.bulgarian_commander = \"Boril\" or battle.date = \"1235\""
  },
  {
    "db_id": "battle_death",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.lost_in_battle FROM ship AS T1 WHERE T1.name = \"Bacchus\" or T1.disposition_of_ship = \"Wrecked\"",
    "readable_query": "SELECT ship.lost_in_battle FROM ship AS ship WHERE ship.name = \"Bacchus\" or ship.disposition_of_ship = \"Wrecked\""
  },
  {
    "db_id": "battle_death",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.injured FROM death AS T1 WHERE T1.note = \"Gajapati, Odisha\" or T1.id = 1",
    "readable_query": "SELECT death.injured FROM death AS death WHERE death.note = \"Gajapati, Odisha\" or death.id = 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.bulgarian_commander FROM battle AS T1 WHERE T1.result = \"Two Year Truce\" or T1.latin_commander = \"Baldwin I\"",
    "readable_query": "SELECT battle.bulgarian_commander FROM battle AS battle WHERE battle.result = \"Two Year Truce\" or battle.latin_commander = \"Baldwin I\""
  },
  {
    "db_id": "battle_death",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T2.id = 11 and T2.note = \"WestMidnapore, West Bengal\"",
    "readable_query": "SELECT count(*) FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id WHERE death.id = 11 and death.note = \"WestMidnapore, West Bengal\""
  },
  {
    "db_id": "battle_death",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.ship_type = \"Brig\" and T2.tonnage = \"225\"",
    "readable_query": "SELECT count(*) FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id WHERE ship.ship_type = \"Brig\" and ship.tonnage = \"225\""
  },
  {
    "db_id": "battle_death",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.id = 6 and T2.ship_type = \"8 gun Brig\"",
    "readable_query": "SELECT count(*) FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id WHERE ship.id = 6 and ship.ship_type = \"8 gun Brig\""
  },
  {
    "db_id": "battle_death",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T2.note = \"Bastar, Chattisgarh\" and T2.id = 12",
    "readable_query": "SELECT count(*) FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id WHERE death.note = \"Bastar, Chattisgarh\" and death.id = 12"
  },
  {
    "db_id": "battle_death",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T2.id = 3 and T2.name = \"Battle of Rusion\"",
    "readable_query": "SELECT count(*) FROM ship AS ship JOIN battle AS battle ON ship.lost_in_battle = battle.id WHERE battle.id = 3 and battle.name = \"Battle of Rusion\""
  },
  {
    "db_id": "battle_death",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.ship_type = \"18-gun Brig\" and T2.id = 7",
    "readable_query": "SELECT count(*) FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id WHERE ship.ship_type = \"18-gun Brig\" and ship.id = 7"
  },
  {
    "db_id": "battle_death",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.result FROM battle AS T1 WHERE T1.id != 4",
    "readable_query": "SELECT battle.result FROM battle AS battle WHERE battle.id != 4"
  },
  {
    "db_id": "battle_death",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.name FROM ship AS T1 WHERE T1.tonnage != \"391\"",
    "readable_query": "SELECT ship.name FROM ship AS ship WHERE ship.tonnage != \"391\""
  },
  {
    "db_id": "battle_death",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.caused_by_ship_id FROM death AS T1 WHERE T1.note != \"Bokaro, Jharkhand\"",
    "readable_query": "SELECT death.caused_by_ship_id FROM death AS death WHERE death.note != \"Bokaro, Jharkhand\""
  },
  {
    "db_id": "battle_death",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.disposition_of_ship FROM ship AS T1 WHERE T1.lost_in_battle != 4",
    "readable_query": "SELECT ship.disposition_of_ship FROM ship AS ship WHERE ship.lost_in_battle != 4"
  },
  {
    "db_id": "battle_death",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.name FROM ship AS T1 WHERE T1.location != \"English Channel\"",
    "readable_query": "SELECT ship.name FROM ship AS ship WHERE ship.location != \"English Channel\""
  },
  {
    "db_id": "battle_death",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.disposition_of_ship != \"Scuttled\"",
    "readable_query": "SELECT death.injured FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id WHERE ship.disposition_of_ship != \"Scuttled\""
  },
  {
    "db_id": "battle_death",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.id FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.ship_type != \"18-gun Brig\"",
    "readable_query": "SELECT death.id FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id WHERE ship.ship_type != \"18-gun Brig\""
  },
  {
    "db_id": "battle_death",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.note FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage != \"391\"",
    "readable_query": "SELECT death.note FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage != \"391\""
  },
  {
    "db_id": "battle_death",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.id FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.disposition_of_ship != \"Sank\"",
    "readable_query": "SELECT battle.id FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle WHERE ship.disposition_of_ship != \"Sank\""
  },
  {
    "db_id": "battle_death",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.id != 6",
    "readable_query": "SELECT death.injured FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id WHERE ship.id != 6"
  },
  {
    "db_id": "battle_death",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.tonnage FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T2.note != \"WestMidnapore, West Bengal\"",
    "readable_query": "SELECT ship.tonnage FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id WHERE death.note != \"WestMidnapore, West Bengal\""
  },
  {
    "db_id": "battle_death",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.note FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.ship_type != \"18-gun Brig\"",
    "readable_query": "SELECT death.note FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id WHERE ship.ship_type != \"18-gun Brig\""
  },
  {
    "db_id": "battle_death",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.ship_type FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T2.name = \"Battle of Rusion\"",
    "readable_query": "SELECT DISTINCT ship.ship_type FROM ship AS ship JOIN battle AS battle ON ship.lost_in_battle = battle.id WHERE battle.name = \"Battle of Rusion\""
  },
  {
    "db_id": "battle_death",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.latin_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = \"Brig\"",
    "readable_query": "SELECT DISTINCT battle.latin_commander FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle WHERE ship.ship_type = \"Brig\""
  },
  {
    "db_id": "battle_death",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.latin_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.location = \"Mid-Atlantic\"",
    "readable_query": "SELECT DISTINCT battle.latin_commander FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle WHERE ship.location = \"Mid-Atlantic\""
  },
  {
    "db_id": "battle_death",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.name FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T2.injured = 0",
    "readable_query": "SELECT DISTINCT ship.name FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id WHERE death.injured = 0"
  },
  {
    "db_id": "battle_death",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.ship_type = \"18-gun Brig\"",
    "readable_query": "SELECT DISTINCT death.injured FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id WHERE ship.ship_type = \"18-gun Brig\""
  },
  {
    "db_id": "battle_death",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.tonnage = \"t\"",
    "readable_query": "SELECT DISTINCT battle.name FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle WHERE ship.tonnage = \"t\""
  },
  {
    "db_id": "battle_death",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.date) FROM battle AS T1 WHERE T1.latin_commander = \"Henry I\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  battle.date) FROM battle AS battle WHERE battle.latin_commander = \"Henry I\""
  },
  {
    "db_id": "battle_death",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.result) FROM battle AS T1 WHERE T1.latin_commander = \"John of Brienne\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  battle.result) FROM battle AS battle WHERE battle.latin_commander = \"John of Brienne\""
  },
  {
    "db_id": "battle_death",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.name) FROM ship AS T1 WHERE T1.lost_in_battle = 7",
    "readable_query": "SELECT DISTINCT count(DISTINCT  ship.name) FROM ship AS ship WHERE ship.lost_in_battle = 7"
  },
  {
    "db_id": "battle_death",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.disposition_of_ship FROM ship AS T1 WHERE T1.id > 7",
    "readable_query": "SELECT ship.disposition_of_ship FROM ship AS ship WHERE ship.id > 7"
  },
  {
    "db_id": "battle_death",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.id FROM death AS T1 WHERE T1.caused_by_ship_id > 3",
    "readable_query": "SELECT death.id FROM death AS death WHERE death.caused_by_ship_id > 3"
  },
  {
    "db_id": "battle_death",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.date FROM battle AS T1 WHERE T1.id > 1",
    "readable_query": "SELECT battle.date FROM battle AS battle WHERE battle.id > 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.caused_by_ship_id FROM death AS T1 WHERE T1.id > 2",
    "readable_query": "SELECT death.caused_by_ship_id FROM death AS death WHERE death.id > 2"
  },
  {
    "db_id": "battle_death",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.lost_in_battle, T2.name, T3.id FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id JOIN death AS T3 ON T1.id = T3.caused_by_ship_id",
    "readable_query": "SELECT ship.lost_in_battle, battle.name, death.id FROM ship AS ship JOIN battle AS battle ON ship.lost_in_battle = battle.id JOIN death AS death ON ship.id = death.caused_by_ship_id"
  },
  {
    "db_id": "battle_death",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.id, T2.ship_type, T3.bulgarian_commander FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id JOIN battle AS T3 ON T2.lost_in_battle = T3.id",
    "readable_query": "SELECT death.id, ship.ship_type, battle.bulgarian_commander FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id JOIN battle AS battle ON ship.lost_in_battle = battle.id"
  },
  {
    "db_id": "battle_death",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.note, T2.id, T3.bulgarian_commander FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id JOIN battle AS T3 ON T2.lost_in_battle = T3.id",
    "readable_query": "SELECT death.note, ship.id, battle.bulgarian_commander FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id JOIN battle AS battle ON ship.lost_in_battle = battle.id"
  },
  {
    "db_id": "battle_death",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.name, T2.id, T3.caused_by_ship_id FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id",
    "readable_query": "SELECT battle.name, ship.id, death.caused_by_ship_id FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle JOIN death AS death ON ship.id = death.caused_by_ship_id"
  },
  {
    "db_id": "battle_death",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.location, T2.result, T3.killed FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id JOIN death AS T3 ON T1.id = T3.caused_by_ship_id",
    "readable_query": "SELECT ship.location, battle.result, death.killed FROM ship AS ship JOIN battle AS battle ON ship.lost_in_battle = battle.id JOIN death AS death ON ship.id = death.caused_by_ship_id"
  },
  {
    "db_id": "battle_death",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.tonnage FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id     ORDER BY T2.injured ASC",
    "readable_query": "SELECT ship.tonnage FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id     ORDER BY death.injured ASC"
  },
  {
    "db_id": "battle_death",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle     ORDER BY T2.id ASC",
    "readable_query": "SELECT battle.bulgarian_commander FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle     ORDER BY ship.id ASC"
  },
  {
    "db_id": "battle_death",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.caused_by_ship_id FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id     ORDER BY T2.lost_in_battle ASC",
    "readable_query": "SELECT death.caused_by_ship_id FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id     ORDER BY ship.lost_in_battle ASC"
  },
  {
    "db_id": "battle_death",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.note FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id     ORDER BY T2.lost_in_battle ASC",
    "readable_query": "SELECT death.note FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id     ORDER BY ship.lost_in_battle ASC"
  },
  {
    "db_id": "battle_death",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.tonnage FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id     ORDER BY T2.id ASC",
    "readable_query": "SELECT ship.tonnage FROM ship AS ship JOIN battle AS battle ON ship.lost_in_battle = battle.id     ORDER BY battle.id ASC"
  },
  {
    "db_id": "battle_death",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle     ORDER BY T2.id ASC",
    "readable_query": "SELECT battle.date FROM battle AS battle JOIN ship AS ship ON battle.id = ship.lost_in_battle     ORDER BY ship.id ASC"
  },
  {
    "db_id": "battle_death",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.bulgarian_commander FROM battle AS T1 WHERE T1.result = \"Two Year Truce\"     INTERSECT SELECT T2.bulgarian_commander FROM battle AS T2 WHERE T2.result = \"Bulgarian victory\"",
    "readable_query": "SELECT battle.bulgarian_commander FROM battle AS battle WHERE battle.result = \"Two Year Truce\"     INTERSECT SELECT battle.bulgarian_commander FROM battle AS battle WHERE battle.result = \"Bulgarian victory\""
  },
  {
    "db_id": "battle_death",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.disposition_of_ship FROM ship AS T1 WHERE T1.name = \"Lettice\"     INTERSECT SELECT T2.disposition_of_ship FROM ship AS T2 WHERE T2.name = \"Lettice\"",
    "readable_query": "SELECT ship.disposition_of_ship FROM ship AS ship WHERE ship.name = \"Lettice\"     INTERSECT SELECT ship.disposition_of_ship FROM ship AS ship WHERE ship.name = \"Lettice\""
  },
  {
    "db_id": "battle_death",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.location FROM ship AS T1 WHERE T1.tonnage = \"225\"     INTERSECT SELECT T2.location FROM ship AS T2 WHERE T2.tonnage = \"t\"",
    "readable_query": "SELECT ship.location FROM ship AS ship WHERE ship.tonnage = \"225\"     INTERSECT SELECT ship.location FROM ship AS ship WHERE ship.tonnage = \"t\""
  },
  {
    "db_id": "battle_death",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.id FROM ship AS T1 WHERE T1.tonnage = \"391\"     INTERSECT SELECT T2.id FROM ship AS T2 WHERE T2.tonnage = \"391\"",
    "readable_query": "SELECT ship.id FROM ship AS ship WHERE ship.tonnage = \"391\"     INTERSECT SELECT ship.id FROM ship AS ship WHERE ship.tonnage = \"391\""
  },
  {
    "db_id": "battle_death",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.date FROM battle AS T1 WHERE T1.latin_commander = \"Boniface of Montferrat\"     INTERSECT SELECT T2.date FROM battle AS T2 WHERE T2.latin_commander = \"Boniface of Montferrat\"",
    "readable_query": "SELECT battle.date FROM battle AS battle WHERE battle.latin_commander = \"Boniface of Montferrat\"     INTERSECT SELECT battle.date FROM battle AS battle WHERE battle.latin_commander = \"Boniface of Montferrat\""
  },
  {
    "db_id": "battle_death",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.id) FROM battle AS T1 WHERE T1.name = \"Battle of Adrianople\"",
    "readable_query": "SELECT avg( battle.id) FROM battle AS battle WHERE battle.name = \"Battle of Adrianople\""
  },
  {
    "db_id": "battle_death",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.id) FROM death AS T1 WHERE T1.note = \"Dantewada, Chhattisgarh\"",
    "readable_query": "SELECT avg( death.id) FROM death AS death WHERE death.note = \"Dantewada, Chhattisgarh\""
  },
  {
    "db_id": "battle_death",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.id) FROM battle AS T1 WHERE T1.date = \"4 September 1207\"",
    "readable_query": "SELECT avg( battle.id) FROM battle AS battle WHERE battle.date = \"4 September 1207\""
  },
  {
    "db_id": "battle_death",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.id) FROM battle AS T1 WHERE T1.result = \"Two Year Truce\"",
    "readable_query": "SELECT avg( battle.id) FROM battle AS battle WHERE battle.result = \"Two Year Truce\""
  },
  {
    "db_id": "battle_death",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.caused_by_ship_id) FROM death AS T1 WHERE T1.killed = 2",
    "readable_query": "SELECT avg( death.caused_by_ship_id) FROM death AS death WHERE death.killed = 2"
  },
  {
    "db_id": "battle_death",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.id) FROM battle AS T1 WHERE T1.name = \"Battle of Rodosto\"",
    "readable_query": "SELECT avg( battle.id) FROM battle AS battle WHERE battle.name = \"Battle of Rodosto\""
  },
  {
    "db_id": "battle_death",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.killed FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.lost_in_battle = (SELECT max( T23.lost_in_battle) FROM ship AS T23)",
    "readable_query": "SELECT death.killed FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id WHERE ship.lost_in_battle = (SELECT max( ship.lost_in_battle) FROM ship AS ship)"
  },
  {
    "db_id": "battle_death",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.note FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.id = (SELECT max( T23.id) FROM ship AS T23)",
    "readable_query": "SELECT death.note FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id WHERE ship.id = (SELECT max( ship.id) FROM ship AS ship)"
  },
  {
    "db_id": "battle_death",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.ship_type, T2.name FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id JOIN death AS T3 ON T1.id = T3.caused_by_ship_id WHERE T3.injured = 9 and T2.date = \"1235\"",
    "readable_query": "SELECT ship.ship_type, battle.name FROM ship AS ship JOIN battle AS battle ON ship.lost_in_battle = battle.id JOIN death AS death ON ship.id = death.caused_by_ship_id WHERE death.injured = 9 and battle.date = \"1235\""
  },
  {
    "db_id": "battle_death",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.ship_type, T2.result FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id JOIN death AS T3 ON T1.id = T3.caused_by_ship_id WHERE T3.id = 3 and T2.name = \"Battle of Serres\"",
    "readable_query": "SELECT ship.ship_type, battle.result FROM ship AS ship JOIN battle AS battle ON ship.lost_in_battle = battle.id JOIN death AS death ON ship.id = death.caused_by_ship_id WHERE death.id = 3 and battle.name = \"Battle of Serres\""
  },
  {
    "db_id": "battle_death",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.id, T2.bulgarian_commander FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id JOIN death AS T3 ON T1.id = T3.caused_by_ship_id WHERE T3.injured = 0 and T2.date = \"February 1206\"",
    "readable_query": "SELECT ship.id, battle.bulgarian_commander FROM ship AS ship JOIN battle AS battle ON ship.lost_in_battle = battle.id JOIN death AS death ON ship.id = death.caused_by_ship_id WHERE death.injured = 0 and battle.date = \"February 1206\""
  },
  {
    "db_id": "battle_death",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.name, T2.id FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id JOIN battle AS T3 ON T1.lost_in_battle = T3.id WHERE T3.date = \"February 1206\" and T2.killed = 0",
    "readable_query": "SELECT ship.name, death.id FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id JOIN battle AS battle ON ship.lost_in_battle = battle.id WHERE battle.date = \"February 1206\" and death.killed = 0"
  },
  {
    "db_id": "battle_death",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.note, T2.id FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id JOIN battle AS T3 ON T2.lost_in_battle = T3.id WHERE T3.latin_commander = \"John of Brienne\" and T2.tonnage = \"t\"",
    "readable_query": "SELECT death.note, ship.id FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id JOIN battle AS battle ON ship.lost_in_battle = battle.id WHERE battle.latin_commander = \"John of Brienne\" and ship.tonnage = \"t\""
  },
  {
    "db_id": "battle_death",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.disposition_of_ship = \"Captured\" GROUP BY T1.injured  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT death.injured FROM death AS death JOIN ship AS ship ON death.caused_by_ship_id = ship.id WHERE ship.disposition_of_ship = \"Captured\" GROUP BY death.injured  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.ship_type FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T2.id = 10 GROUP BY T1.ship_type  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT ship.ship_type FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id WHERE death.id = 10 GROUP BY ship.ship_type  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.lost_in_battle FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T2.injured = 9 GROUP BY T1.lost_in_battle  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT ship.lost_in_battle FROM ship AS ship JOIN death AS death ON ship.id = death.caused_by_ship_id WHERE death.injured = 9 GROUP BY ship.lost_in_battle  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.tonnage FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T2.id = 3 GROUP BY T1.tonnage  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT ship.tonnage FROM ship AS ship JOIN battle AS battle ON ship.lost_in_battle = battle.id WHERE battle.id = 3 GROUP BY ship.tonnage  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.date FROM battle AS T1        EXCEPT SELECT T2.date FROM battle AS T2 WHERE T2.result = \"Latin victory\"",
    "readable_query": "SELECT battle.date FROM battle AS battle        EXCEPT SELECT battle.date FROM battle AS battle WHERE battle.result = \"Latin victory\""
  },
  {
    "db_id": "battle_death",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.injured FROM death AS T1        EXCEPT SELECT T2.injured FROM death AS T2 WHERE T2.id = 13",
    "readable_query": "SELECT death.injured FROM death AS death        EXCEPT SELECT death.injured FROM death AS death WHERE death.id = 13"
  },
  {
    "db_id": "battle_death",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.tonnage FROM ship AS T1        EXCEPT SELECT T2.tonnage FROM ship AS T2 WHERE T2.ship_type = \"18-gun Brig\"",
    "readable_query": "SELECT ship.tonnage FROM ship AS ship        EXCEPT SELECT ship.tonnage FROM ship AS ship WHERE ship.ship_type = \"18-gun Brig\""
  },
  {
    "db_id": "battle_death",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.ship_type FROM ship AS T1        EXCEPT SELECT T2.ship_type FROM ship AS T2 WHERE T2.id = 1",
    "readable_query": "SELECT ship.ship_type FROM ship AS ship        EXCEPT SELECT ship.ship_type FROM ship AS ship WHERE ship.id = 1"
  },
  {
    "db_id": "battle_death",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.killed FROM death AS T1        EXCEPT SELECT T2.killed FROM death AS T2 WHERE T2.note = \"Kanker, Chhattisgarh\"",
    "readable_query": "SELECT death.killed FROM death AS death        EXCEPT SELECT death.killed FROM death AS death WHERE death.note = \"Kanker, Chhattisgarh\""
  },
  {
    "db_id": "battle_death",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.id FROM ship AS T1        EXCEPT SELECT T2.id FROM ship AS T2 WHERE T2.lost_in_battle = 5",
    "readable_query": "SELECT ship.id FROM ship AS ship        EXCEPT SELECT ship.id FROM ship AS ship WHERE ship.lost_in_battle = 5"
  },
  {
    "db_id": "battle_death",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.name FROM ship AS T1        EXCEPT SELECT T2.name FROM ship AS T2 WHERE T2.id = 6",
    "readable_query": "SELECT ship.name FROM ship AS ship        EXCEPT SELECT ship.name FROM ship AS ship WHERE ship.id = 6"
  },
  {
    "db_id": "car_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Weight FROM cars_data AS T1 WHERE T1.Year = 1979",
    "readable_query": "SELECT cars_data.Weight FROM cars_data AS cars_data WHERE cars_data.Year = 1979"
  },
  {
    "db_id": "car_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Continent FROM continents AS T1 WHERE T1.ContId = 3",
    "readable_query": "SELECT continents.Continent FROM continents AS continents WHERE continents.ContId = 3"
  },
  {
    "db_id": "car_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Model FROM car_names AS T1 WHERE T1.MakeId = 132",
    "readable_query": "SELECT car_names.Model FROM car_names AS car_names WHERE car_names.MakeId = 132"
  },
  {
    "db_id": "car_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.ModelId FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Maker = \"hyundai\"",
    "readable_query": "SELECT model_list.ModelId FROM model_list AS model_list JOIN car_makers AS car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = \"hyundai\""
  },
  {
    "db_id": "car_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model WHERE T2.Make = \"chevrolet vega (sw)\"",
    "readable_query": "SELECT model_list.Model FROM model_list AS model_list JOIN car_names AS car_names ON model_list.Model = car_names.Model WHERE car_names.Make = \"chevrolet vega (sw)\""
  },
  {
    "db_id": "car_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.ModelId FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Id = 21",
    "readable_query": "SELECT model_list.ModelId FROM model_list AS model_list JOIN car_makers AS car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Id = 21"
  },
  {
    "db_id": "car_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.ModelId FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model WHERE T2.Make = \"buick century 350\"",
    "readable_query": "SELECT model_list.ModelId FROM model_list AS model_list JOIN car_names AS car_names ON model_list.Model = car_names.Model WHERE car_names.Make = \"buick century 350\""
  },
  {
    "db_id": "car_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Continent FROM countries AS T1 JOIN continents AS T2 ON T1.Continent = T2.ContId WHERE T2.ContId = 4",
    "readable_query": "SELECT countries.Continent FROM countries AS countries JOIN continents AS continents ON countries.Continent = continents.ContId WHERE continents.ContId = 4"
  },
  {
    "db_id": "car_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Model, count(*) FROM model_list AS T1  GROUP BY T1.Model",
    "readable_query": "SELECT model_list.Model, count(*) FROM model_list AS model_list  GROUP BY model_list.Model"
  },
  {
    "db_id": "car_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.MakeId, count(*) FROM car_names AS T1  GROUP BY T1.MakeId",
    "readable_query": "SELECT car_names.MakeId, count(*) FROM car_names AS car_names  GROUP BY car_names.MakeId"
  },
  {
    "db_id": "car_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.CountryId, count(*) FROM countries AS T1  GROUP BY T1.CountryId",
    "readable_query": "SELECT countries.CountryId, count(*) FROM countries AS countries  GROUP BY countries.CountryId"
  },
  {
    "db_id": "car_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.ModelId, count(*) FROM model_list AS T1  GROUP BY T1.ModelId",
    "readable_query": "SELECT model_list.ModelId, count(*) FROM model_list AS model_list  GROUP BY model_list.ModelId"
  },
  {
    "db_id": "car_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Continent, count(*) FROM continents AS T1  GROUP BY T1.Continent",
    "readable_query": "SELECT continents.Continent, count(*) FROM continents AS continents  GROUP BY continents.Continent"
  },
  {
    "db_id": "car_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Cylinders, count(*) FROM cars_data AS T1  GROUP BY T1.Cylinders",
    "readable_query": "SELECT cars_data.Cylinders, count(*) FROM cars_data AS cars_data  GROUP BY cars_data.Cylinders"
  },
  {
    "db_id": "car_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Id, count(*) FROM car_makers AS T1  GROUP BY T1.Id",
    "readable_query": "SELECT car_makers.Id, count(*) FROM car_makers AS car_makers  GROUP BY car_makers.Id"
  },
  {
    "db_id": "car_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Maker, count(*) FROM model_list AS T1  GROUP BY T1.Maker",
    "readable_query": "SELECT model_list.Maker, count(*) FROM model_list AS model_list  GROUP BY model_list.Maker"
  },
  {
    "db_id": "car_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Model, count(*) FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id  GROUP BY T1.Model",
    "readable_query": "SELECT model_list.Model, count(*) FROM model_list AS model_list JOIN car_makers AS car_makers ON model_list.Maker = car_makers.Id  GROUP BY model_list.Model"
  },
  {
    "db_id": "car_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Continent, count(*) FROM countries AS T1 JOIN continents AS T2 ON T1.Continent = T2.ContId  GROUP BY T1.Continent",
    "readable_query": "SELECT countries.Continent, count(*) FROM countries AS countries JOIN continents AS continents ON countries.Continent = continents.ContId  GROUP BY countries.Continent"
  },
  {
    "db_id": "car_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Continent, count(*) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country  GROUP BY T1.Continent",
    "readable_query": "SELECT countries.Continent, count(*) FROM countries AS countries JOIN car_makers AS car_makers ON countries.CountryId = car_makers.Country  GROUP BY countries.Continent"
  },
  {
    "db_id": "car_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Id, count(*) FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId  GROUP BY T1.Id",
    "readable_query": "SELECT car_makers.Id, count(*) FROM car_makers AS car_makers JOIN countries AS countries ON car_makers.Country = countries.CountryId  GROUP BY car_makers.Id"
  },
  {
    "db_id": "car_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.MakeId, count(*) FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id  GROUP BY T1.MakeId",
    "readable_query": "SELECT car_names.MakeId, count(*) FROM car_names AS car_names JOIN cars_data AS cars_data ON car_names.MakeId = cars_data.Id  GROUP BY car_names.MakeId"
  },
  {
    "db_id": "car_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Id, count(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id",
    "readable_query": "SELECT car_makers.Id, count(*) FROM car_makers AS car_makers JOIN model_list AS model_list ON car_makers.Id = model_list.Maker  GROUP BY car_makers.Id"
  },
  {
    "db_id": "car_1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM cars_data AS T1",
    "readable_query": "SELECT count(*) FROM cars_data AS cars_data"
  },
  {
    "db_id": "car_1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM continents AS T1",
    "readable_query": "SELECT count(*) FROM continents AS continents"
  },
  {
    "db_id": "car_1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM car_names AS T1",
    "readable_query": "SELECT count(*) FROM car_names AS car_names"
  },
  {
    "db_id": "car_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Id, T1.Accelerate FROM cars_data AS T1",
    "readable_query": "SELECT cars_data.Id, cars_data.Accelerate FROM cars_data AS cars_data"
  },
  {
    "db_id": "car_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Cylinders, T1.Accelerate FROM cars_data AS T1",
    "readable_query": "SELECT cars_data.Cylinders, cars_data.Accelerate FROM cars_data AS cars_data"
  },
  {
    "db_id": "car_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Country, T1.FullName FROM car_makers AS T1",
    "readable_query": "SELECT car_makers.Country, car_makers.FullName FROM car_makers AS car_makers"
  },
  {
    "db_id": "car_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Id, T1.FullName FROM car_makers AS T1",
    "readable_query": "SELECT car_makers.Id, car_makers.FullName FROM car_makers AS car_makers"
  },
  {
    "db_id": "car_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.ContId, T1.Continent FROM continents AS T1",
    "readable_query": "SELECT continents.ContId, continents.Continent FROM continents AS continents"
  },
  {
    "db_id": "car_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Cylinders, T2.Make FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId",
    "readable_query": "SELECT cars_data.Cylinders, car_names.Make FROM cars_data AS cars_data JOIN car_names AS car_names ON cars_data.Id = car_names.MakeId"
  },
  {
    "db_id": "car_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Id, T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId",
    "readable_query": "SELECT car_makers.Id, countries.CountryName FROM car_makers AS car_makers JOIN countries AS countries ON car_makers.Country = countries.CountryId"
  },
  {
    "db_id": "car_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Model, T2.Edispl FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id",
    "readable_query": "SELECT car_names.Model, cars_data.Edispl FROM car_names AS car_names JOIN cars_data AS cars_data ON car_names.MakeId = cars_data.Id"
  },
  {
    "db_id": "car_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Continent, T2.CountryId FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent",
    "readable_query": "SELECT continents.Continent, countries.CountryId FROM continents AS continents JOIN countries AS countries ON continents.ContId = countries.Continent"
  },
  {
    "db_id": "car_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Continent, T2.CountryName FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent",
    "readable_query": "SELECT continents.Continent, countries.CountryName FROM continents AS continents JOIN countries AS countries ON continents.ContId = countries.Continent"
  },
  {
    "db_id": "car_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Maker, T2.MakeId FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model",
    "readable_query": "SELECT model_list.Maker, car_names.MakeId FROM model_list AS model_list JOIN car_names AS car_names ON model_list.Model = car_names.Model"
  },
  {
    "db_id": "car_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.ContId, T2.Continent FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent",
    "readable_query": "SELECT continents.ContId, countries.Continent FROM continents AS continents JOIN countries AS countries ON continents.ContId = countries.Continent"
  },
  {
    "db_id": "car_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Maker, T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId",
    "readable_query": "SELECT car_makers.Maker, countries.CountryName FROM car_makers AS car_makers JOIN countries AS countries ON car_makers.Country = countries.CountryId"
  },
  {
    "db_id": "car_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Id, T1.Maker FROM car_makers AS T1 WHERE T1.FullName = \"Ford Motor Company\"",
    "readable_query": "SELECT car_makers.Id, car_makers.Maker FROM car_makers AS car_makers WHERE car_makers.FullName = \"Ford Motor Company\""
  },
  {
    "db_id": "car_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.FullName, T1.Id FROM car_makers AS T1 WHERE T1.Country = \"8\"",
    "readable_query": "SELECT car_makers.FullName, car_makers.Id FROM car_makers AS car_makers WHERE car_makers.Country = \"8\""
  },
  {
    "db_id": "car_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Id, T1.Maker FROM car_makers AS T1 WHERE T1.Country = \"6\"",
    "readable_query": "SELECT car_makers.Id, car_makers.Maker FROM car_makers AS car_makers WHERE car_makers.Country = \"6\""
  },
  {
    "db_id": "car_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Maker, T1.ModelId FROM model_list AS T1 WHERE T1.Model = \"buick\"",
    "readable_query": "SELECT model_list.Maker, model_list.ModelId FROM model_list AS model_list WHERE model_list.Model = \"buick\""
  },
  {
    "db_id": "car_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Make, T1.Model FROM car_names AS T1 WHERE T1.MakeId = 217",
    "readable_query": "SELECT car_names.Make, car_names.Model FROM car_names AS car_names WHERE car_names.MakeId = 217"
  },
  {
    "db_id": "car_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Country, T1.FullName FROM car_makers AS T1 WHERE T1.Maker = \"citroen\"",
    "readable_query": "SELECT car_makers.Country, car_makers.FullName FROM car_makers AS car_makers WHERE car_makers.Maker = \"citroen\""
  },
  {
    "db_id": "car_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.MakeId FROM car_names AS T1  GROUP BY T1.MakeId  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT car_names.MakeId FROM car_names AS car_names  GROUP BY car_names.MakeId  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Maker FROM car_makers AS T1  GROUP BY T1.Maker  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT car_makers.Maker FROM car_makers AS car_makers  GROUP BY car_makers.Maker  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Model FROM car_names AS T1  GROUP BY T1.Model  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT car_names.Model FROM car_names AS car_names  GROUP BY car_names.Model  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.ContId FROM continents AS T1  GROUP BY T1.ContId  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT continents.ContId FROM continents AS continents  GROUP BY continents.ContId  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Continent FROM continents AS T1  GROUP BY T1.Continent  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT continents.Continent FROM continents AS continents  GROUP BY continents.Continent  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM model_list AS T1 WHERE T1.ModelId = 32",
    "readable_query": "SELECT count(*) FROM model_list AS model_list WHERE model_list.ModelId = 32"
  },
  {
    "db_id": "car_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM cars_data AS T1 WHERE T1.Horsepower = \"79\"",
    "readable_query": "SELECT count(*) FROM cars_data AS cars_data WHERE cars_data.Horsepower = \"79\""
  },
  {
    "db_id": "car_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM car_makers AS T1 WHERE T1.FullName = \"Mazda\"",
    "readable_query": "SELECT count(*) FROM car_makers AS car_makers WHERE car_makers.FullName = \"Mazda\""
  },
  {
    "db_id": "car_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM continents AS T1 WHERE T1.ContId = 5",
    "readable_query": "SELECT count(*) FROM continents AS continents WHERE continents.ContId = 5"
  },
  {
    "db_id": "car_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM car_names AS T1 WHERE T1.Make = \"dodge rampage\"",
    "readable_query": "SELECT count(*) FROM car_names AS car_names WHERE car_names.Make = \"dodge rampage\""
  },
  {
    "db_id": "car_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Weight FROM cars_data AS T1    ORDER BY T1.Year DESC LIMIT 1",
    "readable_query": "SELECT cars_data.Weight FROM cars_data AS cars_data    ORDER BY cars_data.Year DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Model FROM car_names AS T1    ORDER BY T1.MakeId DESC LIMIT 1",
    "readable_query": "SELECT car_names.Model FROM car_names AS car_names    ORDER BY car_names.MakeId DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Weight FROM cars_data AS T1    ORDER BY T1.Id DESC LIMIT 1",
    "readable_query": "SELECT cars_data.Weight FROM cars_data AS cars_data    ORDER BY cars_data.Id DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Horsepower FROM cars_data AS T1    ORDER BY T1.Weight DESC LIMIT 1",
    "readable_query": "SELECT cars_data.Horsepower FROM cars_data AS cars_data    ORDER BY cars_data.Weight DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Country FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId    ORDER BY T2.Continent DESC LIMIT 1",
    "readable_query": "SELECT car_makers.Country FROM car_makers AS car_makers JOIN countries AS countries ON car_makers.Country = countries.CountryId    ORDER BY countries.Continent DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.ModelId FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id    ORDER BY T2.Id DESC LIMIT 1",
    "readable_query": "SELECT model_list.ModelId FROM model_list AS model_list JOIN car_makers AS car_makers ON model_list.Maker = car_makers.Id    ORDER BY car_makers.Id DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Make FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id    ORDER BY T2.Weight DESC LIMIT 1",
    "readable_query": "SELECT car_names.Make FROM car_names AS car_names JOIN cars_data AS cars_data ON car_names.MakeId = cars_data.Id    ORDER BY cars_data.Weight DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Continent FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent    ORDER BY T2.CountryId DESC LIMIT 1",
    "readable_query": "SELECT continents.Continent FROM continents AS continents JOIN countries AS countries ON continents.ContId = countries.Continent    ORDER BY countries.CountryId DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.CountryName FROM countries AS T1 JOIN continents AS T2 ON T1.Continent = T2.ContId    ORDER BY T2.ContId DESC LIMIT 1",
    "readable_query": "SELECT countries.CountryName FROM countries AS countries JOIN continents AS continents ON countries.Continent = continents.ContId    ORDER BY continents.ContId DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Continent FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country    ORDER BY T2.Id DESC LIMIT 1",
    "readable_query": "SELECT countries.Continent FROM countries AS countries JOIN car_makers AS car_makers ON countries.CountryId = car_makers.Country    ORDER BY car_makers.Id DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country    ORDER BY T2.Id ASC LIMIT 1",
    "readable_query": "SELECT countries.CountryName FROM countries AS countries JOIN car_makers AS car_makers ON countries.CountryId = car_makers.Country    ORDER BY car_makers.Id ASC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Continent FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent    ORDER BY T2.CountryId ASC LIMIT 1",
    "readable_query": "SELECT continents.Continent FROM continents AS continents JOIN countries AS countries ON continents.ContId = countries.Continent    ORDER BY countries.CountryId ASC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Maker FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id    ORDER BY T2.Id ASC LIMIT 1",
    "readable_query": "SELECT model_list.Maker FROM model_list AS model_list JOIN car_makers AS car_makers ON model_list.Maker = car_makers.Id    ORDER BY car_makers.Id ASC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Continent FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country    ORDER BY T2.Id ASC LIMIT 1",
    "readable_query": "SELECT countries.Continent FROM countries AS countries JOIN car_makers AS car_makers ON countries.CountryId = car_makers.Country    ORDER BY car_makers.Id ASC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Year, T1.Id FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId    ORDER BY T2.MakeId DESC LIMIT 1",
    "readable_query": "SELECT cars_data.Year, cars_data.Id FROM cars_data AS cars_data JOIN car_names AS car_names ON cars_data.Id = car_names.MakeId    ORDER BY car_names.MakeId DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Country, T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker    ORDER BY T2.ModelId DESC LIMIT 1",
    "readable_query": "SELECT car_makers.Country, car_makers.Id FROM car_makers AS car_makers JOIN model_list AS model_list ON car_makers.Id = model_list.Maker    ORDER BY model_list.ModelId DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Country, T1.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker    ORDER BY T2.ModelId DESC LIMIT 1",
    "readable_query": "SELECT car_makers.Country, car_makers.Maker FROM car_makers AS car_makers JOIN model_list AS model_list ON car_makers.Id = model_list.Maker    ORDER BY model_list.ModelId DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.ModelId, T1.Maker FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id    ORDER BY T2.Id DESC LIMIT 1",
    "readable_query": "SELECT model_list.ModelId, model_list.Maker FROM model_list AS model_list JOIN car_makers AS car_makers ON model_list.Maker = car_makers.Id    ORDER BY car_makers.Id DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Model, T1.MakeId FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id    ORDER BY T2.Weight DESC LIMIT 1",
    "readable_query": "SELECT car_names.Model, car_names.MakeId FROM car_names AS car_names JOIN cars_data AS cars_data ON car_names.MakeId = cars_data.Id    ORDER BY cars_data.Weight DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Horsepower, T1.Year FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId    ORDER BY T2.MakeId DESC LIMIT 1",
    "readable_query": "SELECT cars_data.Horsepower, cars_data.Year FROM cars_data AS cars_data JOIN car_names AS car_names ON cars_data.Id = car_names.MakeId    ORDER BY car_names.MakeId DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.CountryId, T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country    ORDER BY T2.Id DESC LIMIT 1",
    "readable_query": "SELECT countries.CountryId, countries.CountryName FROM countries AS countries JOIN car_makers AS car_makers ON countries.CountryId = car_makers.Country    ORDER BY car_makers.Id DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Continent) FROM countries AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  countries.Continent) FROM countries AS countries"
  },
  {
    "db_id": "car_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Maker) FROM model_list AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  model_list.Maker) FROM model_list AS model_list"
  },
  {
    "db_id": "car_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.ModelId) FROM model_list AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  model_list.ModelId) FROM model_list AS model_list"
  },
  {
    "db_id": "car_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.CountryName) FROM countries AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  countries.CountryName) FROM countries AS countries"
  },
  {
    "db_id": "car_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.CountryId) FROM countries AS T1",
    "readable_query": "SELECT avg( countries.CountryId) FROM countries AS countries"
  },
  {
    "db_id": "car_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Continent) FROM countries AS T1",
    "readable_query": "SELECT avg( countries.Continent) FROM countries AS countries"
  },
  {
    "db_id": "car_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Maker FROM car_makers AS T1",
    "readable_query": "SELECT car_makers.Maker FROM car_makers AS car_makers"
  },
  {
    "db_id": "car_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Make FROM car_names AS T1",
    "readable_query": "SELECT car_names.Make FROM car_names AS car_names"
  },
  {
    "db_id": "car_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Horsepower FROM cars_data AS T1",
    "readable_query": "SELECT cars_data.Horsepower FROM cars_data AS cars_data"
  },
  {
    "db_id": "car_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Id FROM cars_data AS T1",
    "readable_query": "SELECT cars_data.Id FROM cars_data AS cars_data"
  },
  {
    "db_id": "car_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Model FROM car_names AS T1",
    "readable_query": "SELECT car_names.Model FROM car_names AS car_names"
  },
  {
    "db_id": "car_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Continent FROM continents AS T1",
    "readable_query": "SELECT DISTINCT continents.Continent FROM continents AS continents"
  },
  {
    "db_id": "car_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.CountryName FROM countries AS T1",
    "readable_query": "SELECT DISTINCT countries.CountryName FROM countries AS countries"
  },
  {
    "db_id": "car_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.ModelId FROM model_list AS T1",
    "readable_query": "SELECT DISTINCT model_list.ModelId FROM model_list AS model_list"
  },
  {
    "db_id": "car_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Model FROM model_list AS T1",
    "readable_query": "SELECT DISTINCT model_list.Model FROM model_list AS model_list"
  },
  {
    "db_id": "car_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.MakeId FROM car_names AS T1",
    "readable_query": "SELECT DISTINCT car_names.MakeId FROM car_names AS car_names"
  },
  {
    "db_id": "car_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Model FROM car_names AS T1",
    "readable_query": "SELECT DISTINCT car_names.Model FROM car_names AS car_names"
  },
  {
    "db_id": "car_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.ContId FROM continents AS T1",
    "readable_query": "SELECT DISTINCT continents.ContId FROM continents AS continents"
  },
  {
    "db_id": "car_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.CountryName FROM countries AS T1     ORDER BY T1.Continent ASC",
    "readable_query": "SELECT countries.CountryName FROM countries AS countries     ORDER BY countries.Continent ASC"
  },
  {
    "db_id": "car_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Cylinders FROM cars_data AS T1     ORDER BY T1.Accelerate ASC",
    "readable_query": "SELECT cars_data.Cylinders FROM cars_data AS cars_data     ORDER BY cars_data.Accelerate ASC"
  },
  {
    "db_id": "car_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Make FROM car_names AS T1     ORDER BY T1.MakeId ASC",
    "readable_query": "SELECT car_names.Make FROM car_names AS car_names     ORDER BY car_names.MakeId ASC"
  },
  {
    "db_id": "car_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Maker FROM model_list AS T1     ORDER BY T1.ModelId ASC",
    "readable_query": "SELECT model_list.Maker FROM model_list AS model_list     ORDER BY model_list.ModelId ASC"
  },
  {
    "db_id": "car_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Accelerate FROM cars_data AS T1     ORDER BY T1.Weight DESC",
    "readable_query": "SELECT cars_data.Accelerate FROM cars_data AS cars_data     ORDER BY cars_data.Weight DESC"
  },
  {
    "db_id": "car_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Country FROM car_makers AS T1     ORDER BY T1.Id DESC",
    "readable_query": "SELECT car_makers.Country FROM car_makers AS car_makers     ORDER BY car_makers.Id DESC"
  },
  {
    "db_id": "car_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.CountryName FROM countries AS T1     ORDER BY T1.Continent DESC",
    "readable_query": "SELECT countries.CountryName FROM countries AS countries     ORDER BY countries.Continent DESC"
  },
  {
    "db_id": "car_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Weight FROM cars_data AS T1     ORDER BY T1.Id DESC",
    "readable_query": "SELECT cars_data.Weight FROM cars_data AS cars_data     ORDER BY cars_data.Id DESC"
  },
  {
    "db_id": "car_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.CountryName, T1.Continent FROM countries AS T1     ORDER BY T1.Continent ASC",
    "readable_query": "SELECT countries.CountryName, countries.Continent FROM countries AS countries     ORDER BY countries.Continent ASC"
  },
  {
    "db_id": "car_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Horsepower, T1.Edispl FROM cars_data AS T1     ORDER BY T1.Edispl ASC",
    "readable_query": "SELECT cars_data.Horsepower, cars_data.Edispl FROM cars_data AS cars_data     ORDER BY cars_data.Edispl ASC"
  },
  {
    "db_id": "car_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Edispl, T1.Weight FROM cars_data AS T1     ORDER BY T1.Weight ASC",
    "readable_query": "SELECT cars_data.Edispl, cars_data.Weight FROM cars_data AS cars_data     ORDER BY cars_data.Weight ASC"
  },
  {
    "db_id": "car_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Continent FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country JOIN model_list AS T3 ON T2.Id = T3.Maker WHERE T2.Country = \"8\" and T3.Maker = 22",
    "readable_query": "SELECT countries.Continent FROM countries AS countries JOIN car_makers AS car_makers ON countries.CountryId = car_makers.Country JOIN model_list AS model_list ON car_makers.Id = model_list.Maker WHERE car_makers.Country = \"8\" and model_list.Maker = 22"
  },
  {
    "db_id": "car_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country JOIN continents AS T3 ON T1.Continent = T3.ContId WHERE T2.FullName = \"Renault\" and T3.ContId = 1",
    "readable_query": "SELECT countries.CountryName FROM countries AS countries JOIN car_makers AS car_makers ON countries.CountryId = car_makers.Country JOIN continents AS continents ON countries.Continent = continents.ContId WHERE car_makers.FullName = \"Renault\" and continents.ContId = 1"
  },
  {
    "db_id": "car_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Make FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model = T2.Model JOIN car_makers AS T3 ON T2.Maker = T3.Id WHERE T2.ModelId = 32 and T3.Id = 14",
    "readable_query": "SELECT car_names.Make FROM car_names AS car_names JOIN model_list AS model_list ON car_names.Model = model_list.Model JOIN car_makers AS car_makers ON model_list.Maker = car_makers.Id WHERE model_list.ModelId = 32 and car_makers.Id = 14"
  },
  {
    "db_id": "car_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Horsepower FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T2.Make = \"dodge aspen se\" and T3.Maker = 17",
    "readable_query": "SELECT cars_data.Horsepower FROM cars_data AS cars_data JOIN car_names AS car_names ON cars_data.Id = car_names.MakeId JOIN model_list AS model_list ON car_names.Model = model_list.Model WHERE car_names.Make = \"dodge aspen se\" and model_list.Maker = 17"
  },
  {
    "db_id": "car_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.CountryId FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Maker = \"subaru\" or T2.Maker = \"fiat\"",
    "readable_query": "SELECT countries.CountryId FROM countries AS countries JOIN car_makers AS car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = \"subaru\" or car_makers.Maker = \"fiat\""
  },
  {
    "db_id": "car_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Continent FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent WHERE T2.CountryId = 15 or T2.CountryId = 3",
    "readable_query": "SELECT continents.Continent FROM continents AS continents JOIN countries AS countries ON continents.ContId = countries.Continent WHERE countries.CountryId = 15 or countries.CountryId = 3"
  },
  {
    "db_id": "car_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Year FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.MakeId = 164 or T2.MakeId = 314",
    "readable_query": "SELECT cars_data.Year FROM cars_data AS cars_data JOIN car_names AS car_names ON cars_data.Id = car_names.MakeId WHERE car_names.MakeId = 164 or car_names.MakeId = 314"
  },
  {
    "db_id": "car_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Maker FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Id = 18 or T2.Id = 16",
    "readable_query": "SELECT model_list.Maker FROM model_list AS model_list JOIN car_makers AS car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Id = 18 or car_makers.Id = 16"
  },
  {
    "db_id": "car_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Maker FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model WHERE T2.Model = \"chrysler\" or T2.Model = \"chrysler\"",
    "readable_query": "SELECT model_list.Maker FROM model_list AS model_list JOIN car_names AS car_names ON model_list.Model = car_names.Model WHERE car_names.Model = \"chrysler\" or car_names.Model = \"chrysler\""
  },
  {
    "db_id": "car_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Country FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T2.ModelId = 29 or T2.ModelId = 7",
    "readable_query": "SELECT car_makers.Country FROM car_makers AS car_makers JOIN model_list AS model_list ON car_makers.Id = model_list.Maker WHERE model_list.ModelId = 29 or model_list.ModelId = 7"
  },
  {
    "db_id": "car_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.FullName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = \"australia\" or T2.CountryName = \"mexico\"",
    "readable_query": "SELECT car_makers.FullName FROM car_makers AS car_makers JOIN countries AS countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = \"australia\" or countries.CountryName = \"mexico\""
  },
  {
    "db_id": "car_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Model FROM model_list AS T1 WHERE T1.Maker = 14 and T1.ModelId = 8",
    "readable_query": "SELECT model_list.Model FROM model_list AS model_list WHERE model_list.Maker = 14 and model_list.ModelId = 8"
  },
  {
    "db_id": "car_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Horsepower FROM cars_data AS T1 WHERE T1.Cylinders = 5 and T1.Year = 1981",
    "readable_query": "SELECT cars_data.Horsepower FROM cars_data AS cars_data WHERE cars_data.Cylinders = 5 and cars_data.Year = 1981"
  },
  {
    "db_id": "car_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Weight FROM cars_data AS T1 WHERE T1.Accelerate = 9.5 and T1.Id = 52",
    "readable_query": "SELECT cars_data.Weight FROM cars_data AS cars_data WHERE cars_data.Accelerate = 9.5 and cars_data.Id = 52"
  },
  {
    "db_id": "car_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Model FROM model_list AS T1 WHERE T1.Maker = 7 and T1.ModelId = 4",
    "readable_query": "SELECT model_list.Model FROM model_list AS model_list WHERE model_list.Maker = 7 and model_list.ModelId = 4"
  },
  {
    "db_id": "car_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.CountryId FROM countries AS T1 WHERE T1.Continent = 4 and T1.CountryName = \"italy\"",
    "readable_query": "SELECT countries.CountryId FROM countries AS countries WHERE countries.Continent = 4 and countries.CountryName = \"italy\""
  },
  {
    "db_id": "car_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Maker FROM car_makers AS T1 WHERE T1.Id = 7 and T1.Country = \"5\"",
    "readable_query": "SELECT car_makers.Maker FROM car_makers AS car_makers WHERE car_makers.Id = 7 and car_makers.Country = \"5\""
  },
  {
    "db_id": "car_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Model) FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model = T2.Model WHERE T1.Make = \"plymouth volare\" and T2.Maker = 12",
    "readable_query": "SELECT DISTINCT count(DISTINCT  car_names.Model) FROM car_names AS car_names JOIN model_list AS model_list ON car_names.Model = model_list.Model WHERE car_names.Make = \"plymouth volare\" and model_list.Maker = 12"
  },
  {
    "db_id": "car_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Continent) FROM countries AS T1 JOIN continents AS T2 ON T1.Continent = T2.ContId WHERE T1.CountryId = 1 and T2.ContId = 3",
    "readable_query": "SELECT DISTINCT count(DISTINCT  countries.Continent) FROM countries AS countries JOIN continents AS continents ON countries.Continent = continents.ContId WHERE countries.CountryId = 1 and continents.ContId = 3"
  },
  {
    "db_id": "car_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.MPG) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Edispl = 121.0 and T2.Make = \"oldsmobile starfire sx\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  cars_data.MPG) FROM cars_data AS cars_data JOIN car_names AS car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Edispl = 121.0 and car_names.Make = \"oldsmobile starfire sx\""
  },
  {
    "db_id": "car_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Make) FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model = T2.Model WHERE T1.MakeId = 98 and T2.ModelId = 5",
    "readable_query": "SELECT DISTINCT count(DISTINCT  car_names.Make) FROM car_names AS car_names JOIN model_list AS model_list ON car_names.Model = model_list.Model WHERE car_names.MakeId = 98 and model_list.ModelId = 5"
  },
  {
    "db_id": "car_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.CountryId) FROM countries AS T1 JOIN continents AS T2 ON T1.Continent = T2.ContId WHERE T1.CountryName = \"russia\" and T2.Continent = \"europe\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  countries.CountryId) FROM countries AS countries JOIN continents AS continents ON countries.Continent = continents.ContId WHERE countries.CountryName = \"russia\" and continents.Continent = \"europe\""
  },
  {
    "db_id": "car_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Model) FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Make = \"toyota celica gt\" and T2.MPG = \"20\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  car_names.Model) FROM car_names AS car_names JOIN cars_data AS cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Make = \"toyota celica gt\" and cars_data.MPG = \"20\""
  },
  {
    "db_id": "car_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.MakeId) FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Model = \"volkswagen\" and T2.Year = 1982",
    "readable_query": "SELECT DISTINCT count(DISTINCT  car_names.MakeId) FROM car_names AS car_names JOIN cars_data AS cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Model = \"volkswagen\" and cars_data.Year = 1982"
  },
  {
    "db_id": "car_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Maker FROM model_list AS T1 WHERE T1.ModelId = 16 or T1.Model = \"mercury\"",
    "readable_query": "SELECT model_list.Maker FROM model_list AS model_list WHERE model_list.ModelId = 16 or model_list.Model = \"mercury\""
  },
  {
    "db_id": "car_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Model FROM car_names AS T1 WHERE T1.Make = \"toyota starlet\" or T1.MakeId = 326",
    "readable_query": "SELECT car_names.Model FROM car_names AS car_names WHERE car_names.Make = \"toyota starlet\" or car_names.MakeId = 326"
  },
  {
    "db_id": "car_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.CountryId FROM countries AS T1 WHERE T1.CountryName = \"brazil\" or T1.Continent = 5",
    "readable_query": "SELECT countries.CountryId FROM countries AS countries WHERE countries.CountryName = \"brazil\" or countries.Continent = 5"
  },
  {
    "db_id": "car_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Country FROM car_makers AS T1 WHERE T1.Id = 19 or T1.Maker = \"mazda\"",
    "readable_query": "SELECT car_makers.Country FROM car_makers AS car_makers WHERE car_makers.Id = 19 or car_makers.Maker = \"mazda\""
  },
  {
    "db_id": "car_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Make FROM car_names AS T1 WHERE T1.MakeId = 356 or T1.Model = \"chrysler\"",
    "readable_query": "SELECT car_names.Make FROM car_names AS car_names WHERE car_names.MakeId = 356 or car_names.Model = \"chrysler\""
  },
  {
    "db_id": "car_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Country = \"1\" and T2.FullName = \"Subaru\"",
    "readable_query": "SELECT count(*) FROM countries AS countries JOIN car_makers AS car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Country = \"1\" and car_makers.FullName = \"Subaru\""
  },
  {
    "db_id": "car_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Id = 21 and T2.Country = \"6\"",
    "readable_query": "SELECT count(*) FROM countries AS countries JOIN car_makers AS car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Id = 21 and car_makers.Country = \"6\""
  },
  {
    "db_id": "car_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = \"audi 5000s (diesel)\" and T2.MakeId = 318",
    "readable_query": "SELECT count(*) FROM cars_data AS cars_data JOIN car_names AS car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = \"audi 5000s (diesel)\" and car_names.MakeId = 318"
  },
  {
    "db_id": "car_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Maker = \"chrysler\" and T2.Id = 11",
    "readable_query": "SELECT count(*) FROM countries AS countries JOIN car_makers AS car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = \"chrysler\" and car_makers.Id = 11"
  },
  {
    "db_id": "car_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Continent FROM countries AS T1 WHERE T1.CountryId != 6",
    "readable_query": "SELECT countries.Continent FROM countries AS countries WHERE countries.CountryId != 6"
  },
  {
    "db_id": "car_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Model FROM car_names AS T1 WHERE T1.Make != \"buick skylark\"",
    "readable_query": "SELECT car_names.Model FROM car_names AS car_names WHERE car_names.Make != \"buick skylark\""
  },
  {
    "db_id": "car_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Continent FROM countries AS T1 WHERE T1.CountryId != 1",
    "readable_query": "SELECT countries.Continent FROM countries AS countries WHERE countries.CountryId != 1"
  },
  {
    "db_id": "car_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Continent FROM continents AS T1 WHERE T1.ContId != 3",
    "readable_query": "SELECT continents.Continent FROM continents AS continents WHERE continents.ContId != 3"
  },
  {
    "db_id": "car_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.ContId FROM continents AS T1 WHERE T1.Continent != \"australia\"",
    "readable_query": "SELECT continents.ContId FROM continents AS continents WHERE continents.Continent != \"australia\""
  },
  {
    "db_id": "car_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Continent FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent WHERE T2.CountryName != \"nigeria\"",
    "readable_query": "SELECT continents.Continent FROM continents AS continents JOIN countries AS countries ON continents.ContId = countries.Continent WHERE countries.CountryName != \"nigeria\""
  },
  {
    "db_id": "car_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T2.ModelId != 8",
    "readable_query": "SELECT car_makers.Id FROM car_makers AS car_makers JOIN model_list AS model_list ON car_makers.Id = model_list.Maker WHERE model_list.ModelId != 8"
  },
  {
    "db_id": "car_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Id FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryId != 7",
    "readable_query": "SELECT car_makers.Id FROM car_makers AS car_makers JOIN countries AS countries ON car_makers.Country = countries.CountryId WHERE countries.CountryId != 7"
  },
  {
    "db_id": "car_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Edispl FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make != \"oldsmobile cutlass ciera (diesel)\"",
    "readable_query": "SELECT cars_data.Edispl FROM cars_data AS cars_data JOIN car_names AS car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make != \"oldsmobile cutlass ciera (diesel)\""
  },
  {
    "db_id": "car_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Horsepower FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model != \"honda\"",
    "readable_query": "SELECT cars_data.Horsepower FROM cars_data AS cars_data JOIN car_names AS car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Model != \"honda\""
  },
  {
    "db_id": "car_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.ContId FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent WHERE T2.CountryId != 14",
    "readable_query": "SELECT continents.ContId FROM continents AS continents JOIN countries AS countries ON continents.ContId = countries.Continent WHERE countries.CountryId != 14"
  },
  {
    "db_id": "car_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Model FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Id = 22",
    "readable_query": "SELECT DISTINCT model_list.Model FROM model_list AS model_list JOIN car_makers AS car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Id = 22"
  },
  {
    "db_id": "car_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.MakeId FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model = T2.Model WHERE T2.ModelId = 21",
    "readable_query": "SELECT DISTINCT car_names.MakeId FROM car_names AS car_names JOIN model_list AS model_list ON car_names.Model = model_list.Model WHERE model_list.ModelId = 21"
  },
  {
    "db_id": "car_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.CountryName FROM countries AS T1 JOIN continents AS T2 ON T1.Continent = T2.ContId WHERE T2.ContId = 4",
    "readable_query": "SELECT DISTINCT countries.CountryName FROM countries AS countries JOIN continents AS continents ON countries.Continent = continents.ContId WHERE continents.ContId = 4"
  },
  {
    "db_id": "car_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.MakeId) FROM car_names AS T1 WHERE T1.Make = \"volkswagen 1131 deluxe sedan\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  car_names.MakeId) FROM car_names AS car_names WHERE car_names.Make = \"volkswagen 1131 deluxe sedan\""
  },
  {
    "db_id": "car_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Id) FROM cars_data AS T1 WHERE T1.Cylinders = 6",
    "readable_query": "SELECT DISTINCT count(DISTINCT  cars_data.Id) FROM cars_data AS cars_data WHERE cars_data.Cylinders = 6"
  },
  {
    "db_id": "car_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Id) FROM cars_data AS T1 WHERE T1.MPG = \"25.4\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  cars_data.Id) FROM cars_data AS cars_data WHERE cars_data.MPG = \"25.4\""
  },
  {
    "db_id": "car_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Year FROM cars_data AS T1 WHERE T1.Weight > 2634",
    "readable_query": "SELECT cars_data.Year FROM cars_data AS cars_data WHERE cars_data.Weight > 2634"
  },
  {
    "db_id": "car_1",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Model, T2.Maker, T3.Accelerate FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model = T2.Model JOIN cars_data AS T3 ON T1.MakeId = T3.Id",
    "readable_query": "SELECT car_names.Model, model_list.Maker, cars_data.Accelerate FROM car_names AS car_names JOIN model_list AS model_list ON car_names.Model = model_list.Model JOIN cars_data AS cars_data ON car_names.MakeId = cars_data.Id"
  },
  {
    "db_id": "car_1",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Continent, T2.Country, T3.Maker FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country JOIN model_list AS T3 ON T2.Id = T3.Maker",
    "readable_query": "SELECT countries.Continent, car_makers.Country, model_list.Maker FROM countries AS countries JOIN car_makers AS car_makers ON countries.CountryId = car_makers.Country JOIN model_list AS model_list ON car_makers.Id = model_list.Maker"
  },
  {
    "db_id": "car_1",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Continent, T2.Id, T3.ContId FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country JOIN continents AS T3 ON T1.Continent = T3.ContId",
    "readable_query": "SELECT countries.Continent, car_makers.Id, continents.ContId FROM countries AS countries JOIN car_makers AS car_makers ON countries.CountryId = car_makers.Country JOIN continents AS continents ON countries.Continent = continents.ContId"
  },
  {
    "db_id": "car_1",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Model, T2.Cylinders, T3.ModelId FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id JOIN model_list AS T3 ON T1.Model = T3.Model",
    "readable_query": "SELECT car_names.Model, cars_data.Cylinders, model_list.ModelId FROM car_names AS car_names JOIN cars_data AS cars_data ON car_names.MakeId = cars_data.Id JOIN model_list AS model_list ON car_names.Model = model_list.Model"
  },
  {
    "db_id": "car_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.ContId FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent     ORDER BY T2.CountryId ASC",
    "readable_query": "SELECT continents.ContId FROM continents AS continents JOIN countries AS countries ON continents.ContId = countries.Continent     ORDER BY countries.CountryId ASC"
  },
  {
    "db_id": "car_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker     ORDER BY T2.ModelId ASC",
    "readable_query": "SELECT car_makers.Maker FROM car_makers AS car_makers JOIN model_list AS model_list ON car_makers.Id = model_list.Maker     ORDER BY model_list.ModelId ASC"
  },
  {
    "db_id": "car_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Continent FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent     ORDER BY T2.CountryId ASC",
    "readable_query": "SELECT continents.Continent FROM continents AS continents JOIN countries AS countries ON continents.ContId = countries.Continent     ORDER BY countries.CountryId ASC"
  },
  {
    "db_id": "car_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Cylinders FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId     ORDER BY T2.MakeId ASC",
    "readable_query": "SELECT cars_data.Cylinders FROM cars_data AS cars_data JOIN car_names AS car_names ON cars_data.Id = car_names.MakeId     ORDER BY car_names.MakeId ASC"
  },
  {
    "db_id": "car_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.MakeId FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model = T2.Model     ORDER BY T2.Maker ASC",
    "readable_query": "SELECT car_names.MakeId FROM car_names AS car_names JOIN model_list AS model_list ON car_names.Model = model_list.Model     ORDER BY model_list.Maker ASC"
  },
  {
    "db_id": "car_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.MakeId FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model = T2.Model     ORDER BY T2.ModelId ASC",
    "readable_query": "SELECT car_names.MakeId FROM car_names AS car_names JOIN model_list AS model_list ON car_names.Model = model_list.Model     ORDER BY model_list.ModelId ASC"
  },
  {
    "db_id": "car_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model     ORDER BY T2.MakeId ASC",
    "readable_query": "SELECT model_list.Model FROM model_list AS model_list JOIN car_names AS car_names ON model_list.Model = car_names.Model     ORDER BY car_names.MakeId ASC"
  },
  {
    "db_id": "car_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.CountryId FROM countries AS T1 WHERE T1.CountryName = \"australia\"     INTERSECT SELECT T2.CountryId FROM countries AS T2 WHERE T2.CountryName = \"brazil\"",
    "readable_query": "SELECT countries.CountryId FROM countries AS countries WHERE countries.CountryName = \"australia\"     INTERSECT SELECT countries.CountryId FROM countries AS countries WHERE countries.CountryName = \"brazil\""
  },
  {
    "db_id": "car_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Edispl FROM cars_data AS T1 WHERE T1.Cylinders = 3     INTERSECT SELECT T2.Edispl FROM cars_data AS T2 WHERE T2.Cylinders = 5",
    "readable_query": "SELECT cars_data.Edispl FROM cars_data AS cars_data WHERE cars_data.Cylinders = 3     INTERSECT SELECT cars_data.Edispl FROM cars_data AS cars_data WHERE cars_data.Cylinders = 5"
  },
  {
    "db_id": "car_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Continent FROM continents AS T1 WHERE T1.ContId = 5     INTERSECT SELECT T2.Continent FROM continents AS T2 WHERE T2.ContId = 1",
    "readable_query": "SELECT continents.Continent FROM continents AS continents WHERE continents.ContId = 5     INTERSECT SELECT continents.Continent FROM continents AS continents WHERE continents.ContId = 1"
  },
  {
    "db_id": "car_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Id FROM car_makers AS T1 WHERE T1.Maker = \"bmw\"     INTERSECT SELECT T2.Id FROM car_makers AS T2 WHERE T2.Maker = \"gm\"",
    "readable_query": "SELECT car_makers.Id FROM car_makers AS car_makers WHERE car_makers.Maker = \"bmw\"     INTERSECT SELECT car_makers.Id FROM car_makers AS car_makers WHERE car_makers.Maker = \"gm\""
  },
  {
    "db_id": "car_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Accelerate FROM cars_data AS T1 WHERE T1.Weight = 1875     INTERSECT SELECT T2.Accelerate FROM cars_data AS T2 WHERE T2.Weight = 2815",
    "readable_query": "SELECT cars_data.Accelerate FROM cars_data AS cars_data WHERE cars_data.Weight = 1875     INTERSECT SELECT cars_data.Accelerate FROM cars_data AS cars_data WHERE cars_data.Weight = 2815"
  },
  {
    "db_id": "car_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.ContId) FROM continents AS T1 WHERE T1.Continent = \"australia\"",
    "readable_query": "SELECT avg( continents.ContId) FROM continents AS continents WHERE continents.Continent = \"australia\""
  },
  {
    "db_id": "car_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.MakeId) FROM car_names AS T1 WHERE T1.Make = \"toyota corona liftback\"",
    "readable_query": "SELECT avg( car_names.MakeId) FROM car_names AS car_names WHERE car_names.Make = \"toyota corona liftback\""
  },
  {
    "db_id": "car_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Maker) FROM model_list AS T1 WHERE T1.ModelId = 1",
    "readable_query": "SELECT avg( model_list.Maker) FROM model_list AS model_list WHERE model_list.ModelId = 1"
  },
  {
    "db_id": "car_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Edispl) FROM cars_data AS T1 WHERE T1.Id = 287",
    "readable_query": "SELECT avg( cars_data.Edispl) FROM cars_data AS cars_data WHERE cars_data.Id = 287"
  },
  {
    "db_id": "car_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.MakeId) FROM car_names AS T1 WHERE T1.Make = \"volvo 244dl\"",
    "readable_query": "SELECT avg( car_names.MakeId) FROM car_names AS car_names WHERE car_names.Make = \"volvo 244dl\""
  },
  {
    "db_id": "car_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.ModelId) FROM model_list AS T1 WHERE T1.Maker = 8",
    "readable_query": "SELECT avg( model_list.ModelId) FROM model_list AS model_list WHERE model_list.Maker = 8"
  },
  {
    "db_id": "car_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model WHERE T2.MakeId = (SELECT max( T23.MakeId) FROM car_names AS T23)",
    "readable_query": "SELECT model_list.Model FROM model_list AS model_list JOIN car_names AS car_names ON model_list.Model = car_names.Model WHERE car_names.MakeId = (SELECT max( car_names.MakeId) FROM car_names AS car_names)"
  },
  {
    "db_id": "car_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Continent FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Id = (SELECT max( T23.Id) FROM car_makers AS T23)",
    "readable_query": "SELECT countries.Continent FROM countries AS countries JOIN car_makers AS car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Id = (SELECT max( car_makers.Id) FROM car_makers AS car_makers)"
  },
  {
    "db_id": "car_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.FullName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryId = (SELECT max( T23.CountryId) FROM countries AS T23)",
    "readable_query": "SELECT car_makers.FullName FROM car_makers AS car_makers JOIN countries AS countries ON car_makers.Country = countries.CountryId WHERE countries.CountryId = (SELECT max( countries.CountryId) FROM countries AS countries)"
  },
  {
    "db_id": "car_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.MakeId FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model = T2.Model WHERE T2.Maker = (SELECT max( T23.Maker) FROM model_list AS T23)",
    "readable_query": "SELECT car_names.MakeId FROM car_names AS car_names JOIN model_list AS model_list ON car_names.Model = model_list.Model WHERE model_list.Maker = (SELECT max( model_list.Maker) FROM model_list AS model_list)"
  },
  {
    "db_id": "car_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.ContId FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent WHERE T2.Continent = (SELECT max( T23.Continent) FROM countries AS T23)",
    "readable_query": "SELECT continents.ContId FROM continents AS continents JOIN countries AS countries ON continents.ContId = countries.Continent WHERE countries.Continent = (SELECT max( countries.Continent) FROM countries AS countries)"
  },
  {
    "db_id": "car_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T2.Maker = (SELECT max( T23.Maker) FROM model_list AS T23)",
    "readable_query": "SELECT car_makers.Id FROM car_makers AS car_makers JOIN model_list AS model_list ON car_makers.Id = model_list.Maker WHERE model_list.Maker = (SELECT max( model_list.Maker) FROM model_list AS model_list)"
  },
  {
    "db_id": "car_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Id FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.Continent = (SELECT max( T23.Continent) FROM countries AS T23)",
    "readable_query": "SELECT car_makers.Id FROM car_makers AS car_makers JOIN countries AS countries ON car_makers.Country = countries.CountryId WHERE countries.Continent = (SELECT max( countries.Continent) FROM countries AS countries)"
  },
  {
    "db_id": "car_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Make, T2.Horsepower FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id JOIN model_list AS T3 ON T1.Model = T3.Model WHERE T3.Maker = 22 and T2.Year = 1971",
    "readable_query": "SELECT car_names.Make, cars_data.Horsepower FROM car_names AS car_names JOIN cars_data AS cars_data ON car_names.MakeId = cars_data.Id JOIN model_list AS model_list ON car_names.Model = model_list.Model WHERE model_list.Maker = 22 and cars_data.Year = 1971"
  },
  {
    "db_id": "car_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.CountryName, T2.Country FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country JOIN continents AS T3 ON T1.Continent = T3.ContId WHERE T3.Continent = \"europe\" and T2.FullName = \"General Motors\"",
    "readable_query": "SELECT countries.CountryName, car_makers.Country FROM countries AS countries JOIN car_makers AS car_makers ON countries.CountryId = car_makers.Country JOIN continents AS continents ON countries.Continent = continents.ContId WHERE continents.Continent = \"europe\" and car_makers.FullName = \"General Motors\""
  },
  {
    "db_id": "car_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Country, T2.ModelId FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker JOIN car_names AS T3 ON T2.Model = T3.Model WHERE T3.MakeId = 134 and T2.Maker = 5",
    "readable_query": "SELECT car_makers.Country, model_list.ModelId FROM car_makers AS car_makers JOIN model_list AS model_list ON car_makers.Id = model_list.Maker JOIN car_names AS car_names ON model_list.Model = car_names.Model WHERE car_names.MakeId = 134 and model_list.Maker = 5"
  },
  {
    "db_id": "car_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Maker, T2.ModelId FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker JOIN countries AS T3 ON T1.Country = T3.CountryId WHERE T3.Continent = 2 and T2.Model = \"buick\"",
    "readable_query": "SELECT car_makers.Maker, model_list.ModelId FROM car_makers AS car_makers JOIN model_list AS model_list ON car_makers.Id = model_list.Maker JOIN countries AS countries ON car_makers.Country = countries.CountryId WHERE countries.Continent = 2 and model_list.Model = \"buick\""
  },
  {
    "db_id": "car_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Id, T2.CountryId FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId JOIN model_list AS T3 ON T1.Id = T3.Maker WHERE T3.ModelId = 7 and T2.CountryName = \"sweden\"",
    "readable_query": "SELECT car_makers.Id, countries.CountryId FROM car_makers AS car_makers JOIN countries AS countries ON car_makers.Country = countries.CountryId JOIN model_list AS model_list ON car_makers.Id = model_list.Maker WHERE model_list.ModelId = 7 and countries.CountryName = \"sweden\""
  },
  {
    "db_id": "car_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Id FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = \"sweden\" GROUP BY T1.Id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT car_makers.Id FROM car_makers AS car_makers JOIN countries AS countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = \"sweden\" GROUP BY car_makers.Id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Id FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = \"volkswagen\" GROUP BY T1.Id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT cars_data.Id FROM cars_data AS cars_data JOIN car_names AS car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Model = \"volkswagen\" GROUP BY cars_data.Id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.ContId FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent WHERE T2.CountryId = 9 GROUP BY T1.ContId  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT continents.ContId FROM continents AS continents JOIN countries AS countries ON continents.ContId = countries.Continent WHERE countries.CountryId = 9 GROUP BY continents.ContId  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.ContId FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent WHERE T2.CountryId = 11 GROUP BY T1.ContId  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT continents.ContId FROM continents AS continents JOIN countries AS countries ON continents.ContId = countries.Continent WHERE countries.CountryId = 11 GROUP BY continents.ContId  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Continent FROM countries AS T1 JOIN continents AS T2 ON T1.Continent = T2.ContId WHERE T2.ContId = 2 GROUP BY T1.Continent  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT countries.Continent FROM countries AS countries JOIN continents AS continents ON countries.Continent = continents.ContId WHERE continents.ContId = 2 GROUP BY countries.Continent  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Continent FROM countries AS T1 JOIN continents AS T2 ON T1.Continent = T2.ContId WHERE T2.ContId = 4 GROUP BY T1.Continent  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT countries.Continent FROM countries AS countries JOIN continents AS continents ON countries.Continent = continents.ContId WHERE continents.ContId = 4 GROUP BY countries.Continent  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "car_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Id FROM car_makers AS T1        EXCEPT SELECT T2.Id FROM car_makers AS T2 WHERE T2.Maker = \"mazda\"",
    "readable_query": "SELECT car_makers.Id FROM car_makers AS car_makers        EXCEPT SELECT car_makers.Id FROM car_makers AS car_makers WHERE car_makers.Maker = \"mazda\""
  },
  {
    "db_id": "car_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Continent FROM countries AS T1        EXCEPT SELECT T2.Continent FROM countries AS T2 WHERE T2.CountryId = 9",
    "readable_query": "SELECT countries.Continent FROM countries AS countries        EXCEPT SELECT countries.Continent FROM countries AS countries WHERE countries.CountryId = 9"
  },
  {
    "db_id": "car_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Make FROM car_names AS T1        EXCEPT SELECT T2.Make FROM car_names AS T2 WHERE T2.Model = \"triumph\"",
    "readable_query": "SELECT car_names.Make FROM car_names AS car_names        EXCEPT SELECT car_names.Make FROM car_names AS car_names WHERE car_names.Model = \"triumph\""
  },
  {
    "db_id": "car_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.ContId FROM continents AS T1        EXCEPT SELECT T2.ContId FROM continents AS T2 WHERE T2.Continent = \"america\"",
    "readable_query": "SELECT continents.ContId FROM continents AS continents        EXCEPT SELECT continents.ContId FROM continents AS continents WHERE continents.Continent = \"america\""
  },
  {
    "db_id": "car_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Cylinders FROM cars_data AS T1        EXCEPT SELECT T2.Cylinders FROM cars_data AS T2 WHERE T2.Weight = 2720",
    "readable_query": "SELECT cars_data.Cylinders FROM cars_data AS cars_data        EXCEPT SELECT cars_data.Cylinders FROM cars_data AS cars_data WHERE cars_data.Weight = 2720"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Other_Details FROM Documents AS T1 WHERE T1.Document_Name = \"Summer Show\"",
    "readable_query": "SELECT documents.Other_Details FROM Documents AS documents WHERE documents.Document_Name = \"Summer Show\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 WHERE T1.Template_Type_Description = \"CV\"",
    "readable_query": "SELECT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types WHERE reference_template_types.Template_Type_Description = \"CV\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Date_Effective_To FROM Templates AS T1 WHERE T1.Date_Effective_From = \"2005-02-20 00:31:34\"",
    "readable_query": "SELECT templates.Date_Effective_To FROM Templates AS templates WHERE templates.Date_Effective_From = \"2005-02-20 00:31:34\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 WHERE T1.Template_Type_Code = \"AD\"",
    "readable_query": "SELECT reference_template_types.Template_Type_Description FROM Ref_Template_Types AS reference_template_types WHERE reference_template_types.Template_Type_Code = \"AD\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 WHERE T1.Template_Type_Code = \"PPT\"",
    "readable_query": "SELECT reference_template_types.Template_Type_Description FROM Ref_Template_Types AS reference_template_types WHERE reference_template_types.Template_Type_Code = \"PPT\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 WHERE T1.Template_Type_Code = \"PP\"",
    "readable_query": "SELECT reference_template_types.Template_Type_Description FROM Ref_Template_Types AS reference_template_types WHERE reference_template_types.Template_Type_Code = \"PP\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Template_ID FROM Templates AS T1 WHERE T1.Date_Effective_To = \"2015-09-06 01:08:44\"",
    "readable_query": "SELECT templates.Template_ID FROM Templates AS templates WHERE templates.Date_Effective_To = \"2015-09-06 01:08:44\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Date_Effective_From FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID = 20",
    "readable_query": "SELECT templates.Date_Effective_From FROM Templates AS templates JOIN Documents AS documents ON templates.Template_ID = documents.Template_ID WHERE documents.Template_ID = 20"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Template_ID FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Code = \"PPT\"",
    "readable_query": "SELECT templates.Template_ID FROM Templates AS templates JOIN Ref_Template_Types AS reference_template_types ON templates.Template_Type_Code = reference_template_types.Template_Type_Code WHERE reference_template_types.Template_Type_Code = \"PPT\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Document_ID FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = \"BK\"",
    "readable_query": "SELECT documents.Document_ID FROM Documents AS documents JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID WHERE templates.Template_Type_Code = \"BK\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Paragraph_ID FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = \"About Korea\"",
    "readable_query": "SELECT paragraphs.Paragraph_ID FROM Paragraphs AS paragraphs JOIN Documents AS documents ON paragraphs.Document_ID = documents.Document_ID WHERE documents.Document_Name = \"About Korea\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Document_ID, count(*) FROM Documents AS T1  GROUP BY T1.Document_ID",
    "readable_query": "SELECT documents.Document_ID, count(*) FROM Documents AS documents  GROUP BY documents.Document_ID"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Template_Type_Code, count(*) FROM Templates AS T1  GROUP BY T1.Template_Type_Code",
    "readable_query": "SELECT templates.Template_Type_Code, count(*) FROM Templates AS templates  GROUP BY templates.Template_Type_Code"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Other_Details, count(*) FROM Paragraphs AS T1  GROUP BY T1.Other_Details",
    "readable_query": "SELECT paragraphs.Other_Details, count(*) FROM Paragraphs AS paragraphs  GROUP BY paragraphs.Other_Details"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Template_Details, count(*) FROM Templates AS T1  GROUP BY T1.Template_Details",
    "readable_query": "SELECT templates.Template_Details, count(*) FROM Templates AS templates  GROUP BY templates.Template_Details"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Document_ID, count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID",
    "readable_query": "SELECT paragraphs.Document_ID, count(*) FROM Paragraphs AS paragraphs JOIN Documents AS documents ON paragraphs.Document_ID = documents.Document_ID  GROUP BY paragraphs.Document_ID"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Template_Type_Code, count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code",
    "readable_query": "SELECT templates.Template_Type_Code, count(*) FROM Templates AS templates JOIN Documents AS documents ON templates.Template_ID = documents.Template_ID  GROUP BY templates.Template_Type_Code"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Template_Details, count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Details",
    "readable_query": "SELECT templates.Template_Details, count(*) FROM Templates AS templates JOIN Documents AS documents ON templates.Template_ID = documents.Template_ID  GROUP BY templates.Template_Details"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Other_Details, count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Other_Details",
    "readable_query": "SELECT paragraphs.Other_Details, count(*) FROM Paragraphs AS paragraphs JOIN Documents AS documents ON paragraphs.Document_ID = documents.Document_ID  GROUP BY paragraphs.Other_Details"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Documents AS T1",
    "readable_query": "SELECT count(*) FROM Documents AS documents"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Date_Effective_From, T1.Version_Number FROM Templates AS T1",
    "readable_query": "SELECT templates.Date_Effective_From, templates.Version_Number FROM Templates AS templates"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Other_Details, T1.Paragraph_Text FROM Paragraphs AS T1",
    "readable_query": "SELECT paragraphs.Other_Details, paragraphs.Paragraph_Text FROM Paragraphs AS paragraphs"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Template_ID, T1.Other_Details FROM Documents AS T1",
    "readable_query": "SELECT documents.Template_ID, documents.Other_Details FROM Documents AS documents"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Other_Details, T1.Paragraph_ID FROM Paragraphs AS T1",
    "readable_query": "SELECT paragraphs.Other_Details, paragraphs.Paragraph_ID FROM Paragraphs AS paragraphs"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Date_Effective_To, T1.Template_ID FROM Templates AS T1",
    "readable_query": "SELECT templates.Date_Effective_To, templates.Template_ID FROM Templates AS templates"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Document_Description, T1.Other_Details FROM Documents AS T1",
    "readable_query": "SELECT documents.Document_Description, documents.Other_Details FROM Documents AS documents"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Template_Type_Code, T1.Template_Type_Description FROM Ref_Template_Types AS T1",
    "readable_query": "SELECT reference_template_types.Template_Type_Code, reference_template_types.Template_Type_Description FROM Ref_Template_Types AS reference_template_types"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Template_ID, T1.Other_Details FROM Documents AS T1",
    "readable_query": "SELECT documents.Template_ID, documents.Other_Details FROM Documents AS documents"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Date_Effective_To, T1.Template_Type_Code FROM Templates AS T1",
    "readable_query": "SELECT templates.Date_Effective_To, templates.Template_Type_Code FROM Templates AS templates"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Template_Type_Description, T2.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code",
    "readable_query": "SELECT reference_template_types.Template_Type_Description, templates.Template_Type_Code FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Date_Effective_To, T2.Template_Type_Description FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code",
    "readable_query": "SELECT templates.Date_Effective_To, reference_template_types.Template_Type_Description FROM Templates AS templates JOIN Ref_Template_Types AS reference_template_types ON templates.Template_Type_Code = reference_template_types.Template_Type_Code"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Template_Type_Description, T2.Date_Effective_To FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code",
    "readable_query": "SELECT reference_template_types.Template_Type_Description, templates.Date_Effective_To FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Template_Type_Code, T2.Template_ID FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code",
    "readable_query": "SELECT reference_template_types.Template_Type_Code, templates.Template_ID FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Document_Description, T2.Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID",
    "readable_query": "SELECT documents.Document_Description, paragraphs.Document_ID FROM Documents AS documents JOIN Paragraphs AS paragraphs ON documents.Document_ID = paragraphs.Document_ID"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Document_Name, T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID",
    "readable_query": "SELECT documents.Document_Name, templates.Template_Type_Code FROM Documents AS documents JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Template_Type_Description, T2.Version_Number FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code",
    "readable_query": "SELECT reference_template_types.Template_Type_Description, templates.Version_Number FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Document_Description, T1.Other_Details FROM Documents AS T1 WHERE T1.Document_ID = 1",
    "readable_query": "SELECT documents.Document_Description, documents.Other_Details FROM Documents AS documents WHERE documents.Document_ID = 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Paragraph_ID, T1.Other_Details FROM Paragraphs AS T1 WHERE T1.Document_ID = 3830",
    "readable_query": "SELECT paragraphs.Paragraph_ID, paragraphs.Other_Details FROM Paragraphs AS paragraphs WHERE paragraphs.Document_ID = 3830"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Document_Description, T1.Document_ID FROM Documents AS T1 WHERE T1.Document_Name = \"How to read a book\"",
    "readable_query": "SELECT documents.Document_Description, documents.Document_ID FROM Documents AS documents WHERE documents.Document_Name = \"How to read a book\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Date_Effective_From, T1.Template_Type_Code FROM Templates AS T1 WHERE T1.Version_Number = 8",
    "readable_query": "SELECT templates.Date_Effective_From, templates.Template_Type_Code FROM Templates AS templates WHERE templates.Version_Number = 8"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Version_Number, T1.Date_Effective_From FROM Templates AS T1 WHERE T1.Template_Type_Code = \"CV\"",
    "readable_query": "SELECT templates.Version_Number, templates.Date_Effective_From FROM Templates AS templates WHERE templates.Template_Type_Code = \"CV\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Version_Number, T1.Template_ID FROM Templates AS T1 WHERE T1.Template_Type_Code = \"AD\"",
    "readable_query": "SELECT templates.Version_Number, templates.Template_ID FROM Templates AS templates WHERE templates.Template_Type_Code = \"AD\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Date_Effective_From, T1.Version_Number FROM Templates AS T1 WHERE T1.Template_Type_Code = \"AD\"",
    "readable_query": "SELECT templates.Date_Effective_From, templates.Version_Number FROM Templates AS templates WHERE templates.Template_Type_Code = \"AD\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1  GROUP BY T1.Template_Type_Description  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT reference_template_types.Template_Type_Description FROM Ref_Template_Types AS reference_template_types  GROUP BY reference_template_types.Template_Type_Description  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Paragraph_ID FROM Paragraphs AS T1  GROUP BY T1.Paragraph_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT paragraphs.Paragraph_ID FROM Paragraphs AS paragraphs  GROUP BY paragraphs.Paragraph_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1  GROUP BY T1.Other_Details  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT paragraphs.Other_Details FROM Paragraphs AS paragraphs  GROUP BY paragraphs.Other_Details  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Date_Effective_From FROM Templates AS T1  GROUP BY T1.Date_Effective_From  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT templates.Date_Effective_From FROM Templates AS templates  GROUP BY templates.Date_Effective_From  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Template_Details FROM Templates AS T1  GROUP BY T1.Template_Details  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT templates.Template_Details FROM Templates AS templates  GROUP BY templates.Template_Details  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Documents AS T1 WHERE T1.Document_ID = 16514113",
    "readable_query": "SELECT count(*) FROM Documents AS documents WHERE documents.Document_ID = 16514113"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Templates AS T1 WHERE T1.Version_Number = 9",
    "readable_query": "SELECT count(*) FROM Templates AS templates WHERE templates.Version_Number = 9"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Paragraphs AS T1 WHERE T1.Paragraph_Text = \"Japan\"",
    "readable_query": "SELECT count(*) FROM Paragraphs AS paragraphs WHERE paragraphs.Paragraph_Text = \"Japan\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Templates AS T1 WHERE T1.Version_Number = 6",
    "readable_query": "SELECT count(*) FROM Templates AS templates WHERE templates.Version_Number = 6"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Paragraphs AS T1 WHERE T1.Paragraph_Text = \"Papua New Guinea\"",
    "readable_query": "SELECT count(*) FROM Paragraphs AS paragraphs WHERE paragraphs.Paragraph_Text = \"Papua New Guinea\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Template_Type_Code FROM Templates AS T1    ORDER BY T1.Date_Effective_To DESC LIMIT 1",
    "readable_query": "SELECT templates.Template_Type_Code FROM Templates AS templates    ORDER BY templates.Date_Effective_To DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Other_Details FROM Documents AS T1    ORDER BY T1.Document_ID DESC LIMIT 1",
    "readable_query": "SELECT documents.Other_Details FROM Documents AS documents    ORDER BY documents.Document_ID DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Paragraph_ID FROM Paragraphs AS T1    ORDER BY T1.Document_ID DESC LIMIT 1",
    "readable_query": "SELECT paragraphs.Paragraph_ID FROM Paragraphs AS paragraphs    ORDER BY paragraphs.Document_ID DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Document_Name FROM Documents AS T1    ORDER BY T1.Template_ID DESC LIMIT 1",
    "readable_query": "SELECT documents.Document_Name FROM Documents AS documents    ORDER BY documents.Template_ID DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Version_Number FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID    ORDER BY T2.Document_ID DESC LIMIT 1",
    "readable_query": "SELECT templates.Version_Number FROM Templates AS templates JOIN Documents AS documents ON templates.Template_ID = documents.Template_ID    ORDER BY documents.Document_ID DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Paragraph_ID FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID    ORDER BY T2.Document_ID DESC LIMIT 1",
    "readable_query": "SELECT paragraphs.Paragraph_ID FROM Paragraphs AS paragraphs JOIN Documents AS documents ON paragraphs.Document_ID = documents.Document_ID    ORDER BY documents.Document_ID DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code    ORDER BY T2.Date_Effective_To DESC LIMIT 1",
    "readable_query": "SELECT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code    ORDER BY templates.Date_Effective_To DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Other_Details FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID    ORDER BY T2.Version_Number DESC LIMIT 1",
    "readable_query": "SELECT documents.Other_Details FROM Documents AS documents JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID    ORDER BY templates.Version_Number DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code    ORDER BY T2.Date_Effective_To DESC LIMIT 1",
    "readable_query": "SELECT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code    ORDER BY templates.Date_Effective_To DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Other_Details FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID    ORDER BY T2.Date_Effective_To DESC LIMIT 1",
    "readable_query": "SELECT documents.Other_Details FROM Documents AS documents JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID    ORDER BY templates.Date_Effective_To DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID    ORDER BY T2.Template_ID ASC LIMIT 1",
    "readable_query": "SELECT templates.Template_Type_Code FROM Templates AS templates JOIN Documents AS documents ON templates.Template_ID = documents.Template_ID    ORDER BY documents.Template_ID ASC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID    ORDER BY T2.Template_ID ASC LIMIT 1",
    "readable_query": "SELECT paragraphs.Other_Details FROM Paragraphs AS paragraphs JOIN Documents AS documents ON paragraphs.Document_ID = documents.Document_ID    ORDER BY documents.Template_ID ASC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Template_Type_Code, T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code    ORDER BY T2.Date_Effective_To DESC LIMIT 1",
    "readable_query": "SELECT reference_template_types.Template_Type_Code, reference_template_types.Template_Type_Description FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code    ORDER BY templates.Date_Effective_To DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Template_Type_Code, T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code    ORDER BY T2.Date_Effective_From DESC LIMIT 1",
    "readable_query": "SELECT reference_template_types.Template_Type_Code, reference_template_types.Template_Type_Description FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code    ORDER BY templates.Date_Effective_From DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Template_Type_Description, T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code    ORDER BY T2.Template_ID DESC LIMIT 1",
    "readable_query": "SELECT reference_template_types.Template_Type_Description, reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code    ORDER BY templates.Template_ID DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Document_Name, T1.Template_ID FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID    ORDER BY T2.Date_Effective_To DESC LIMIT 1",
    "readable_query": "SELECT documents.Document_Name, documents.Template_ID FROM Documents AS documents JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID    ORDER BY templates.Date_Effective_To DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Document_Description) FROM Documents AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  documents.Document_Description) FROM Documents AS documents"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Document_ID) FROM Paragraphs AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  paragraphs.Document_ID) FROM Paragraphs AS paragraphs"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Template_Type_Code) FROM Templates AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  templates.Template_Type_Code) FROM Templates AS templates"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Template_Type_Description) FROM Ref_Template_Types AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  reference_template_types.Template_Type_Description) FROM Ref_Template_Types AS reference_template_types"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Paragraph_ID) FROM Paragraphs AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  paragraphs.Paragraph_ID) FROM Paragraphs AS paragraphs"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Document_ID) FROM Documents AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  documents.Document_ID) FROM Documents AS documents"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Version_Number) FROM Templates AS T1",
    "readable_query": "SELECT avg( templates.Version_Number) FROM Templates AS templates"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Document_ID) FROM Paragraphs AS T1",
    "readable_query": "SELECT avg( paragraphs.Document_ID) FROM Paragraphs AS paragraphs"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Paragraph_ID) FROM Paragraphs AS T1",
    "readable_query": "SELECT avg( paragraphs.Paragraph_ID) FROM Paragraphs AS paragraphs"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Template_ID) FROM Templates AS T1",
    "readable_query": "SELECT avg( templates.Template_ID) FROM Templates AS templates"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Version_Number) FROM Templates AS T1",
    "readable_query": "SELECT avg( templates.Version_Number) FROM Templates AS templates"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Version_Number FROM Templates AS T1",
    "readable_query": "SELECT templates.Version_Number FROM Templates AS templates"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Document_ID FROM Paragraphs AS T1",
    "readable_query": "SELECT paragraphs.Document_ID FROM Paragraphs AS paragraphs"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Date_Effective_From FROM Templates AS T1",
    "readable_query": "SELECT templates.Date_Effective_From FROM Templates AS templates"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Other_Details FROM Documents AS T1",
    "readable_query": "SELECT documents.Other_Details FROM Documents AS documents"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1",
    "readable_query": "SELECT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Template_Type_Code FROM Templates AS T1",
    "readable_query": "SELECT templates.Template_Type_Code FROM Templates AS templates"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Template_Type_Code FROM Templates AS T1",
    "readable_query": "SELECT templates.Template_Type_Code FROM Templates AS templates"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Template_Details FROM Templates AS T1",
    "readable_query": "SELECT DISTINCT templates.Template_Details FROM Templates AS templates"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Version_Number FROM Templates AS T1",
    "readable_query": "SELECT DISTINCT templates.Version_Number FROM Templates AS templates"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Template_Details FROM Templates AS T1",
    "readable_query": "SELECT DISTINCT templates.Template_Details FROM Templates AS templates"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Document_ID FROM Paragraphs AS T1",
    "readable_query": "SELECT DISTINCT paragraphs.Document_ID FROM Paragraphs AS paragraphs"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Version_Number FROM Templates AS T1     ORDER BY T1.Date_Effective_From ASC",
    "readable_query": "SELECT templates.Version_Number FROM Templates AS templates     ORDER BY templates.Date_Effective_From ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Document_Name FROM Documents AS T1     ORDER BY T1.Template_ID ASC",
    "readable_query": "SELECT documents.Document_Name FROM Documents AS documents     ORDER BY documents.Template_ID ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Template_Type_Code FROM Templates AS T1     ORDER BY T1.Template_ID ASC",
    "readable_query": "SELECT templates.Template_Type_Code FROM Templates AS templates     ORDER BY templates.Template_ID ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Template_Type_Code FROM Templates AS T1     ORDER BY T1.Date_Effective_From ASC",
    "readable_query": "SELECT templates.Template_Type_Code FROM Templates AS templates     ORDER BY templates.Date_Effective_From ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1     ORDER BY T1.Paragraph_ID ASC",
    "readable_query": "SELECT paragraphs.Other_Details FROM Paragraphs AS paragraphs     ORDER BY paragraphs.Paragraph_ID ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Template_Type_Code FROM Templates AS T1     ORDER BY T1.Date_Effective_From ASC",
    "readable_query": "SELECT templates.Template_Type_Code FROM Templates AS templates     ORDER BY templates.Date_Effective_From ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Template_ID FROM Documents AS T1     ORDER BY T1.Document_ID ASC",
    "readable_query": "SELECT documents.Template_ID FROM Documents AS documents     ORDER BY documents.Document_ID ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Template_ID FROM Templates AS T1     ORDER BY T1.Version_Number DESC",
    "readable_query": "SELECT templates.Template_ID FROM Templates AS templates     ORDER BY templates.Version_Number DESC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Document_ID FROM Paragraphs AS T1     ORDER BY T1.Paragraph_ID DESC",
    "readable_query": "SELECT paragraphs.Document_ID FROM Paragraphs AS paragraphs     ORDER BY paragraphs.Paragraph_ID DESC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1     ORDER BY T1.Paragraph_ID DESC",
    "readable_query": "SELECT paragraphs.Other_Details FROM Paragraphs AS paragraphs     ORDER BY paragraphs.Paragraph_ID DESC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Other_Details, T1.Document_ID FROM Paragraphs AS T1     ORDER BY T1.Document_ID ASC",
    "readable_query": "SELECT paragraphs.Other_Details, paragraphs.Document_ID FROM Paragraphs AS paragraphs     ORDER BY paragraphs.Document_ID ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Date_Effective_To, T1.Template_ID FROM Templates AS T1     ORDER BY T1.Template_ID ASC",
    "readable_query": "SELECT templates.Date_Effective_To, templates.Template_ID FROM Templates AS templates     ORDER BY templates.Template_ID ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Template_ID, T1.Date_Effective_From FROM Templates AS T1     ORDER BY T1.Date_Effective_From ASC",
    "readable_query": "SELECT templates.Template_ID, templates.Date_Effective_From FROM Templates AS templates     ORDER BY templates.Date_Effective_From ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Paragraph_ID, T1.Other_Details FROM Paragraphs AS T1     ORDER BY T1.Other_Details ASC",
    "readable_query": "SELECT paragraphs.Paragraph_ID, paragraphs.Other_Details FROM Paragraphs AS paragraphs     ORDER BY paragraphs.Other_Details ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1     ORDER BY T1.Paragraph_Text ASC",
    "readable_query": "SELECT paragraphs.Paragraph_ID, paragraphs.Paragraph_Text FROM Paragraphs AS paragraphs     ORDER BY paragraphs.Paragraph_Text ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Template_ID FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code JOIN Documents AS T3 ON T1.Template_ID = T3.Template_ID WHERE T2.Template_Type_Description = \"Presentation\" and T3.Document_Name = \"Do not panic\"",
    "readable_query": "SELECT templates.Template_ID FROM Templates AS templates JOIN Ref_Template_Types AS reference_template_types ON templates.Template_Type_Code = reference_template_types.Template_Type_Code JOIN Documents AS documents ON templates.Template_ID = documents.Template_ID WHERE reference_template_types.Template_Type_Description = \"Presentation\" and documents.Document_Name = \"Do not panic\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID WHERE T2.Date_Effective_From = \"1997-04-17 08:29:44\" and T3.Document_ID = 1",
    "readable_query": "SELECT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code JOIN Documents AS documents ON templates.Template_ID = documents.Template_ID WHERE templates.Date_Effective_From = \"1997-04-17 08:29:44\" and documents.Document_ID = 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID JOIN Templates AS T3 ON T2.Template_ID = T3.Template_ID WHERE T2.Document_Description = \"n\" and T3.Template_Type_Code = \"CV\"",
    "readable_query": "SELECT paragraphs.Other_Details FROM Paragraphs AS paragraphs JOIN Documents AS documents ON paragraphs.Document_ID = documents.Document_ID JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID WHERE documents.Document_Description = \"n\" and templates.Template_Type_Code = \"CV\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID JOIN Templates AS T3 ON T2.Template_ID = T3.Template_ID WHERE T2.Document_Name = \"How Google people work\" and T3.Version_Number = 2",
    "readable_query": "SELECT paragraphs.Paragraph_Text FROM Paragraphs AS paragraphs JOIN Documents AS documents ON paragraphs.Document_ID = documents.Document_ID JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID WHERE documents.Document_Name = \"How Google people work\" and templates.Version_Number = 2"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Document_Description FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID JOIN Templates AS T3 ON T1.Template_ID = T3.Template_ID WHERE T2.Document_ID = 16514113 and T3.Date_Effective_From = \"2012-04-05 07:11:42\"",
    "readable_query": "SELECT documents.Document_Description FROM Documents AS documents JOIN Paragraphs AS paragraphs ON documents.Document_ID = paragraphs.Document_ID JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID WHERE paragraphs.Document_ID = 16514113 and templates.Date_Effective_From = \"2012-04-05 07:11:42\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Template_Details FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID JOIN Ref_Template_Types AS T3 ON T1.Template_Type_Code = T3.Template_Type_Code WHERE T2.Document_ID = 50123 and T3.Template_Type_Description = \"Paper\"",
    "readable_query": "SELECT templates.Template_Details FROM Templates AS templates JOIN Documents AS documents ON templates.Template_ID = documents.Template_ID JOIN Ref_Template_Types AS reference_template_types ON templates.Template_Type_Code = reference_template_types.Template_Type_Code WHERE documents.Document_ID = 50123 and reference_template_types.Template_Type_Description = \"Paper\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Document_ID FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code WHERE T2.Date_Effective_To = \"2015-09-06 01:08:44\" and T3.Template_Type_Description = \"Book\"",
    "readable_query": "SELECT documents.Document_ID FROM Documents AS documents JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID JOIN Ref_Template_Types AS reference_template_types ON templates.Template_Type_Code = reference_template_types.Template_Type_Code WHERE templates.Date_Effective_To = \"2015-09-06 01:08:44\" and reference_template_types.Template_Type_Description = \"Book\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Date_Effective_From = \"2005-11-12 07:09:48\" or T2.Date_Effective_From = \"2008-08-01 13:57:26\"",
    "readable_query": "SELECT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Date_Effective_From = \"2005-11-12 07:09:48\" or templates.Date_Effective_From = \"2008-08-01 13:57:26\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_ID = 801801 or T2.Document_ID = 3540024",
    "readable_query": "SELECT paragraphs.Other_Details FROM Paragraphs AS paragraphs JOIN Documents AS documents ON paragraphs.Document_ID = documents.Document_ID WHERE documents.Document_ID = 801801 or documents.Document_ID = 3540024"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Other_Details FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Date_Effective_From = \"1979-10-20 21:23:20\" or T2.Date_Effective_From = \"2003-06-05 04:03:45\"",
    "readable_query": "SELECT documents.Other_Details FROM Documents AS documents JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID WHERE templates.Date_Effective_From = \"1979-10-20 21:23:20\" or templates.Date_Effective_From = \"2003-06-05 04:03:45\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1 WHERE T1.Paragraph_Text = \"Papua New Guinea\" and T1.Paragraph_ID = 571212310",
    "readable_query": "SELECT paragraphs.Other_Details FROM Paragraphs AS paragraphs WHERE paragraphs.Paragraph_Text = \"Papua New Guinea\" and paragraphs.Paragraph_ID = 571212310"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Template_Details FROM Templates AS T1 WHERE T1.Version_Number = 2 and T1.Template_Type_Code = \"AD\"",
    "readable_query": "SELECT templates.Template_Details FROM Templates AS templates WHERE templates.Version_Number = 2 and templates.Template_Type_Code = \"AD\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Date_Effective_To FROM Templates AS T1 WHERE T1.Template_ID = 20 and T1.Template_Type_Code = \"AD\"",
    "readable_query": "SELECT templates.Date_Effective_To FROM Templates AS templates WHERE templates.Template_ID = 20 and templates.Template_Type_Code = \"AD\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Template_ID FROM Documents AS T1 WHERE T1.Document_ID = 801801 and T1.Document_Description = \"u\"",
    "readable_query": "SELECT documents.Template_ID FROM Documents AS documents WHERE documents.Document_ID = 801801 and documents.Document_Description = \"u\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Date_Effective_From) FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T1.Date_Effective_To = \"2006-02-06 23:52:04\" and T2.Template_Type_Description = \"Presentation\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  templates.Date_Effective_From) FROM Templates AS templates JOIN Ref_Template_Types AS reference_template_types ON templates.Template_Type_Code = reference_template_types.Template_Type_Code WHERE templates.Date_Effective_To = \"2006-02-06 23:52:04\" and reference_template_types.Template_Type_Description = \"Presentation\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Date_Effective_To) FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T1.Template_ID = 6 and T2.Template_Type_Description = \"Presentation\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  templates.Date_Effective_To) FROM Templates AS templates JOIN Ref_Template_Types AS reference_template_types ON templates.Template_Type_Code = reference_template_types.Template_Type_Code WHERE templates.Template_ID = 6 and reference_template_types.Template_Type_Description = \"Presentation\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Template_Type_Code) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T1.Template_Type_Description = \"Book\" and T2.Template_ID = 23",
    "readable_query": "SELECT DISTINCT count(DISTINCT  reference_template_types.Template_Type_Code) FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE reference_template_types.Template_Type_Description = \"Book\" and templates.Template_ID = 23"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Template_Type_Code) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T1.Template_Type_Description = \"Book\" and T2.Template_ID = 25",
    "readable_query": "SELECT DISTINCT count(DISTINCT  reference_template_types.Template_Type_Code) FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE reference_template_types.Template_Type_Description = \"Book\" and templates.Template_ID = 25"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Document_ID FROM Documents AS T1 WHERE T1.Document_Description = \"w\" or T1.Template_ID = 7",
    "readable_query": "SELECT documents.Document_ID FROM Documents AS documents WHERE documents.Document_Description = \"w\" or documents.Template_ID = 7"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Other_Details FROM Documents AS T1 WHERE T1.Document_ID = 3 or T1.Document_Name = \"How to write a CV\"",
    "readable_query": "SELECT documents.Other_Details FROM Documents AS documents WHERE documents.Document_ID = 3 or documents.Document_Name = \"How to write a CV\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1 WHERE T1.Paragraph_Text = \"UK\" or T1.Document_ID = 50123",
    "readable_query": "SELECT paragraphs.Other_Details FROM Paragraphs AS paragraphs WHERE paragraphs.Paragraph_Text = \"UK\" or paragraphs.Document_ID = 50123"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Template_Type_Code FROM Templates AS T1 WHERE T1.Template_ID = 20 or T1.Date_Effective_To = \"1980-05-07 12:15:47\"",
    "readable_query": "SELECT templates.Template_Type_Code FROM Templates AS templates WHERE templates.Template_ID = 20 or templates.Date_Effective_To = \"1980-05-07 12:15:47\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Other_Details FROM Documents AS T1 WHERE T1.Document_Name = \"Understanding DB\" or T1.Document_Description = \"h\"",
    "readable_query": "SELECT documents.Other_Details FROM Documents AS documents WHERE documents.Document_Name = \"Understanding DB\" or documents.Document_Description = \"h\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Date_Effective_From FROM Templates AS T1 WHERE T1.Template_Type_Code = \"BK\" or T1.Version_Number = 4",
    "readable_query": "SELECT templates.Date_Effective_From FROM Templates AS templates WHERE templates.Template_Type_Code = \"BK\" or templates.Version_Number = 4"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Document_Name FROM Documents AS T1 WHERE T1.Template_ID = 6 or T1.Document_Description = \"z\"",
    "readable_query": "SELECT documents.Document_Name FROM Documents AS documents WHERE documents.Template_ID = 6 or documents.Document_Description = \"z\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1 WHERE T1.Paragraph_ID = 9946 or T1.Document_ID = 50123",
    "readable_query": "SELECT paragraphs.Other_Details FROM Paragraphs AS paragraphs WHERE paragraphs.Paragraph_ID = 9946 or paragraphs.Document_ID = 50123"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1 WHERE T1.Paragraph_Text = \"Ireland\" or T1.Document_ID = 3830",
    "readable_query": "SELECT paragraphs.Other_Details FROM Paragraphs AS paragraphs WHERE paragraphs.Paragraph_Text = \"Ireland\" or paragraphs.Document_ID = 3830"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Other_Details FROM Documents AS T1 WHERE T1.Document_Description = \"z\" or T1.Template_ID = 4",
    "readable_query": "SELECT documents.Other_Details FROM Documents AS documents WHERE documents.Document_Description = \"z\" or documents.Template_ID = 4"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Code = \"PPT\" and T2.Date_Effective_To = \"1993-03-24 14:30:23\"",
    "readable_query": "SELECT count(*) FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Template_Type_Code = \"PPT\" and templates.Date_Effective_To = \"1993-03-24 14:30:23\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Version_Number = 4 and T2.Date_Effective_From = \"1979-12-24 10:28:16\"",
    "readable_query": "SELECT count(*) FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Version_Number = 4 and templates.Date_Effective_From = \"1979-12-24 10:28:16\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Date_Effective_To = \"2000-10-22 11:57:12\" and T2.Version_Number = 7",
    "readable_query": "SELECT count(*) FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Date_Effective_To = \"2000-10-22 11:57:12\" and templates.Version_Number = 7"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_Name = \"Introduction of OS\" and T2.Document_ID = 3540024",
    "readable_query": "SELECT count(*) FROM Templates AS templates JOIN Documents AS documents ON templates.Template_ID = documents.Template_ID WHERE documents.Document_Name = \"Introduction of OS\" and documents.Document_ID = 3540024"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID = 21 and T2.Document_Description = \"k\"",
    "readable_query": "SELECT count(*) FROM Templates AS templates JOIN Documents AS documents ON templates.Template_ID = documents.Template_ID WHERE documents.Template_ID = 21 and documents.Document_Description = \"k\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Date_Effective_To = \"1994-12-07 13:26:23\" and T2.Template_ID = 0",
    "readable_query": "SELECT count(*) FROM Documents AS documents JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID WHERE templates.Date_Effective_To = \"1994-12-07 13:26:23\" and templates.Template_ID = 0"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = \"Paper\" and T2.Template_Type_Code = \"AD\"",
    "readable_query": "SELECT count(*) FROM Templates AS templates JOIN Ref_Template_Types AS reference_template_types ON templates.Template_Type_Code = reference_template_types.Template_Type_Code WHERE reference_template_types.Template_Type_Description = \"Paper\" and reference_template_types.Template_Type_Code = \"AD\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Paragraph_Text FROM Paragraphs AS T1 WHERE T1.Document_ID != 33930",
    "readable_query": "SELECT paragraphs.Paragraph_Text FROM Paragraphs AS paragraphs WHERE paragraphs.Document_ID != 33930"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Template_Type_Code FROM Templates AS T1 WHERE T1.Template_ID != 23",
    "readable_query": "SELECT templates.Template_Type_Code FROM Templates AS templates WHERE templates.Template_ID != 23"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Template_ID FROM Templates AS T1 WHERE T1.Version_Number != 4",
    "readable_query": "SELECT templates.Template_ID FROM Templates AS templates WHERE templates.Version_Number != 4"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Template_Type_Code FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description != \"Advertisement\"",
    "readable_query": "SELECT templates.Template_Type_Code FROM Templates AS templates JOIN Ref_Template_Types AS reference_template_types ON templates.Template_Type_Code = reference_template_types.Template_Type_Code WHERE reference_template_types.Template_Type_Description != \"Advertisement\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Date_Effective_To FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Code != \"AD\"",
    "readable_query": "SELECT templates.Date_Effective_To FROM Templates AS templates JOIN Ref_Template_Types AS reference_template_types ON templates.Template_Type_Code = reference_template_types.Template_Type_Code WHERE reference_template_types.Template_Type_Code != \"AD\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_ID != 20",
    "readable_query": "SELECT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Template_ID != 20"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Date_Effective_From != \"2005-11-12 07:09:48\"",
    "readable_query": "SELECT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Date_Effective_From != \"2005-11-12 07:09:48\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Date_Effective_To != \"2008-08-08 18:36:43\"",
    "readable_query": "SELECT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Date_Effective_To != \"2008-08-08 18:36:43\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Version_Number != 0",
    "readable_query": "SELECT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Version_Number != 0"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_ID = 4",
    "readable_query": "SELECT DISTINCT reference_template_types.Template_Type_Description FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Template_ID = 4"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Date_Effective_From FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Code = \"PP\"",
    "readable_query": "SELECT DISTINCT templates.Date_Effective_From FROM Templates AS templates JOIN Ref_Template_Types AS reference_template_types ON templates.Template_Type_Code = reference_template_types.Template_Type_Code WHERE reference_template_types.Template_Type_Code = \"PP\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Date_Effective_To = \"1993-03-24 14:30:23\"",
    "readable_query": "SELECT DISTINCT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Date_Effective_To = \"1993-03-24 14:30:23\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Other_Details FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Template_ID = 6",
    "readable_query": "SELECT DISTINCT paragraphs.Other_Details FROM Paragraphs AS paragraphs JOIN Documents AS documents ON paragraphs.Document_ID = documents.Document_ID WHERE documents.Template_ID = 6"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Other_Details FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = \"How Google people work\"",
    "readable_query": "SELECT DISTINCT paragraphs.Other_Details FROM Paragraphs AS paragraphs JOIN Documents AS documents ON paragraphs.Document_ID = documents.Document_ID WHERE documents.Document_Name = \"How Google people work\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_ID = 21",
    "readable_query": "SELECT DISTINCT reference_template_types.Template_Type_Description FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Template_ID = 21"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Date_Effective_From = \"1993-10-07 02:33:04\"",
    "readable_query": "SELECT DISTINCT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Date_Effective_From = \"1993-10-07 02:33:04\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Paragraph_Text) FROM Paragraphs AS T1 WHERE T1.Document_ID = 80",
    "readable_query": "SELECT DISTINCT count(DISTINCT  paragraphs.Paragraph_Text) FROM Paragraphs AS paragraphs WHERE paragraphs.Document_ID = 80"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Document_Name FROM Documents AS T1 WHERE T1.Template_ID > 6",
    "readable_query": "SELECT documents.Document_Name FROM Documents AS documents WHERE documents.Template_ID > 6"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Paragraph_ID FROM Paragraphs AS T1 WHERE T1.Document_ID > 16514113",
    "readable_query": "SELECT paragraphs.Paragraph_ID FROM Paragraphs AS paragraphs WHERE paragraphs.Document_ID > 16514113"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Document_Name FROM Documents AS T1 WHERE T1.Template_ID > 4",
    "readable_query": "SELECT documents.Document_Name FROM Documents AS documents WHERE documents.Template_ID > 4"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Template_Type_Code, T2.Date_Effective_From, T3.Document_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID",
    "readable_query": "SELECT reference_template_types.Template_Type_Code, templates.Date_Effective_From, documents.Document_Description FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code JOIN Documents AS documents ON templates.Template_ID = documents.Template_ID"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Document_ID, T2.Other_Details, T3.Date_Effective_From FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID JOIN Templates AS T3 ON T2.Template_ID = T3.Template_ID",
    "readable_query": "SELECT paragraphs.Document_ID, documents.Other_Details, templates.Date_Effective_From FROM Paragraphs AS paragraphs JOIN Documents AS documents ON paragraphs.Document_ID = documents.Document_ID JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Document_Description FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID     ORDER BY T2.Date_Effective_To ASC",
    "readable_query": "SELECT documents.Document_Description FROM Documents AS documents JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID     ORDER BY templates.Date_Effective_To ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Other_Details FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID     ORDER BY T2.Template_ID ASC",
    "readable_query": "SELECT documents.Other_Details FROM Documents AS documents JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID     ORDER BY templates.Template_ID ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code     ORDER BY T2.Date_Effective_To ASC",
    "readable_query": "SELECT reference_template_types.Template_Type_Description FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code     ORDER BY templates.Date_Effective_To ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code     ORDER BY T2.Date_Effective_To ASC",
    "readable_query": "SELECT reference_template_types.Template_Type_Description FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code     ORDER BY templates.Date_Effective_To ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Template_ID FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID     ORDER BY T2.Date_Effective_From ASC",
    "readable_query": "SELECT documents.Template_ID FROM Documents AS documents JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID     ORDER BY templates.Date_Effective_From ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Document_Name FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID     ORDER BY T2.Document_ID ASC",
    "readable_query": "SELECT documents.Document_Name FROM Documents AS documents JOIN Paragraphs AS paragraphs ON documents.Document_ID = paragraphs.Document_ID     ORDER BY paragraphs.Document_ID ASC"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Paragraph_ID FROM Paragraphs AS T1 WHERE T1.Document_ID = 33930     INTERSECT SELECT T2.Paragraph_ID FROM Paragraphs AS T2 WHERE T2.Document_ID = 3830",
    "readable_query": "SELECT paragraphs.Paragraph_ID FROM Paragraphs AS paragraphs WHERE paragraphs.Document_ID = 33930     INTERSECT SELECT paragraphs.Paragraph_ID FROM Paragraphs AS paragraphs WHERE paragraphs.Document_ID = 3830"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Paragraph_Text FROM Paragraphs AS T1 WHERE T1.Document_ID = 651512     INTERSECT SELECT T2.Paragraph_Text FROM Paragraphs AS T2 WHERE T2.Document_ID = 3",
    "readable_query": "SELECT paragraphs.Paragraph_Text FROM Paragraphs AS paragraphs WHERE paragraphs.Document_ID = 651512     INTERSECT SELECT paragraphs.Paragraph_Text FROM Paragraphs AS paragraphs WHERE paragraphs.Document_ID = 3"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 WHERE T1.Template_Type_Description = \"Advertisement\"     INTERSECT SELECT T2.Template_Type_Code FROM Ref_Template_Types AS T2 WHERE T2.Template_Type_Description = \"Paper\"",
    "readable_query": "SELECT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types WHERE reference_template_types.Template_Type_Description = \"Advertisement\"     INTERSECT SELECT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types WHERE reference_template_types.Template_Type_Description = \"Paper\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 WHERE T1.Template_Type_Code = \"AD\"     INTERSECT SELECT T2.Template_Type_Description FROM Ref_Template_Types AS T2 WHERE T2.Template_Type_Code = \"BK\"",
    "readable_query": "SELECT reference_template_types.Template_Type_Description FROM Ref_Template_Types AS reference_template_types WHERE reference_template_types.Template_Type_Code = \"AD\"     INTERSECT SELECT reference_template_types.Template_Type_Description FROM Ref_Template_Types AS reference_template_types WHERE reference_template_types.Template_Type_Code = \"BK\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 WHERE T1.Template_Type_Code = \"PPT\"     INTERSECT SELECT T2.Template_Type_Description FROM Ref_Template_Types AS T2 WHERE T2.Template_Type_Code = \"BK\"",
    "readable_query": "SELECT reference_template_types.Template_Type_Description FROM Ref_Template_Types AS reference_template_types WHERE reference_template_types.Template_Type_Code = \"PPT\"     INTERSECT SELECT reference_template_types.Template_Type_Description FROM Ref_Template_Types AS reference_template_types WHERE reference_template_types.Template_Type_Code = \"BK\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1 WHERE T1.Document_ID = 33930     INTERSECT SELECT T2.Other_Details FROM Paragraphs AS T2 WHERE T2.Document_ID = 33930",
    "readable_query": "SELECT paragraphs.Other_Details FROM Paragraphs AS paragraphs WHERE paragraphs.Document_ID = 33930     INTERSECT SELECT paragraphs.Other_Details FROM Paragraphs AS paragraphs WHERE paragraphs.Document_ID = 33930"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Document_Description FROM Documents AS T1 WHERE T1.Document_ID = 3540024     INTERSECT SELECT T2.Document_Description FROM Documents AS T2 WHERE T2.Document_ID = 50123",
    "readable_query": "SELECT documents.Document_Description FROM Documents AS documents WHERE documents.Document_ID = 3540024     INTERSECT SELECT documents.Document_Description FROM Documents AS documents WHERE documents.Document_ID = 50123"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Document_ID) FROM Paragraphs AS T1 WHERE T1.Paragraph_ID = 9946",
    "readable_query": "SELECT avg( paragraphs.Document_ID) FROM Paragraphs AS paragraphs WHERE paragraphs.Paragraph_ID = 9946"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Template_ID) FROM Templates AS T1 WHERE T1.Date_Effective_To = \"2008-08-08 18:36:43\"",
    "readable_query": "SELECT avg( templates.Template_ID) FROM Templates AS templates WHERE templates.Date_Effective_To = \"2008-08-08 18:36:43\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Template_ID) FROM Documents AS T1 WHERE T1.Document_Name = \"Learning French\"",
    "readable_query": "SELECT avg( documents.Template_ID) FROM Documents AS documents WHERE documents.Document_Name = \"Learning French\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Template_ID) FROM Documents AS T1 WHERE T1.Document_ID = 385906526",
    "readable_query": "SELECT avg( documents.Template_ID) FROM Documents AS documents WHERE documents.Document_ID = 385906526"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Version_Number) FROM Templates AS T1 WHERE T1.Template_ID = 10",
    "readable_query": "SELECT avg( templates.Version_Number) FROM Templates AS templates WHERE templates.Template_ID = 10"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Other_Details FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Date_Effective_To = (SELECT max( T23.Date_Effective_To) FROM Templates AS T23)",
    "readable_query": "SELECT documents.Other_Details FROM Documents AS documents JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID WHERE templates.Date_Effective_To = (SELECT max( templates.Date_Effective_To) FROM Templates AS templates)"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_ID = (SELECT max( T23.Template_ID) FROM Templates AS T23)",
    "readable_query": "SELECT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Template_ID = (SELECT max( templates.Template_ID) FROM Templates AS templates)"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_ID = (SELECT max( T23.Template_ID) FROM Templates AS T23)",
    "readable_query": "SELECT reference_template_types.Template_Type_Description FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Template_ID = (SELECT max( templates.Template_ID) FROM Templates AS templates)"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Other_Details FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Version_Number = (SELECT max( T23.Version_Number) FROM Templates AS T23)",
    "readable_query": "SELECT documents.Other_Details FROM Documents AS documents JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID WHERE templates.Version_Number = (SELECT max( templates.Version_Number) FROM Templates AS templates)"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Document_ID, T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code WHERE T3.Template_Type_Description = \"CV\" and T2.Date_Effective_From = \"1999-06-21 11:10:30\"",
    "readable_query": "SELECT documents.Document_ID, templates.Template_Type_Code FROM Documents AS documents JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID JOIN Ref_Template_Types AS reference_template_types ON templates.Template_Type_Code = reference_template_types.Template_Type_Code WHERE reference_template_types.Template_Type_Description = \"CV\" and templates.Date_Effective_From = \"1999-06-21 11:10:30\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Other_Details, T2.Paragraph_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID JOIN Templates AS T3 ON T1.Template_ID = T3.Template_ID WHERE T3.Template_ID = 18 and T2.Document_ID = 3540024",
    "readable_query": "SELECT documents.Other_Details, paragraphs.Paragraph_ID FROM Documents AS documents JOIN Paragraphs AS paragraphs ON documents.Document_ID = paragraphs.Document_ID JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID WHERE templates.Template_ID = 18 and paragraphs.Document_ID = 3540024"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Date_Effective_From = \"1984-08-07 13:36:26\" GROUP BY T1.Template_Type_Code  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Date_Effective_From = \"1984-08-07 13:36:26\" GROUP BY reference_template_types.Template_Type_Code  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Document_Name FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Paragraph_ID = 608931827 GROUP BY T1.Document_Name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT documents.Document_Name FROM Documents AS documents JOIN Paragraphs AS paragraphs ON documents.Document_ID = paragraphs.Document_ID WHERE paragraphs.Paragraph_ID = 608931827 GROUP BY documents.Document_Name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Date_Effective_To = \"1993-03-24 14:30:23\" GROUP BY T1.Template_Type_Description  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT reference_template_types.Template_Type_Description FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Date_Effective_To = \"1993-03-24 14:30:23\" GROUP BY reference_template_types.Template_Type_Description  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Template_ID FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = \"AD\" GROUP BY T1.Template_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT documents.Template_ID FROM Documents AS documents JOIN Templates AS templates ON documents.Template_ID = templates.Template_ID WHERE templates.Template_Type_Code = \"AD\" GROUP BY documents.Template_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Date_Effective_To = \"1980-05-07 12:15:47\" GROUP BY T1.Template_Type_Code  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Date_Effective_To = \"1980-05-07 12:15:47\" GROUP BY reference_template_types.Template_Type_Code  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Document_Description FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_ID = 33930 GROUP BY T1.Document_Description  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT documents.Document_Description FROM Documents AS documents JOIN Paragraphs AS paragraphs ON documents.Document_ID = paragraphs.Document_ID WHERE paragraphs.Document_ID = 33930 GROUP BY documents.Document_Description  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Document_Description FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Paragraph_ID = 765713812 GROUP BY T1.Document_Description  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT documents.Document_Description FROM Documents AS documents JOIN Paragraphs AS paragraphs ON documents.Document_ID = paragraphs.Document_ID WHERE paragraphs.Paragraph_ID = 765713812 GROUP BY documents.Document_Description  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Template_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_ID = 2394 GROUP BY T1.Template_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT templates.Template_ID FROM Templates AS templates JOIN Documents AS documents ON templates.Template_ID = documents.Template_ID WHERE documents.Document_ID = 2394 GROUP BY templates.Template_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Date_Effective_From = \"1993-10-07 02:33:04\" GROUP BY T1.Template_Type_Code  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT reference_template_types.Template_Type_Code FROM Ref_Template_Types AS reference_template_types JOIN Templates AS templates ON reference_template_types.Template_Type_Code = templates.Template_Type_Code WHERE templates.Date_Effective_From = \"1993-10-07 02:33:04\" GROUP BY reference_template_types.Template_Type_Code  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Document_ID FROM Documents AS T1        EXCEPT SELECT T2.Document_ID FROM Documents AS T2 WHERE T2.Document_Description = \"h\"",
    "readable_query": "SELECT documents.Document_ID FROM Documents AS documents        EXCEPT SELECT documents.Document_ID FROM Documents AS documents WHERE documents.Document_Description = \"h\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Document_ID FROM Documents AS T1        EXCEPT SELECT T2.Document_ID FROM Documents AS T2 WHERE T2.Document_Name = \"Understanding DB\"",
    "readable_query": "SELECT documents.Document_ID FROM Documents AS documents        EXCEPT SELECT documents.Document_ID FROM Documents AS documents WHERE documents.Document_Name = \"Understanding DB\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Version_Number FROM Templates AS T1        EXCEPT SELECT T2.Version_Number FROM Templates AS T2 WHERE T2.Date_Effective_From = \"1996-02-04 11:27:24\"",
    "readable_query": "SELECT templates.Version_Number FROM Templates AS templates        EXCEPT SELECT templates.Version_Number FROM Templates AS templates WHERE templates.Date_Effective_From = \"1996-02-04 11:27:24\""
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Other_Details FROM Documents AS T1        EXCEPT SELECT T2.Other_Details FROM Documents AS T2 WHERE T2.Document_Name = \"Summer Show\"",
    "readable_query": "SELECT documents.Other_Details FROM Documents AS documents        EXCEPT SELECT documents.Other_Details FROM Documents AS documents WHERE documents.Document_Name = \"Summer Show\""
  },
  {
    "db_id": "poker_player",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Height FROM people AS T1 WHERE T1.Birth_Date = \"August 8, 1986\"",
    "readable_query": "SELECT people.Height FROM people AS people WHERE people.Birth_Date = \"August 8, 1986\""
  },
  {
    "db_id": "poker_player",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Nationality FROM people AS T1 WHERE T1.People_ID = 2",
    "readable_query": "SELECT people.Nationality FROM people AS people WHERE people.People_ID = 2"
  },
  {
    "db_id": "poker_player",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Height FROM people AS T1 WHERE T1.People_ID = 3",
    "readable_query": "SELECT people.Height FROM people AS people WHERE people.People_ID = 3"
  },
  {
    "db_id": "poker_player",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Name FROM people AS T1 WHERE T1.People_ID = 7",
    "readable_query": "SELECT people.Name FROM people AS people WHERE people.People_ID = 7"
  },
  {
    "db_id": "poker_player",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Height FROM people AS T1 WHERE T1.People_ID = 3",
    "readable_query": "SELECT people.Height FROM people AS people WHERE people.People_ID = 3"
  },
  {
    "db_id": "poker_player",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Birth_Date FROM people AS T1 WHERE T1.Name = \"Semen Poltavskiy\"",
    "readable_query": "SELECT people.Birth_Date FROM people AS people WHERE people.Name = \"Semen Poltavskiy\""
  },
  {
    "db_id": "poker_player",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Birth_Date FROM people AS T1 WHERE T1.People_ID = 6",
    "readable_query": "SELECT people.Birth_Date FROM people AS people WHERE people.People_ID = 6"
  },
  {
    "db_id": "poker_player",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1 WHERE T1.Earnings = 596462.0",
    "readable_query": "SELECT poker_player.Final_Table_Made FROM poker_player AS poker_player WHERE poker_player.Earnings = 596462.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Nationality FROM people AS T1 WHERE T1.Birth_Date = \"April 17, 1987\"",
    "readable_query": "SELECT people.Nationality FROM people AS people WHERE people.Birth_Date = \"April 17, 1987\""
  },
  {
    "db_id": "poker_player",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID = 7",
    "readable_query": "SELECT poker_player.Money_Rank FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.People_ID = 7"
  },
  {
    "db_id": "poker_player",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID = 2",
    "readable_query": "SELECT people.Birth_Date FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.People_ID = 2"
  },
  {
    "db_id": "poker_player",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name = \"Yevgeni Sivozhelez\"",
    "readable_query": "SELECT poker_player.Final_Table_Made FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.Name = \"Yevgeni Sivozhelez\""
  },
  {
    "db_id": "poker_player",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Money_Rank = 58.0",
    "readable_query": "SELECT people.Height FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Money_Rank = 58.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.People_ID, count(*) FROM people AS T1  GROUP BY T1.People_ID",
    "readable_query": "SELECT people.People_ID, count(*) FROM people AS people  GROUP BY people.People_ID"
  },
  {
    "db_id": "poker_player",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.People_ID, count(*) FROM poker_player AS T1  GROUP BY T1.People_ID",
    "readable_query": "SELECT poker_player.People_ID, count(*) FROM poker_player AS poker_player  GROUP BY poker_player.People_ID"
  },
  {
    "db_id": "poker_player",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Best_Finish, count(*) FROM poker_player AS T1  GROUP BY T1.Best_Finish",
    "readable_query": "SELECT poker_player.Best_Finish, count(*) FROM poker_player AS poker_player  GROUP BY poker_player.Best_Finish"
  },
  {
    "db_id": "poker_player",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Name, count(*) FROM people AS T1  GROUP BY T1.Name",
    "readable_query": "SELECT people.Name, count(*) FROM people AS people  GROUP BY people.Name"
  },
  {
    "db_id": "poker_player",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.People_ID, count(*) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID  GROUP BY T1.People_ID",
    "readable_query": "SELECT poker_player.People_ID, count(*) FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID  GROUP BY poker_player.People_ID"
  },
  {
    "db_id": "poker_player",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Nationality, count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID  GROUP BY T1.Nationality",
    "readable_query": "SELECT people.Nationality, count(*) FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID  GROUP BY people.Nationality"
  },
  {
    "db_id": "poker_player",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Nationality, count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID  GROUP BY T1.Nationality",
    "readable_query": "SELECT people.Nationality, count(*) FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID  GROUP BY people.Nationality"
  },
  {
    "db_id": "poker_player",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Poker_Player_ID, count(*) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID  GROUP BY T1.Poker_Player_ID",
    "readable_query": "SELECT poker_player.Poker_Player_ID, count(*) FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID  GROUP BY poker_player.Poker_Player_ID"
  },
  {
    "db_id": "poker_player",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Money_Rank, count(*) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID  GROUP BY T1.Money_Rank",
    "readable_query": "SELECT poker_player.Money_Rank, count(*) FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID  GROUP BY poker_player.Money_Rank"
  },
  {
    "db_id": "poker_player",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Money_Rank, count(*) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID  GROUP BY T1.Money_Rank",
    "readable_query": "SELECT poker_player.Money_Rank, count(*) FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID  GROUP BY poker_player.Money_Rank"
  },
  {
    "db_id": "poker_player",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Name, T1.Height FROM people AS T1",
    "readable_query": "SELECT people.Name, people.Height FROM people AS people"
  },
  {
    "db_id": "poker_player",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Nationality, T1.Name FROM people AS T1",
    "readable_query": "SELECT people.Nationality, people.Name FROM people AS people"
  },
  {
    "db_id": "poker_player",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Nationality, T1.People_ID FROM people AS T1",
    "readable_query": "SELECT people.Nationality, people.People_ID FROM people AS people"
  },
  {
    "db_id": "poker_player",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.People_ID, T1.Height FROM people AS T1",
    "readable_query": "SELECT people.People_ID, people.Height FROM people AS people"
  },
  {
    "db_id": "poker_player",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.People_ID, T1.Name FROM people AS T1",
    "readable_query": "SELECT people.People_ID, people.Name FROM people AS people"
  },
  {
    "db_id": "poker_player",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Final_Table_Made, T1.People_ID FROM poker_player AS T1",
    "readable_query": "SELECT poker_player.Final_Table_Made, poker_player.People_ID FROM poker_player AS poker_player"
  },
  {
    "db_id": "poker_player",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.People_ID, T1.Height FROM people AS T1",
    "readable_query": "SELECT people.People_ID, people.Height FROM people AS people"
  },
  {
    "db_id": "poker_player",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Earnings, T1.Final_Table_Made FROM poker_player AS T1",
    "readable_query": "SELECT poker_player.Earnings, poker_player.Final_Table_Made FROM poker_player AS poker_player"
  },
  {
    "db_id": "poker_player",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Final_Table_Made, T1.Money_Rank FROM poker_player AS T1",
    "readable_query": "SELECT poker_player.Final_Table_Made, poker_player.Money_Rank FROM poker_player AS poker_player"
  },
  {
    "db_id": "poker_player",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Height, T1.Nationality FROM people AS T1",
    "readable_query": "SELECT people.Height, people.Nationality FROM people AS people"
  },
  {
    "db_id": "poker_player",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Money_Rank, T2.Birth_Date FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID",
    "readable_query": "SELECT poker_player.Money_Rank, people.Birth_Date FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID"
  },
  {
    "db_id": "poker_player",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Height, T2.Earnings FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID",
    "readable_query": "SELECT people.Height, poker_player.Earnings FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID"
  },
  {
    "db_id": "poker_player",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Money_Rank, T2.Height FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID",
    "readable_query": "SELECT poker_player.Money_Rank, people.Height FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID"
  },
  {
    "db_id": "poker_player",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Birth_Date, T2.Final_Table_Made FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID",
    "readable_query": "SELECT people.Birth_Date, poker_player.Final_Table_Made FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID"
  },
  {
    "db_id": "poker_player",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Earnings, T2.Nationality FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID",
    "readable_query": "SELECT poker_player.Earnings, people.Nationality FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID"
  },
  {
    "db_id": "poker_player",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Nationality, T2.Final_Table_Made FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID",
    "readable_query": "SELECT people.Nationality, poker_player.Final_Table_Made FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID"
  },
  {
    "db_id": "poker_player",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Poker_Player_ID, T2.Height FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID",
    "readable_query": "SELECT poker_player.Poker_Player_ID, people.Height FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID"
  },
  {
    "db_id": "poker_player",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.People_ID, T2.Birth_Date FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID",
    "readable_query": "SELECT poker_player.People_ID, people.Birth_Date FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID"
  },
  {
    "db_id": "poker_player",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Nationality, T1.Name FROM people AS T1 WHERE T1.People_ID = 7",
    "readable_query": "SELECT people.Nationality, people.Name FROM people AS people WHERE people.People_ID = 7"
  },
  {
    "db_id": "poker_player",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Birth_Date, T1.Nationality FROM people AS T1 WHERE T1.Height = 187.0",
    "readable_query": "SELECT people.Birth_Date, people.Nationality FROM people AS people WHERE people.Height = 187.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.People_ID FROM poker_player AS T1  GROUP BY T1.People_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT poker_player.People_ID FROM poker_player AS poker_player  GROUP BY poker_player.People_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Height FROM people AS T1  GROUP BY T1.Height  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT people.Height FROM people AS people  GROUP BY people.Height  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Name FROM people AS T1  GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT people.Name FROM people AS people  GROUP BY people.Name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1  GROUP BY T1.Final_Table_Made  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT poker_player.Final_Table_Made FROM poker_player AS poker_player  GROUP BY poker_player.Final_Table_Made  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1  GROUP BY T1.Money_Rank  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT poker_player.Money_Rank FROM poker_player AS poker_player  GROUP BY poker_player.Money_Rank  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Best_Finish FROM poker_player AS T1  GROUP BY T1.Best_Finish  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT poker_player.Best_Finish FROM poker_player AS poker_player  GROUP BY poker_player.Best_Finish  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM poker_player AS T1 WHERE T1.Money_Rank = 141.0",
    "readable_query": "SELECT count(*) FROM poker_player AS poker_player WHERE poker_player.Money_Rank = 141.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM poker_player AS T1 WHERE T1.Money_Rank = 68.0",
    "readable_query": "SELECT count(*) FROM poker_player AS poker_player WHERE poker_player.Money_Rank = 68.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM poker_player AS T1 WHERE T1.Poker_Player_ID = 1",
    "readable_query": "SELECT count(*) FROM poker_player AS poker_player WHERE poker_player.Poker_Player_ID = 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM poker_player AS T1 WHERE T1.Poker_Player_ID = 2",
    "readable_query": "SELECT count(*) FROM poker_player AS poker_player WHERE poker_player.Poker_Player_ID = 2"
  },
  {
    "db_id": "poker_player",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM poker_player AS T1 WHERE T1.Best_Finish = 2.0",
    "readable_query": "SELECT count(*) FROM poker_player AS poker_player WHERE poker_player.Best_Finish = 2.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM poker_player AS T1 WHERE T1.Final_Table_Made = 19.0",
    "readable_query": "SELECT count(*) FROM poker_player AS poker_player WHERE poker_player.Final_Table_Made = 19.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1    ORDER BY T1.People_ID DESC LIMIT 1",
    "readable_query": "SELECT poker_player.Poker_Player_ID FROM poker_player AS poker_player    ORDER BY poker_player.People_ID DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Earnings FROM poker_player AS T1    ORDER BY T1.Best_Finish DESC LIMIT 1",
    "readable_query": "SELECT poker_player.Earnings FROM poker_player AS poker_player    ORDER BY poker_player.Best_Finish DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1    ORDER BY T1.Earnings DESC LIMIT 1",
    "readable_query": "SELECT poker_player.Poker_Player_ID FROM poker_player AS poker_player    ORDER BY poker_player.Earnings DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.People_ID FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Money_Rank DESC LIMIT 1",
    "readable_query": "SELECT people.People_ID FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID    ORDER BY poker_player.Money_Rank DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.People_ID DESC LIMIT 1",
    "readable_query": "SELECT people.Height FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID    ORDER BY poker_player.People_ID DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Earnings FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.People_ID DESC LIMIT 1",
    "readable_query": "SELECT poker_player.Earnings FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID    ORDER BY people.People_ID DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.People_ID DESC LIMIT 1",
    "readable_query": "SELECT poker_player.Money_Rank FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID    ORDER BY people.People_ID DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.People_ID DESC LIMIT 1",
    "readable_query": "SELECT poker_player.Poker_Player_ID FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID    ORDER BY people.People_ID DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Earnings ASC LIMIT 1",
    "readable_query": "SELECT people.Height FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID    ORDER BY poker_player.Earnings ASC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Money_Rank ASC LIMIT 1",
    "readable_query": "SELECT people.Nationality FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID    ORDER BY poker_player.Money_Rank ASC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Best_Finish FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.People_ID ASC LIMIT 1",
    "readable_query": "SELECT poker_player.Best_Finish FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID    ORDER BY people.People_ID ASC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Best_Finish ASC LIMIT 1",
    "readable_query": "SELECT people.Nationality FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID    ORDER BY poker_player.Best_Finish ASC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Poker_Player_ID ASC LIMIT 1",
    "readable_query": "SELECT people.Birth_Date FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID    ORDER BY poker_player.Poker_Player_ID ASC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Best_Finish, T1.People_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Height DESC LIMIT 1",
    "readable_query": "SELECT poker_player.Best_Finish, poker_player.People_ID FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID    ORDER BY people.Height DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.People_ID, T1.Best_Finish FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Height DESC LIMIT 1",
    "readable_query": "SELECT poker_player.People_ID, poker_player.Best_Finish FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID    ORDER BY people.Height DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Height, T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.People_ID DESC LIMIT 1",
    "readable_query": "SELECT people.Height, people.Name FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID    ORDER BY poker_player.People_ID DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.People_ID, T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Best_Finish DESC LIMIT 1",
    "readable_query": "SELECT people.People_ID, people.Birth_Date FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID    ORDER BY poker_player.Best_Finish DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Final_Table_Made, T1.Earnings FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Height DESC LIMIT 1",
    "readable_query": "SELECT poker_player.Final_Table_Made, poker_player.Earnings FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID    ORDER BY people.Height DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Money_Rank, T1.People_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Height DESC LIMIT 1",
    "readable_query": "SELECT poker_player.Money_Rank, poker_player.People_ID FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID    ORDER BY people.Height DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM people AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  people.Name) FROM people AS people"
  },
  {
    "db_id": "poker_player",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM people AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  people.Name) FROM people AS people"
  },
  {
    "db_id": "poker_player",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Height) FROM people AS T1",
    "readable_query": "SELECT avg( people.Height) FROM people AS people"
  },
  {
    "db_id": "poker_player",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Poker_Player_ID) FROM poker_player AS T1",
    "readable_query": "SELECT avg( poker_player.Poker_Player_ID) FROM poker_player AS poker_player"
  },
  {
    "db_id": "poker_player",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Best_Finish) FROM poker_player AS T1",
    "readable_query": "SELECT avg( poker_player.Best_Finish) FROM poker_player AS poker_player"
  },
  {
    "db_id": "poker_player",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Earnings) FROM poker_player AS T1",
    "readable_query": "SELECT avg( poker_player.Earnings) FROM poker_player AS poker_player"
  },
  {
    "db_id": "poker_player",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Money_Rank) FROM poker_player AS T1",
    "readable_query": "SELECT avg( poker_player.Money_Rank) FROM poker_player AS poker_player"
  },
  {
    "db_id": "poker_player",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.People_ID) FROM people AS T1",
    "readable_query": "SELECT avg( people.People_ID) FROM people AS people"
  },
  {
    "db_id": "poker_player",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Nationality FROM people AS T1",
    "readable_query": "SELECT people.Nationality FROM people AS people"
  },
  {
    "db_id": "poker_player",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Birth_Date FROM people AS T1",
    "readable_query": "SELECT people.Birth_Date FROM people AS people"
  },
  {
    "db_id": "poker_player",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.People_ID FROM poker_player AS T1",
    "readable_query": "SELECT poker_player.People_ID FROM poker_player AS poker_player"
  },
  {
    "db_id": "poker_player",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1",
    "readable_query": "SELECT poker_player.Final_Table_Made FROM poker_player AS poker_player"
  },
  {
    "db_id": "poker_player",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1",
    "readable_query": "SELECT poker_player.Final_Table_Made FROM poker_player AS poker_player"
  },
  {
    "db_id": "poker_player",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Earnings FROM poker_player AS T1",
    "readable_query": "SELECT poker_player.Earnings FROM poker_player AS poker_player"
  },
  {
    "db_id": "poker_player",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Name FROM people AS T1",
    "readable_query": "SELECT DISTINCT people.Name FROM people AS people"
  },
  {
    "db_id": "poker_player",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Birth_Date FROM people AS T1",
    "readable_query": "SELECT DISTINCT people.Birth_Date FROM people AS people"
  },
  {
    "db_id": "poker_player",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Final_Table_Made FROM poker_player AS T1",
    "readable_query": "SELECT DISTINCT poker_player.Final_Table_Made FROM poker_player AS poker_player"
  },
  {
    "db_id": "poker_player",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Nationality FROM people AS T1",
    "readable_query": "SELECT DISTINCT people.Nationality FROM people AS people"
  },
  {
    "db_id": "poker_player",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.People_ID FROM people AS T1",
    "readable_query": "SELECT DISTINCT people.People_ID FROM people AS people"
  },
  {
    "db_id": "poker_player",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Nationality FROM people AS T1     ORDER BY T1.Height ASC",
    "readable_query": "SELECT people.Nationality FROM people AS people     ORDER BY people.Height ASC"
  },
  {
    "db_id": "poker_player",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Earnings FROM poker_player AS T1     ORDER BY T1.Best_Finish ASC",
    "readable_query": "SELECT poker_player.Earnings FROM poker_player AS poker_player     ORDER BY poker_player.Best_Finish ASC"
  },
  {
    "db_id": "poker_player",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Height FROM people AS T1     ORDER BY T1.People_ID ASC",
    "readable_query": "SELECT people.Height FROM people AS people     ORDER BY people.People_ID ASC"
  },
  {
    "db_id": "poker_player",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Height FROM people AS T1     ORDER BY T1.People_ID ASC",
    "readable_query": "SELECT people.Height FROM people AS people     ORDER BY people.People_ID ASC"
  },
  {
    "db_id": "poker_player",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1     ORDER BY T1.People_ID ASC",
    "readable_query": "SELECT poker_player.Money_Rank FROM poker_player AS poker_player     ORDER BY poker_player.People_ID ASC"
  },
  {
    "db_id": "poker_player",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1     ORDER BY T1.Final_Table_Made ASC",
    "readable_query": "SELECT poker_player.Money_Rank FROM poker_player AS poker_player     ORDER BY poker_player.Final_Table_Made ASC"
  },
  {
    "db_id": "poker_player",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Earnings FROM poker_player AS T1     ORDER BY T1.Poker_Player_ID ASC",
    "readable_query": "SELECT poker_player.Earnings FROM poker_player AS poker_player     ORDER BY poker_player.Poker_Player_ID ASC"
  },
  {
    "db_id": "poker_player",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.People_ID FROM poker_player AS T1     ORDER BY T1.Money_Rank ASC",
    "readable_query": "SELECT poker_player.People_ID FROM poker_player AS poker_player     ORDER BY poker_player.Money_Rank ASC"
  },
  {
    "db_id": "poker_player",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1     ORDER BY T1.Money_Rank ASC",
    "readable_query": "SELECT poker_player.Final_Table_Made FROM poker_player AS poker_player     ORDER BY poker_player.Money_Rank ASC"
  },
  {
    "db_id": "poker_player",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Best_Finish FROM poker_player AS T1     ORDER BY T1.Money_Rank ASC",
    "readable_query": "SELECT poker_player.Best_Finish FROM poker_player AS poker_player     ORDER BY poker_player.Money_Rank ASC"
  },
  {
    "db_id": "poker_player",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.People_ID FROM poker_player AS T1     ORDER BY T1.Best_Finish DESC",
    "readable_query": "SELECT poker_player.People_ID FROM poker_player AS poker_player     ORDER BY poker_player.Best_Finish DESC"
  },
  {
    "db_id": "poker_player",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.People_ID FROM poker_player AS T1     ORDER BY T1.Money_Rank DESC",
    "readable_query": "SELECT poker_player.People_ID FROM poker_player AS poker_player     ORDER BY poker_player.Money_Rank DESC"
  },
  {
    "db_id": "poker_player",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1     ORDER BY T1.Best_Finish DESC",
    "readable_query": "SELECT poker_player.Money_Rank FROM poker_player AS poker_player     ORDER BY poker_player.Best_Finish DESC"
  },
  {
    "db_id": "poker_player",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Earnings FROM poker_player AS T1     ORDER BY T1.Poker_Player_ID DESC",
    "readable_query": "SELECT poker_player.Earnings FROM poker_player AS poker_player     ORDER BY poker_player.Poker_Player_ID DESC"
  },
  {
    "db_id": "poker_player",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Height FROM people AS T1     ORDER BY T1.People_ID DESC",
    "readable_query": "SELECT people.Height FROM people AS people     ORDER BY people.People_ID DESC"
  },
  {
    "db_id": "poker_player",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Best_Finish FROM poker_player AS T1     ORDER BY T1.People_ID DESC",
    "readable_query": "SELECT poker_player.Best_Finish FROM poker_player AS poker_player     ORDER BY poker_player.People_ID DESC"
  },
  {
    "db_id": "poker_player",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Poker_Player_ID, T1.Earnings FROM poker_player AS T1     ORDER BY T1.Earnings ASC",
    "readable_query": "SELECT poker_player.Poker_Player_ID, poker_player.Earnings FROM poker_player AS poker_player     ORDER BY poker_player.Earnings ASC"
  },
  {
    "db_id": "poker_player",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Birth_Date, T1.People_ID FROM people AS T1     ORDER BY T1.People_ID ASC",
    "readable_query": "SELECT people.Birth_Date, people.People_ID FROM people AS people     ORDER BY people.People_ID ASC"
  },
  {
    "db_id": "poker_player",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.People_ID, T1.Money_Rank FROM poker_player AS T1     ORDER BY T1.Money_Rank ASC",
    "readable_query": "SELECT poker_player.People_ID, poker_player.Money_Rank FROM poker_player AS poker_player     ORDER BY poker_player.Money_Rank ASC"
  },
  {
    "db_id": "poker_player",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name = \"Sergey Grankin\" or T2.Name = \"Yevgeni Sivozhelez\"",
    "readable_query": "SELECT poker_player.Final_Table_Made FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.Name = \"Sergey Grankin\" or people.Name = \"Yevgeni Sivozhelez\""
  },
  {
    "db_id": "poker_player",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Final_Table_Made = 10.0 or T2.Final_Table_Made = 19.0",
    "readable_query": "SELECT people.Birth_Date FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Final_Table_Made = 10.0 or poker_player.Final_Table_Made = 19.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID = 5 or T2.People_ID = 5",
    "readable_query": "SELECT poker_player.Final_Table_Made FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.People_ID = 5 or people.People_ID = 5"
  },
  {
    "db_id": "poker_player",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name = \"Maksim Botin\" or T2.Name = \"Aleksey Ostapenko\"",
    "readable_query": "SELECT poker_player.Final_Table_Made FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.Name = \"Maksim Botin\" or people.Name = \"Aleksey Ostapenko\""
  },
  {
    "db_id": "poker_player",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Money_Rank = 68.0 or T2.Money_Rank = 68.0",
    "readable_query": "SELECT people.Nationality FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Money_Rank = 68.0 or poker_player.Money_Rank = 68.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.People_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = 182.0 or T2.Height = 196.0",
    "readable_query": "SELECT poker_player.People_ID FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.Height = 182.0 or people.Height = 196.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Birth_Date = \"April 17, 1987\" or T2.Birth_Date = \"August 8, 1986\"",
    "readable_query": "SELECT poker_player.Poker_Player_ID FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.Birth_Date = \"April 17, 1987\" or people.Birth_Date = \"August 8, 1986\""
  },
  {
    "db_id": "poker_player",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name = \"Sergey Grankin\" or T2.Name = \"Semen Poltavskiy\"",
    "readable_query": "SELECT poker_player.Final_Table_Made FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.Name = \"Sergey Grankin\" or people.Name = \"Semen Poltavskiy\""
  },
  {
    "db_id": "poker_player",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Final_Table_Made = 21.0 or T2.Final_Table_Made = 26.0",
    "readable_query": "SELECT people.Nationality FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Final_Table_Made = 21.0 or poker_player.Final_Table_Made = 26.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Best_Finish = 3.0 or T2.Best_Finish = 1.0",
    "readable_query": "SELECT people.Nationality FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Best_Finish = 3.0 or poker_player.Best_Finish = 1.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.People_ID FROM people AS T1 WHERE T1.Nationality = \"Russia\" and T1.Height = 187.0",
    "readable_query": "SELECT people.People_ID FROM people AS people WHERE people.Nationality = \"Russia\" and people.Height = 187.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1 WHERE T1.Best_Finish = 2.0 and T1.Final_Table_Made = 26.0",
    "readable_query": "SELECT poker_player.Poker_Player_ID FROM poker_player AS poker_player WHERE poker_player.Best_Finish = 2.0 and poker_player.Final_Table_Made = 26.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.People_ID FROM people AS T1 WHERE T1.Nationality = \"Russia\" and T1.Height = 207.0",
    "readable_query": "SELECT people.People_ID FROM people AS people WHERE people.Nationality = \"Russia\" and people.Height = 207.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Best_Finish FROM poker_player AS T1 WHERE T1.People_ID = 6 and T1.Final_Table_Made = 21.0",
    "readable_query": "SELECT poker_player.Best_Finish FROM poker_player AS poker_player WHERE poker_player.People_ID = 6 and poker_player.Final_Table_Made = 21.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Best_Finish FROM poker_player AS T1 WHERE T1.Final_Table_Made = 26.0 and T1.Earnings = 189233.0",
    "readable_query": "SELECT poker_player.Best_Finish FROM poker_player AS poker_player WHERE poker_player.Final_Table_Made = 26.0 and poker_player.Earnings = 189233.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Earnings FROM poker_player AS T1 WHERE T1.Final_Table_Made = 42.0 and T1.People_ID = 7",
    "readable_query": "SELECT poker_player.Earnings FROM poker_player AS poker_player WHERE poker_player.Final_Table_Made = 42.0 and poker_player.People_ID = 7"
  },
  {
    "db_id": "poker_player",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Poker_Player_ID) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Money_Rank = 141.0 and T2.Nationality = \"Russia\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  poker_player.Poker_Player_ID) FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE poker_player.Money_Rank = 141.0 and people.Nationality = \"Russia\""
  },
  {
    "db_id": "poker_player",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Poker_Player_ID) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Best_Finish = 1.0 and T2.People_ID = 5",
    "readable_query": "SELECT DISTINCT count(DISTINCT  poker_player.Poker_Player_ID) FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE poker_player.Best_Finish = 1.0 and people.People_ID = 5"
  },
  {
    "db_id": "poker_player",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Poker_Player_ID) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Final_Table_Made = 26.0 and T2.People_ID = 5",
    "readable_query": "SELECT DISTINCT count(DISTINCT  poker_player.Poker_Player_ID) FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE poker_player.Final_Table_Made = 26.0 and people.People_ID = 5"
  },
  {
    "db_id": "poker_player",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Nationality) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Name = \"Semen Poltavskiy\" and T2.Money_Rank = 141.0",
    "readable_query": "SELECT DISTINCT count(DISTINCT  people.Nationality) FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE people.Name = \"Semen Poltavskiy\" and poker_player.Money_Rank = 141.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Money_Rank) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings = 596462.0 and T2.Nationality = \"Bulgaria\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  poker_player.Money_Rank) FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE poker_player.Earnings = 596462.0 and people.Nationality = \"Bulgaria\""
  },
  {
    "db_id": "poker_player",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Best_Finish) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings = 142800.0 and T2.Name = \"Aleksey Ostapenko\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  poker_player.Best_Finish) FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE poker_player.Earnings = 142800.0 and people.Name = \"Aleksey Ostapenko\""
  },
  {
    "db_id": "poker_player",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Earnings FROM poker_player AS T1 WHERE T1.Poker_Player_ID = 1 or T1.Final_Table_Made = 10.0",
    "readable_query": "SELECT poker_player.Earnings FROM poker_player AS poker_player WHERE poker_player.Poker_Player_ID = 1 or poker_player.Final_Table_Made = 10.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.People_ID FROM people AS T1 WHERE T1.Nationality = \"Russia\" or T1.Height = 193.0",
    "readable_query": "SELECT people.People_ID FROM people AS people WHERE people.Nationality = \"Russia\" or people.Height = 193.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Earnings FROM poker_player AS T1 WHERE T1.Money_Rank = 154.0 or T1.Poker_Player_ID = 5",
    "readable_query": "SELECT poker_player.Earnings FROM poker_player AS poker_player WHERE poker_player.Money_Rank = 154.0 or poker_player.Poker_Player_ID = 5"
  },
  {
    "db_id": "poker_player",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Name FROM people AS T1 WHERE T1.Birth_Date = \"August 8, 1986\" or T1.Height = 193.0",
    "readable_query": "SELECT people.Name FROM people AS people WHERE people.Birth_Date = \"August 8, 1986\" or people.Height = 193.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1 WHERE T1.Earnings = 476090.0 or T1.Poker_Player_ID = 1",
    "readable_query": "SELECT poker_player.Money_Rank FROM poker_player AS poker_player WHERE poker_player.Earnings = 476090.0 or poker_player.Poker_Player_ID = 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Best_Finish FROM poker_player AS T1 WHERE T1.People_ID = 2 or T1.Final_Table_Made = 10.0",
    "readable_query": "SELECT poker_player.Best_Finish FROM poker_player AS poker_player WHERE poker_player.People_ID = 2 or poker_player.Final_Table_Made = 10.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Birth_Date = \"July 14, 1983\" and T2.Height = 182.0",
    "readable_query": "SELECT count(*) FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.Birth_Date = \"July 14, 1983\" and people.Height = 182.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID = 1 and T2.Best_Finish = 1.0",
    "readable_query": "SELECT count(*) FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.People_ID = 1 and poker_player.Best_Finish = 1.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Final_Table_Made = 10.0 and T2.Earnings = 189233.0",
    "readable_query": "SELECT count(*) FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Final_Table_Made = 10.0 and poker_player.Earnings = 189233.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Best_Finish = 2.0 and T2.People_ID = 5",
    "readable_query": "SELECT count(*) FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Best_Finish = 2.0 and poker_player.People_ID = 5"
  },
  {
    "db_id": "poker_player",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Nationality = \"Bulgaria\" and T2.People_ID = 3",
    "readable_query": "SELECT count(*) FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.Nationality = \"Bulgaria\" and people.People_ID = 3"
  },
  {
    "db_id": "poker_player",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Height FROM people AS T1 WHERE T1.People_ID != 6",
    "readable_query": "SELECT people.Height FROM people AS people WHERE people.People_ID != 6"
  },
  {
    "db_id": "poker_player",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Name FROM people AS T1 WHERE T1.Height != 193.0",
    "readable_query": "SELECT people.Name FROM people AS people WHERE people.Height != 193.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Best_Finish FROM poker_player AS T1 WHERE T1.Money_Rank != 166.0",
    "readable_query": "SELECT poker_player.Best_Finish FROM poker_player AS poker_player WHERE poker_player.Money_Rank != 166.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height != 187.0",
    "readable_query": "SELECT poker_player.Final_Table_Made FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.Height != 187.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Best_Finish FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height != 194.0",
    "readable_query": "SELECT poker_player.Best_Finish FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.Height != 194.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Earnings FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Nationality != \"Russia\"",
    "readable_query": "SELECT poker_player.Earnings FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.Nationality != \"Russia\""
  },
  {
    "db_id": "poker_player",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.People_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height != 182.0",
    "readable_query": "SELECT poker_player.People_ID FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.Height != 182.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Money_Rank = 68.0",
    "readable_query": "SELECT DISTINCT people.Height FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Money_Rank = 68.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Earnings FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Nationality = \"Russia\"",
    "readable_query": "SELECT DISTINCT poker_player.Earnings FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.Nationality = \"Russia\""
  },
  {
    "db_id": "poker_player",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.People_ID FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Best_Finish = 2.0",
    "readable_query": "SELECT DISTINCT people.People_ID FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Best_Finish = 2.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.People_ID FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Final_Table_Made = 26.0",
    "readable_query": "SELECT DISTINCT people.People_ID FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Final_Table_Made = 26.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID = 6",
    "readable_query": "SELECT DISTINCT people.Nationality FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.People_ID = 6"
  },
  {
    "db_id": "poker_player",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Poker_Player_ID) FROM poker_player AS T1 WHERE T1.Final_Table_Made = 21.0",
    "readable_query": "SELECT DISTINCT count(DISTINCT  poker_player.Poker_Player_ID) FROM poker_player AS poker_player WHERE poker_player.Final_Table_Made = 21.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.People_ID) FROM people AS T1 WHERE T1.Name = \"Semen Poltavskiy\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  people.People_ID) FROM people AS people WHERE people.Name = \"Semen Poltavskiy\""
  },
  {
    "db_id": "poker_player",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Final_Table_Made) FROM poker_player AS T1 WHERE T1.Earnings = 104871.0",
    "readable_query": "SELECT DISTINCT count(DISTINCT  poker_player.Final_Table_Made) FROM poker_player AS poker_player WHERE poker_player.Earnings = 104871.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.People_ID) FROM people AS T1 WHERE T1.Nationality = \"Russia\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  people.People_ID) FROM people AS people WHERE people.Nationality = \"Russia\""
  },
  {
    "db_id": "poker_player",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Final_Table_Made) FROM poker_player AS T1 WHERE T1.Best_Finish = 1.0",
    "readable_query": "SELECT DISTINCT count(DISTINCT  poker_player.Final_Table_Made) FROM poker_player AS poker_player WHERE poker_player.Best_Finish = 1.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Height) FROM people AS T1 WHERE T1.Nationality = \"Russia\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  people.Height) FROM people AS people WHERE people.Nationality = \"Russia\""
  },
  {
    "db_id": "poker_player",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Birth_Date FROM people AS T1 WHERE T1.Height > 193.0",
    "readable_query": "SELECT people.Birth_Date FROM people AS people WHERE people.Height > 193.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Birth_Date FROM people AS T1 WHERE T1.People_ID > 3",
    "readable_query": "SELECT people.Birth_Date FROM people AS people WHERE people.People_ID > 3"
  },
  {
    "db_id": "poker_player",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.People_ID FROM poker_player AS T1 WHERE T1.Poker_Player_ID > 2",
    "readable_query": "SELECT poker_player.People_ID FROM poker_player AS poker_player WHERE poker_player.Poker_Player_ID > 2"
  },
  {
    "db_id": "poker_player",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID     ORDER BY T2.Poker_Player_ID ASC",
    "readable_query": "SELECT people.Birth_Date FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID     ORDER BY poker_player.Poker_Player_ID ASC"
  },
  {
    "db_id": "poker_player",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.People_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID     ORDER BY T2.Height ASC",
    "readable_query": "SELECT poker_player.People_ID FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID     ORDER BY people.Height ASC"
  },
  {
    "db_id": "poker_player",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID     ORDER BY T2.Money_Rank ASC",
    "readable_query": "SELECT people.Height FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID     ORDER BY poker_player.Money_Rank ASC"
  },
  {
    "db_id": "poker_player",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID     ORDER BY T2.Money_Rank ASC",
    "readable_query": "SELECT people.Birth_Date FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID     ORDER BY poker_player.Money_Rank ASC"
  },
  {
    "db_id": "poker_player",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Name FROM people AS T1 WHERE T1.Nationality = \"Russia\"     INTERSECT SELECT T2.Name FROM people AS T2 WHERE T2.Nationality = \"Russia\"",
    "readable_query": "SELECT people.Name FROM people AS people WHERE people.Nationality = \"Russia\"     INTERSECT SELECT people.Name FROM people AS people WHERE people.Nationality = \"Russia\""
  },
  {
    "db_id": "poker_player",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.People_ID FROM people AS T1 WHERE T1.Birth_Date = \"May 26, 1986\"     INTERSECT SELECT T2.People_ID FROM people AS T2 WHERE T2.Birth_Date = \"April 17, 1987\"",
    "readable_query": "SELECT people.People_ID FROM people AS people WHERE people.Birth_Date = \"May 26, 1986\"     INTERSECT SELECT people.People_ID FROM people AS people WHERE people.Birth_Date = \"April 17, 1987\""
  },
  {
    "db_id": "poker_player",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Height FROM people AS T1 WHERE T1.People_ID = 1     INTERSECT SELECT T2.Height FROM people AS T2 WHERE T2.People_ID = 3",
    "readable_query": "SELECT people.Height FROM people AS people WHERE people.People_ID = 1     INTERSECT SELECT people.Height FROM people AS people WHERE people.People_ID = 3"
  },
  {
    "db_id": "poker_player",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1 WHERE T1.Final_Table_Made = 19.0     INTERSECT SELECT T2.Money_Rank FROM poker_player AS T2 WHERE T2.Final_Table_Made = 21.0",
    "readable_query": "SELECT poker_player.Money_Rank FROM poker_player AS poker_player WHERE poker_player.Final_Table_Made = 19.0     INTERSECT SELECT poker_player.Money_Rank FROM poker_player AS poker_player WHERE poker_player.Final_Table_Made = 21.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1 WHERE T1.Poker_Player_ID = 2     INTERSECT SELECT T2.Final_Table_Made FROM poker_player AS T2 WHERE T2.Poker_Player_ID = 1",
    "readable_query": "SELECT poker_player.Final_Table_Made FROM poker_player AS poker_player WHERE poker_player.Poker_Player_ID = 2     INTERSECT SELECT poker_player.Final_Table_Made FROM poker_player AS poker_player WHERE poker_player.Poker_Player_ID = 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.People_ID) FROM people AS T1 WHERE T1.Height = 187.0",
    "readable_query": "SELECT avg( people.People_ID) FROM people AS people WHERE people.Height = 187.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Final_Table_Made) FROM poker_player AS T1 WHERE T1.Money_Rank = 154.0",
    "readable_query": "SELECT avg( poker_player.Final_Table_Made) FROM poker_player AS poker_player WHERE poker_player.Money_Rank = 154.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.People_ID) FROM people AS T1 WHERE T1.Nationality = \"Russia\"",
    "readable_query": "SELECT avg( people.People_ID) FROM people AS people WHERE people.Nationality = \"Russia\""
  },
  {
    "db_id": "poker_player",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.People_ID) FROM poker_player AS T1 WHERE T1.Final_Table_Made = 42.0",
    "readable_query": "SELECT avg( poker_player.People_ID) FROM poker_player AS poker_player WHERE poker_player.Final_Table_Made = 42.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Earnings) FROM poker_player AS T1 WHERE T1.Poker_Player_ID = 3",
    "readable_query": "SELECT avg( poker_player.Earnings) FROM poker_player AS poker_player WHERE poker_player.Poker_Player_ID = 3"
  },
  {
    "db_id": "poker_player",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Money_Rank) FROM poker_player AS T1 WHERE T1.Poker_Player_ID = 5",
    "readable_query": "SELECT avg( poker_player.Money_Rank) FROM poker_player AS poker_player WHERE poker_player.Poker_Player_ID = 5"
  },
  {
    "db_id": "poker_player",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.People_ID) FROM poker_player AS T1 WHERE T1.Poker_Player_ID = 5",
    "readable_query": "SELECT avg( poker_player.People_ID) FROM poker_player AS poker_player WHERE poker_player.Poker_Player_ID = 5"
  },
  {
    "db_id": "poker_player",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Best_Finish FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID = (SELECT max( T23.People_ID) FROM people AS T23)",
    "readable_query": "SELECT poker_player.Best_Finish FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.People_ID = (SELECT max( people.People_ID) FROM people AS people)"
  },
  {
    "db_id": "poker_player",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.People_ID FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poker_Player_ID = (SELECT max( T23.Poker_Player_ID) FROM poker_player AS T23)",
    "readable_query": "SELECT people.People_ID FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Poker_Player_ID = (SELECT max( poker_player.Poker_Player_ID) FROM poker_player AS poker_player)"
  },
  {
    "db_id": "poker_player",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Earnings FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID = (SELECT max( T23.People_ID) FROM people AS T23)",
    "readable_query": "SELECT poker_player.Earnings FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.People_ID = (SELECT max( people.People_ID) FROM people AS people)"
  },
  {
    "db_id": "poker_player",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Best_Finish FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT max( T23.Height) FROM people AS T23)",
    "readable_query": "SELECT poker_player.Best_Finish FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.Height = (SELECT max( people.Height) FROM people AS people)"
  },
  {
    "db_id": "poker_player",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poker_Player_ID = (SELECT max( T23.Poker_Player_ID) FROM poker_player AS T23)",
    "readable_query": "SELECT people.Birth_Date FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Poker_Player_ID = (SELECT max( poker_player.Poker_Player_ID) FROM poker_player AS poker_player)"
  },
  {
    "db_id": "poker_player",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Money_Rank = (SELECT max( T23.Money_Rank) FROM poker_player AS T23)",
    "readable_query": "SELECT people.Nationality FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Money_Rank = (SELECT max( poker_player.Money_Rank) FROM poker_player AS poker_player)"
  },
  {
    "db_id": "poker_player",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID = (SELECT max( T23.People_ID) FROM people AS T23)",
    "readable_query": "SELECT poker_player.Poker_Player_ID FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.People_ID = (SELECT max( people.People_ID) FROM people AS people)"
  },
  {
    "db_id": "poker_player",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID = 7 GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT people.Name FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.People_ID = 7 GROUP BY people.Name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.People_ID FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings = 189233.0 GROUP BY T1.People_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT people.People_ID FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Earnings = 189233.0 GROUP BY people.People_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Best_Finish FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = 196.0 GROUP BY T1.Best_Finish  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT poker_player.Best_Finish FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.Height = 196.0 GROUP BY poker_player.Best_Finish  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.People_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Nationality = \"Bulgaria\" GROUP BY T1.People_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT poker_player.People_ID FROM poker_player AS poker_player JOIN people AS people ON poker_player.People_ID = people.People_ID WHERE people.Nationality = \"Bulgaria\" GROUP BY poker_player.People_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poker_Player_ID = 1 GROUP BY T1.Height  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT people.Height FROM people AS people JOIN poker_player AS poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Poker_Player_ID = 1 GROUP BY people.Height  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "poker_player",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Birth_Date FROM people AS T1        EXCEPT SELECT T2.Birth_Date FROM people AS T2 WHERE T2.Name = \"Sergey Grankin\"",
    "readable_query": "SELECT people.Birth_Date FROM people AS people        EXCEPT SELECT people.Birth_Date FROM people AS people WHERE people.Name = \"Sergey Grankin\""
  },
  {
    "db_id": "poker_player",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Nationality FROM people AS T1        EXCEPT SELECT T2.Nationality FROM people AS T2 WHERE T2.People_ID = 4",
    "readable_query": "SELECT people.Nationality FROM people AS people        EXCEPT SELECT people.Nationality FROM people AS people WHERE people.People_ID = 4"
  },
  {
    "db_id": "poker_player",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1        EXCEPT SELECT T2.Poker_Player_ID FROM poker_player AS T2 WHERE T2.Best_Finish = 1.0",
    "readable_query": "SELECT poker_player.Poker_Player_ID FROM poker_player AS poker_player        EXCEPT SELECT poker_player.Poker_Player_ID FROM poker_player AS poker_player WHERE poker_player.Best_Finish = 1.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1        EXCEPT SELECT T2.Poker_Player_ID FROM poker_player AS T2 WHERE T2.Best_Finish = 3.0",
    "readable_query": "SELECT poker_player.Poker_Player_ID FROM poker_player AS poker_player        EXCEPT SELECT poker_player.Poker_Player_ID FROM poker_player AS poker_player WHERE poker_player.Best_Finish = 3.0"
  },
  {
    "db_id": "poker_player",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1        EXCEPT SELECT T2.Final_Table_Made FROM poker_player AS T2 WHERE T2.People_ID = 6",
    "readable_query": "SELECT poker_player.Final_Table_Made FROM poker_player AS poker_player        EXCEPT SELECT poker_player.Final_Table_Made FROM poker_player AS poker_player WHERE poker_player.People_ID = 6"
  },
  {
    "db_id": "poker_player",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.People_ID FROM people AS T1        EXCEPT SELECT T2.People_ID FROM people AS T2 WHERE T2.Birth_Date = \"April 17, 1987\"",
    "readable_query": "SELECT people.People_ID FROM people AS people        EXCEPT SELECT people.People_ID FROM people AS people WHERE people.Birth_Date = \"April 17, 1987\""
  },
  {
    "db_id": "pets_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.city_code FROM Student AS T1 WHERE T1.Age = 19",
    "readable_query": "SELECT student.city_code FROM Student AS student WHERE student.Age = 19"
  },
  {
    "db_id": "pets_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.city_code FROM Student AS T1 WHERE T1.LName = \"Epp\"",
    "readable_query": "SELECT student.city_code FROM Student AS student WHERE student.LName = \"Epp\""
  },
  {
    "db_id": "pets_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Sex FROM Student AS T1 WHERE T1.Advisor = 8722",
    "readable_query": "SELECT student.Sex FROM Student AS student WHERE student.Advisor = 8722"
  },
  {
    "db_id": "pets_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.LName FROM Student AS T1 WHERE T1.Fname = \"Linda\"",
    "readable_query": "SELECT student.LName FROM Student AS student WHERE student.Fname = \"Linda\""
  },
  {
    "db_id": "pets_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Age FROM Student AS T1 WHERE T1.StuID = 1008",
    "readable_query": "SELECT student.Age FROM Student AS student WHERE student.StuID = 1008"
  },
  {
    "db_id": "pets_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.weight FROM Pets AS T1 WHERE T1.PetType = \"dog\"",
    "readable_query": "SELECT pets.weight FROM Pets AS pets WHERE pets.PetType = \"dog\""
  },
  {
    "db_id": "pets_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.PetType FROM Pets AS T1 WHERE T1.pet_age = 3",
    "readable_query": "SELECT pets.PetType FROM Pets AS pets WHERE pets.pet_age = 3"
  },
  {
    "db_id": "pets_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Advisor FROM Student AS T1 WHERE T1.Fname = \"Jun\"",
    "readable_query": "SELECT student.Advisor FROM Student AS student WHERE student.Fname = \"Jun\""
  },
  {
    "db_id": "pets_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.PetID FROM Pets AS T1 WHERE T1.PetType = \"cat\"",
    "readable_query": "SELECT pets.PetID FROM Pets AS pets WHERE pets.PetType = \"cat\""
  },
  {
    "db_id": "pets_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.weight FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.StuID = 1002",
    "readable_query": "SELECT pets.weight FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID WHERE has_pet.StuID = 1002"
  },
  {
    "db_id": "pets_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.StuID, count(*) FROM Has_Pet AS T1  GROUP BY T1.StuID",
    "readable_query": "SELECT has_pet.StuID, count(*) FROM Has_Pet AS has_pet  GROUP BY has_pet.StuID"
  },
  {
    "db_id": "pets_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Major, count(*) FROM Student AS T1  GROUP BY T1.Major",
    "readable_query": "SELECT student.Major, count(*) FROM Student AS student  GROUP BY student.Major"
  },
  {
    "db_id": "pets_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.pet_age, count(*) FROM Pets AS T1  GROUP BY T1.pet_age",
    "readable_query": "SELECT pets.pet_age, count(*) FROM Pets AS pets  GROUP BY pets.pet_age"
  },
  {
    "db_id": "pets_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Sex, count(*) FROM Student AS T1  GROUP BY T1.Sex",
    "readable_query": "SELECT student.Sex, count(*) FROM Student AS student  GROUP BY student.Sex"
  },
  {
    "db_id": "pets_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Advisor, count(*) FROM Student AS T1  GROUP BY T1.Advisor",
    "readable_query": "SELECT student.Advisor, count(*) FROM Student AS student  GROUP BY student.Advisor"
  },
  {
    "db_id": "pets_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Advisor, count(*) FROM Student AS T1  GROUP BY T1.Advisor",
    "readable_query": "SELECT student.Advisor, count(*) FROM Student AS student  GROUP BY student.Advisor"
  },
  {
    "db_id": "pets_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Age, count(*) FROM Student AS T1  GROUP BY T1.Age",
    "readable_query": "SELECT student.Age, count(*) FROM Student AS student  GROUP BY student.Age"
  },
  {
    "db_id": "pets_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.StuID, count(*) FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID",
    "readable_query": "SELECT has_pet.StuID, count(*) FROM Has_Pet AS has_pet JOIN Student AS student ON has_pet.StuID = student.StuID  GROUP BY has_pet.StuID"
  },
  {
    "db_id": "pets_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Age, count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.Age",
    "readable_query": "SELECT student.Age, count(*) FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID  GROUP BY student.Age"
  },
  {
    "db_id": "pets_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Sex, count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.Sex",
    "readable_query": "SELECT student.Sex, count(*) FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID  GROUP BY student.Sex"
  },
  {
    "db_id": "pets_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Advisor, count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.Advisor",
    "readable_query": "SELECT student.Advisor, count(*) FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID  GROUP BY student.Advisor"
  },
  {
    "db_id": "pets_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.weight, count(*) FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID  GROUP BY T1.weight",
    "readable_query": "SELECT pets.weight, count(*) FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID  GROUP BY pets.weight"
  },
  {
    "db_id": "pets_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.city_code, count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.city_code",
    "readable_query": "SELECT student.city_code, count(*) FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID  GROUP BY student.city_code"
  },
  {
    "db_id": "pets_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Advisor, count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.Advisor",
    "readable_query": "SELECT student.Advisor, count(*) FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID  GROUP BY student.Advisor"
  },
  {
    "db_id": "pets_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.StuID, count(*) FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID  GROUP BY T1.StuID",
    "readable_query": "SELECT has_pet.StuID, count(*) FROM Has_Pet AS has_pet JOIN Pets AS pets ON has_pet.PetID = pets.PetID  GROUP BY has_pet.StuID"
  },
  {
    "db_id": "pets_1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Pets AS T1",
    "readable_query": "SELECT count(*) FROM Pets AS pets"
  },
  {
    "db_id": "pets_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Major, T1.Sex FROM Student AS T1",
    "readable_query": "SELECT student.Major, student.Sex FROM Student AS student"
  },
  {
    "db_id": "pets_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.pet_age, T1.PetID FROM Pets AS T1",
    "readable_query": "SELECT pets.pet_age, pets.PetID FROM Pets AS pets"
  },
  {
    "db_id": "pets_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.PetID, T1.pet_age FROM Pets AS T1",
    "readable_query": "SELECT pets.PetID, pets.pet_age FROM Pets AS pets"
  },
  {
    "db_id": "pets_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Age, T1.Advisor FROM Student AS T1",
    "readable_query": "SELECT student.Age, student.Advisor FROM Student AS student"
  },
  {
    "db_id": "pets_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.PetType, T1.weight FROM Pets AS T1",
    "readable_query": "SELECT pets.PetType, pets.weight FROM Pets AS pets"
  },
  {
    "db_id": "pets_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.PetID, T1.StuID FROM Has_Pet AS T1",
    "readable_query": "SELECT has_pet.PetID, has_pet.StuID FROM Has_Pet AS has_pet"
  },
  {
    "db_id": "pets_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Age, T1.LName FROM Student AS T1",
    "readable_query": "SELECT student.Age, student.LName FROM Student AS student"
  },
  {
    "db_id": "pets_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.city_code, T1.Age FROM Student AS T1",
    "readable_query": "SELECT student.city_code, student.Age FROM Student AS student"
  },
  {
    "db_id": "pets_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.StuID, T2.PetID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID",
    "readable_query": "SELECT has_pet.StuID, pets.PetID FROM Has_Pet AS has_pet JOIN Pets AS pets ON has_pet.PetID = pets.PetID"
  },
  {
    "db_id": "pets_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.weight, T2.PetID FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID",
    "readable_query": "SELECT pets.weight, has_pet.PetID FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID"
  },
  {
    "db_id": "pets_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.PetID, T2.Advisor FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID",
    "readable_query": "SELECT has_pet.PetID, student.Advisor FROM Has_Pet AS has_pet JOIN Student AS student ON has_pet.StuID = student.StuID"
  },
  {
    "db_id": "pets_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Sex, T1.Fname FROM Student AS T1 WHERE T1.LName = \"Rugh\"",
    "readable_query": "SELECT student.Sex, student.Fname FROM Student AS student WHERE student.LName = \"Rugh\""
  },
  {
    "db_id": "pets_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.PetType, T1.weight FROM Pets AS T1 WHERE T1.pet_age = 2",
    "readable_query": "SELECT pets.PetType, pets.weight FROM Pets AS pets WHERE pets.pet_age = 2"
  },
  {
    "db_id": "pets_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Age FROM Student AS T1  GROUP BY T1.Age  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT student.Age FROM Student AS student  GROUP BY student.Age  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.PetType FROM Pets AS T1  GROUP BY T1.PetType  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT pets.PetType FROM Pets AS pets  GROUP BY pets.PetType  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.PetType FROM Pets AS T1  GROUP BY T1.PetType  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT pets.PetType FROM Pets AS pets  GROUP BY pets.PetType  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.StuID FROM Has_Pet AS T1  GROUP BY T1.StuID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT has_pet.StuID FROM Has_Pet AS has_pet  GROUP BY has_pet.StuID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.city_code FROM Student AS T1  GROUP BY T1.city_code  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT student.city_code FROM Student AS student  GROUP BY student.city_code  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.StuID FROM Student AS T1  GROUP BY T1.StuID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT student.StuID FROM Student AS student  GROUP BY student.StuID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Student AS T1 WHERE T1.Age = 27",
    "readable_query": "SELECT count(*) FROM Student AS student WHERE student.Age = 27"
  },
  {
    "db_id": "pets_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Pets AS T1 WHERE T1.PetID = 2002",
    "readable_query": "SELECT count(*) FROM Pets AS pets WHERE pets.PetID = 2002"
  },
  {
    "db_id": "pets_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Has_Pet AS T1 WHERE T1.StuID = 1002",
    "readable_query": "SELECT count(*) FROM Has_Pet AS has_pet WHERE has_pet.StuID = 1002"
  },
  {
    "db_id": "pets_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Pets AS T1 WHERE T1.pet_age = 2",
    "readable_query": "SELECT count(*) FROM Pets AS pets WHERE pets.pet_age = 2"
  },
  {
    "db_id": "pets_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Pets AS T1 WHERE T1.PetType = \"dog\"",
    "readable_query": "SELECT count(*) FROM Pets AS pets WHERE pets.PetType = \"dog\""
  },
  {
    "db_id": "pets_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Pets AS T1 WHERE T1.weight = 13.4",
    "readable_query": "SELECT count(*) FROM Pets AS pets WHERE pets.weight = 13.4"
  },
  {
    "db_id": "pets_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Sex FROM Student AS T1    ORDER BY T1.Major DESC LIMIT 1",
    "readable_query": "SELECT student.Sex FROM Student AS student    ORDER BY student.Major DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.weight FROM Pets AS T1    ORDER BY T1.PetID DESC LIMIT 1",
    "readable_query": "SELECT pets.weight FROM Pets AS pets    ORDER BY pets.PetID DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.PetID FROM Has_Pet AS T1    ORDER BY T1.StuID DESC LIMIT 1",
    "readable_query": "SELECT has_pet.PetID FROM Has_Pet AS has_pet    ORDER BY has_pet.StuID DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.pet_age FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID    ORDER BY T2.PetID DESC LIMIT 1",
    "readable_query": "SELECT pets.pet_age FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID    ORDER BY has_pet.PetID DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID    ORDER BY T2.Advisor DESC LIMIT 1",
    "readable_query": "SELECT has_pet.StuID FROM Has_Pet AS has_pet JOIN Student AS student ON has_pet.StuID = student.StuID    ORDER BY student.Advisor DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID    ORDER BY T2.StuID DESC LIMIT 1",
    "readable_query": "SELECT student.Age FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID    ORDER BY has_pet.StuID DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID    ORDER BY T2.StuID ASC LIMIT 1",
    "readable_query": "SELECT student.Age FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID    ORDER BY has_pet.StuID ASC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID    ORDER BY T2.StuID ASC LIMIT 1",
    "readable_query": "SELECT student.Sex FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID    ORDER BY has_pet.StuID ASC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID    ORDER BY T2.Major ASC LIMIT 1",
    "readable_query": "SELECT has_pet.StuID FROM Has_Pet AS has_pet JOIN Student AS student ON has_pet.StuID = student.StuID    ORDER BY student.Major ASC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.PetID, T1.weight FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID    ORDER BY T2.StuID DESC LIMIT 1",
    "readable_query": "SELECT pets.PetID, pets.weight FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID    ORDER BY has_pet.StuID DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Major, T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID    ORDER BY T2.PetID DESC LIMIT 1",
    "readable_query": "SELECT student.Major, student.Age FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID    ORDER BY has_pet.PetID DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.PetType, T1.weight FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID    ORDER BY T2.PetID DESC LIMIT 1",
    "readable_query": "SELECT pets.PetType, pets.weight FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID    ORDER BY has_pet.PetID DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.PetID, T1.PetType FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID    ORDER BY T2.StuID DESC LIMIT 1",
    "readable_query": "SELECT pets.PetID, pets.PetType FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID    ORDER BY has_pet.StuID DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.PetType, T1.PetID FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID    ORDER BY T2.StuID DESC LIMIT 1",
    "readable_query": "SELECT pets.PetType, pets.PetID FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID    ORDER BY has_pet.StuID DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Major, T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID    ORDER BY T2.StuID DESC LIMIT 1",
    "readable_query": "SELECT student.Major, student.LName FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID    ORDER BY has_pet.StuID DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.weight, T1.PetID FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID    ORDER BY T2.StuID DESC LIMIT 1",
    "readable_query": "SELECT pets.weight, pets.PetID FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID    ORDER BY has_pet.StuID DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Sex, T1.StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID    ORDER BY T2.PetID DESC LIMIT 1",
    "readable_query": "SELECT student.Sex, student.StuID FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID    ORDER BY has_pet.PetID DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Age) FROM Student AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  student.Age) FROM Student AS student"
  },
  {
    "db_id": "pets_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Major) FROM Student AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  student.Major) FROM Student AS student"
  },
  {
    "db_id": "pets_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.PetType) FROM Pets AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  pets.PetType) FROM Pets AS pets"
  },
  {
    "db_id": "pets_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.pet_age) FROM Pets AS T1",
    "readable_query": "SELECT avg( pets.pet_age) FROM Pets AS pets"
  },
  {
    "db_id": "pets_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.weight) FROM Pets AS T1",
    "readable_query": "SELECT avg( pets.weight) FROM Pets AS pets"
  },
  {
    "db_id": "pets_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.PetID) FROM Has_Pet AS T1",
    "readable_query": "SELECT avg( has_pet.PetID) FROM Has_Pet AS has_pet"
  },
  {
    "db_id": "pets_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.PetType FROM Pets AS T1",
    "readable_query": "SELECT pets.PetType FROM Pets AS pets"
  },
  {
    "db_id": "pets_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.PetID FROM Has_Pet AS T1",
    "readable_query": "SELECT has_pet.PetID FROM Has_Pet AS has_pet"
  },
  {
    "db_id": "pets_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Fname FROM Student AS T1",
    "readable_query": "SELECT student.Fname FROM Student AS student"
  },
  {
    "db_id": "pets_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Fname FROM Student AS T1",
    "readable_query": "SELECT student.Fname FROM Student AS student"
  },
  {
    "db_id": "pets_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.LName FROM Student AS T1",
    "readable_query": "SELECT student.LName FROM Student AS student"
  },
  {
    "db_id": "pets_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.StuID FROM Has_Pet AS T1",
    "readable_query": "SELECT has_pet.StuID FROM Has_Pet AS has_pet"
  },
  {
    "db_id": "pets_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Sex FROM Student AS T1",
    "readable_query": "SELECT student.Sex FROM Student AS student"
  },
  {
    "db_id": "pets_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.weight FROM Pets AS T1",
    "readable_query": "SELECT DISTINCT pets.weight FROM Pets AS pets"
  },
  {
    "db_id": "pets_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Fname FROM Student AS T1",
    "readable_query": "SELECT DISTINCT student.Fname FROM Student AS student"
  },
  {
    "db_id": "pets_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.LName FROM Student AS T1",
    "readable_query": "SELECT DISTINCT student.LName FROM Student AS student"
  },
  {
    "db_id": "pets_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.StuID FROM Has_Pet AS T1",
    "readable_query": "SELECT DISTINCT has_pet.StuID FROM Has_Pet AS has_pet"
  },
  {
    "db_id": "pets_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Major FROM Student AS T1",
    "readable_query": "SELECT DISTINCT student.Major FROM Student AS student"
  },
  {
    "db_id": "pets_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.pet_age FROM Pets AS T1",
    "readable_query": "SELECT DISTINCT pets.pet_age FROM Pets AS pets"
  },
  {
    "db_id": "pets_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.PetType FROM Pets AS T1",
    "readable_query": "SELECT DISTINCT pets.PetType FROM Pets AS pets"
  },
  {
    "db_id": "pets_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Age FROM Student AS T1",
    "readable_query": "SELECT DISTINCT student.Age FROM Student AS student"
  },
  {
    "db_id": "pets_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.PetType FROM Pets AS T1     ORDER BY T1.PetID ASC",
    "readable_query": "SELECT pets.PetType FROM Pets AS pets     ORDER BY pets.PetID ASC"
  },
  {
    "db_id": "pets_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.StuID FROM Has_Pet AS T1     ORDER BY T1.PetID DESC",
    "readable_query": "SELECT has_pet.StuID FROM Has_Pet AS has_pet     ORDER BY has_pet.PetID DESC"
  },
  {
    "db_id": "pets_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.PetType FROM Pets AS T1     ORDER BY T1.weight DESC",
    "readable_query": "SELECT pets.PetType FROM Pets AS pets     ORDER BY pets.weight DESC"
  },
  {
    "db_id": "pets_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.pet_age FROM Pets AS T1     ORDER BY T1.weight DESC",
    "readable_query": "SELECT pets.pet_age FROM Pets AS pets     ORDER BY pets.weight DESC"
  },
  {
    "db_id": "pets_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Sex FROM Student AS T1     ORDER BY T1.Advisor DESC",
    "readable_query": "SELECT student.Sex FROM Student AS student     ORDER BY student.Advisor DESC"
  },
  {
    "db_id": "pets_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.PetID FROM Pets AS T1     ORDER BY T1.weight DESC",
    "readable_query": "SELECT pets.PetID FROM Pets AS pets     ORDER BY pets.weight DESC"
  },
  {
    "db_id": "pets_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.pet_age FROM Pets AS T1     ORDER BY T1.PetID DESC",
    "readable_query": "SELECT pets.pet_age FROM Pets AS pets     ORDER BY pets.PetID DESC"
  },
  {
    "db_id": "pets_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.PetID, T1.pet_age FROM Pets AS T1     ORDER BY T1.pet_age ASC",
    "readable_query": "SELECT pets.PetID, pets.pet_age FROM Pets AS pets     ORDER BY pets.pet_age ASC"
  },
  {
    "db_id": "pets_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.StuID, T1.PetID FROM Has_Pet AS T1     ORDER BY T1.PetID ASC",
    "readable_query": "SELECT has_pet.StuID, has_pet.PetID FROM Has_Pet AS has_pet     ORDER BY has_pet.PetID ASC"
  },
  {
    "db_id": "pets_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.PetID, T1.StuID FROM Has_Pet AS T1     ORDER BY T1.StuID ASC",
    "readable_query": "SELECT has_pet.PetID, has_pet.StuID FROM Has_Pet AS has_pet     ORDER BY has_pet.StuID ASC"
  },
  {
    "db_id": "pets_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Advisor, T1.city_code FROM Student AS T1     ORDER BY T1.city_code ASC",
    "readable_query": "SELECT student.Advisor, student.city_code FROM Student AS student     ORDER BY student.city_code ASC"
  },
  {
    "db_id": "pets_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Fname, T1.Sex FROM Student AS T1     ORDER BY T1.Sex ASC",
    "readable_query": "SELECT student.Fname, student.Sex FROM Student AS student     ORDER BY student.Sex ASC"
  },
  {
    "db_id": "pets_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.weight, T1.pet_age FROM Pets AS T1     ORDER BY T1.pet_age ASC",
    "readable_query": "SELECT pets.weight, pets.pet_age FROM Pets AS pets     ORDER BY pets.pet_age ASC"
  },
  {
    "db_id": "pets_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T2.PetID = 2001 and T3.PetType = \"cat\"",
    "readable_query": "SELECT student.Age FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID JOIN Pets AS pets ON has_pet.PetID = pets.PetID WHERE has_pet.PetID = 2001 and pets.PetType = \"cat\""
  },
  {
    "db_id": "pets_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.PetID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T2.PetType = \"cat\" and T3.Advisor = 9172",
    "readable_query": "SELECT has_pet.PetID FROM Has_Pet AS has_pet JOIN Pets AS pets ON has_pet.PetID = pets.PetID JOIN Student AS student ON has_pet.StuID = student.StuID WHERE pets.PetType = \"cat\" and student.Advisor = 9172"
  },
  {
    "db_id": "pets_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.PetType FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T2.PetID = 2003 and T3.StuID = 1015",
    "readable_query": "SELECT pets.PetType FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID JOIN Student AS student ON has_pet.StuID = student.StuID WHERE has_pet.PetID = 2003 and student.StuID = 1015"
  },
  {
    "db_id": "pets_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.weight FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.PetID = 2002 or T2.PetID = 2002",
    "readable_query": "SELECT pets.weight FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID WHERE has_pet.PetID = 2002 or has_pet.PetID = 2002"
  },
  {
    "db_id": "pets_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID = 2002 or T2.PetID = 2001",
    "readable_query": "SELECT student.StuID FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID WHERE has_pet.PetID = 2002 or has_pet.PetID = 2001"
  },
  {
    "db_id": "pets_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.weight FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.StuID = 1002 or T2.StuID = 1001",
    "readable_query": "SELECT pets.weight FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID WHERE has_pet.StuID = 1002 or has_pet.StuID = 1001"
  },
  {
    "db_id": "pets_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID = 1002 or T2.StuID = 1002",
    "readable_query": "SELECT student.LName FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID WHERE has_pet.StuID = 1002 or has_pet.StuID = 1002"
  },
  {
    "db_id": "pets_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.city_code = \"PHL\" or T2.city_code = \"DAL\"",
    "readable_query": "SELECT has_pet.StuID FROM Has_Pet AS has_pet JOIN Student AS student ON has_pet.StuID = student.StuID WHERE student.city_code = \"PHL\" or student.city_code = \"DAL\""
  },
  {
    "db_id": "pets_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.PetID FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.StuID = 1002 or T2.StuID = 1001",
    "readable_query": "SELECT pets.PetID FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID WHERE has_pet.StuID = 1002 or has_pet.StuID = 1001"
  },
  {
    "db_id": "pets_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.PetID FROM Pets AS T1 WHERE T1.pet_age = 1 and T1.PetType = \"dog\"",
    "readable_query": "SELECT pets.PetID FROM Pets AS pets WHERE pets.pet_age = 1 and pets.PetType = \"dog\""
  },
  {
    "db_id": "pets_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.LName FROM Student AS T1 WHERE T1.Age = 20 and T1.StuID = 1007",
    "readable_query": "SELECT student.LName FROM Student AS student WHERE student.Age = 20 and student.StuID = 1007"
  },
  {
    "db_id": "pets_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.weight FROM Pets AS T1 WHERE T1.PetType = \"cat\" and T1.PetID = 2002",
    "readable_query": "SELECT pets.weight FROM Pets AS pets WHERE pets.PetType = \"cat\" and pets.PetID = 2002"
  },
  {
    "db_id": "pets_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.StuID) FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T1.PetID = 2002 and T2.weight = 9.3",
    "readable_query": "SELECT DISTINCT count(DISTINCT  has_pet.StuID) FROM Has_Pet AS has_pet JOIN Pets AS pets ON has_pet.PetID = pets.PetID WHERE has_pet.PetID = 2002 and pets.weight = 9.3"
  },
  {
    "db_id": "pets_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.StuID) FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T1.PetID = 2002 and T2.weight = 13.4",
    "readable_query": "SELECT DISTINCT count(DISTINCT  has_pet.StuID) FROM Has_Pet AS has_pet JOIN Pets AS pets ON has_pet.PetID = pets.PetID WHERE has_pet.PetID = 2002 and pets.weight = 13.4"
  },
  {
    "db_id": "pets_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.StuID) FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T1.PetID = 2001 and T2.pet_age = 3",
    "readable_query": "SELECT DISTINCT count(DISTINCT  has_pet.StuID) FROM Has_Pet AS has_pet JOIN Pets AS pets ON has_pet.PetID = pets.PetID WHERE has_pet.PetID = 2001 and pets.pet_age = 3"
  },
  {
    "db_id": "pets_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.city_code) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.Sex = \"F\" and T2.StuID = 1001",
    "readable_query": "SELECT DISTINCT count(DISTINCT  student.city_code) FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID WHERE student.Sex = \"F\" and has_pet.StuID = 1001"
  },
  {
    "db_id": "pets_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.PetType) FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T1.weight = 12.0 and T2.StuID = 1001",
    "readable_query": "SELECT DISTINCT count(DISTINCT  pets.PetType) FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID WHERE pets.weight = 12.0 and has_pet.StuID = 1001"
  },
  {
    "db_id": "pets_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.pet_age FROM Pets AS T1 WHERE T1.PetID = 2002 or T1.PetType = \"cat\"",
    "readable_query": "SELECT pets.pet_age FROM Pets AS pets WHERE pets.PetID = 2002 or pets.PetType = \"cat\""
  },
  {
    "db_id": "pets_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.pet_age FROM Pets AS T1 WHERE T1.PetType = \"dog\" or T1.PetID = 2002",
    "readable_query": "SELECT pets.pet_age FROM Pets AS pets WHERE pets.PetType = \"dog\" or pets.PetID = 2002"
  },
  {
    "db_id": "pets_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.pet_age FROM Pets AS T1 WHERE T1.PetType = \"dog\" or T1.weight = 12.0",
    "readable_query": "SELECT pets.pet_age FROM Pets AS pets WHERE pets.PetType = \"dog\" or pets.weight = 12.0"
  },
  {
    "db_id": "pets_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.pet_age FROM Pets AS T1 WHERE T1.weight = 9.3 or T1.PetID = 2003",
    "readable_query": "SELECT pets.pet_age FROM Pets AS pets WHERE pets.weight = 9.3 or pets.PetID = 2003"
  },
  {
    "db_id": "pets_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.StuID FROM Student AS T1 WHERE T1.Sex = \"F\" or T1.Major = 550",
    "readable_query": "SELECT student.StuID FROM Student AS student WHERE student.Sex = \"F\" or student.Major = 550"
  },
  {
    "db_id": "pets_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.PetType FROM Pets AS T1 WHERE T1.weight = 12.0 or T1.PetID = 2002",
    "readable_query": "SELECT pets.PetType FROM Pets AS pets WHERE pets.weight = 12.0 or pets.PetID = 2002"
  },
  {
    "db_id": "pets_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.weight FROM Pets AS T1 WHERE T1.PetType = \"dog\" or T1.pet_age = 2",
    "readable_query": "SELECT pets.weight FROM Pets AS pets WHERE pets.PetType = \"dog\" or pets.pet_age = 2"
  },
  {
    "db_id": "pets_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.StuID FROM Student AS T1 WHERE T1.Fname = \"Lisa\" or T1.LName = \"Goldman\"",
    "readable_query": "SELECT student.StuID FROM Student AS student WHERE student.Fname = \"Lisa\" or student.LName = \"Goldman\""
  },
  {
    "db_id": "pets_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.PetID FROM Pets AS T1 WHERE T1.PetType = \"dog\" or T1.pet_age = 2",
    "readable_query": "SELECT pets.PetID FROM Pets AS pets WHERE pets.PetType = \"dog\" or pets.pet_age = 2"
  },
  {
    "db_id": "pets_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Major FROM Student AS T1 WHERE T1.city_code = \"HKG\" or T1.LName = \"Norris\"",
    "readable_query": "SELECT student.Major FROM Student AS student WHERE student.city_code = \"HKG\" or student.LName = \"Norris\""
  },
  {
    "db_id": "pets_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID = 1002 and T2.PetID = 2003",
    "readable_query": "SELECT count(*) FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID WHERE has_pet.StuID = 1002 and has_pet.PetID = 2003"
  },
  {
    "db_id": "pets_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID = 2001 and T2.StuID = 1002",
    "readable_query": "SELECT count(*) FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID WHERE has_pet.PetID = 2001 and has_pet.StuID = 1002"
  },
  {
    "db_id": "pets_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID = 2001 and T2.StuID = 1001",
    "readable_query": "SELECT count(*) FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID WHERE has_pet.PetID = 2001 and has_pet.StuID = 1001"
  },
  {
    "db_id": "pets_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.PetID = 2001 and T2.StuID = 1001",
    "readable_query": "SELECT count(*) FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID WHERE has_pet.PetID = 2001 and has_pet.StuID = 1001"
  },
  {
    "db_id": "pets_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.StuID = 1001 and T2.PetID = 2002",
    "readable_query": "SELECT count(*) FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID WHERE has_pet.StuID = 1001 and has_pet.PetID = 2002"
  },
  {
    "db_id": "pets_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.weight FROM Pets AS T1 WHERE T1.PetType != \"cat\"",
    "readable_query": "SELECT pets.weight FROM Pets AS pets WHERE pets.PetType != \"cat\""
  },
  {
    "db_id": "pets_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.weight FROM Pets AS T1 WHERE T1.pet_age != 1",
    "readable_query": "SELECT pets.weight FROM Pets AS pets WHERE pets.pet_age != 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.PetID FROM Has_Pet AS T1 WHERE T1.StuID != 1001",
    "readable_query": "SELECT has_pet.PetID FROM Has_Pet AS has_pet WHERE has_pet.StuID != 1001"
  },
  {
    "db_id": "pets_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.pet_age FROM Pets AS T1 WHERE T1.PetType != \"cat\"",
    "readable_query": "SELECT pets.pet_age FROM Pets AS pets WHERE pets.PetType != \"cat\""
  },
  {
    "db_id": "pets_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 WHERE T1.PetID != 2001",
    "readable_query": "SELECT has_pet.StuID FROM Has_Pet AS has_pet WHERE has_pet.PetID != 2001"
  },
  {
    "db_id": "pets_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.PetID FROM Pets AS T1 WHERE T1.weight != 9.3",
    "readable_query": "SELECT pets.PetID FROM Pets AS pets WHERE pets.weight != 9.3"
  },
  {
    "db_id": "pets_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID != 2001",
    "readable_query": "SELECT student.Sex FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID WHERE has_pet.PetID != 2001"
  },
  {
    "db_id": "pets_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.PetType FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.StuID != 1002",
    "readable_query": "SELECT pets.PetType FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID WHERE has_pet.StuID != 1002"
  },
  {
    "db_id": "pets_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID != 2002",
    "readable_query": "SELECT student.LName FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID WHERE has_pet.PetID != 2002"
  },
  {
    "db_id": "pets_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Fname != \"Ian\"",
    "readable_query": "SELECT has_pet.StuID FROM Has_Pet AS has_pet JOIN Student AS student ON has_pet.StuID = student.StuID WHERE student.Fname != \"Ian\""
  },
  {
    "db_id": "pets_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.PetID FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Major != 600",
    "readable_query": "SELECT has_pet.PetID FROM Has_Pet AS has_pet JOIN Student AS student ON has_pet.StuID = student.StuID WHERE student.Major != 600"
  },
  {
    "db_id": "pets_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.weight FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.PetID = 2003",
    "readable_query": "SELECT DISTINCT pets.weight FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID WHERE has_pet.PetID = 2003"
  },
  {
    "db_id": "pets_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID = 2001",
    "readable_query": "SELECT DISTINCT student.Sex FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID WHERE has_pet.PetID = 2001"
  },
  {
    "db_id": "pets_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.weight FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.PetID = 2001",
    "readable_query": "SELECT DISTINCT pets.weight FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID WHERE has_pet.PetID = 2001"
  },
  {
    "db_id": "pets_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.PetID) FROM Pets AS T1 WHERE T1.pet_age = 1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  pets.PetID) FROM Pets AS pets WHERE pets.pet_age = 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Advisor) FROM Student AS T1 WHERE T1.Major = 540",
    "readable_query": "SELECT DISTINCT count(DISTINCT  student.Advisor) FROM Student AS student WHERE student.Major = 540"
  },
  {
    "db_id": "pets_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.PetID) FROM Has_Pet AS T1 WHERE T1.StuID = 1002",
    "readable_query": "SELECT DISTINCT count(DISTINCT  has_pet.PetID) FROM Has_Pet AS has_pet WHERE has_pet.StuID = 1002"
  },
  {
    "db_id": "pets_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.weight FROM Pets AS T1 WHERE T1.pet_age > 1",
    "readable_query": "SELECT pets.weight FROM Pets AS pets WHERE pets.pet_age > 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 WHERE T1.PetID > 2002",
    "readable_query": "SELECT has_pet.StuID FROM Has_Pet AS has_pet WHERE has_pet.PetID > 2002"
  },
  {
    "db_id": "pets_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 WHERE T1.PetID > 2002",
    "readable_query": "SELECT has_pet.StuID FROM Has_Pet AS has_pet WHERE has_pet.PetID > 2002"
  },
  {
    "db_id": "pets_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.PetID FROM Pets AS T1 WHERE T1.pet_age > 3",
    "readable_query": "SELECT pets.PetID FROM Pets AS pets WHERE pets.pet_age > 3"
  },
  {
    "db_id": "pets_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.PetID FROM Has_Pet AS T1 WHERE T1.StuID > 1002",
    "readable_query": "SELECT has_pet.PetID FROM Has_Pet AS has_pet WHERE has_pet.StuID > 1002"
  },
  {
    "db_id": "pets_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.PetType FROM Pets AS T1 WHERE T1.pet_age > 1",
    "readable_query": "SELECT pets.PetType FROM Pets AS pets WHERE pets.pet_age > 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.PetID FROM Pets AS T1 WHERE T1.weight > 9.3",
    "readable_query": "SELECT pets.PetID FROM Pets AS pets WHERE pets.weight > 9.3"
  },
  {
    "db_id": "pets_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.LName FROM Student AS T1 WHERE T1.Advisor > 7134",
    "readable_query": "SELECT student.LName FROM Student AS student WHERE student.Advisor > 7134"
  },
  {
    "db_id": "pets_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.PetID FROM Pets AS T1 WHERE T1.weight > 12.0",
    "readable_query": "SELECT pets.PetID FROM Pets AS pets WHERE pets.weight > 12.0"
  },
  {
    "db_id": "pets_1",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.weight, T2.StuID, T3.city_code FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID JOIN Student AS T3 ON T2.StuID = T3.StuID",
    "readable_query": "SELECT pets.weight, has_pet.StuID, student.city_code FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID JOIN Student AS student ON has_pet.StuID = student.StuID"
  },
  {
    "db_id": "pets_1",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.city_code, T2.StuID, T3.PetID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID",
    "readable_query": "SELECT student.city_code, has_pet.StuID, pets.PetID FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID JOIN Pets AS pets ON has_pet.PetID = pets.PetID"
  },
  {
    "db_id": "pets_1",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.weight, T2.StuID, T3.city_code FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID JOIN Student AS T3 ON T2.StuID = T3.StuID",
    "readable_query": "SELECT pets.weight, has_pet.StuID, student.city_code FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID JOIN Student AS student ON has_pet.StuID = student.StuID"
  },
  {
    "db_id": "pets_1",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.LName, T2.StuID, T3.PetID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID",
    "readable_query": "SELECT student.LName, has_pet.StuID, pets.PetID FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID JOIN Pets AS pets ON has_pet.PetID = pets.PetID"
  },
  {
    "db_id": "pets_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.weight FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID     ORDER BY T2.StuID ASC",
    "readable_query": "SELECT pets.weight FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID     ORDER BY has_pet.StuID ASC"
  },
  {
    "db_id": "pets_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID     ORDER BY T2.Major ASC",
    "readable_query": "SELECT has_pet.StuID FROM Has_Pet AS has_pet JOIN Student AS student ON has_pet.StuID = student.StuID     ORDER BY student.Major ASC"
  },
  {
    "db_id": "pets_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Advisor FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID     ORDER BY T2.StuID ASC",
    "readable_query": "SELECT student.Advisor FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID     ORDER BY has_pet.StuID ASC"
  },
  {
    "db_id": "pets_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID     ORDER BY T2.PetID ASC",
    "readable_query": "SELECT has_pet.StuID FROM Has_Pet AS has_pet JOIN Pets AS pets ON has_pet.PetID = pets.PetID     ORDER BY pets.PetID ASC"
  },
  {
    "db_id": "pets_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Fname FROM Student AS T1 WHERE T1.Major = 520     INTERSECT SELECT T2.Fname FROM Student AS T2 WHERE T2.Major = 100",
    "readable_query": "SELECT student.Fname FROM Student AS student WHERE student.Major = 520     INTERSECT SELECT student.Fname FROM Student AS student WHERE student.Major = 100"
  },
  {
    "db_id": "pets_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Sex FROM Student AS T1 WHERE T1.StuID = 1002     INTERSECT SELECT T2.Sex FROM Student AS T2 WHERE T2.StuID = 1011",
    "readable_query": "SELECT student.Sex FROM Student AS student WHERE student.StuID = 1002     INTERSECT SELECT student.Sex FROM Student AS student WHERE student.StuID = 1011"
  },
  {
    "db_id": "pets_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.pet_age FROM Pets AS T1 WHERE T1.weight = 12.0     INTERSECT SELECT T2.pet_age FROM Pets AS T2 WHERE T2.weight = 12.0",
    "readable_query": "SELECT pets.pet_age FROM Pets AS pets WHERE pets.weight = 12.0     INTERSECT SELECT pets.pet_age FROM Pets AS pets WHERE pets.weight = 12.0"
  },
  {
    "db_id": "pets_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.PetID FROM Has_Pet AS T1 WHERE T1.StuID = 1002     INTERSECT SELECT T2.PetID FROM Has_Pet AS T2 WHERE T2.StuID = 1001",
    "readable_query": "SELECT has_pet.PetID FROM Has_Pet AS has_pet WHERE has_pet.StuID = 1002     INTERSECT SELECT has_pet.PetID FROM Has_Pet AS has_pet WHERE has_pet.StuID = 1001"
  },
  {
    "db_id": "pets_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Advisor FROM Student AS T1 WHERE T1.StuID = 1035     INTERSECT SELECT T2.Advisor FROM Student AS T2 WHERE T2.StuID = 1035",
    "readable_query": "SELECT student.Advisor FROM Student AS student WHERE student.StuID = 1035     INTERSECT SELECT student.Advisor FROM Student AS student WHERE student.StuID = 1035"
  },
  {
    "db_id": "pets_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Fname FROM Student AS T1 WHERE T1.Advisor = 7712     INTERSECT SELECT T2.Fname FROM Student AS T2 WHERE T2.Advisor = 2192",
    "readable_query": "SELECT student.Fname FROM Student AS student WHERE student.Advisor = 7712     INTERSECT SELECT student.Fname FROM Student AS student WHERE student.Advisor = 2192"
  },
  {
    "db_id": "pets_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.weight FROM Pets AS T1 WHERE T1.PetType = \"cat\"     INTERSECT SELECT T2.weight FROM Pets AS T2 WHERE T2.PetType = \"cat\"",
    "readable_query": "SELECT pets.weight FROM Pets AS pets WHERE pets.PetType = \"cat\"     INTERSECT SELECT pets.weight FROM Pets AS pets WHERE pets.PetType = \"cat\""
  },
  {
    "db_id": "pets_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Age) FROM Student AS T1 WHERE T1.city_code = \"CHI\"",
    "readable_query": "SELECT avg( student.Age) FROM Student AS student WHERE student.city_code = \"CHI\""
  },
  {
    "db_id": "pets_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.StuID) FROM Student AS T1 WHERE T1.Major = 550",
    "readable_query": "SELECT avg( student.StuID) FROM Student AS student WHERE student.Major = 550"
  },
  {
    "db_id": "pets_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Advisor) FROM Student AS T1 WHERE T1.Fname = \"Shiela\"",
    "readable_query": "SELECT avg( student.Advisor) FROM Student AS student WHERE student.Fname = \"Shiela\""
  },
  {
    "db_id": "pets_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.StuID) FROM Has_Pet AS T1 WHERE T1.PetID = 2003",
    "readable_query": "SELECT avg( has_pet.StuID) FROM Has_Pet AS has_pet WHERE has_pet.PetID = 2003"
  },
  {
    "db_id": "pets_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.weight) FROM Pets AS T1 WHERE T1.PetType = \"cat\"",
    "readable_query": "SELECT avg( pets.weight) FROM Pets AS pets WHERE pets.PetType = \"cat\""
  },
  {
    "db_id": "pets_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.pet_age) FROM Pets AS T1 WHERE T1.weight = 13.4",
    "readable_query": "SELECT avg( pets.pet_age) FROM Pets AS pets WHERE pets.weight = 13.4"
  },
  {
    "db_id": "pets_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.StuID) FROM Has_Pet AS T1 WHERE T1.PetID = 2002",
    "readable_query": "SELECT avg( has_pet.StuID) FROM Has_Pet AS has_pet WHERE has_pet.PetID = 2002"
  },
  {
    "db_id": "pets_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.StuID) FROM Has_Pet AS T1 WHERE T1.PetID = 2002",
    "readable_query": "SELECT avg( has_pet.StuID) FROM Has_Pet AS has_pet WHERE has_pet.PetID = 2002"
  },
  {
    "db_id": "pets_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.PetType FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.PetID = (SELECT max( T23.PetID) FROM Has_Pet AS T23)",
    "readable_query": "SELECT pets.PetType FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID WHERE has_pet.PetID = (SELECT max( has_pet.PetID) FROM Has_Pet AS has_pet)"
  },
  {
    "db_id": "pets_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.pet_age FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.StuID = (SELECT max( T23.StuID) FROM Has_Pet AS T23)",
    "readable_query": "SELECT pets.pet_age FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID WHERE has_pet.StuID = (SELECT max( has_pet.StuID) FROM Has_Pet AS has_pet)"
  },
  {
    "db_id": "pets_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Advisor = (SELECT max( T23.Advisor) FROM Student AS T23)",
    "readable_query": "SELECT has_pet.StuID FROM Has_Pet AS has_pet JOIN Student AS student ON has_pet.StuID = student.StuID WHERE student.Advisor = (SELECT max( student.Advisor) FROM Student AS student)"
  },
  {
    "db_id": "pets_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.LName, T2.PetID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = \"cat\" and T2.StuID = 1001",
    "readable_query": "SELECT student.LName, has_pet.PetID FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID JOIN Pets AS pets ON has_pet.PetID = pets.PetID WHERE pets.PetType = \"cat\" and has_pet.StuID = 1001"
  },
  {
    "db_id": "pets_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.StuID, T2.Sex FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.weight = 13.4 and T2.Age = 21",
    "readable_query": "SELECT has_pet.StuID, student.Sex FROM Has_Pet AS has_pet JOIN Student AS student ON has_pet.StuID = student.StuID JOIN Pets AS pets ON has_pet.PetID = pets.PetID WHERE pets.weight = 13.4 and student.Age = 21"
  },
  {
    "db_id": "pets_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.PetID, T2.city_code FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.PetType = \"dog\" and T2.Age = 26",
    "readable_query": "SELECT has_pet.PetID, student.city_code FROM Has_Pet AS has_pet JOIN Student AS student ON has_pet.StuID = student.StuID JOIN Pets AS pets ON has_pet.PetID = pets.PetID WHERE pets.PetType = \"dog\" and student.Age = 26"
  },
  {
    "db_id": "pets_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.PetType, T2.PetID FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T3.city_code = \"DAL\" and T2.StuID = 1002",
    "readable_query": "SELECT pets.PetType, has_pet.PetID FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID JOIN Student AS student ON has_pet.StuID = student.StuID WHERE student.city_code = \"DAL\" and has_pet.StuID = 1002"
  },
  {
    "db_id": "pets_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.PetID, T2.Advisor FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.pet_age = 2 and T2.Fname = \"Charles\"",
    "readable_query": "SELECT has_pet.PetID, student.Advisor FROM Has_Pet AS has_pet JOIN Student AS student ON has_pet.StuID = student.StuID JOIN Pets AS pets ON has_pet.PetID = pets.PetID WHERE pets.pet_age = 2 and student.Fname = \"Charles\""
  },
  {
    "db_id": "pets_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.PetType, T2.PetID FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T3.LName = \"Prater\" and T2.StuID = 1001",
    "readable_query": "SELECT pets.PetType, has_pet.PetID FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID JOIN Student AS student ON has_pet.StuID = student.StuID WHERE student.LName = \"Prater\" and has_pet.StuID = 1001"
  },
  {
    "db_id": "pets_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.PetID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.PetType = \"dog\" GROUP BY T1.PetID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT has_pet.PetID FROM Has_Pet AS has_pet JOIN Pets AS pets ON has_pet.PetID = pets.PetID WHERE pets.PetType = \"dog\" GROUP BY has_pet.PetID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.city_code FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID = 2002 GROUP BY T1.city_code  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT student.city_code FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID WHERE has_pet.PetID = 2002 GROUP BY student.city_code  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID = 1002 GROUP BY T1.LName  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT student.LName FROM Student AS student JOIN Has_Pet AS has_pet ON student.StuID = has_pet.StuID WHERE has_pet.StuID = 1002 GROUP BY student.LName  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age = 22 GROUP BY T1.StuID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT has_pet.StuID FROM Has_Pet AS has_pet JOIN Student AS student ON has_pet.StuID = student.StuID WHERE student.Age = 22 GROUP BY has_pet.StuID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.PetID FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.StuID = 1001 GROUP BY T1.PetID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT pets.PetID FROM Pets AS pets JOIN Has_Pet AS has_pet ON pets.PetID = has_pet.PetID WHERE has_pet.StuID = 1001 GROUP BY pets.PetID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "pets_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Advisor FROM Student AS T1        EXCEPT SELECT T2.Advisor FROM Student AS T2 WHERE T2.Fname = \"Michael\"",
    "readable_query": "SELECT student.Advisor FROM Student AS student        EXCEPT SELECT student.Advisor FROM Student AS student WHERE student.Fname = \"Michael\""
  },
  {
    "db_id": "pets_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.StuID FROM Student AS T1        EXCEPT SELECT T2.StuID FROM Student AS T2 WHERE T2.Fname = \"Lisa\"",
    "readable_query": "SELECT student.StuID FROM Student AS student        EXCEPT SELECT student.StuID FROM Student AS student WHERE student.Fname = \"Lisa\""
  },
  {
    "db_id": "pets_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.PetID FROM Has_Pet AS T1        EXCEPT SELECT T2.PetID FROM Has_Pet AS T2 WHERE T2.StuID = 1001",
    "readable_query": "SELECT has_pet.PetID FROM Has_Pet AS has_pet        EXCEPT SELECT has_pet.PetID FROM Has_Pet AS has_pet WHERE has_pet.StuID = 1001"
  },
  {
    "db_id": "network_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.student_id FROM Likes AS T1 WHERE T1.liked_id = 1468",
    "readable_query": "SELECT likes.student_id FROM Likes AS likes WHERE likes.liked_id = 1468"
  },
  {
    "db_id": "network_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.friend_id FROM Friend AS T1 WHERE T1.student_id = 1689",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend WHERE friend.student_id = 1689"
  },
  {
    "db_id": "network_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.liked_id FROM Likes AS T1 WHERE T1.student_id = 1501",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes WHERE likes.student_id = 1501"
  },
  {
    "db_id": "network_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.grade FROM Highschooler AS T1 WHERE T1.ID = 1934",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler WHERE high_schooler.ID = 1934"
  },
  {
    "db_id": "network_1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.ID FROM Highschooler AS T1 WHERE T1.name = \"Cassandra\"",
    "readable_query": "SELECT high_schooler.ID FROM Highschooler AS high_schooler WHERE high_schooler.name = \"Cassandra\""
  },
  {
    "db_id": "network_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.ID = 1689",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID WHERE high_schooler.ID = 1689"
  },
  {
    "db_id": "network_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T2.friend_id = 1911",
    "readable_query": "SELECT high_schooler.name FROM Highschooler AS high_schooler JOIN Friend AS friend ON high_schooler.ID = friend.friend_id WHERE friend.friend_id = 1911"
  },
  {
    "db_id": "network_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.grade = 9",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID WHERE high_schooler.grade = 9"
  },
  {
    "db_id": "network_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.liked_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.ID = 1247",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE high_schooler.ID = 1247"
  },
  {
    "db_id": "network_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.name = \"Kris\"",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID WHERE high_schooler.name = \"Kris\""
  },
  {
    "db_id": "network_1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.grade = 11",
    "readable_query": "SELECT friend.student_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID WHERE high_schooler.grade = 11"
  },
  {
    "db_id": "network_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.friend_id, count(*) FROM Friend AS T1  GROUP BY T1.friend_id",
    "readable_query": "SELECT friend.friend_id, count(*) FROM Friend AS friend  GROUP BY friend.friend_id"
  },
  {
    "db_id": "network_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.student_id, count(*) FROM Likes AS T1  GROUP BY T1.student_id",
    "readable_query": "SELECT likes.student_id, count(*) FROM Likes AS likes  GROUP BY likes.student_id"
  },
  {
    "db_id": "network_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.liked_id, count(*) FROM Likes AS T1  GROUP BY T1.liked_id",
    "readable_query": "SELECT likes.liked_id, count(*) FROM Likes AS likes  GROUP BY likes.liked_id"
  },
  {
    "db_id": "network_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.ID, count(*) FROM Highschooler AS T1  GROUP BY T1.ID",
    "readable_query": "SELECT high_schooler.ID, count(*) FROM Highschooler AS high_schooler  GROUP BY high_schooler.ID"
  },
  {
    "db_id": "network_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.friend_id, count(*) FROM Friend AS T1  GROUP BY T1.friend_id",
    "readable_query": "SELECT friend.friend_id, count(*) FROM Friend AS friend  GROUP BY friend.friend_id"
  },
  {
    "db_id": "network_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.student_id, count(*) FROM Friend AS T1  GROUP BY T1.student_id",
    "readable_query": "SELECT friend.student_id, count(*) FROM Friend AS friend  GROUP BY friend.student_id"
  },
  {
    "db_id": "network_1",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.name, count(*) FROM Highschooler AS T1  GROUP BY T1.name",
    "readable_query": "SELECT high_schooler.name, count(*) FROM Highschooler AS high_schooler  GROUP BY high_schooler.name"
  },
  {
    "db_id": "network_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.name, count(*) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id  GROUP BY T1.name",
    "readable_query": "SELECT high_schooler.name, count(*) FROM Highschooler AS high_schooler JOIN Friend AS friend ON high_schooler.ID = friend.friend_id  GROUP BY high_schooler.name"
  },
  {
    "db_id": "network_1",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.name, count(*) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id  GROUP BY T1.name",
    "readable_query": "SELECT high_schooler.name, count(*) FROM Highschooler AS high_schooler JOIN Likes AS likes ON high_schooler.ID = likes.student_id  GROUP BY high_schooler.name"
  },
  {
    "db_id": "network_1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Likes AS T1",
    "readable_query": "SELECT count(*) FROM Likes AS likes"
  },
  {
    "db_id": "network_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.liked_id, T1.student_id FROM Likes AS T1",
    "readable_query": "SELECT likes.liked_id, likes.student_id FROM Likes AS likes"
  },
  {
    "db_id": "network_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.grade, T1.ID FROM Highschooler AS T1",
    "readable_query": "SELECT high_schooler.grade, high_schooler.ID FROM Highschooler AS high_schooler"
  },
  {
    "db_id": "network_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.student_id, T1.liked_id FROM Likes AS T1",
    "readable_query": "SELECT likes.student_id, likes.liked_id FROM Likes AS likes"
  },
  {
    "db_id": "network_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.ID, T1.name FROM Highschooler AS T1",
    "readable_query": "SELECT high_schooler.ID, high_schooler.name FROM Highschooler AS high_schooler"
  },
  {
    "db_id": "network_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.friend_id, T1.student_id FROM Friend AS T1",
    "readable_query": "SELECT friend.friend_id, friend.student_id FROM Friend AS friend"
  },
  {
    "db_id": "network_1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.student_id, T1.friend_id FROM Friend AS T1",
    "readable_query": "SELECT friend.student_id, friend.friend_id FROM Friend AS friend"
  },
  {
    "db_id": "network_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.student_id, T2.ID FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID",
    "readable_query": "SELECT likes.student_id, high_schooler.ID FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID"
  },
  {
    "db_id": "network_1",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.name, T2.liked_id FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id",
    "readable_query": "SELECT high_schooler.name, likes.liked_id FROM Highschooler AS high_schooler JOIN Likes AS likes ON high_schooler.ID = likes.student_id"
  },
  {
    "db_id": "network_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.ID, T1.grade FROM Highschooler AS T1 WHERE T1.name = \"Brittany\"",
    "readable_query": "SELECT high_schooler.ID, high_schooler.grade FROM Highschooler AS high_schooler WHERE high_schooler.name = \"Brittany\""
  },
  {
    "db_id": "network_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.name, T1.grade FROM Highschooler AS T1 WHERE T1.ID = 1468",
    "readable_query": "SELECT high_schooler.name, high_schooler.grade FROM Highschooler AS high_schooler WHERE high_schooler.ID = 1468"
  },
  {
    "db_id": "network_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.grade, T1.ID FROM Highschooler AS T1 WHERE T1.name = \"Austin\"",
    "readable_query": "SELECT high_schooler.grade, high_schooler.ID FROM Highschooler AS high_schooler WHERE high_schooler.name = \"Austin\""
  },
  {
    "db_id": "network_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.grade, T1.ID FROM Highschooler AS T1 WHERE T1.name = \"John\"",
    "readable_query": "SELECT high_schooler.grade, high_schooler.ID FROM Highschooler AS high_schooler WHERE high_schooler.name = \"John\""
  },
  {
    "db_id": "network_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.name, T1.ID FROM Highschooler AS T1 WHERE T1.grade = 10",
    "readable_query": "SELECT high_schooler.name, high_schooler.ID FROM Highschooler AS high_schooler WHERE high_schooler.grade = 10"
  },
  {
    "db_id": "network_1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.ID, T1.name FROM Highschooler AS T1 WHERE T1.grade = 10",
    "readable_query": "SELECT high_schooler.ID, high_schooler.name FROM Highschooler AS high_schooler WHERE high_schooler.grade = 10"
  },
  {
    "db_id": "network_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.student_id FROM Likes AS T1  GROUP BY T1.student_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT likes.student_id FROM Likes AS likes  GROUP BY likes.student_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.liked_id FROM Likes AS T1  GROUP BY T1.liked_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes  GROUP BY likes.liked_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.name FROM Highschooler AS T1  GROUP BY T1.name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT high_schooler.name FROM Highschooler AS high_schooler  GROUP BY high_schooler.name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Likes AS T1 WHERE T1.student_id = 1501",
    "readable_query": "SELECT count(*) FROM Likes AS likes WHERE likes.student_id = 1501"
  },
  {
    "db_id": "network_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Friend AS T1 WHERE T1.student_id = 1510",
    "readable_query": "SELECT count(*) FROM Friend AS friend WHERE friend.student_id = 1510"
  },
  {
    "db_id": "network_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Highschooler AS T1 WHERE T1.grade = 10",
    "readable_query": "SELECT count(*) FROM Highschooler AS high_schooler WHERE high_schooler.grade = 10"
  },
  {
    "db_id": "network_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Highschooler AS T1 WHERE T1.ID = 1468",
    "readable_query": "SELECT count(*) FROM Highschooler AS high_schooler WHERE high_schooler.ID = 1468"
  },
  {
    "db_id": "network_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Likes AS T1 WHERE T1.liked_id = 1934",
    "readable_query": "SELECT count(*) FROM Likes AS likes WHERE likes.liked_id = 1934"
  },
  {
    "db_id": "network_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Friend AS T1 WHERE T1.student_id = 1689",
    "readable_query": "SELECT count(*) FROM Friend AS friend WHERE friend.student_id = 1689"
  },
  {
    "db_id": "network_1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Highschooler AS T1 WHERE T1.name = \"John\"",
    "readable_query": "SELECT count(*) FROM Highschooler AS high_schooler WHERE high_schooler.name = \"John\""
  },
  {
    "db_id": "network_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.student_id FROM Likes AS T1    ORDER BY T1.liked_id DESC LIMIT 1",
    "readable_query": "SELECT likes.student_id FROM Likes AS likes    ORDER BY likes.liked_id DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.liked_id FROM Likes AS T1    ORDER BY T1.student_id DESC LIMIT 1",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes    ORDER BY likes.student_id DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.grade FROM Highschooler AS T1    ORDER BY T1.ID DESC LIMIT 1",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler    ORDER BY high_schooler.ID DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.friend_id FROM Friend AS T1    ORDER BY T1.student_id DESC LIMIT 1",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend    ORDER BY friend.student_id DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.name FROM Highschooler AS T1    ORDER BY T1.grade DESC LIMIT 1",
    "readable_query": "SELECT high_schooler.name FROM Highschooler AS high_schooler    ORDER BY high_schooler.grade DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.student_id FROM Friend AS T1    ORDER BY T1.friend_id DESC LIMIT 1",
    "readable_query": "SELECT friend.student_id FROM Friend AS friend    ORDER BY friend.friend_id DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.ID FROM Highschooler AS T1    ORDER BY T1.grade DESC LIMIT 1",
    "readable_query": "SELECT high_schooler.ID FROM Highschooler AS high_schooler    ORDER BY high_schooler.grade DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id    ORDER BY T2.student_id DESC LIMIT 1",
    "readable_query": "SELECT high_schooler.name FROM Highschooler AS high_schooler JOIN Friend AS friend ON high_schooler.ID = friend.friend_id    ORDER BY friend.student_id DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.ID FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id    ORDER BY T2.student_id DESC LIMIT 1",
    "readable_query": "SELECT high_schooler.ID FROM Highschooler AS high_schooler JOIN Friend AS friend ON high_schooler.ID = friend.friend_id    ORDER BY friend.student_id DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID    ORDER BY T2.ID DESC LIMIT 1",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID    ORDER BY high_schooler.ID DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID    ORDER BY T2.ID DESC LIMIT 1",
    "readable_query": "SELECT likes.student_id FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID    ORDER BY high_schooler.ID DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID    ORDER BY T2.ID DESC LIMIT 1",
    "readable_query": "SELECT friend.student_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID    ORDER BY high_schooler.ID DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.liked_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID    ORDER BY T2.grade ASC LIMIT 1",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID    ORDER BY high_schooler.grade ASC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID    ORDER BY T2.grade ASC LIMIT 1",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID    ORDER BY high_schooler.grade ASC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.liked_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID    ORDER BY T2.grade ASC LIMIT 1",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID    ORDER BY high_schooler.grade ASC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID    ORDER BY T2.grade ASC LIMIT 1",
    "readable_query": "SELECT friend.student_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID    ORDER BY high_schooler.grade ASC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID    ORDER BY T2.ID ASC LIMIT 1",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID    ORDER BY high_schooler.ID ASC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID    ORDER BY T2.grade ASC LIMIT 1",
    "readable_query": "SELECT friend.student_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID    ORDER BY high_schooler.grade ASC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.ID, T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id    ORDER BY T2.liked_id DESC LIMIT 1",
    "readable_query": "SELECT high_schooler.ID, high_schooler.name FROM Highschooler AS high_schooler JOIN Likes AS likes ON high_schooler.ID = likes.student_id    ORDER BY likes.liked_id DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.ID, T1.grade FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id    ORDER BY T2.friend_id DESC LIMIT 1",
    "readable_query": "SELECT high_schooler.ID, high_schooler.grade FROM Highschooler AS high_schooler JOIN Friend AS friend ON high_schooler.ID = friend.friend_id    ORDER BY friend.friend_id DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.friend_id, T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID    ORDER BY T2.grade DESC LIMIT 1",
    "readable_query": "SELECT friend.friend_id, friend.student_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID    ORDER BY high_schooler.grade DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.student_id) FROM Likes AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  likes.student_id) FROM Likes AS likes"
  },
  {
    "db_id": "network_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.student_id) FROM Friend AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  friend.student_id) FROM Friend AS friend"
  },
  {
    "db_id": "network_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.student_id) FROM Likes AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  likes.student_id) FROM Likes AS likes"
  },
  {
    "db_id": "network_1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.ID) FROM Highschooler AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  high_schooler.ID) FROM Highschooler AS high_schooler"
  },
  {
    "db_id": "network_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.grade) FROM Highschooler AS T1",
    "readable_query": "SELECT avg( high_schooler.grade) FROM Highschooler AS high_schooler"
  },
  {
    "db_id": "network_1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.ID) FROM Highschooler AS T1",
    "readable_query": "SELECT avg( high_schooler.ID) FROM Highschooler AS high_schooler"
  },
  {
    "db_id": "network_1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.student_id FROM Likes AS T1",
    "readable_query": "SELECT likes.student_id FROM Likes AS likes"
  },
  {
    "db_id": "network_1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.liked_id FROM Likes AS T1",
    "readable_query": "SELECT DISTINCT likes.liked_id FROM Likes AS likes"
  },
  {
    "db_id": "network_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.student_id FROM Friend AS T1     ORDER BY T1.friend_id ASC",
    "readable_query": "SELECT friend.student_id FROM Friend AS friend     ORDER BY friend.friend_id ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.liked_id FROM Likes AS T1     ORDER BY T1.student_id ASC",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes     ORDER BY likes.student_id ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.friend_id FROM Friend AS T1     ORDER BY T1.student_id ASC",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend     ORDER BY friend.student_id ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.grade FROM Highschooler AS T1     ORDER BY T1.ID ASC",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler     ORDER BY high_schooler.ID ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.ID FROM Highschooler AS T1     ORDER BY T1.grade ASC",
    "readable_query": "SELECT high_schooler.ID FROM Highschooler AS high_schooler     ORDER BY high_schooler.grade ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.student_id FROM Friend AS T1     ORDER BY T1.friend_id ASC",
    "readable_query": "SELECT friend.student_id FROM Friend AS friend     ORDER BY friend.friend_id ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.liked_id FROM Likes AS T1     ORDER BY T1.student_id DESC",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes     ORDER BY likes.student_id DESC"
  },
  {
    "db_id": "network_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.student_id FROM Likes AS T1     ORDER BY T1.liked_id DESC",
    "readable_query": "SELECT likes.student_id FROM Likes AS likes     ORDER BY likes.liked_id DESC"
  },
  {
    "db_id": "network_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.ID FROM Highschooler AS T1     ORDER BY T1.grade DESC",
    "readable_query": "SELECT high_schooler.ID FROM Highschooler AS high_schooler     ORDER BY high_schooler.grade DESC"
  },
  {
    "db_id": "network_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.ID FROM Highschooler AS T1     ORDER BY T1.grade DESC",
    "readable_query": "SELECT high_schooler.ID FROM Highschooler AS high_schooler     ORDER BY high_schooler.grade DESC"
  },
  {
    "db_id": "network_1",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.grade FROM Highschooler AS T1     ORDER BY T1.ID DESC",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler     ORDER BY high_schooler.ID DESC"
  },
  {
    "db_id": "network_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.ID, T1.name FROM Highschooler AS T1     ORDER BY T1.name ASC",
    "readable_query": "SELECT high_schooler.ID, high_schooler.name FROM Highschooler AS high_schooler     ORDER BY high_schooler.name ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.friend_id, T1.student_id FROM Friend AS T1     ORDER BY T1.student_id ASC",
    "readable_query": "SELECT friend.friend_id, friend.student_id FROM Friend AS friend     ORDER BY friend.student_id ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.ID, T1.grade FROM Highschooler AS T1     ORDER BY T1.grade ASC",
    "readable_query": "SELECT high_schooler.ID, high_schooler.grade FROM Highschooler AS high_schooler     ORDER BY high_schooler.grade ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.name, T1.ID FROM Highschooler AS T1     ORDER BY T1.ID ASC",
    "readable_query": "SELECT high_schooler.name, high_schooler.ID FROM Highschooler AS high_schooler     ORDER BY high_schooler.ID ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.student_id, T1.friend_id FROM Friend AS T1     ORDER BY T1.friend_id ASC",
    "readable_query": "SELECT friend.student_id, friend.friend_id FROM Friend AS friend     ORDER BY friend.friend_id ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.grade, T1.ID FROM Highschooler AS T1     ORDER BY T1.ID ASC",
    "readable_query": "SELECT high_schooler.grade, high_schooler.ID FROM Highschooler AS high_schooler     ORDER BY high_schooler.ID ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.liked_id, T1.student_id FROM Likes AS T1     ORDER BY T1.student_id ASC",
    "readable_query": "SELECT likes.liked_id, likes.student_id FROM Likes AS likes     ORDER BY likes.student_id ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.ID FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id JOIN Friend AS T3 ON T1.ID = T3.friend_id WHERE T2.student_id = 1709 and T3.friend_id = 1501",
    "readable_query": "SELECT high_schooler.ID FROM Highschooler AS high_schooler JOIN Likes AS likes ON high_schooler.ID = likes.student_id JOIN Friend AS friend ON high_schooler.ID = friend.friend_id WHERE likes.student_id = 1709 and friend.friend_id = 1501"
  },
  {
    "db_id": "network_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID JOIN Likes AS T3 ON T2.ID = T3.student_id WHERE T2.grade = 12 and T3.student_id = 1316",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID JOIN Likes AS likes ON high_schooler.ID = likes.student_id WHERE high_schooler.grade = 12 and likes.student_id = 1316"
  },
  {
    "db_id": "network_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.grade FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id JOIN Likes AS T3 ON T1.ID = T3.student_id WHERE T2.friend_id = 1304 and T3.liked_id = 1247",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler JOIN Friend AS friend ON high_schooler.ID = friend.friend_id JOIN Likes AS likes ON high_schooler.ID = likes.student_id WHERE friend.friend_id = 1304 and likes.liked_id = 1247"
  },
  {
    "db_id": "network_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID JOIN Likes AS T3 ON T2.ID = T3.student_id WHERE T2.name = \"Cassandra\" and T3.liked_id = 1247",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID JOIN Likes AS likes ON high_schooler.ID = likes.student_id WHERE high_schooler.name = \"Cassandra\" and likes.liked_id = 1247"
  },
  {
    "db_id": "network_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.ID FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id JOIN Friend AS T3 ON T1.ID = T3.friend_id WHERE T2.liked_id = 1934 and T3.student_id = 1510",
    "readable_query": "SELECT high_schooler.ID FROM Highschooler AS high_schooler JOIN Likes AS likes ON high_schooler.ID = likes.student_id JOIN Friend AS friend ON high_schooler.ID = friend.friend_id WHERE likes.liked_id = 1934 and friend.student_id = 1510"
  },
  {
    "db_id": "network_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id JOIN Friend AS T3 ON T1.ID = T3.friend_id WHERE T2.student_id = 1025 and T3.friend_id = 1501",
    "readable_query": "SELECT high_schooler.name FROM Highschooler AS high_schooler JOIN Likes AS likes ON high_schooler.ID = likes.student_id JOIN Friend AS friend ON high_schooler.ID = friend.friend_id WHERE likes.student_id = 1025 and friend.friend_id = 1501"
  },
  {
    "db_id": "network_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.ID FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id JOIN Friend AS T3 ON T1.ID = T3.friend_id WHERE T2.liked_id = 1501 and T3.student_id = 1661",
    "readable_query": "SELECT high_schooler.ID FROM Highschooler AS high_schooler JOIN Likes AS likes ON high_schooler.ID = likes.student_id JOIN Friend AS friend ON high_schooler.ID = friend.friend_id WHERE likes.liked_id = 1501 and friend.student_id = 1661"
  },
  {
    "db_id": "network_1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.liked_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID JOIN Friend AS T3 ON T2.ID = T3.friend_id WHERE T2.ID = 1101 and T3.friend_id = 1381",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID JOIN Friend AS friend ON high_schooler.ID = friend.friend_id WHERE high_schooler.ID = 1101 and friend.friend_id = 1381"
  },
  {
    "db_id": "network_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.name = \"Cassandra\" or T2.name = \"Jordan\"",
    "readable_query": "SELECT friend.student_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID WHERE high_schooler.name = \"Cassandra\" or high_schooler.name = \"Jordan\""
  },
  {
    "db_id": "network_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = \"Gabriel\" or T2.name = \"Haley\"",
    "readable_query": "SELECT likes.student_id FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE high_schooler.name = \"Gabriel\" or high_schooler.name = \"Haley\""
  },
  {
    "db_id": "network_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = \"Logan\" or T2.name = \"Haley\"",
    "readable_query": "SELECT likes.student_id FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE high_schooler.name = \"Logan\" or high_schooler.name = \"Haley\""
  },
  {
    "db_id": "network_1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.liked_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = \"Gabriel\" or T2.name = \"Jessica\"",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE high_schooler.name = \"Gabriel\" or high_schooler.name = \"Jessica\""
  },
  {
    "db_id": "network_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.grade FROM Highschooler AS T1 WHERE T1.ID = 1468 and T1.name = \"Andrew\"",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler WHERE high_schooler.ID = 1468 and high_schooler.name = \"Andrew\""
  },
  {
    "db_id": "network_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.grade FROM Highschooler AS T1 WHERE T1.name = \"Jordan\" and T1.ID = 1381",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler WHERE high_schooler.name = \"Jordan\" and high_schooler.ID = 1381"
  },
  {
    "db_id": "network_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.grade FROM Highschooler AS T1 WHERE T1.name = \"Brittany\" and T1.ID = 1247",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler WHERE high_schooler.name = \"Brittany\" and high_schooler.ID = 1247"
  },
  {
    "db_id": "network_1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.ID FROM Highschooler AS T1 WHERE T1.name = \"Cassandra\" and T1.grade = 12",
    "readable_query": "SELECT high_schooler.ID FROM Highschooler AS high_schooler WHERE high_schooler.name = \"Cassandra\" and high_schooler.grade = 12"
  },
  {
    "db_id": "network_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.student_id) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.friend_id = 1934 and T2.name = \"Haley\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  friend.student_id) FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID WHERE friend.friend_id = 1934 and high_schooler.name = \"Haley\""
  },
  {
    "db_id": "network_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.student_id) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T1.liked_id = 1468 and T2.name = \"Andrew\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  likes.student_id) FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE likes.liked_id = 1468 and high_schooler.name = \"Andrew\""
  },
  {
    "db_id": "network_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.student_id) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T1.liked_id = 1689 and T2.name = \"Gabriel\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  likes.student_id) FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE likes.liked_id = 1689 and high_schooler.name = \"Gabriel\""
  },
  {
    "db_id": "network_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.grade) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T1.ID = 1689 and T2.friend_id = 1689",
    "readable_query": "SELECT DISTINCT count(DISTINCT  high_schooler.grade) FROM Highschooler AS high_schooler JOIN Friend AS friend ON high_schooler.ID = friend.friend_id WHERE high_schooler.ID = 1689 and friend.friend_id = 1689"
  },
  {
    "db_id": "network_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.student_id) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T1.liked_id = 1247 and T2.grade = 11",
    "readable_query": "SELECT DISTINCT count(DISTINCT  likes.student_id) FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE likes.liked_id = 1247 and high_schooler.grade = 11"
  },
  {
    "db_id": "network_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.liked_id) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T1.student_id = 1501 and T2.name = \"Tiffany\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  likes.liked_id) FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE likes.student_id = 1501 and high_schooler.name = \"Tiffany\""
  },
  {
    "db_id": "network_1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.friend_id) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = 1468 and T2.name = \"John\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  friend.friend_id) FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID WHERE friend.student_id = 1468 and high_schooler.name = \"John\""
  },
  {
    "db_id": "network_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.grade FROM Highschooler AS T1 WHERE T1.name = \"John\" or T1.ID = 1510",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler WHERE high_schooler.name = \"John\" or high_schooler.ID = 1510"
  },
  {
    "db_id": "network_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.grade FROM Highschooler AS T1 WHERE T1.name = \"Jordan\" or T1.ID = 1316",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler WHERE high_schooler.name = \"Jordan\" or high_schooler.ID = 1316"
  },
  {
    "db_id": "network_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.ID FROM Highschooler AS T1 WHERE T1.name = \"Logan\" or T1.grade = 12",
    "readable_query": "SELECT high_schooler.ID FROM Highschooler AS high_schooler WHERE high_schooler.name = \"Logan\" or high_schooler.grade = 12"
  },
  {
    "db_id": "network_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.grade FROM Highschooler AS T1 WHERE T1.name = \"John\" or T1.ID = 1316",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler WHERE high_schooler.name = \"John\" or high_schooler.ID = 1316"
  },
  {
    "db_id": "network_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID = 1304 or T1.grade = 12",
    "readable_query": "SELECT high_schooler.name FROM Highschooler AS high_schooler WHERE high_schooler.ID = 1304 or high_schooler.grade = 12"
  },
  {
    "db_id": "network_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade = 10 or T1.ID = 1911",
    "readable_query": "SELECT high_schooler.name FROM Highschooler AS high_schooler WHERE high_schooler.grade = 10 or high_schooler.ID = 1911"
  },
  {
    "db_id": "network_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade = 11 or T1.ID = 1025",
    "readable_query": "SELECT high_schooler.name FROM Highschooler AS high_schooler WHERE high_schooler.grade = 11 or high_schooler.ID = 1025"
  },
  {
    "db_id": "network_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID = 1510 or T1.grade = 9",
    "readable_query": "SELECT high_schooler.name FROM Highschooler AS high_schooler WHERE high_schooler.ID = 1510 or high_schooler.grade = 9"
  },
  {
    "db_id": "network_1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.ID FROM Highschooler AS T1 WHERE T1.grade = 10 or T1.name = \"Austin\"",
    "readable_query": "SELECT high_schooler.ID FROM Highschooler AS high_schooler WHERE high_schooler.grade = 10 or high_schooler.name = \"Austin\""
  },
  {
    "db_id": "network_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.grade = 12 and T2.ID = 1247",
    "readable_query": "SELECT count(*) FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE high_schooler.grade = 12 and high_schooler.ID = 1247"
  },
  {
    "db_id": "network_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.ID = 1934 and T2.name = \"John\"",
    "readable_query": "SELECT count(*) FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE high_schooler.ID = 1934 and high_schooler.name = \"John\""
  },
  {
    "db_id": "network_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.ID = 1025 and T2.name = \"Jessica\"",
    "readable_query": "SELECT count(*) FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE high_schooler.ID = 1025 and high_schooler.name = \"Jessica\""
  },
  {
    "db_id": "network_1",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T2.student_id = 1782 and T2.friend_id = 1501",
    "readable_query": "SELECT count(*) FROM Highschooler AS high_schooler JOIN Friend AS friend ON high_schooler.ID = friend.friend_id WHERE friend.student_id = 1782 and friend.friend_id = 1501"
  },
  {
    "db_id": "network_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.grade FROM Highschooler AS T1 WHERE T1.name != \"Logan\"",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler WHERE high_schooler.name != \"Logan\""
  },
  {
    "db_id": "network_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.student_id FROM Likes AS T1 WHERE T1.liked_id != 1304",
    "readable_query": "SELECT likes.student_id FROM Likes AS likes WHERE likes.liked_id != 1304"
  },
  {
    "db_id": "network_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.grade FROM Highschooler AS T1 WHERE T1.ID != 1709",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler WHERE high_schooler.ID != 1709"
  },
  {
    "db_id": "network_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.student_id FROM Friend AS T1 WHERE T1.friend_id != 1468",
    "readable_query": "SELECT friend.student_id FROM Friend AS friend WHERE friend.friend_id != 1468"
  },
  {
    "db_id": "network_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.ID FROM Highschooler AS T1 WHERE T1.name != \"Tiffany\"",
    "readable_query": "SELECT high_schooler.ID FROM Highschooler AS high_schooler WHERE high_schooler.name != \"Tiffany\""
  },
  {
    "db_id": "network_1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.friend_id FROM Friend AS T1 WHERE T1.student_id != 1381",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend WHERE friend.student_id != 1381"
  },
  {
    "db_id": "network_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.grade != 11",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID WHERE high_schooler.grade != 11"
  },
  {
    "db_id": "network_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id WHERE T2.liked_id != 1304",
    "readable_query": "SELECT high_schooler.name FROM Highschooler AS high_schooler JOIN Likes AS likes ON high_schooler.ID = likes.student_id WHERE likes.liked_id != 1304"
  },
  {
    "db_id": "network_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T2.friend_id != 1316",
    "readable_query": "SELECT high_schooler.name FROM Highschooler AS high_schooler JOIN Friend AS friend ON high_schooler.ID = friend.friend_id WHERE friend.friend_id != 1316"
  },
  {
    "db_id": "network_1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.ID != 1316",
    "readable_query": "SELECT likes.student_id FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE high_schooler.ID != 1316"
  },
  {
    "db_id": "network_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.ID FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id WHERE T2.liked_id = 1101",
    "readable_query": "SELECT DISTINCT high_schooler.ID FROM Highschooler AS high_schooler JOIN Likes AS likes ON high_schooler.ID = likes.student_id WHERE likes.liked_id = 1101"
  },
  {
    "db_id": "network_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.ID = 1468",
    "readable_query": "SELECT DISTINCT likes.student_id FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE high_schooler.ID = 1468"
  },
  {
    "db_id": "network_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = \"Kris\"",
    "readable_query": "SELECT DISTINCT likes.student_id FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE high_schooler.name = \"Kris\""
  },
  {
    "db_id": "network_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = \"Brittany\"",
    "readable_query": "SELECT DISTINCT likes.student_id FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE high_schooler.name = \"Brittany\""
  },
  {
    "db_id": "network_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.grade FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T2.friend_id = 1709",
    "readable_query": "SELECT DISTINCT high_schooler.grade FROM Highschooler AS high_schooler JOIN Friend AS friend ON high_schooler.ID = friend.friend_id WHERE friend.friend_id = 1709"
  },
  {
    "db_id": "network_1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.ID = 1247",
    "readable_query": "SELECT DISTINCT friend.student_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID WHERE high_schooler.ID = 1247"
  },
  {
    "db_id": "network_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.student_id) FROM Likes AS T1 WHERE T1.liked_id = 1934",
    "readable_query": "SELECT DISTINCT count(DISTINCT  likes.student_id) FROM Likes AS likes WHERE likes.liked_id = 1934"
  },
  {
    "db_id": "network_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.liked_id) FROM Likes AS T1 WHERE T1.student_id = 1934",
    "readable_query": "SELECT DISTINCT count(DISTINCT  likes.liked_id) FROM Likes AS likes WHERE likes.student_id = 1934"
  },
  {
    "db_id": "network_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.grade) FROM Highschooler AS T1 WHERE T1.name = \"Brittany\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  high_schooler.grade) FROM Highschooler AS high_schooler WHERE high_schooler.name = \"Brittany\""
  },
  {
    "db_id": "network_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.student_id) FROM Friend AS T1 WHERE T1.friend_id = 1316",
    "readable_query": "SELECT DISTINCT count(DISTINCT  friend.student_id) FROM Friend AS friend WHERE friend.friend_id = 1316"
  },
  {
    "db_id": "network_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.friend_id) FROM Friend AS T1 WHERE T1.student_id = 1501",
    "readable_query": "SELECT DISTINCT count(DISTINCT  friend.friend_id) FROM Friend AS friend WHERE friend.student_id = 1501"
  },
  {
    "db_id": "network_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.liked_id) FROM Likes AS T1 WHERE T1.student_id = 1709",
    "readable_query": "SELECT DISTINCT count(DISTINCT  likes.liked_id) FROM Likes AS likes WHERE likes.student_id = 1709"
  },
  {
    "db_id": "network_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.liked_id) FROM Likes AS T1 WHERE T1.student_id = 1911",
    "readable_query": "SELECT DISTINCT count(DISTINCT  likes.liked_id) FROM Likes AS likes WHERE likes.student_id = 1911"
  },
  {
    "db_id": "network_1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.student_id) FROM Friend AS T1 WHERE T1.friend_id = 1934",
    "readable_query": "SELECT DISTINCT count(DISTINCT  friend.student_id) FROM Friend AS friend WHERE friend.friend_id = 1934"
  },
  {
    "db_id": "network_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.student_id FROM Friend AS T1 WHERE T1.friend_id > 1025",
    "readable_query": "SELECT friend.student_id FROM Friend AS friend WHERE friend.friend_id > 1025"
  },
  {
    "db_id": "network_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.student_id FROM Likes AS T1 WHERE T1.liked_id > 1501",
    "readable_query": "SELECT likes.student_id FROM Likes AS likes WHERE likes.liked_id > 1501"
  },
  {
    "db_id": "network_1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.grade FROM Highschooler AS T1 WHERE T1.ID > 1661",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler WHERE high_schooler.ID > 1661"
  },
  {
    "db_id": "network_1",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.friend_id, T2.name, T3.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID JOIN Likes AS T3 ON T2.ID = T3.student_id",
    "readable_query": "SELECT friend.friend_id, high_schooler.name, likes.student_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID JOIN Likes AS likes ON high_schooler.ID = likes.student_id"
  },
  {
    "db_id": "network_1",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.liked_id, T2.grade, T3.friend_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID JOIN Friend AS T3 ON T2.ID = T3.friend_id",
    "readable_query": "SELECT likes.liked_id, high_schooler.grade, friend.friend_id FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID JOIN Friend AS friend ON high_schooler.ID = friend.friend_id"
  },
  {
    "db_id": "network_1",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.ID, T2.student_id, T3.friend_id FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id JOIN Friend AS T3 ON T1.ID = T3.friend_id",
    "readable_query": "SELECT high_schooler.ID, likes.student_id, friend.friend_id FROM Highschooler AS high_schooler JOIN Likes AS likes ON high_schooler.ID = likes.student_id JOIN Friend AS friend ON high_schooler.ID = friend.friend_id"
  },
  {
    "db_id": "network_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.liked_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID     ORDER BY T2.ID ASC",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID     ORDER BY high_schooler.ID ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.grade FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id     ORDER BY T2.friend_id ASC",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler JOIN Friend AS friend ON high_schooler.ID = friend.friend_id     ORDER BY friend.friend_id ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID     ORDER BY T2.grade ASC",
    "readable_query": "SELECT friend.student_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID     ORDER BY high_schooler.grade ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID     ORDER BY T2.ID ASC",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID     ORDER BY high_schooler.ID ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID     ORDER BY T2.ID ASC",
    "readable_query": "SELECT friend.student_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID     ORDER BY high_schooler.ID ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID     ORDER BY T2.ID ASC",
    "readable_query": "SELECT friend.student_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID     ORDER BY high_schooler.ID ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id     ORDER BY T2.liked_id ASC",
    "readable_query": "SELECT high_schooler.name FROM Highschooler AS high_schooler JOIN Likes AS likes ON high_schooler.ID = likes.student_id     ORDER BY likes.liked_id ASC"
  },
  {
    "db_id": "network_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.liked_id FROM Likes AS T1 WHERE T1.student_id = 1689     INTERSECT SELECT T2.liked_id FROM Likes AS T2 WHERE T2.student_id = 1689",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes WHERE likes.student_id = 1689     INTERSECT SELECT likes.liked_id FROM Likes AS likes WHERE likes.student_id = 1689"
  },
  {
    "db_id": "network_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.student_id FROM Friend AS T1 WHERE T1.friend_id = 1316     INTERSECT SELECT T2.student_id FROM Friend AS T2 WHERE T2.friend_id = 1316",
    "readable_query": "SELECT friend.student_id FROM Friend AS friend WHERE friend.friend_id = 1316     INTERSECT SELECT friend.student_id FROM Friend AS friend WHERE friend.friend_id = 1316"
  },
  {
    "db_id": "network_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.friend_id FROM Friend AS T1 WHERE T1.student_id = 1689     INTERSECT SELECT T2.friend_id FROM Friend AS T2 WHERE T2.student_id = 1911",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend WHERE friend.student_id = 1689     INTERSECT SELECT friend.friend_id FROM Friend AS friend WHERE friend.student_id = 1911"
  },
  {
    "db_id": "network_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.liked_id FROM Likes AS T1 WHERE T1.student_id = 1025     INTERSECT SELECT T2.liked_id FROM Likes AS T2 WHERE T2.student_id = 1709",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes WHERE likes.student_id = 1025     INTERSECT SELECT likes.liked_id FROM Likes AS likes WHERE likes.student_id = 1709"
  },
  {
    "db_id": "network_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.friend_id FROM Friend AS T1 WHERE T1.student_id = 1381     INTERSECT SELECT T2.friend_id FROM Friend AS T2 WHERE T2.student_id = 1101",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend WHERE friend.student_id = 1381     INTERSECT SELECT friend.friend_id FROM Friend AS friend WHERE friend.student_id = 1101"
  },
  {
    "db_id": "network_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID = 1316     INTERSECT SELECT T2.name FROM Highschooler AS T2 WHERE T2.ID = 1501",
    "readable_query": "SELECT high_schooler.name FROM Highschooler AS high_schooler WHERE high_schooler.ID = 1316     INTERSECT SELECT high_schooler.name FROM Highschooler AS high_schooler WHERE high_schooler.ID = 1501"
  },
  {
    "db_id": "network_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.grade FROM Highschooler AS T1 WHERE T1.ID = 1661     INTERSECT SELECT T2.grade FROM Highschooler AS T2 WHERE T2.ID = 1689",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler WHERE high_schooler.ID = 1661     INTERSECT SELECT high_schooler.grade FROM Highschooler AS high_schooler WHERE high_schooler.ID = 1689"
  },
  {
    "db_id": "network_1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.student_id FROM Likes AS T1 WHERE T1.liked_id = 1689     INTERSECT SELECT T2.student_id FROM Likes AS T2 WHERE T2.liked_id = 1501",
    "readable_query": "SELECT likes.student_id FROM Likes AS likes WHERE likes.liked_id = 1689     INTERSECT SELECT likes.student_id FROM Likes AS likes WHERE likes.liked_id = 1501"
  },
  {
    "db_id": "network_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.grade) FROM Highschooler AS T1 WHERE T1.ID = 1501",
    "readable_query": "SELECT avg( high_schooler.grade) FROM Highschooler AS high_schooler WHERE high_schooler.ID = 1501"
  },
  {
    "db_id": "network_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.grade) FROM Highschooler AS T1 WHERE T1.ID = 1304",
    "readable_query": "SELECT avg( high_schooler.grade) FROM Highschooler AS high_schooler WHERE high_schooler.ID = 1304"
  },
  {
    "db_id": "network_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.liked_id) FROM Likes AS T1 WHERE T1.student_id = 1247",
    "readable_query": "SELECT avg( likes.liked_id) FROM Likes AS likes WHERE likes.student_id = 1247"
  },
  {
    "db_id": "network_1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.ID) FROM Highschooler AS T1 WHERE T1.name = \"Brittany\"",
    "readable_query": "SELECT avg( high_schooler.ID) FROM Highschooler AS high_schooler WHERE high_schooler.name = \"Brittany\""
  },
  {
    "db_id": "network_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.grade FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T2.friend_id = (SELECT max( T23.friend_id) FROM Friend AS T23)",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler JOIN Friend AS friend ON high_schooler.ID = friend.friend_id WHERE friend.friend_id = (SELECT max( friend.friend_id) FROM Friend AS friend)"
  },
  {
    "db_id": "network_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.ID FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T2.friend_id = (SELECT max( T23.friend_id) FROM Friend AS T23)",
    "readable_query": "SELECT high_schooler.ID FROM Highschooler AS high_schooler JOIN Friend AS friend ON high_schooler.ID = friend.friend_id WHERE friend.friend_id = (SELECT max( friend.friend_id) FROM Friend AS friend)"
  },
  {
    "db_id": "network_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.ID = (SELECT max( T23.ID) FROM Highschooler AS T23)",
    "readable_query": "SELECT friend.student_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID WHERE high_schooler.ID = (SELECT max( high_schooler.ID) FROM Highschooler AS high_schooler)"
  },
  {
    "db_id": "network_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.liked_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.ID = (SELECT max( T23.ID) FROM Highschooler AS T23)",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE high_schooler.ID = (SELECT max( high_schooler.ID) FROM Highschooler AS high_schooler)"
  },
  {
    "db_id": "network_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.grade = (SELECT max( T23.grade) FROM Highschooler AS T23)",
    "readable_query": "SELECT friend.student_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID WHERE high_schooler.grade = (SELECT max( high_schooler.grade) FROM Highschooler AS high_schooler)"
  },
  {
    "db_id": "network_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T2.student_id = (SELECT max( T23.student_id) FROM Friend AS T23)",
    "readable_query": "SELECT high_schooler.name FROM Highschooler AS high_schooler JOIN Friend AS friend ON high_schooler.ID = friend.friend_id WHERE friend.student_id = (SELECT max( friend.student_id) FROM Friend AS friend)"
  },
  {
    "db_id": "network_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.grade FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id WHERE T2.student_id = (SELECT max( T23.student_id) FROM Likes AS T23)",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler JOIN Likes AS likes ON high_schooler.ID = likes.student_id WHERE likes.student_id = (SELECT max( likes.student_id) FROM Likes AS likes)"
  },
  {
    "db_id": "network_1",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.grade = (SELECT max( T23.grade) FROM Highschooler AS T23)",
    "readable_query": "SELECT likes.student_id FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE high_schooler.grade = (SELECT max( high_schooler.grade) FROM Highschooler AS high_schooler)"
  },
  {
    "db_id": "network_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.grade, T2.student_id FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id JOIN Likes AS T3 ON T1.ID = T3.student_id WHERE T3.liked_id = 1501 and T2.friend_id = 1782",
    "readable_query": "SELECT high_schooler.grade, friend.student_id FROM Highschooler AS high_schooler JOIN Friend AS friend ON high_schooler.ID = friend.friend_id JOIN Likes AS likes ON high_schooler.ID = likes.student_id WHERE likes.liked_id = 1501 and friend.friend_id = 1782"
  },
  {
    "db_id": "network_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.student_id, T2.grade FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID JOIN Likes AS T3 ON T2.ID = T3.student_id WHERE T3.liked_id = 1304 and T2.ID = 1304",
    "readable_query": "SELECT friend.student_id, high_schooler.grade FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID JOIN Likes AS likes ON high_schooler.ID = likes.student_id WHERE likes.liked_id = 1304 and high_schooler.ID = 1304"
  },
  {
    "db_id": "network_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.friend_id, T2.grade FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID JOIN Likes AS T3 ON T2.ID = T3.student_id WHERE T3.liked_id = 1934 and T2.ID = 1316",
    "readable_query": "SELECT friend.friend_id, high_schooler.grade FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID JOIN Likes AS likes ON high_schooler.ID = likes.student_id WHERE likes.liked_id = 1934 and high_schooler.ID = 1316"
  },
  {
    "db_id": "network_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.friend_id, T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID JOIN Likes AS T3 ON T2.ID = T3.student_id WHERE T3.liked_id = 1101 and T2.ID = 1661",
    "readable_query": "SELECT friend.friend_id, high_schooler.name FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID JOIN Likes AS likes ON high_schooler.ID = likes.student_id WHERE likes.liked_id = 1101 and high_schooler.ID = 1661"
  },
  {
    "db_id": "network_1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.student_id, T2.ID FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID JOIN Friend AS T3 ON T2.ID = T3.friend_id WHERE T3.friend_id = 1101 and T2.name = \"Kyle\"",
    "readable_query": "SELECT likes.student_id, high_schooler.ID FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID JOIN Friend AS friend ON high_schooler.ID = friend.friend_id WHERE friend.friend_id = 1101 and high_schooler.name = \"Kyle\""
  },
  {
    "db_id": "network_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.grade FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T2.student_id = 1510 GROUP BY T1.grade  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler JOIN Friend AS friend ON high_schooler.ID = friend.friend_id WHERE friend.student_id = 1510 GROUP BY high_schooler.grade  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.liked_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = \"Kris\" GROUP BY T1.liked_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes JOIN Highschooler AS high_schooler ON likes.student_id = high_schooler.ID WHERE high_schooler.name = \"Kris\" GROUP BY likes.liked_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.name = \"Cassandra\" GROUP BY T1.friend_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend JOIN Highschooler AS high_schooler ON friend.friend_id = high_schooler.ID WHERE high_schooler.name = \"Cassandra\" GROUP BY friend.friend_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.grade FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id WHERE T2.liked_id = 1101 GROUP BY T1.grade  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT high_schooler.grade FROM Highschooler AS high_schooler JOIN Likes AS likes ON high_schooler.ID = likes.student_id WHERE likes.liked_id = 1101 GROUP BY high_schooler.grade  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "network_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.friend_id FROM Friend AS T1        EXCEPT SELECT T2.friend_id FROM Friend AS T2 WHERE T2.student_id = 1381",
    "readable_query": "SELECT friend.friend_id FROM Friend AS friend        EXCEPT SELECT friend.friend_id FROM Friend AS friend WHERE friend.student_id = 1381"
  },
  {
    "db_id": "network_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.ID FROM Highschooler AS T1        EXCEPT SELECT T2.ID FROM Highschooler AS T2 WHERE T2.grade = 9",
    "readable_query": "SELECT high_schooler.ID FROM Highschooler AS high_schooler        EXCEPT SELECT high_schooler.ID FROM Highschooler AS high_schooler WHERE high_schooler.grade = 9"
  },
  {
    "db_id": "network_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.student_id FROM Friend AS T1        EXCEPT SELECT T2.student_id FROM Friend AS T2 WHERE T2.friend_id = 1304",
    "readable_query": "SELECT friend.student_id FROM Friend AS friend        EXCEPT SELECT friend.student_id FROM Friend AS friend WHERE friend.friend_id = 1304"
  },
  {
    "db_id": "network_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.liked_id FROM Likes AS T1        EXCEPT SELECT T2.liked_id FROM Likes AS T2 WHERE T2.student_id = 1641",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes        EXCEPT SELECT likes.liked_id FROM Likes AS likes WHERE likes.student_id = 1641"
  },
  {
    "db_id": "network_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.liked_id FROM Likes AS T1        EXCEPT SELECT T2.liked_id FROM Likes AS T2 WHERE T2.student_id = 1709",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes        EXCEPT SELECT likes.liked_id FROM Likes AS likes WHERE likes.student_id = 1709"
  },
  {
    "db_id": "network_1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.liked_id FROM Likes AS T1        EXCEPT SELECT T2.liked_id FROM Likes AS T2 WHERE T2.student_id = 1025",
    "readable_query": "SELECT likes.liked_id FROM Likes AS likes        EXCEPT SELECT likes.liked_id FROM Likes AS likes WHERE likes.student_id = 1025"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1 WHERE T1.property_feature_description = \"modi\"",
    "readable_query": "SELECT other_property_features.property_id FROM Other_Property_Features AS other_property_features WHERE other_property_features.property_feature_description = \"modi\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1 WHERE T1.feature_description = \"Air Conditioning.\"",
    "readable_query": "SELECT other_available_features.feature_name FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_description = \"Air Conditioning.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.shp_feature_1 FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.property_type_description = \"Other, to be determined.\"",
    "readable_query": "SELECT properties.shp_feature_1 FROM Properties AS properties JOIN Ref_Property_Types AS reference_property_types ON properties.property_type_code = reference_property_types.property_type_code WHERE reference_property_types.property_type_description = \"Other, to be determined.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.feature_id FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.property_feature_description = \"quo\"",
    "readable_query": "SELECT other_available_features.feature_id FROM Other_Available_Features AS other_available_features JOIN Other_Property_Features AS other_property_features ON other_available_features.feature_id = other_property_features.feature_id WHERE other_property_features.property_feature_description = \"quo\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.feature_name, count(*) FROM Other_Available_Features AS T1  GROUP BY T1.feature_name",
    "readable_query": "SELECT other_available_features.feature_name, count(*) FROM Other_Available_Features AS other_available_features  GROUP BY other_available_features.feature_name"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.hse_feature_1, count(*) FROM Properties AS T1  GROUP BY T1.hse_feature_1",
    "readable_query": "SELECT properties.hse_feature_1, count(*) FROM Properties AS properties  GROUP BY properties.hse_feature_1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.feature_description, count(*) FROM Other_Available_Features AS T1  GROUP BY T1.feature_description",
    "readable_query": "SELECT other_available_features.feature_description, count(*) FROM Other_Available_Features AS other_available_features  GROUP BY other_available_features.feature_description"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.feature_id, count(*) FROM Other_Available_Features AS T1  GROUP BY T1.feature_id",
    "readable_query": "SELECT other_available_features.feature_id, count(*) FROM Other_Available_Features AS other_available_features  GROUP BY other_available_features.feature_id"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.property_type_description, count(*) FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code  GROUP BY T1.property_type_description",
    "readable_query": "SELECT reference_property_types.property_type_description, count(*) FROM Ref_Property_Types AS reference_property_types JOIN Properties AS properties ON reference_property_types.property_type_code = properties.property_type_code  GROUP BY reference_property_types.property_type_description"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.agreed_selling_price, count(*) FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code  GROUP BY T1.agreed_selling_price",
    "readable_query": "SELECT properties.agreed_selling_price, count(*) FROM Properties AS properties JOIN Ref_Property_Types AS reference_property_types ON properties.property_type_code = reference_property_types.property_type_code  GROUP BY properties.agreed_selling_price"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Other_Property_Features AS T1",
    "readable_query": "SELECT count(*) FROM Other_Property_Features AS other_property_features"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.feature_description, T1.feature_type_code FROM Other_Available_Features AS T1",
    "readable_query": "SELECT other_available_features.feature_description, other_available_features.feature_type_code FROM Other_Available_Features AS other_available_features"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.property_feature_description, T1.feature_id FROM Other_Property_Features AS T1",
    "readable_query": "SELECT other_property_features.property_feature_description, other_property_features.feature_id FROM Other_Property_Features AS other_property_features"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.feature_type_name, T1.feature_type_code FROM Ref_Feature_Types AS T1",
    "readable_query": "SELECT reference_feature_types.feature_type_name, reference_feature_types.feature_type_code FROM Ref_Feature_Types AS reference_feature_types"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.feature_id, T1.property_feature_description FROM Other_Property_Features AS T1",
    "readable_query": "SELECT other_property_features.feature_id, other_property_features.property_feature_description FROM Other_Property_Features AS other_property_features"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.buyer_offered_price, T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code",
    "readable_query": "SELECT properties.buyer_offered_price, reference_property_types.property_type_description FROM Properties AS properties JOIN Ref_Property_Types AS reference_property_types ON properties.property_type_code = reference_property_types.property_type_code"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.property_type_description, T2.hse_feature_1 FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code",
    "readable_query": "SELECT reference_property_types.property_type_description, properties.hse_feature_1 FROM Ref_Property_Types AS reference_property_types JOIN Properties AS properties ON reference_property_types.property_type_code = properties.property_type_code"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.property_id, T2.fld_feature_2 FROM Other_Property_Features AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id",
    "readable_query": "SELECT other_property_features.property_id, properties.fld_feature_2 FROM Other_Property_Features AS other_property_features JOIN Properties AS properties ON other_property_features.property_id = properties.property_id"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.property_type_description, T2.vendor_requested_price FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code",
    "readable_query": "SELECT reference_property_types.property_type_description, properties.vendor_requested_price FROM Ref_Property_Types AS reference_property_types JOIN Properties AS properties ON reference_property_types.property_type_code = properties.property_type_code"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.feature_name, T2.feature_type_code FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code",
    "readable_query": "SELECT other_available_features.feature_name, reference_feature_types.feature_type_code FROM Other_Available_Features AS other_available_features JOIN Ref_Feature_Types AS reference_feature_types ON other_available_features.feature_type_code = reference_feature_types.feature_type_code"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.property_feature_description, T2.oth_feature_3 FROM Other_Property_Features AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id",
    "readable_query": "SELECT other_property_features.property_feature_description, properties.oth_feature_3 FROM Other_Property_Features AS other_property_features JOIN Properties AS properties ON other_property_features.property_id = properties.property_id"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.oth_feature_1, T2.property_feature_description FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id",
    "readable_query": "SELECT properties.oth_feature_1, other_property_features.property_feature_description FROM Properties AS properties JOIN Other_Property_Features AS other_property_features ON properties.property_id = other_property_features.property_id"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.feature_name, T2.feature_id FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id",
    "readable_query": "SELECT other_available_features.feature_name, other_property_features.feature_id FROM Other_Available_Features AS other_available_features JOIN Other_Property_Features AS other_property_features ON other_available_features.feature_id = other_property_features.feature_id"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.oth_feature_2, T2.property_type_code FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code",
    "readable_query": "SELECT properties.oth_feature_2, reference_property_types.property_type_code FROM Properties AS properties JOIN Ref_Property_Types AS reference_property_types ON properties.property_type_code = reference_property_types.property_type_code"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.hse_feature_3, T1.fld_feature_2 FROM Properties AS T1 WHERE T1.property_id = 12",
    "readable_query": "SELECT properties.hse_feature_3, properties.fld_feature_2 FROM Properties AS properties WHERE properties.property_id = 12"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.feature_id, T1.feature_description FROM Other_Available_Features AS T1 WHERE T1.feature_type_code = \"Amenity\"",
    "readable_query": "SELECT other_available_features.feature_id, other_available_features.feature_description FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_type_code = \"Amenity\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.feature_name, T1.feature_id FROM Other_Available_Features AS T1 WHERE T1.feature_description = \"Swimming Pool.\"",
    "readable_query": "SELECT other_available_features.feature_name, other_available_features.feature_id FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_description = \"Swimming Pool.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.feature_type_code, T1.feature_name FROM Other_Available_Features AS T1 WHERE T1.feature_id = 2",
    "readable_query": "SELECT other_available_features.feature_type_code, other_available_features.feature_name FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_id = 2"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.feature_type_code FROM Ref_Feature_Types AS T1  GROUP BY T1.feature_type_code  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT reference_feature_types.feature_type_code FROM Ref_Feature_Types AS reference_feature_types  GROUP BY reference_feature_types.feature_type_code  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1  GROUP BY T1.property_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT other_property_features.property_id FROM Other_Property_Features AS other_property_features  GROUP BY other_property_features.property_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.apt_feature_3 FROM Properties AS T1  GROUP BY T1.apt_feature_3  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT properties.apt_feature_3 FROM Properties AS properties  GROUP BY properties.apt_feature_3  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.feature_id FROM Other_Property_Features AS T1  GROUP BY T1.feature_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT other_property_features.feature_id FROM Other_Property_Features AS other_property_features  GROUP BY other_property_features.feature_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.feature_type_code FROM Other_Available_Features AS T1  GROUP BY T1.feature_type_code  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT other_available_features.feature_type_code FROM Other_Available_Features AS other_available_features  GROUP BY other_available_features.feature_type_code  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.feature_type_code FROM Other_Available_Features AS T1  GROUP BY T1.feature_type_code  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT other_available_features.feature_type_code FROM Other_Available_Features AS other_available_features  GROUP BY other_available_features.feature_type_code  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1  GROUP BY T1.property_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT other_property_features.property_id FROM Other_Property_Features AS other_property_features  GROUP BY other_property_features.property_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1  GROUP BY T1.feature_name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT other_available_features.feature_name FROM Other_Available_Features AS other_available_features  GROUP BY other_available_features.feature_name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Ref_Property_Types AS T1 WHERE T1.property_type_code = \"House\"",
    "readable_query": "SELECT count(*) FROM Ref_Property_Types AS reference_property_types WHERE reference_property_types.property_type_code = \"House\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Ref_Property_Types AS T1 WHERE T1.property_type_code = \"Shop\"",
    "readable_query": "SELECT count(*) FROM Ref_Property_Types AS reference_property_types WHERE reference_property_types.property_type_code = \"Shop\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Ref_Feature_Types AS T1 WHERE T1.feature_type_code = \"Amenity\"",
    "readable_query": "SELECT count(*) FROM Ref_Feature_Types AS reference_feature_types WHERE reference_feature_types.feature_type_code = \"Amenity\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Other_Available_Features AS T1 WHERE T1.feature_name = \"Pool\"",
    "readable_query": "SELECT count(*) FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_name = \"Pool\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Ref_Feature_Types AS T1 WHERE T1.feature_type_name = \"Amenity, eg Pool.\"",
    "readable_query": "SELECT count(*) FROM Ref_Feature_Types AS reference_feature_types WHERE reference_feature_types.feature_type_name = \"Amenity, eg Pool.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Other_Available_Features AS T1 WHERE T1.feature_description = \"Burglar Alarm\"",
    "readable_query": "SELECT count(*) FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_description = \"Burglar Alarm\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.feature_type_code FROM Other_Available_Features AS T1    ORDER BY T1.feature_id DESC LIMIT 1",
    "readable_query": "SELECT other_available_features.feature_type_code FROM Other_Available_Features AS other_available_features    ORDER BY other_available_features.feature_id DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.property_type_code FROM Properties AS T1    ORDER BY T1.property_id DESC LIMIT 1",
    "readable_query": "SELECT properties.property_type_code FROM Properties AS properties    ORDER BY properties.property_id DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.feature_type_code FROM Other_Available_Features AS T1    ORDER BY T1.feature_id DESC LIMIT 1",
    "readable_query": "SELECT other_available_features.feature_type_code FROM Other_Available_Features AS other_available_features    ORDER BY other_available_features.feature_id DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1    ORDER BY T1.feature_id DESC LIMIT 1",
    "readable_query": "SELECT other_available_features.feature_name FROM Other_Available_Features AS other_available_features    ORDER BY other_available_features.feature_id DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.vendor_requested_price FROM Properties AS T1    ORDER BY T1.date_sold DESC LIMIT 1",
    "readable_query": "SELECT properties.vendor_requested_price FROM Properties AS properties    ORDER BY properties.date_sold DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.fld_feature_2 FROM Properties AS T1    ORDER BY T1.room_count DESC LIMIT 1",
    "readable_query": "SELECT properties.fld_feature_2 FROM Properties AS properties    ORDER BY properties.room_count DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.property_id FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id    ORDER BY T2.feature_id DESC LIMIT 1",
    "readable_query": "SELECT properties.property_id FROM Properties AS properties JOIN Other_Property_Features AS other_property_features ON properties.property_id = other_property_features.property_id    ORDER BY other_property_features.feature_id DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code    ORDER BY T2.feature_id DESC LIMIT 1",
    "readable_query": "SELECT reference_feature_types.feature_type_name FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code    ORDER BY other_available_features.feature_id DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.feature_type_code FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id    ORDER BY T2.feature_id DESC LIMIT 1",
    "readable_query": "SELECT other_available_features.feature_type_code FROM Other_Available_Features AS other_available_features JOIN Other_Property_Features AS other_property_features ON other_available_features.feature_id = other_property_features.feature_id    ORDER BY other_property_features.feature_id DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id    ORDER BY T2.feature_id DESC LIMIT 1",
    "readable_query": "SELECT other_property_features.property_feature_description FROM Other_Property_Features AS other_property_features JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id    ORDER BY other_available_features.feature_id DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.feature_type_code FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code    ORDER BY T2.feature_id ASC LIMIT 1",
    "readable_query": "SELECT reference_feature_types.feature_type_code FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code    ORDER BY other_available_features.feature_id ASC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.fld_feature_1 FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id    ORDER BY T2.feature_id ASC LIMIT 1",
    "readable_query": "SELECT properties.fld_feature_1 FROM Properties AS properties JOIN Other_Property_Features AS other_property_features ON properties.property_id = other_property_features.property_id    ORDER BY other_property_features.feature_id ASC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code    ORDER BY T2.feature_id ASC LIMIT 1",
    "readable_query": "SELECT reference_feature_types.feature_type_name FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code    ORDER BY other_available_features.feature_id ASC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id    ORDER BY T2.feature_id ASC LIMIT 1",
    "readable_query": "SELECT other_property_features.property_id FROM Other_Property_Features AS other_property_features JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id    ORDER BY other_available_features.feature_id ASC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id    ORDER BY T2.buyer_offered_price ASC LIMIT 1",
    "readable_query": "SELECT other_property_features.property_id FROM Other_Property_Features AS other_property_features JOIN Properties AS properties ON other_property_features.property_id = properties.property_id    ORDER BY properties.buyer_offered_price ASC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code    ORDER BY T2.vendor_requested_price ASC LIMIT 1",
    "readable_query": "SELECT reference_property_types.property_type_code FROM Ref_Property_Types AS reference_property_types JOIN Properties AS properties ON reference_property_types.property_type_code = properties.property_type_code    ORDER BY properties.vendor_requested_price ASC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id    ORDER BY T2.feature_id ASC LIMIT 1",
    "readable_query": "SELECT other_available_features.feature_name FROM Other_Available_Features AS other_available_features JOIN Other_Property_Features AS other_property_features ON other_available_features.feature_id = other_property_features.feature_id    ORDER BY other_property_features.feature_id ASC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.feature_type_name, T1.feature_type_code FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code    ORDER BY T2.feature_id DESC LIMIT 1",
    "readable_query": "SELECT reference_feature_types.feature_type_name, reference_feature_types.feature_type_code FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code    ORDER BY other_available_features.feature_id DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.property_id, T1.property_feature_description FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id    ORDER BY T2.feature_id DESC LIMIT 1",
    "readable_query": "SELECT other_property_features.property_id, other_property_features.property_feature_description FROM Other_Property_Features AS other_property_features JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id    ORDER BY other_available_features.feature_id DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.feature_name, T1.feature_description FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id    ORDER BY T2.property_id DESC LIMIT 1",
    "readable_query": "SELECT other_available_features.feature_name, other_available_features.feature_description FROM Other_Available_Features AS other_available_features JOIN Other_Property_Features AS other_property_features ON other_available_features.feature_id = other_property_features.feature_id    ORDER BY other_property_features.property_id DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.property_type_description, T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code    ORDER BY T2.room_count DESC LIMIT 1",
    "readable_query": "SELECT reference_property_types.property_type_description, reference_property_types.property_type_code FROM Ref_Property_Types AS reference_property_types JOIN Properties AS properties ON reference_property_types.property_type_code = properties.property_type_code    ORDER BY properties.room_count DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.oth_feature_1, T1.fld_feature_2 FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id    ORDER BY T2.property_id DESC LIMIT 1",
    "readable_query": "SELECT properties.oth_feature_1, properties.fld_feature_2 FROM Properties AS properties JOIN Other_Property_Features AS other_property_features ON properties.property_id = other_property_features.property_id    ORDER BY other_property_features.property_id DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.feature_type_code, T1.feature_type_name FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code    ORDER BY T2.feature_id DESC LIMIT 1",
    "readable_query": "SELECT reference_feature_types.feature_type_code, reference_feature_types.feature_type_name FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code    ORDER BY other_available_features.feature_id DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.property_type_code) FROM Ref_Property_Types AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  reference_property_types.property_type_code) FROM Ref_Property_Types AS reference_property_types"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.feature_type_code) FROM Other_Available_Features AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  other_available_features.feature_type_code) FROM Other_Available_Features AS other_available_features"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.property_address) FROM Properties AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  properties.property_address) FROM Properties AS properties"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.buyer_offered_price) FROM Properties AS T1",
    "readable_query": "SELECT avg( properties.buyer_offered_price) FROM Properties AS properties"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.agreed_selling_price) FROM Properties AS T1",
    "readable_query": "SELECT avg( properties.agreed_selling_price) FROM Properties AS properties"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.property_id) FROM Other_Property_Features AS T1",
    "readable_query": "SELECT avg( other_property_features.property_id) FROM Other_Property_Features AS other_property_features"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.feature_type_code FROM Ref_Feature_Types AS T1",
    "readable_query": "SELECT reference_feature_types.feature_type_code FROM Ref_Feature_Types AS reference_feature_types"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.agreed_selling_price FROM Properties AS T1",
    "readable_query": "SELECT properties.agreed_selling_price FROM Properties AS properties"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.feature_description FROM Other_Available_Features AS T1",
    "readable_query": "SELECT DISTINCT other_available_features.feature_description FROM Other_Available_Features AS other_available_features"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.feature_type_code FROM Other_Available_Features AS T1",
    "readable_query": "SELECT DISTINCT other_available_features.feature_type_code FROM Other_Available_Features AS other_available_features"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.feature_id FROM Other_Property_Features AS T1",
    "readable_query": "SELECT DISTINCT other_property_features.feature_id FROM Other_Property_Features AS other_property_features"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.fld_feature_2 FROM Properties AS T1     ORDER BY T1.room_count ASC",
    "readable_query": "SELECT properties.fld_feature_2 FROM Properties AS properties     ORDER BY properties.room_count ASC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.hse_feature_2 FROM Properties AS T1     ORDER BY T1.property_id ASC",
    "readable_query": "SELECT properties.hse_feature_2 FROM Properties AS properties     ORDER BY properties.property_id ASC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1     ORDER BY T1.property_id ASC",
    "readable_query": "SELECT other_property_features.property_feature_description FROM Other_Property_Features AS other_property_features     ORDER BY other_property_features.property_id ASC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1     ORDER BY T1.feature_id ASC",
    "readable_query": "SELECT other_available_features.feature_name FROM Other_Available_Features AS other_available_features     ORDER BY other_available_features.feature_id ASC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.feature_description FROM Other_Available_Features AS T1     ORDER BY T1.feature_id ASC",
    "readable_query": "SELECT other_available_features.feature_description FROM Other_Available_Features AS other_available_features     ORDER BY other_available_features.feature_id ASC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.feature_description FROM Other_Available_Features AS T1     ORDER BY T1.feature_id DESC",
    "readable_query": "SELECT other_available_features.feature_description FROM Other_Available_Features AS other_available_features     ORDER BY other_available_features.feature_id DESC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.buyer_offered_price FROM Properties AS T1     ORDER BY T1.property_id DESC",
    "readable_query": "SELECT properties.buyer_offered_price FROM Properties AS properties     ORDER BY properties.property_id DESC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1     ORDER BY T1.property_id DESC",
    "readable_query": "SELECT other_property_features.property_feature_description FROM Other_Property_Features AS other_property_features     ORDER BY other_property_features.property_id DESC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.feature_type_code FROM Other_Available_Features AS T1     ORDER BY T1.feature_id DESC",
    "readable_query": "SELECT other_available_features.feature_type_code FROM Other_Available_Features AS other_available_features     ORDER BY other_available_features.feature_id DESC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1     ORDER BY T1.feature_id DESC",
    "readable_query": "SELECT other_available_features.feature_name FROM Other_Available_Features AS other_available_features     ORDER BY other_available_features.feature_id DESC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1     ORDER BY T1.feature_id DESC",
    "readable_query": "SELECT other_property_features.property_feature_description FROM Other_Property_Features AS other_property_features     ORDER BY other_property_features.feature_id DESC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.shp_feature_1, T1.date_sold FROM Properties AS T1     ORDER BY T1.date_sold ASC",
    "readable_query": "SELECT properties.shp_feature_1, properties.date_sold FROM Properties AS properties     ORDER BY properties.date_sold ASC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.feature_type_code, T1.feature_type_name FROM Ref_Feature_Types AS T1     ORDER BY T1.feature_type_name ASC",
    "readable_query": "SELECT reference_feature_types.feature_type_code, reference_feature_types.feature_type_name FROM Ref_Feature_Types AS reference_feature_types     ORDER BY reference_feature_types.feature_type_name ASC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.property_id, T1.buyer_offered_price FROM Properties AS T1     ORDER BY T1.buyer_offered_price ASC",
    "readable_query": "SELECT properties.property_id, properties.buyer_offered_price FROM Properties AS properties     ORDER BY properties.buyer_offered_price ASC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.feature_id, T1.feature_description FROM Other_Available_Features AS T1     ORDER BY T1.feature_description ASC",
    "readable_query": "SELECT other_available_features.feature_id, other_available_features.feature_description FROM Other_Available_Features AS other_available_features     ORDER BY other_available_features.feature_description ASC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id JOIN Other_Available_Features AS T3 ON T1.feature_id = T3.feature_id WHERE T2.apt_feature_1 = \"est\" and T3.feature_type_code = \"Amenity\"",
    "readable_query": "SELECT other_property_features.property_id FROM Other_Property_Features AS other_property_features JOIN Properties AS properties ON other_property_features.property_id = properties.property_id JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id WHERE properties.apt_feature_1 = \"est\" and other_available_features.feature_type_code = \"Amenity\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.hse_feature_1 FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code JOIN Other_Property_Features AS T3 ON T1.property_id = T3.property_id WHERE T2.property_type_code = \"Field\" and T3.property_id = 13",
    "readable_query": "SELECT properties.hse_feature_1 FROM Properties AS properties JOIN Ref_Property_Types AS reference_property_types ON properties.property_type_code = reference_property_types.property_type_code JOIN Other_Property_Features AS other_property_features ON properties.property_id = other_property_features.property_id WHERE reference_property_types.property_type_code = \"Field\" and other_property_features.property_id = 13"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code JOIN Other_Property_Features AS T3 ON T2.feature_id = T3.feature_id WHERE T2.feature_description = \"Burglar Alarm\" and T3.property_id = 6",
    "readable_query": "SELECT reference_feature_types.feature_type_name FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code JOIN Other_Property_Features AS other_property_features ON other_available_features.feature_id = other_property_features.feature_id WHERE other_available_features.feature_description = \"Burglar Alarm\" and other_property_features.property_id = 6"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.feature_id FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.feature_name = \"Pool\" or T2.feature_name = \"BurglarAlarm\"",
    "readable_query": "SELECT other_property_features.feature_id FROM Other_Property_Features AS other_property_features JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id WHERE other_available_features.feature_name = \"Pool\" or other_available_features.feature_name = \"BurglarAlarm\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.agreed_selling_price = 21769471.8328 or T2.agreed_selling_price = 21769471.8328",
    "readable_query": "SELECT reference_property_types.property_type_code FROM Ref_Property_Types AS reference_property_types JOIN Properties AS properties ON reference_property_types.property_type_code = properties.property_type_code WHERE properties.agreed_selling_price = 21769471.8328 or properties.agreed_selling_price = 21769471.8328"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.feature_description FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.property_feature_description = \"doloribus\" or T2.property_feature_description = \"corrupti\"",
    "readable_query": "SELECT other_available_features.feature_description FROM Other_Available_Features AS other_available_features JOIN Other_Property_Features AS other_property_features ON other_available_features.feature_id = other_property_features.feature_id WHERE other_property_features.property_feature_description = \"doloribus\" or other_property_features.property_feature_description = \"corrupti\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.feature_type_code FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_type_name = \"Securiyt, eg Burglar Alarm.\" or T2.feature_type_name = \"Amenity, eg Pool.\"",
    "readable_query": "SELECT other_available_features.feature_type_code FROM Other_Available_Features AS other_available_features JOIN Ref_Feature_Types AS reference_feature_types ON other_available_features.feature_type_code = reference_feature_types.feature_type_code WHERE reference_feature_types.feature_type_name = \"Securiyt, eg Burglar Alarm.\" or reference_feature_types.feature_type_name = \"Amenity, eg Pool.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.feature_description FROM Other_Available_Features AS T1 WHERE T1.feature_type_code = \"Security\" and T1.feature_id = 3",
    "readable_query": "SELECT other_available_features.feature_description FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_type_code = \"Security\" and other_available_features.feature_id = 3"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.feature_id FROM Other_Property_Features AS T1 WHERE T1.property_feature_description = \"quo\" and T1.property_id = 9",
    "readable_query": "SELECT other_property_features.feature_id FROM Other_Property_Features AS other_property_features WHERE other_property_features.property_feature_description = \"quo\" and other_property_features.property_id = 9"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1 WHERE T1.feature_type_code = \"Security\" and T1.feature_id = 4",
    "readable_query": "SELECT other_available_features.feature_name FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_type_code = \"Security\" and other_available_features.feature_id = 4"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1 WHERE T1.feature_id = 3 and T1.property_id = 3",
    "readable_query": "SELECT other_property_features.property_feature_description FROM Other_Property_Features AS other_property_features WHERE other_property_features.feature_id = 3 and other_property_features.property_id = 3"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1 WHERE T1.feature_id = 2 and T1.property_id = 4",
    "readable_query": "SELECT other_property_features.property_feature_description FROM Other_Property_Features AS other_property_features WHERE other_property_features.feature_id = 2 and other_property_features.property_id = 4"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.apt_feature_3) FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code WHERE T1.property_type_code = \"Other\" and T2.property_type_description = \"House, Bungalow, etc.\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  properties.apt_feature_3) FROM Properties AS properties JOIN Ref_Property_Types AS reference_property_types ON properties.property_type_code = reference_property_types.property_type_code WHERE properties.property_type_code = \"Other\" and reference_property_types.property_type_description = \"House, Bungalow, etc.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.feature_type_code) FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_type_name = \"Securiyt, eg Burglar Alarm.\" and T2.feature_id = 2",
    "readable_query": "SELECT DISTINCT count(DISTINCT  reference_feature_types.feature_type_code) FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code WHERE reference_feature_types.feature_type_name = \"Securiyt, eg Burglar Alarm.\" and other_available_features.feature_id = 2"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.feature_type_code) FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_type_name = \"Securiyt, eg Burglar Alarm.\" and T2.feature_name = \"BurglarAlarm\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  reference_feature_types.feature_type_code) FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code WHERE reference_feature_types.feature_type_name = \"Securiyt, eg Burglar Alarm.\" and other_available_features.feature_name = \"BurglarAlarm\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.feature_description) FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T1.feature_name = \"Pool\" and T2.property_feature_description = \"ad\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  other_available_features.feature_description) FROM Other_Available_Features AS other_available_features JOIN Other_Property_Features AS other_property_features ON other_available_features.feature_id = other_property_features.feature_id WHERE other_available_features.feature_name = \"Pool\" and other_property_features.property_feature_description = \"ad\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1 WHERE T1.feature_id = 3 or T1.feature_type_code = \"Amenity\"",
    "readable_query": "SELECT other_available_features.feature_name FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_id = 3 or other_available_features.feature_type_code = \"Amenity\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1 WHERE T1.feature_description = \"Swimming Pool.\" or T1.feature_type_code = \"Security\"",
    "readable_query": "SELECT other_available_features.feature_name FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_description = \"Swimming Pool.\" or other_available_features.feature_type_code = \"Security\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_type_code = \"Amenity\" and T2.feature_type_name = \"Securiyt, eg Burglar Alarm.\"",
    "readable_query": "SELECT count(*) FROM Other_Available_Features AS other_available_features JOIN Ref_Feature_Types AS reference_feature_types ON other_available_features.feature_type_code = reference_feature_types.feature_type_code WHERE reference_feature_types.feature_type_code = \"Amenity\" and reference_feature_types.feature_type_name = \"Securiyt, eg Burglar Alarm.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id WHERE T2.property_feature_description = \"earum\" and T2.feature_id = 2",
    "readable_query": "SELECT count(*) FROM Properties AS properties JOIN Other_Property_Features AS other_property_features ON properties.property_id = other_property_features.property_id WHERE other_property_features.property_feature_description = \"earum\" and other_property_features.feature_id = 2"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.property_type_code = \"Field\" and T2.property_type_description = \"Shop, Retail Outlet.\"",
    "readable_query": "SELECT count(*) FROM Properties AS properties JOIN Ref_Property_Types AS reference_property_types ON properties.property_type_code = reference_property_types.property_type_code WHERE reference_property_types.property_type_code = \"Field\" and reference_property_types.property_type_description = \"Shop, Retail Outlet.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_name = \"BurglarAlarm\" and T2.feature_description = \"Swimming Pool.\"",
    "readable_query": "SELECT count(*) FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code WHERE other_available_features.feature_name = \"BurglarAlarm\" and other_available_features.feature_description = \"Swimming Pool.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.feature_description = \"Burglar Alarm\" and T2.feature_type_code = \"Security\"",
    "readable_query": "SELECT count(*) FROM Other_Property_Features AS other_property_features JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id WHERE other_available_features.feature_description = \"Burglar Alarm\" and other_available_features.feature_type_code = \"Security\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.property_feature_description = \"quo\" and T2.property_id = 3",
    "readable_query": "SELECT count(*) FROM Other_Available_Features AS other_available_features JOIN Other_Property_Features AS other_property_features ON other_available_features.feature_id = other_property_features.feature_id WHERE other_property_features.property_feature_description = \"quo\" and other_property_features.property_id = 3"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.feature_id = 4 and T2.property_id = 15",
    "readable_query": "SELECT count(*) FROM Other_Available_Features AS other_available_features JOIN Other_Property_Features AS other_property_features ON other_available_features.feature_id = other_property_features.feature_id WHERE other_property_features.feature_id = 4 and other_property_features.property_id = 15"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.property_type_description = \"Apartment, Flat, Condo, etc.\" and T2.property_type_code = \"House\"",
    "readable_query": "SELECT count(*) FROM Properties AS properties JOIN Ref_Property_Types AS reference_property_types ON properties.property_type_code = reference_property_types.property_type_code WHERE reference_property_types.property_type_description = \"Apartment, Flat, Condo, etc.\" and reference_property_types.property_type_code = \"House\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.feature_type_code = \"Security\" and T2.feature_description = \"Swimming Pool.\"",
    "readable_query": "SELECT count(*) FROM Other_Property_Features AS other_property_features JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id WHERE other_available_features.feature_type_code = \"Security\" and other_available_features.feature_description = \"Swimming Pool.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.feature_name = \"BurglarAlarm\" and T2.feature_description = \"Swimming Pool.\"",
    "readable_query": "SELECT count(*) FROM Other_Property_Features AS other_property_features JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id WHERE other_available_features.feature_name = \"BurglarAlarm\" and other_available_features.feature_description = \"Swimming Pool.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_type_code = \"Security\" and T2.feature_type_name = \"Securiyt, eg Burglar Alarm.\"",
    "readable_query": "SELECT count(*) FROM Other_Available_Features AS other_available_features JOIN Ref_Feature_Types AS reference_feature_types ON other_available_features.feature_type_code = reference_feature_types.feature_type_code WHERE reference_feature_types.feature_type_code = \"Security\" and reference_feature_types.feature_type_name = \"Securiyt, eg Burglar Alarm.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.vendor_requested_price FROM Properties AS T1 WHERE T1.property_type_code != \"Shop\"",
    "readable_query": "SELECT properties.vendor_requested_price FROM Properties AS properties WHERE properties.property_type_code != \"Shop\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.property_type_description FROM Ref_Property_Types AS T1 WHERE T1.property_type_code != \"Field\"",
    "readable_query": "SELECT reference_property_types.property_type_description FROM Ref_Property_Types AS reference_property_types WHERE reference_property_types.property_type_code != \"Field\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.feature_description FROM Other_Available_Features AS T1 WHERE T1.feature_name != \"Pool\"",
    "readable_query": "SELECT other_available_features.feature_description FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_name != \"Pool\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.feature_type_code FROM Ref_Feature_Types AS T1 WHERE T1.feature_type_name != \"Amenity, eg Pool.\"",
    "readable_query": "SELECT reference_feature_types.feature_type_code FROM Ref_Feature_Types AS reference_feature_types WHERE reference_feature_types.feature_type_name != \"Amenity, eg Pool.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.property_type_code FROM Ref_Property_Types AS T1 WHERE T1.property_type_description != \"Apartment, Flat, Condo, etc.\"",
    "readable_query": "SELECT reference_property_types.property_type_code FROM Ref_Property_Types AS reference_property_types WHERE reference_property_types.property_type_description != \"Apartment, Flat, Condo, etc.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.property_type_description FROM Ref_Property_Types AS T1 WHERE T1.property_type_code != \"House\"",
    "readable_query": "SELECT reference_property_types.property_type_description FROM Ref_Property_Types AS reference_property_types WHERE reference_property_types.property_type_code != \"House\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1 WHERE T1.feature_id != 4",
    "readable_query": "SELECT other_property_features.property_feature_description FROM Other_Property_Features AS other_property_features WHERE other_property_features.feature_id != 4"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.feature_type_code FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_name != \"Pool\"",
    "readable_query": "SELECT reference_feature_types.feature_type_code FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code WHERE other_available_features.feature_name != \"Pool\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.feature_id FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_type_code != \"Security\"",
    "readable_query": "SELECT other_available_features.feature_id FROM Other_Available_Features AS other_available_features JOIN Ref_Feature_Types AS reference_feature_types ON other_available_features.feature_type_code = reference_feature_types.feature_type_code WHERE reference_feature_types.feature_type_code != \"Security\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.property_id FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.property_type_description != \"Apartment, Flat, Condo, etc.\"",
    "readable_query": "SELECT properties.property_id FROM Properties AS properties JOIN Ref_Property_Types AS reference_property_types ON properties.property_type_code = reference_property_types.property_type_code WHERE reference_property_types.property_type_description != \"Apartment, Flat, Condo, etc.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.feature_type_code FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_id != 3",
    "readable_query": "SELECT reference_feature_types.feature_type_code FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code WHERE other_available_features.feature_id != 3"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_name != \"Pool\"",
    "readable_query": "SELECT reference_feature_types.feature_type_name FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code WHERE other_available_features.feature_name != \"Pool\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.feature_id FROM Other_Property_Features AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id WHERE T2.apt_feature_1 != \"nesciunt\"",
    "readable_query": "SELECT other_property_features.feature_id FROM Other_Property_Features AS other_property_features JOIN Properties AS properties ON other_property_features.property_id = properties.property_id WHERE properties.apt_feature_1 != \"nesciunt\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_type_code != \"Security\"",
    "readable_query": "SELECT reference_feature_types.feature_type_name FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code WHERE other_available_features.feature_type_code != \"Security\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.feature_id FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.feature_type_code = \"Security\"",
    "readable_query": "SELECT DISTINCT other_property_features.feature_id FROM Other_Property_Features AS other_property_features JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id WHERE other_available_features.feature_type_code = \"Security\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.feature_type_code FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_id = 4",
    "readable_query": "SELECT DISTINCT reference_feature_types.feature_type_code FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code WHERE other_available_features.feature_id = 4"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.property_id FROM Other_Property_Features AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id WHERE T2.vendor_requested_price = 150045.7568",
    "readable_query": "SELECT DISTINCT other_property_features.property_id FROM Other_Property_Features AS other_property_features JOIN Properties AS properties ON other_property_features.property_id = properties.property_id WHERE properties.vendor_requested_price = 150045.7568"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.agreed_selling_price FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id WHERE T2.property_id = 6",
    "readable_query": "SELECT DISTINCT properties.agreed_selling_price FROM Properties AS properties JOIN Other_Property_Features AS other_property_features ON properties.property_id = other_property_features.property_id WHERE other_property_features.property_id = 6"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.property_feature_description FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.feature_id = 3",
    "readable_query": "SELECT DISTINCT other_property_features.property_feature_description FROM Other_Property_Features AS other_property_features JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id WHERE other_available_features.feature_id = 3"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.feature_type_code FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_description = \"Burglar Alarm\"",
    "readable_query": "SELECT DISTINCT reference_feature_types.feature_type_code FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code WHERE other_available_features.feature_description = \"Burglar Alarm\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.feature_type_code FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_id = 4",
    "readable_query": "SELECT DISTINCT reference_feature_types.feature_type_code FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code WHERE other_available_features.feature_id = 4"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.feature_id) FROM Other_Property_Features AS T1 WHERE T1.property_feature_description = \"earum\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  other_property_features.feature_id) FROM Other_Property_Features AS other_property_features WHERE other_property_features.property_feature_description = \"earum\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.property_id) FROM Other_Property_Features AS T1 WHERE T1.feature_id = 4",
    "readable_query": "SELECT DISTINCT count(DISTINCT  other_property_features.property_id) FROM Other_Property_Features AS other_property_features WHERE other_property_features.feature_id = 4"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.other_property_details) FROM Properties AS T1 WHERE T1.agreed_selling_price = 456840888.16",
    "readable_query": "SELECT DISTINCT count(DISTINCT  properties.other_property_details) FROM Properties AS properties WHERE properties.agreed_selling_price = 456840888.16"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.feature_id) FROM Other_Available_Features AS T1 WHERE T1.feature_type_code = \"Amenity\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  other_available_features.feature_id) FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_type_code = \"Amenity\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.property_type_code) FROM Ref_Property_Types AS T1 WHERE T1.property_type_description = \"Apartment, Flat, Condo, etc.\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  reference_property_types.property_type_code) FROM Ref_Property_Types AS reference_property_types WHERE reference_property_types.property_type_description = \"Apartment, Flat, Condo, etc.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1 WHERE T1.feature_id > 2",
    "readable_query": "SELECT other_property_features.property_feature_description FROM Other_Property_Features AS other_property_features WHERE other_property_features.feature_id > 2"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.feature_type_code FROM Other_Available_Features AS T1 WHERE T1.feature_id > 3",
    "readable_query": "SELECT other_available_features.feature_type_code FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_id > 3"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.feature_description FROM Other_Available_Features AS T1 WHERE T1.feature_id > 4",
    "readable_query": "SELECT other_available_features.feature_description FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_id > 4"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.apt_feature_1 FROM Properties AS T1 WHERE T1.vendor_requested_price > 6713620.9",
    "readable_query": "SELECT properties.apt_feature_1 FROM Properties AS properties WHERE properties.vendor_requested_price > 6713620.9"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.property_name FROM Properties AS T1 WHERE T1.room_count > 3",
    "readable_query": "SELECT properties.property_name FROM Properties AS properties WHERE properties.room_count > 3"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1 WHERE T1.feature_id > 4",
    "readable_query": "SELECT other_property_features.property_feature_description FROM Other_Property_Features AS other_property_features WHERE other_property_features.feature_id > 4"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.feature_id, T2.feature_name, T3.shp_feature_3 FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id JOIN Properties AS T3 ON T1.property_id = T3.property_id",
    "readable_query": "SELECT other_property_features.feature_id, other_available_features.feature_name, properties.shp_feature_3 FROM Other_Property_Features AS other_property_features JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id JOIN Properties AS properties ON other_property_features.property_id = properties.property_id"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.feature_type_code, T2.feature_description, T3.property_id FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code JOIN Other_Property_Features AS T3 ON T2.feature_id = T3.feature_id",
    "readable_query": "SELECT reference_feature_types.feature_type_code, other_available_features.feature_description, other_property_features.property_id FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code JOIN Other_Property_Features AS other_property_features ON other_available_features.feature_id = other_property_features.feature_id"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.vendor_requested_price, T2.feature_id, T3.feature_description FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id JOIN Other_Available_Features AS T3 ON T2.feature_id = T3.feature_id",
    "readable_query": "SELECT properties.vendor_requested_price, other_property_features.feature_id, other_available_features.feature_description FROM Properties AS properties JOIN Other_Property_Features AS other_property_features ON properties.property_id = other_property_features.property_id JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.property_type_code, T2.hse_feature_1, T3.property_feature_description FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code JOIN Other_Property_Features AS T3 ON T2.property_id = T3.property_id",
    "readable_query": "SELECT reference_property_types.property_type_code, properties.hse_feature_1, other_property_features.property_feature_description FROM Ref_Property_Types AS reference_property_types JOIN Properties AS properties ON reference_property_types.property_type_code = properties.property_type_code JOIN Other_Property_Features AS other_property_features ON properties.property_id = other_property_features.property_id"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.date_sold FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id     ORDER BY T2.feature_id ASC",
    "readable_query": "SELECT properties.date_sold FROM Properties AS properties JOIN Other_Property_Features AS other_property_features ON properties.property_id = other_property_features.property_id     ORDER BY other_property_features.feature_id ASC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id     ORDER BY T2.feature_id ASC",
    "readable_query": "SELECT other_property_features.property_feature_description FROM Other_Property_Features AS other_property_features JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id     ORDER BY other_available_features.feature_id ASC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.feature_description FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id     ORDER BY T2.feature_id ASC",
    "readable_query": "SELECT other_available_features.feature_description FROM Other_Available_Features AS other_available_features JOIN Other_Property_Features AS other_property_features ON other_available_features.feature_id = other_property_features.feature_id     ORDER BY other_property_features.feature_id ASC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.agreed_selling_price FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id     ORDER BY T2.feature_id ASC",
    "readable_query": "SELECT properties.agreed_selling_price FROM Properties AS properties JOIN Other_Property_Features AS other_property_features ON properties.property_id = other_property_features.property_id     ORDER BY other_property_features.feature_id ASC"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.shp_feature_1 FROM Properties AS T1 WHERE T1.buyer_offered_price = 1.5509     INTERSECT SELECT T2.shp_feature_1 FROM Properties AS T2 WHERE T2.buyer_offered_price = 1.5509",
    "readable_query": "SELECT properties.shp_feature_1 FROM Properties AS properties WHERE properties.buyer_offered_price = 1.5509     INTERSECT SELECT properties.shp_feature_1 FROM Properties AS properties WHERE properties.buyer_offered_price = 1.5509"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 WHERE T1.feature_type_code = \"Security\"     INTERSECT SELECT T2.feature_type_name FROM Ref_Feature_Types AS T2 WHERE T2.feature_type_code = \"Amenity\"",
    "readable_query": "SELECT reference_feature_types.feature_type_name FROM Ref_Feature_Types AS reference_feature_types WHERE reference_feature_types.feature_type_code = \"Security\"     INTERSECT SELECT reference_feature_types.feature_type_name FROM Ref_Feature_Types AS reference_feature_types WHERE reference_feature_types.feature_type_code = \"Amenity\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.property_address FROM Properties AS T1 WHERE T1.agreed_selling_price = 170766.472     INTERSECT SELECT T2.property_address FROM Properties AS T2 WHERE T2.agreed_selling_price = 44132.4621",
    "readable_query": "SELECT properties.property_address FROM Properties AS properties WHERE properties.agreed_selling_price = 170766.472     INTERSECT SELECT properties.property_address FROM Properties AS properties WHERE properties.agreed_selling_price = 44132.4621"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.property_type_code FROM Ref_Property_Types AS T1 WHERE T1.property_type_description = \"House, Bungalow, etc.\"     INTERSECT SELECT T2.property_type_code FROM Ref_Property_Types AS T2 WHERE T2.property_type_description = \"Apartment, Flat, Condo, etc.\"",
    "readable_query": "SELECT reference_property_types.property_type_code FROM Ref_Property_Types AS reference_property_types WHERE reference_property_types.property_type_description = \"House, Bungalow, etc.\"     INTERSECT SELECT reference_property_types.property_type_code FROM Ref_Property_Types AS reference_property_types WHERE reference_property_types.property_type_description = \"Apartment, Flat, Condo, etc.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.feature_type_code FROM Ref_Feature_Types AS T1 WHERE T1.feature_type_name = \"Amenity, eg Pool.\"     INTERSECT SELECT T2.feature_type_code FROM Ref_Feature_Types AS T2 WHERE T2.feature_type_name = \"Securiyt, eg Burglar Alarm.\"",
    "readable_query": "SELECT reference_feature_types.feature_type_code FROM Ref_Feature_Types AS reference_feature_types WHERE reference_feature_types.feature_type_name = \"Amenity, eg Pool.\"     INTERSECT SELECT reference_feature_types.feature_type_code FROM Ref_Feature_Types AS reference_feature_types WHERE reference_feature_types.feature_type_name = \"Securiyt, eg Burglar Alarm.\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.feature_id) FROM Other_Property_Features AS T1 WHERE T1.property_id = 7",
    "readable_query": "SELECT avg( other_property_features.feature_id) FROM Other_Property_Features AS other_property_features WHERE other_property_features.property_id = 7"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.agreed_selling_price) FROM Properties AS T1 WHERE T1.room_count = 3",
    "readable_query": "SELECT avg( properties.agreed_selling_price) FROM Properties AS properties WHERE properties.room_count = 3"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.buyer_offered_price) FROM Properties AS T1 WHERE T1.property_name = \"longacre\"",
    "readable_query": "SELECT avg( properties.buyer_offered_price) FROM Properties AS properties WHERE properties.property_name = \"longacre\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.feature_id) FROM Other_Property_Features AS T1 WHERE T1.property_id = 1",
    "readable_query": "SELECT avg( other_property_features.feature_id) FROM Other_Property_Features AS other_property_features WHERE other_property_features.property_id = 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.feature_id) FROM Other_Property_Features AS T1 WHERE T1.property_feature_description = \"cumque\"",
    "readable_query": "SELECT avg( other_property_features.feature_id) FROM Other_Property_Features AS other_property_features WHERE other_property_features.property_feature_description = \"cumque\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.feature_id) FROM Other_Available_Features AS T1 WHERE T1.feature_name = \"BurglarAlarm\"",
    "readable_query": "SELECT avg( other_available_features.feature_id) FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_name = \"BurglarAlarm\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.feature_id = (SELECT max( T23.feature_id) FROM Other_Available_Features AS T23)",
    "readable_query": "SELECT other_property_features.property_feature_description FROM Other_Property_Features AS other_property_features JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id WHERE other_available_features.feature_id = (SELECT max( other_available_features.feature_id) FROM Other_Available_Features AS other_available_features)"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_id = (SELECT max( T23.feature_id) FROM Other_Available_Features AS T23)",
    "readable_query": "SELECT reference_feature_types.feature_type_name FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code WHERE other_available_features.feature_id = (SELECT max( other_available_features.feature_id) FROM Other_Available_Features AS other_available_features)"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.feature_id = (SELECT max( T23.feature_id) FROM Other_Available_Features AS T23)",
    "readable_query": "SELECT other_property_features.property_id FROM Other_Property_Features AS other_property_features JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id WHERE other_available_features.feature_id = (SELECT max( other_available_features.feature_id) FROM Other_Available_Features AS other_available_features)"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.property_type_description FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.buyer_offered_price = (SELECT max( T23.buyer_offered_price) FROM Properties AS T23)",
    "readable_query": "SELECT reference_property_types.property_type_description FROM Ref_Property_Types AS reference_property_types JOIN Properties AS properties ON reference_property_types.property_type_code = properties.property_type_code WHERE properties.buyer_offered_price = (SELECT max( properties.buyer_offered_price) FROM Properties AS properties)"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.property_type_description FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.vendor_requested_price = (SELECT max( T23.vendor_requested_price) FROM Properties AS T23)",
    "readable_query": "SELECT reference_property_types.property_type_description FROM Ref_Property_Types AS reference_property_types JOIN Properties AS properties ON reference_property_types.property_type_code = properties.property_type_code WHERE properties.vendor_requested_price = (SELECT max( properties.vendor_requested_price) FROM Properties AS properties)"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id WHERE T2.vendor_requested_price = (SELECT max( T23.vendor_requested_price) FROM Properties AS T23)",
    "readable_query": "SELECT other_property_features.property_id FROM Other_Property_Features AS other_property_features JOIN Properties AS properties ON other_property_features.property_id = properties.property_id WHERE properties.vendor_requested_price = (SELECT max( properties.vendor_requested_price) FROM Properties AS properties)"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.feature_type_code FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_id = (SELECT max( T23.feature_id) FROM Other_Available_Features AS T23)",
    "readable_query": "SELECT reference_feature_types.feature_type_code FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code WHERE other_available_features.feature_id = (SELECT max( other_available_features.feature_id) FROM Other_Available_Features AS other_available_features)"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.buyer_offered_price = (SELECT max( T23.buyer_offered_price) FROM Properties AS T23)",
    "readable_query": "SELECT reference_property_types.property_type_code FROM Ref_Property_Types AS reference_property_types JOIN Properties AS properties ON reference_property_types.property_type_code = properties.property_type_code WHERE properties.buyer_offered_price = (SELECT max( properties.buyer_offered_price) FROM Properties AS properties)"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.property_id = (SELECT max( T23.property_id) FROM Other_Property_Features AS T23)",
    "readable_query": "SELECT other_available_features.feature_name FROM Other_Available_Features AS other_available_features JOIN Other_Property_Features AS other_property_features ON other_available_features.feature_id = other_property_features.feature_id WHERE other_property_features.property_id = (SELECT max( other_property_features.property_id) FROM Other_Property_Features AS other_property_features)"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.fld_feature_3, T2.property_id FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id JOIN Ref_Property_Types AS T3 ON T1.property_type_code = T3.property_type_code WHERE T3.property_type_code = \"Apartment\" and T2.property_feature_description = \"autem\"",
    "readable_query": "SELECT properties.fld_feature_3, other_property_features.property_id FROM Properties AS properties JOIN Other_Property_Features AS other_property_features ON properties.property_id = other_property_features.property_id JOIN Ref_Property_Types AS reference_property_types ON properties.property_type_code = reference_property_types.property_type_code WHERE reference_property_types.property_type_code = \"Apartment\" and other_property_features.property_feature_description = \"autem\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.property_id, T2.fld_feature_3 FROM Other_Property_Features AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id JOIN Ref_Property_Types AS T3 ON T2.property_type_code = T3.property_type_code WHERE T3.property_type_description = \"Field, Meadow.\" and T2.room_count = 7",
    "readable_query": "SELECT other_property_features.property_id, properties.fld_feature_3 FROM Other_Property_Features AS other_property_features JOIN Properties AS properties ON other_property_features.property_id = properties.property_id JOIN Ref_Property_Types AS reference_property_types ON properties.property_type_code = reference_property_types.property_type_code WHERE reference_property_types.property_type_description = \"Field, Meadow.\" and properties.room_count = 7"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.date_sold, T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code JOIN Other_Property_Features AS T3 ON T1.property_id = T3.property_id WHERE T3.feature_id = 3 and T2.property_type_code = \"Shop\"",
    "readable_query": "SELECT properties.date_sold, reference_property_types.property_type_description FROM Properties AS properties JOIN Ref_Property_Types AS reference_property_types ON properties.property_type_code = reference_property_types.property_type_code JOIN Other_Property_Features AS other_property_features ON properties.property_id = other_property_features.property_id WHERE other_property_features.feature_id = 3 and reference_property_types.property_type_code = \"Shop\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.feature_id, T2.feature_description FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id JOIN Ref_Feature_Types AS T3 ON T2.feature_type_code = T3.feature_type_code WHERE T3.feature_type_code = \"Amenity\" and T2.feature_name = \"BurglarAlarm\"",
    "readable_query": "SELECT other_property_features.feature_id, other_available_features.feature_description FROM Other_Property_Features AS other_property_features JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id JOIN Ref_Feature_Types AS reference_feature_types ON other_available_features.feature_type_code = reference_feature_types.feature_type_code WHERE reference_feature_types.feature_type_code = \"Amenity\" and other_available_features.feature_name = \"BurglarAlarm\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.feature_type_name, T2.feature_description FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code JOIN Other_Property_Features AS T3 ON T2.feature_id = T3.feature_id WHERE T3.property_feature_description = \"modi\" and T2.feature_name = \"AirCon\"",
    "readable_query": "SELECT reference_feature_types.feature_type_name, other_available_features.feature_description FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code JOIN Other_Property_Features AS other_property_features ON other_available_features.feature_id = other_property_features.feature_id WHERE other_property_features.property_feature_description = \"modi\" and other_available_features.feature_name = \"AirCon\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.feature_type_name, T2.feature_type_code FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code JOIN Other_Property_Features AS T3 ON T2.feature_id = T3.feature_id WHERE T3.property_feature_description = \"ad\" and T2.feature_id = 4",
    "readable_query": "SELECT reference_feature_types.feature_type_name, other_available_features.feature_type_code FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code JOIN Other_Property_Features AS other_property_features ON other_available_features.feature_id = other_property_features.feature_id WHERE other_property_features.property_feature_description = \"ad\" and other_available_features.feature_id = 4"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.agreed_selling_price, T2.property_id FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id JOIN Other_Available_Features AS T3 ON T2.feature_id = T3.feature_id WHERE T3.feature_description = \"Air Conditioning.\" and T2.feature_id = 2",
    "readable_query": "SELECT properties.agreed_selling_price, other_property_features.property_id FROM Properties AS properties JOIN Other_Property_Features AS other_property_features ON properties.property_id = other_property_features.property_id JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id WHERE other_available_features.feature_description = \"Air Conditioning.\" and other_property_features.feature_id = 2"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.feature_type_code, T2.feature_name FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code JOIN Other_Property_Features AS T3 ON T2.feature_id = T3.feature_id WHERE T3.property_feature_description = \"odio\" and T2.feature_id = 2",
    "readable_query": "SELECT reference_feature_types.feature_type_code, other_available_features.feature_name FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code JOIN Other_Property_Features AS other_property_features ON other_available_features.feature_id = other_property_features.feature_id WHERE other_property_features.property_feature_description = \"odio\" and other_available_features.feature_id = 2"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.property_type_description, T2.apt_feature_1 FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code JOIN Other_Property_Features AS T3 ON T2.property_id = T3.property_id WHERE T3.property_feature_description = \"et\" and T2.date_sold = \"1971-04-14 03:23:49\"",
    "readable_query": "SELECT reference_property_types.property_type_description, properties.apt_feature_1 FROM Ref_Property_Types AS reference_property_types JOIN Properties AS properties ON reference_property_types.property_type_code = properties.property_type_code JOIN Other_Property_Features AS other_property_features ON properties.property_id = other_property_features.property_id WHERE other_property_features.property_feature_description = \"et\" and properties.date_sold = \"1971-04-14 03:23:49\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.feature_id, T2.feature_description FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id JOIN Ref_Feature_Types AS T3 ON T2.feature_type_code = T3.feature_type_code WHERE T3.feature_type_code = \"Amenity\" and T2.feature_name = \"BurglarAlarm\"",
    "readable_query": "SELECT other_property_features.feature_id, other_available_features.feature_description FROM Other_Property_Features AS other_property_features JOIN Other_Available_Features AS other_available_features ON other_property_features.feature_id = other_available_features.feature_id JOIN Ref_Feature_Types AS reference_feature_types ON other_available_features.feature_type_code = reference_feature_types.feature_type_code WHERE reference_feature_types.feature_type_code = \"Amenity\" and other_available_features.feature_name = \"BurglarAlarm\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.property_name FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id WHERE T2.feature_id = 2 GROUP BY T1.property_name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT properties.property_name FROM Properties AS properties JOIN Other_Property_Features AS other_property_features ON properties.property_id = other_property_features.property_id WHERE other_property_features.feature_id = 2 GROUP BY properties.property_name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.feature_id FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_type_name = \"Amenity, eg Pool.\" GROUP BY T1.feature_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT other_available_features.feature_id FROM Other_Available_Features AS other_available_features JOIN Ref_Feature_Types AS reference_feature_types ON other_available_features.feature_type_code = reference_feature_types.feature_type_code WHERE reference_feature_types.feature_type_name = \"Amenity, eg Pool.\" GROUP BY other_available_features.feature_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.feature_id FROM Other_Property_Features AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id WHERE T2.apt_feature_2 = \"sequi\" GROUP BY T1.feature_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT other_property_features.feature_id FROM Other_Property_Features AS other_property_features JOIN Properties AS properties ON other_property_features.property_id = properties.property_id WHERE properties.apt_feature_2 = \"sequi\" GROUP BY other_property_features.feature_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.other_property_details FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id WHERE T2.property_feature_description = \"vitae\" GROUP BY T1.other_property_details  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT properties.other_property_details FROM Properties AS properties JOIN Other_Property_Features AS other_property_features ON properties.property_id = other_property_features.property_id WHERE other_property_features.property_feature_description = \"vitae\" GROUP BY properties.other_property_details  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.feature_type_code FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_description = \"Swimming Pool.\" GROUP BY T1.feature_type_code  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT reference_feature_types.feature_type_code FROM Ref_Feature_Types AS reference_feature_types JOIN Other_Available_Features AS other_available_features ON reference_feature_types.feature_type_code = other_available_features.feature_type_code WHERE other_available_features.feature_description = \"Swimming Pool.\" GROUP BY reference_feature_types.feature_type_code  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1        EXCEPT SELECT T2.property_feature_description FROM Other_Property_Features AS T2 WHERE T2.property_id = 12",
    "readable_query": "SELECT other_property_features.property_feature_description FROM Other_Property_Features AS other_property_features        EXCEPT SELECT other_property_features.property_feature_description FROM Other_Property_Features AS other_property_features WHERE other_property_features.property_id = 12"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1        EXCEPT SELECT T2.feature_name FROM Other_Available_Features AS T2 WHERE T2.feature_id = 2",
    "readable_query": "SELECT other_available_features.feature_name FROM Other_Available_Features AS other_available_features        EXCEPT SELECT other_available_features.feature_name FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_id = 2"
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.property_type_description FROM Ref_Property_Types AS T1        EXCEPT SELECT T2.property_type_description FROM Ref_Property_Types AS T2 WHERE T2.property_type_code = \"Field\"",
    "readable_query": "SELECT reference_property_types.property_type_description FROM Ref_Property_Types AS reference_property_types        EXCEPT SELECT reference_property_types.property_type_description FROM Ref_Property_Types AS reference_property_types WHERE reference_property_types.property_type_code = \"Field\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.feature_description FROM Other_Available_Features AS T1        EXCEPT SELECT T2.feature_description FROM Other_Available_Features AS T2 WHERE T2.feature_type_code = \"Amenity\"",
    "readable_query": "SELECT other_available_features.feature_description FROM Other_Available_Features AS other_available_features        EXCEPT SELECT other_available_features.feature_description FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_type_code = \"Amenity\""
  },
  {
    "db_id": "real_estate_properties",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.feature_id FROM Other_Available_Features AS T1        EXCEPT SELECT T2.feature_id FROM Other_Available_Features AS T2 WHERE T2.feature_description = \"Air Conditioning.\"",
    "readable_query": "SELECT other_available_features.feature_id FROM Other_Available_Features AS other_available_features        EXCEPT SELECT other_available_features.feature_id FROM Other_Available_Features AS other_available_features WHERE other_available_features.feature_description = \"Air Conditioning.\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.course_id FROM Student_Enrolment_Courses AS T1 WHERE T1.student_course_id = 70882679",
    "readable_query": "SELECT student_enrolment_courses.course_id FROM Student_Enrolment_Courses AS student_enrolment_courses WHERE student_enrolment_courses.student_course_id = 70882679"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.transcript_id FROM Transcripts AS T1 WHERE T1.transcript_date = \"1986-07-12 07:27:29\"",
    "readable_query": "SELECT transcripts.transcript_id FROM Transcripts AS transcripts WHERE transcripts.transcript_date = \"1986-07-12 07:27:29\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.transcript_id FROM Transcript_Contents AS T1 WHERE T1.student_course_id = 45105806",
    "readable_query": "SELECT transcript_contents.transcript_id FROM Transcript_Contents AS transcript_contents WHERE transcript_contents.student_course_id = 45105806"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.course_id FROM Sections AS T1 WHERE T1.section_name = \"o\"",
    "readable_query": "SELECT sections.course_id FROM Sections AS sections WHERE sections.section_name = \"o\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.section_id FROM Sections AS T1 WHERE T1.course_id = 7",
    "readable_query": "SELECT sections.section_id FROM Sections AS sections WHERE sections.course_id = 7"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.other_student_details FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.line_1 = \"202 Hessel Views Apt. 468\"",
    "readable_query": "SELECT students.other_student_details FROM Students AS students JOIN Addresses AS addresses ON students.permanent_address_id = addresses.address_id WHERE addresses.line_1 = \"202 Hessel Views Apt. 468\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.degree_program_id = 8",
    "readable_query": "SELECT semesters.semester_id FROM Semesters AS semesters JOIN Student_Enrolment AS student_enrolment ON semesters.semester_id = student_enrolment.semester_id WHERE student_enrolment.degree_program_id = 8"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.other_details FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id = 15",
    "readable_query": "SELECT semesters.other_details FROM Semesters AS semesters JOIN Student_Enrolment AS student_enrolment ON semesters.semester_id = student_enrolment.semester_id WHERE student_enrolment.student_enrolment_id = 15"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.section_name FROM Sections AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id WHERE T2.course_description = \"c\"",
    "readable_query": "SELECT sections.section_name FROM Sections AS sections JOIN Courses AS courses ON sections.course_id = courses.course_id WHERE courses.course_description = \"c\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id WHERE T2.student_course_id = 28982908",
    "readable_query": "SELECT transcripts.transcript_id FROM Transcripts AS transcripts JOIN Transcript_Contents AS transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE transcript_contents.student_course_id = 28982908"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id WHERE T2.ssn = \"402\"",
    "readable_query": "SELECT addresses.state_province_county FROM Addresses AS addresses JOIN Students AS students ON addresses.address_id = students.permanent_address_id WHERE students.ssn = \"402\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.student_enrolment_id FROM Student_Enrolment_Courses AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id WHERE T2.course_description = \"w\"",
    "readable_query": "SELECT student_enrolment_courses.student_enrolment_id FROM Student_Enrolment_Courses AS student_enrolment_courses JOIN Courses AS courses ON student_enrolment_courses.course_id = courses.course_id WHERE courses.course_description = \"w\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.semester_id, count(*) FROM Semesters AS T1  GROUP BY T1.semester_id",
    "readable_query": "SELECT semesters.semester_id, count(*) FROM Semesters AS semesters  GROUP BY semesters.semester_id"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.other_details, count(*) FROM Transcripts AS T1  GROUP BY T1.other_details",
    "readable_query": "SELECT transcripts.other_details, count(*) FROM Transcripts AS transcripts  GROUP BY transcripts.other_details"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.semester_name, count(*) FROM Semesters AS T1  GROUP BY T1.semester_name",
    "readable_query": "SELECT semesters.semester_name, count(*) FROM Semesters AS semesters  GROUP BY semesters.semester_name"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.degree_summary_description, count(*) FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id  GROUP BY T1.degree_summary_description",
    "readable_query": "SELECT degree_programs.degree_summary_description, count(*) FROM Degree_Programs AS degree_programs JOIN Departments AS departments ON degree_programs.department_id = departments.department_id  GROUP BY degree_programs.degree_summary_description"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.student_enrolment_id, count(*) FROM Student_Enrolment_Courses AS T1 JOIN Transcript_Contents AS T2 ON T1.student_course_id = T2.student_course_id  GROUP BY T1.student_enrolment_id",
    "readable_query": "SELECT student_enrolment_courses.student_enrolment_id, count(*) FROM Student_Enrolment_Courses AS student_enrolment_courses JOIN Transcript_Contents AS transcript_contents ON student_enrolment_courses.student_course_id = transcript_contents.student_course_id  GROUP BY student_enrolment_courses.student_enrolment_id"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.ssn, count(*) FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id  GROUP BY T1.ssn",
    "readable_query": "SELECT students.ssn, count(*) FROM Students AS students JOIN Addresses AS addresses ON students.permanent_address_id = addresses.address_id  GROUP BY students.ssn"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.transcript_date, count(*) FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_date",
    "readable_query": "SELECT transcripts.transcript_date, count(*) FROM Transcripts AS transcripts JOIN Transcript_Contents AS transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id  GROUP BY transcripts.transcript_date"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.student_enrolment_id, count(*) FROM Student_Enrolment AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id  GROUP BY T1.student_enrolment_id",
    "readable_query": "SELECT student_enrolment.student_enrolment_id, count(*) FROM Student_Enrolment AS student_enrolment JOIN Student_Enrolment_Courses AS student_enrolment_courses ON student_enrolment.student_enrolment_id = student_enrolment_courses.student_enrolment_id  GROUP BY student_enrolment.student_enrolment_id"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.city, count(*) FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id  GROUP BY T1.city",
    "readable_query": "SELECT addresses.city, count(*) FROM Addresses AS addresses JOIN Students AS students ON addresses.address_id = students.permanent_address_id  GROUP BY addresses.city"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.other_details, count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id  GROUP BY T1.other_details",
    "readable_query": "SELECT departments.other_details, count(*) FROM Departments AS departments JOIN Degree_Programs AS degree_programs ON departments.department_id = degree_programs.department_id  GROUP BY departments.other_details"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Students AS T1",
    "readable_query": "SELECT count(*) FROM Students AS students"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Transcripts AS T1",
    "readable_query": "SELECT count(*) FROM Transcripts AS transcripts"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Addresses AS T1",
    "readable_query": "SELECT count(*) FROM Addresses AS addresses"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Sections AS T1",
    "readable_query": "SELECT count(*) FROM Sections AS sections"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.student_enrolment_id, T1.student_course_id FROM Student_Enrolment_Courses AS T1",
    "readable_query": "SELECT student_enrolment_courses.student_enrolment_id, student_enrolment_courses.student_course_id FROM Student_Enrolment_Courses AS student_enrolment_courses"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.section_name, T1.section_id FROM Sections AS T1",
    "readable_query": "SELECT sections.section_name, sections.section_id FROM Sections AS sections"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.student_course_id, T1.transcript_id FROM Transcript_Contents AS T1",
    "readable_query": "SELECT transcript_contents.student_course_id, transcript_contents.transcript_id FROM Transcript_Contents AS transcript_contents"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.other_details, T2.degree_program_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id",
    "readable_query": "SELECT semesters.other_details, student_enrolment.degree_program_id FROM Semesters AS semesters JOIN Student_Enrolment AS student_enrolment ON semesters.semester_id = student_enrolment.semester_id"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.student_course_id, T2.transcript_date FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id",
    "readable_query": "SELECT transcript_contents.student_course_id, transcripts.transcript_date FROM Transcript_Contents AS transcript_contents JOIN Transcripts AS transcripts ON transcript_contents.transcript_id = transcripts.transcript_id"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.student_enrolment_id, T2.other_student_details FROM Student_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id",
    "readable_query": "SELECT student_enrolment.student_enrolment_id, students.other_student_details FROM Student_Enrolment AS student_enrolment JOIN Students AS students ON student_enrolment.student_id = students.student_id"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.transcript_id, T2.student_course_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id",
    "readable_query": "SELECT transcripts.transcript_id, transcript_contents.student_course_id FROM Transcripts AS transcripts JOIN Transcript_Contents AS transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.student_enrolment_id, T2.degree_program_id FROM Student_Enrolment_Courses AS T1 JOIN Student_Enrolment AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id",
    "readable_query": "SELECT student_enrolment_courses.student_enrolment_id, student_enrolment.degree_program_id FROM Student_Enrolment_Courses AS student_enrolment_courses JOIN Student_Enrolment AS student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.transcript_date, T2.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id",
    "readable_query": "SELECT transcripts.transcript_date, transcript_contents.transcript_id FROM Transcripts AS transcripts JOIN Transcript_Contents AS transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.date_first_registered, T2.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id",
    "readable_query": "SELECT students.date_first_registered, student_enrolment.student_id FROM Students AS students JOIN Student_Enrolment AS student_enrolment ON students.student_id = student_enrolment.student_id"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.other_details, T1.transcript_date FROM Transcripts AS T1 WHERE T1.transcript_id = 9",
    "readable_query": "SELECT transcripts.other_details, transcripts.transcript_date FROM Transcripts AS transcripts WHERE transcripts.transcript_id = 9"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.course_id, T1.course_name FROM Courses AS T1 WHERE T1.course_description = \"l\"",
    "readable_query": "SELECT courses.course_id, courses.course_name FROM Courses AS courses WHERE courses.course_description = \"l\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.semester_id, T1.degree_program_id FROM Student_Enrolment AS T1 WHERE T1.student_enrolment_id = 6",
    "readable_query": "SELECT student_enrolment.semester_id, student_enrolment.degree_program_id FROM Student_Enrolment AS student_enrolment WHERE student_enrolment.student_enrolment_id = 6"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.other_details, T1.transcript_date FROM Transcripts AS T1 WHERE T1.transcript_id = 1",
    "readable_query": "SELECT transcripts.other_details, transcripts.transcript_date FROM Transcripts AS transcripts WHERE transcripts.transcript_id = 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.student_id FROM Student_Enrolment AS T1  GROUP BY T1.student_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT student_enrolment.student_id FROM Student_Enrolment AS student_enrolment  GROUP BY student_enrolment.student_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.course_id FROM Sections AS T1  GROUP BY T1.course_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT sections.course_id FROM Sections AS sections  GROUP BY sections.course_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.other_details FROM Courses AS T1  GROUP BY T1.other_details  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT courses.other_details FROM Courses AS courses  GROUP BY courses.other_details  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.zip_postcode FROM Addresses AS T1  GROUP BY T1.zip_postcode  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT addresses.zip_postcode FROM Addresses AS addresses  GROUP BY addresses.zip_postcode  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.course_id FROM Courses AS T1  GROUP BY T1.course_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT courses.course_id FROM Courses AS courses  GROUP BY courses.course_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.other_details FROM Degree_Programs AS T1  GROUP BY T1.other_details  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT degree_programs.other_details FROM Degree_Programs AS degree_programs  GROUP BY degree_programs.other_details  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Transcript_Contents AS T1 WHERE T1.student_course_id = 7",
    "readable_query": "SELECT count(*) FROM Transcript_Contents AS transcript_contents WHERE transcript_contents.student_course_id = 7"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Semesters AS T1 WHERE T1.semester_description = \"x\"",
    "readable_query": "SELECT count(*) FROM Semesters AS semesters WHERE semesters.semester_description = \"x\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Sections AS T1 WHERE T1.section_id = 8",
    "readable_query": "SELECT count(*) FROM Sections AS sections WHERE sections.section_id = 8"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Student_Enrolment_Courses AS T1 WHERE T1.student_enrolment_id = 13",
    "readable_query": "SELECT count(*) FROM Student_Enrolment_Courses AS student_enrolment_courses WHERE student_enrolment_courses.student_enrolment_id = 13"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Addresses AS T1 WHERE T1.state_province_county = \"SouthDakota\"",
    "readable_query": "SELECT count(*) FROM Addresses AS addresses WHERE addresses.state_province_county = \"SouthDakota\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Transcript_Contents AS T1 WHERE T1.student_course_id = 2",
    "readable_query": "SELECT count(*) FROM Transcript_Contents AS transcript_contents WHERE transcript_contents.student_course_id = 2"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Transcript_Contents AS T1 WHERE T1.student_course_id = 45105806",
    "readable_query": "SELECT count(*) FROM Transcript_Contents AS transcript_contents WHERE transcript_contents.student_course_id = 45105806"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.permanent_address_id FROM Students AS T1    ORDER BY T1.date_left DESC LIMIT 1",
    "readable_query": "SELECT students.permanent_address_id FROM Students AS students    ORDER BY students.date_left DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.transcript_date FROM Transcripts AS T1    ORDER BY T1.transcript_id DESC LIMIT 1",
    "readable_query": "SELECT transcripts.transcript_date FROM Transcripts AS transcripts    ORDER BY transcripts.transcript_id DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.other_address_details FROM Addresses AS T1    ORDER BY T1.address_id DESC LIMIT 1",
    "readable_query": "SELECT addresses.other_address_details FROM Addresses AS addresses    ORDER BY addresses.address_id DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.student_enrolment_id FROM Student_Enrolment AS T1    ORDER BY T1.student_id DESC LIMIT 1",
    "readable_query": "SELECT student_enrolment.student_enrolment_id FROM Student_Enrolment AS student_enrolment    ORDER BY student_enrolment.student_id DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.address_id FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id    ORDER BY T2.permanent_address_id DESC LIMIT 1",
    "readable_query": "SELECT addresses.address_id FROM Addresses AS addresses JOIN Students AS students ON addresses.address_id = students.permanent_address_id    ORDER BY students.permanent_address_id DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.other_details FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id    ORDER BY T2.transcript_id DESC LIMIT 1",
    "readable_query": "SELECT transcripts.other_details FROM Transcripts AS transcripts JOIN Transcript_Contents AS transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id    ORDER BY transcript_contents.transcript_id DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.course_id FROM Student_Enrolment_Courses AS T1 JOIN Student_Enrolment AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id    ORDER BY T2.semester_id DESC LIMIT 1",
    "readable_query": "SELECT student_enrolment_courses.course_id FROM Student_Enrolment_Courses AS student_enrolment_courses JOIN Student_Enrolment AS student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id    ORDER BY student_enrolment.semester_id DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.country FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id    ORDER BY T2.date_left DESC LIMIT 1",
    "readable_query": "SELECT addresses.country FROM Addresses AS addresses JOIN Students AS students ON addresses.address_id = students.permanent_address_id    ORDER BY students.date_left DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.degree_program_id FROM Student_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id    ORDER BY T2.date_first_registered DESC LIMIT 1",
    "readable_query": "SELECT student_enrolment.degree_program_id FROM Student_Enrolment AS student_enrolment JOIN Students AS students ON student_enrolment.student_id = students.student_id    ORDER BY students.date_first_registered DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id    ORDER BY T2.degree_program_id DESC LIMIT 1",
    "readable_query": "SELECT semesters.semester_id FROM Semesters AS semesters JOIN Student_Enrolment AS student_enrolment ON semesters.semester_id = student_enrolment.semester_id    ORDER BY student_enrolment.degree_program_id DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.degree_program_id FROM Student_Enrolment AS T1 JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id    ORDER BY T2.semester_id DESC LIMIT 1",
    "readable_query": "SELECT student_enrolment.degree_program_id FROM Student_Enrolment AS student_enrolment JOIN Semesters AS semesters ON student_enrolment.semester_id = semesters.semester_id    ORDER BY semesters.semester_id DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.course_id FROM Student_Enrolment_Courses AS T1 JOIN Transcript_Contents AS T2 ON T1.student_course_id = T2.student_course_id    ORDER BY T2.student_course_id ASC LIMIT 1",
    "readable_query": "SELECT student_enrolment_courses.course_id FROM Student_Enrolment_Courses AS student_enrolment_courses JOIN Transcript_Contents AS transcript_contents ON student_enrolment_courses.student_course_id = transcript_contents.student_course_id    ORDER BY transcript_contents.student_course_id ASC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.section_name FROM Sections AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id    ORDER BY T2.course_id ASC LIMIT 1",
    "readable_query": "SELECT sections.section_name FROM Sections AS sections JOIN Courses AS courses ON sections.course_id = courses.course_id    ORDER BY courses.course_id ASC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id    ORDER BY T2.transcript_date ASC LIMIT 1",
    "readable_query": "SELECT transcript_contents.transcript_id FROM Transcript_Contents AS transcript_contents JOIN Transcripts AS transcripts ON transcript_contents.transcript_id = transcripts.transcript_id    ORDER BY transcripts.transcript_date ASC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.department_name FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id    ORDER BY T2.degree_program_id ASC LIMIT 1",
    "readable_query": "SELECT departments.department_name FROM Departments AS departments JOIN Degree_Programs AS degree_programs ON departments.department_id = degree_programs.department_id    ORDER BY degree_programs.degree_program_id ASC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id    ORDER BY T2.student_course_id ASC LIMIT 1",
    "readable_query": "SELECT transcripts.transcript_id FROM Transcripts AS transcripts JOIN Transcript_Contents AS transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id    ORDER BY transcript_contents.student_course_id ASC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id    ORDER BY T2.degree_program_id ASC LIMIT 1",
    "readable_query": "SELECT departments.department_id FROM Departments AS departments JOIN Degree_Programs AS degree_programs ON departments.department_id = degree_programs.department_id    ORDER BY degree_programs.degree_program_id ASC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.student_enrolment_id, T1.student_course_id FROM Student_Enrolment_Courses AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id    ORDER BY T2.course_id DESC LIMIT 1",
    "readable_query": "SELECT student_enrolment_courses.student_enrolment_id, student_enrolment_courses.student_course_id FROM Student_Enrolment_Courses AS student_enrolment_courses JOIN Courses AS courses ON student_enrolment_courses.course_id = courses.course_id    ORDER BY courses.course_id DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.other_details, T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id    ORDER BY T2.degree_program_id DESC LIMIT 1",
    "readable_query": "SELECT degree_programs.other_details, degree_programs.degree_summary_description FROM Degree_Programs AS degree_programs JOIN Student_Enrolment AS student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id    ORDER BY student_enrolment.degree_program_id DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.other_details, T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id    ORDER BY T2.student_course_id DESC LIMIT 1",
    "readable_query": "SELECT transcripts.other_details, transcripts.transcript_id FROM Transcripts AS transcripts JOIN Transcript_Contents AS transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id    ORDER BY transcript_contents.student_course_id DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.first_name, T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id    ORDER BY T2.address_id DESC LIMIT 1",
    "readable_query": "SELECT students.first_name, students.last_name FROM Students AS students JOIN Addresses AS addresses ON students.permanent_address_id = addresses.address_id    ORDER BY addresses.address_id DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.line_3, T1.zip_postcode FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id    ORDER BY T2.permanent_address_id DESC LIMIT 1",
    "readable_query": "SELECT addresses.line_3, addresses.zip_postcode FROM Addresses AS addresses JOIN Students AS students ON addresses.address_id = students.permanent_address_id    ORDER BY students.permanent_address_id DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.course_id) FROM Sections AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  sections.course_id) FROM Sections AS sections"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.transcript_id) FROM Transcripts AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  transcripts.transcript_id) FROM Transcripts AS transcripts"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.transcript_date) FROM Transcripts AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  transcripts.transcript_date) FROM Transcripts AS transcripts"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.other_details) FROM Transcripts AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  transcripts.other_details) FROM Transcripts AS transcripts"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.semester_description) FROM Semesters AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  semesters.semester_description) FROM Semesters AS semesters"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.other_details) FROM Student_Enrolment AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  student_enrolment.other_details) FROM Student_Enrolment AS student_enrolment"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.course_id) FROM Sections AS T1",
    "readable_query": "SELECT avg( sections.course_id) FROM Sections AS sections"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.student_enrolment_id) FROM Student_Enrolment_Courses AS T1",
    "readable_query": "SELECT avg( student_enrolment_courses.student_enrolment_id) FROM Student_Enrolment_Courses AS student_enrolment_courses"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.course_id) FROM Sections AS T1",
    "readable_query": "SELECT avg( sections.course_id) FROM Sections AS sections"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.transcript_id) FROM Transcript_Contents AS T1",
    "readable_query": "SELECT avg( transcript_contents.transcript_id) FROM Transcript_Contents AS transcript_contents"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.department_id) FROM Degree_Programs AS T1",
    "readable_query": "SELECT avg( degree_programs.department_id) FROM Degree_Programs AS degree_programs"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.course_id) FROM Courses AS T1",
    "readable_query": "SELECT avg( courses.course_id) FROM Courses AS courses"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.transcript_id FROM Transcripts AS T1",
    "readable_query": "SELECT transcripts.transcript_id FROM Transcripts AS transcripts"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.transcript_date FROM Transcripts AS T1",
    "readable_query": "SELECT transcripts.transcript_date FROM Transcripts AS transcripts"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.course_description FROM Courses AS T1",
    "readable_query": "SELECT courses.course_description FROM Courses AS courses"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.date_first_registered FROM Students AS T1",
    "readable_query": "SELECT students.date_first_registered FROM Students AS students"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.other_details FROM Sections AS T1",
    "readable_query": "SELECT sections.other_details FROM Sections AS sections"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.other_details FROM Courses AS T1",
    "readable_query": "SELECT courses.other_details FROM Courses AS courses"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.course_name FROM Courses AS T1",
    "readable_query": "SELECT DISTINCT courses.course_name FROM Courses AS courses"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.transcript_id FROM Transcript_Contents AS T1",
    "readable_query": "SELECT DISTINCT transcript_contents.transcript_id FROM Transcript_Contents AS transcript_contents"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.course_id FROM Student_Enrolment_Courses AS T1",
    "readable_query": "SELECT DISTINCT student_enrolment_courses.course_id FROM Student_Enrolment_Courses AS student_enrolment_courses"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.student_course_id FROM Transcript_Contents AS T1",
    "readable_query": "SELECT DISTINCT transcript_contents.student_course_id FROM Transcript_Contents AS transcript_contents"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.student_course_id FROM Transcript_Contents AS T1     ORDER BY T1.transcript_id ASC",
    "readable_query": "SELECT transcript_contents.student_course_id FROM Transcript_Contents AS transcript_contents     ORDER BY transcript_contents.transcript_id ASC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.section_id FROM Sections AS T1     ORDER BY T1.course_id ASC",
    "readable_query": "SELECT sections.section_id FROM Sections AS sections     ORDER BY sections.course_id ASC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.other_details FROM Transcripts AS T1     ORDER BY T1.transcript_id ASC",
    "readable_query": "SELECT transcripts.other_details FROM Transcripts AS transcripts     ORDER BY transcripts.transcript_id ASC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.student_course_id FROM Student_Enrolment_Courses AS T1     ORDER BY T1.student_enrolment_id ASC",
    "readable_query": "SELECT student_enrolment_courses.student_course_id FROM Student_Enrolment_Courses AS student_enrolment_courses     ORDER BY student_enrolment_courses.student_enrolment_id ASC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.semester_name FROM Semesters AS T1     ORDER BY T1.semester_id ASC",
    "readable_query": "SELECT semesters.semester_name FROM Semesters AS semesters     ORDER BY semesters.semester_id ASC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.transcript_date FROM Transcripts AS T1     ORDER BY T1.transcript_id ASC",
    "readable_query": "SELECT transcripts.transcript_date FROM Transcripts AS transcripts     ORDER BY transcripts.transcript_id ASC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.email_address FROM Students AS T1     ORDER BY T1.student_id ASC",
    "readable_query": "SELECT students.email_address FROM Students AS students     ORDER BY students.student_id ASC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.transcript_date FROM Transcripts AS T1     ORDER BY T1.transcript_id DESC",
    "readable_query": "SELECT transcripts.transcript_date FROM Transcripts AS transcripts     ORDER BY transcripts.transcript_id DESC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.ssn FROM Students AS T1     ORDER BY T1.permanent_address_id DESC",
    "readable_query": "SELECT students.ssn FROM Students AS students     ORDER BY students.permanent_address_id DESC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.line_3 FROM Addresses AS T1     ORDER BY T1.address_id DESC",
    "readable_query": "SELECT addresses.line_3 FROM Addresses AS addresses     ORDER BY addresses.address_id DESC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.other_details FROM Transcripts AS T1     ORDER BY T1.transcript_date DESC",
    "readable_query": "SELECT transcripts.other_details FROM Transcripts AS transcripts     ORDER BY transcripts.transcript_date DESC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.section_description FROM Sections AS T1     ORDER BY T1.section_id DESC",
    "readable_query": "SELECT sections.section_description FROM Sections AS sections     ORDER BY sections.section_id DESC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.department_description FROM Departments AS T1     ORDER BY T1.department_id DESC",
    "readable_query": "SELECT departments.department_description FROM Departments AS departments     ORDER BY departments.department_id DESC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.other_details, T1.course_name FROM Courses AS T1     ORDER BY T1.course_name ASC",
    "readable_query": "SELECT courses.other_details, courses.course_name FROM Courses AS courses     ORDER BY courses.course_name ASC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.transcript_id, T1.student_course_id FROM Transcript_Contents AS T1     ORDER BY T1.student_course_id ASC",
    "readable_query": "SELECT transcript_contents.transcript_id, transcript_contents.student_course_id FROM Transcript_Contents AS transcript_contents     ORDER BY transcript_contents.student_course_id ASC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.student_course_id, T1.transcript_id FROM Transcript_Contents AS T1     ORDER BY T1.transcript_id ASC",
    "readable_query": "SELECT transcript_contents.student_course_id, transcript_contents.transcript_id FROM Transcript_Contents AS transcript_contents     ORDER BY transcript_contents.transcript_id ASC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.course_id, T1.student_enrolment_id FROM Student_Enrolment_Courses AS T1     ORDER BY T1.student_enrolment_id ASC",
    "readable_query": "SELECT student_enrolment_courses.course_id, student_enrolment_courses.student_enrolment_id FROM Student_Enrolment_Courses AS student_enrolment_courses     ORDER BY student_enrolment_courses.student_enrolment_id ASC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.line_1 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id JOIN Student_Enrolment AS T3 ON T2.student_id = T3.student_id WHERE T2.date_first_registered = \"1997-03-20 16:47:25\" and T3.degree_program_id = 2",
    "readable_query": "SELECT addresses.line_1 FROM Addresses AS addresses JOIN Students AS students ON addresses.address_id = students.permanent_address_id JOIN Student_Enrolment AS student_enrolment ON students.student_id = student_enrolment.student_id WHERE students.date_first_registered = \"1997-03-20 16:47:25\" and student_enrolment.degree_program_id = 2"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.line_1 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id JOIN Student_Enrolment AS T3 ON T2.student_id = T3.student_id WHERE T2.permanent_address_id = 5 and T3.student_id = 1",
    "readable_query": "SELECT addresses.line_1 FROM Addresses AS addresses JOIN Students AS students ON addresses.address_id = students.permanent_address_id JOIN Student_Enrolment AS student_enrolment ON students.student_id = student_enrolment.student_id WHERE students.permanent_address_id = 5 and student_enrolment.student_id = 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.other_details FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id JOIN Student_Enrolment AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T2.degree_summary_name = \"PHD\" and T3.student_enrolment_id = 12",
    "readable_query": "SELECT departments.other_details FROM Departments AS departments JOIN Degree_Programs AS degree_programs ON departments.department_id = degree_programs.department_id JOIN Student_Enrolment AS student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id WHERE degree_programs.degree_summary_name = \"PHD\" and student_enrolment.student_enrolment_id = 12"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.other_details FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id JOIN Student_Enrolment AS T3 ON T1.degree_program_id = T3.degree_program_id WHERE T2.department_description = \"autem\" and T3.student_id = 7",
    "readable_query": "SELECT degree_programs.other_details FROM Degree_Programs AS degree_programs JOIN Departments AS departments ON degree_programs.department_id = departments.department_id JOIN Student_Enrolment AS student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id WHERE departments.department_description = \"autem\" and student_enrolment.student_id = 7"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.course_id FROM Student_Enrolment_Courses AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id JOIN Student_Enrolment AS T3 ON T1.student_enrolment_id = T3.student_enrolment_id WHERE T2.course_name = \"math\" and T3.student_id = 6",
    "readable_query": "SELECT student_enrolment_courses.course_id FROM Student_Enrolment_Courses AS student_enrolment_courses JOIN Courses AS courses ON student_enrolment_courses.course_id = courses.course_id JOIN Student_Enrolment AS student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id WHERE courses.course_name = \"math\" and student_enrolment.student_id = 6"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.student_enrolment_id FROM Student_Enrolment_Courses AS T1 JOIN Transcript_Contents AS T2 ON T1.student_course_id = T2.student_course_id JOIN Student_Enrolment AS T3 ON T1.student_enrolment_id = T3.student_enrolment_id WHERE T2.student_course_id = 70882679 and T3.student_id = 7",
    "readable_query": "SELECT student_enrolment_courses.student_enrolment_id FROM Student_Enrolment_Courses AS student_enrolment_courses JOIN Transcript_Contents AS transcript_contents ON student_enrolment_courses.student_course_id = transcript_contents.student_course_id JOIN Student_Enrolment AS student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id WHERE transcript_contents.student_course_id = 70882679 and student_enrolment.student_id = 7"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.other_details FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id WHERE T2.transcript_id = 13 or T2.transcript_id = 5",
    "readable_query": "SELECT transcripts.other_details FROM Transcripts AS transcripts JOIN Transcript_Contents AS transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE transcript_contents.transcript_id = 13 or transcript_contents.transcript_id = 5"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.other_details FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.semester_id = 4 or T2.semester_id = 4",
    "readable_query": "SELECT semesters.other_details FROM Semesters AS semesters JOIN Student_Enrolment AS student_enrolment ON semesters.semester_id = student_enrolment.semester_id WHERE student_enrolment.semester_id = 4 or student_enrolment.semester_id = 4"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.student_course_id FROM Transcript_Contents AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id WHERE T2.course_id = 2 or T2.course_id = 10",
    "readable_query": "SELECT transcript_contents.student_course_id FROM Transcript_Contents AS transcript_contents JOIN Student_Enrolment_Courses AS student_enrolment_courses ON transcript_contents.student_course_id = student_enrolment_courses.student_course_id WHERE student_enrolment_courses.course_id = 2 or student_enrolment_courses.course_id = 10"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.department_name FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T2.degree_summary_description = \"architecto\" or T2.degree_summary_description = \"earum\"",
    "readable_query": "SELECT departments.department_name FROM Departments AS departments JOIN Degree_Programs AS degree_programs ON departments.department_id = degree_programs.department_id WHERE degree_programs.degree_summary_description = \"architecto\" or degree_programs.degree_summary_description = \"earum\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.degree_program_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.student_id = 7 or T2.student_id = 7",
    "readable_query": "SELECT degree_programs.degree_program_id FROM Degree_Programs AS degree_programs JOIN Student_Enrolment AS student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id WHERE student_enrolment.student_id = 7 or student_enrolment.student_id = 7"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.other_details FROM Student_Enrolment AS T1 WHERE T1.student_id = 9 and T1.student_enrolment_id = 7",
    "readable_query": "SELECT student_enrolment.other_details FROM Student_Enrolment AS student_enrolment WHERE student_enrolment.student_id = 9 and student_enrolment.student_enrolment_id = 7"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.student_enrolment_id FROM Student_Enrolment_Courses AS T1 WHERE T1.course_id = 12 and T1.student_course_id = 45105806",
    "readable_query": "SELECT student_enrolment_courses.student_enrolment_id FROM Student_Enrolment_Courses AS student_enrolment_courses WHERE student_enrolment_courses.course_id = 12 and student_enrolment_courses.student_course_id = 45105806"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.other_details FROM Degree_Programs AS T1 WHERE T1.department_id = 4 and T1.degree_program_id = 8",
    "readable_query": "SELECT degree_programs.other_details FROM Degree_Programs AS degree_programs WHERE degree_programs.department_id = 4 and degree_programs.degree_program_id = 8"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.city) FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id WHERE T1.line_2 = \"Apt. 583\" and T2.date_first_registered = \"1986-02-24 21:12:23\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  addresses.city) FROM Addresses AS addresses JOIN Students AS students ON addresses.address_id = students.permanent_address_id WHERE addresses.line_2 = \"Apt. 583\" and students.date_first_registered = \"1986-02-24 21:12:23\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.date_first_registered) FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T1.other_student_details = \"dolorum\" and T2.zip_postcode = \"943\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  students.date_first_registered) FROM Students AS students JOIN Addresses AS addresses ON students.permanent_address_id = addresses.address_id WHERE students.other_student_details = \"dolorum\" and addresses.zip_postcode = \"943\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.ssn) FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T1.permanent_address_id = 8 and T2.line_1 = \"7081 Eda Center\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  students.ssn) FROM Students AS students JOIN Addresses AS addresses ON students.permanent_address_id = addresses.address_id WHERE students.permanent_address_id = 8 and addresses.line_1 = \"7081 Eda Center\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.semester_description FROM Semesters AS T1 WHERE T1.semester_id = 6 or T1.semester_name = \"spring 2016\"",
    "readable_query": "SELECT semesters.semester_description FROM Semesters AS semesters WHERE semesters.semester_id = 6 or semesters.semester_name = \"spring 2016\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.other_details FROM Courses AS T1 WHERE T1.course_id = 6 or T1.course_description = \"l\"",
    "readable_query": "SELECT courses.other_details FROM Courses AS courses WHERE courses.course_id = 6 or courses.course_description = \"l\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.other_details FROM Semesters AS T1 WHERE T1.semester_id = 12 or T1.semester_name = \"spring 2019\"",
    "readable_query": "SELECT semesters.other_details FROM Semesters AS semesters WHERE semesters.semester_id = 12 or semesters.semester_name = \"spring 2019\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.other_details FROM Student_Enrolment AS T1 WHERE T1.student_id = 14 or T1.semester_id = 5",
    "readable_query": "SELECT student_enrolment.other_details FROM Student_Enrolment AS student_enrolment WHERE student_enrolment.student_id = 14 or student_enrolment.semester_id = 5"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.current_address_id FROM Students AS T1 WHERE T1.first_name = \"Stanford\" or T1.date_left = \"2004-12-08 05:29:11\"",
    "readable_query": "SELECT students.current_address_id FROM Students AS students WHERE students.first_name = \"Stanford\" or students.date_left = \"2004-12-08 05:29:11\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Transcript_Contents AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id WHERE T2.course_id = 6 and T2.student_course_id = 438800",
    "readable_query": "SELECT count(*) FROM Transcript_Contents AS transcript_contents JOIN Student_Enrolment_Courses AS student_enrolment_courses ON transcript_contents.student_course_id = student_enrolment_courses.student_course_id WHERE student_enrolment_courses.course_id = 6 and student_enrolment_courses.student_course_id = 438800"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id WHERE T2.transcript_id = 5 and T2.student_course_id = 0",
    "readable_query": "SELECT count(*) FROM Transcripts AS transcripts JOIN Transcript_Contents AS transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE transcript_contents.transcript_id = 5 and transcript_contents.student_course_id = 0"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Student_Enrolment_Courses AS T1 JOIN Student_Enrolment AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id WHERE T2.degree_program_id = 11 and T2.student_id = 9",
    "readable_query": "SELECT count(*) FROM Student_Enrolment_Courses AS student_enrolment_courses JOIN Student_Enrolment AS student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id WHERE student_enrolment.degree_program_id = 11 and student_enrolment.student_id = 9"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T2.semester_id = 2 and T2.degree_program_id = 11",
    "readable_query": "SELECT count(*) FROM Students AS students JOIN Student_Enrolment AS student_enrolment ON students.student_id = student_enrolment.student_id WHERE student_enrolment.semester_id = 2 and student_enrolment.degree_program_id = 11"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.semester_id = 5 and T2.student_id = 14",
    "readable_query": "SELECT count(*) FROM Degree_Programs AS degree_programs JOIN Student_Enrolment AS student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id WHERE student_enrolment.semester_id = 5 and student_enrolment.student_id = 14"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.section_description FROM Sections AS T1 WHERE T1.section_id != 7",
    "readable_query": "SELECT sections.section_description FROM Sections AS sections WHERE sections.section_id != 7"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.student_course_id FROM Student_Enrolment_Courses AS T1 WHERE T1.student_enrolment_id != 6",
    "readable_query": "SELECT student_enrolment_courses.student_course_id FROM Student_Enrolment_Courses AS student_enrolment_courses WHERE student_enrolment_courses.student_enrolment_id != 6"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 WHERE T1.degree_program_id != 9",
    "readable_query": "SELECT degree_programs.degree_summary_name FROM Degree_Programs AS degree_programs WHERE degree_programs.degree_program_id != 9"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.other_student_details FROM Students AS T1 WHERE T1.permanent_address_id != 15",
    "readable_query": "SELECT students.other_student_details FROM Students AS students WHERE students.permanent_address_id != 15"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.course_id FROM Student_Enrolment_Courses AS T1 WHERE T1.student_course_id != 9860",
    "readable_query": "SELECT student_enrolment_courses.course_id FROM Student_Enrolment_Courses AS student_enrolment_courses WHERE student_enrolment_courses.student_course_id != 9860"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.current_address_id FROM Students AS T1 WHERE T1.email_address != \"skassulke@example.net\"",
    "readable_query": "SELECT students.current_address_id FROM Students AS students WHERE students.email_address != \"skassulke@example.net\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.other_details FROM Sections AS T1 WHERE T1.section_description != \"facilis\"",
    "readable_query": "SELECT sections.other_details FROM Sections AS sections WHERE sections.section_description != \"facilis\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T2.degree_summary_name != \"Master\"",
    "readable_query": "SELECT departments.department_id FROM Departments AS departments JOIN Degree_Programs AS degree_programs ON departments.department_id = degree_programs.department_id WHERE degree_programs.degree_summary_name != \"Master\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.student_id != 5",
    "readable_query": "SELECT degree_programs.degree_summary_description FROM Degree_Programs AS degree_programs JOIN Student_Enrolment AS student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id WHERE student_enrolment.student_id != 5"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.student_enrolment_id FROM Student_Enrolment_Courses AS T1 JOIN Student_Enrolment AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id WHERE T2.student_id != 6",
    "readable_query": "SELECT student_enrolment_courses.student_enrolment_id FROM Student_Enrolment_Courses AS student_enrolment_courses JOIN Student_Enrolment AS student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id WHERE student_enrolment.student_id != 6"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.other_details FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T2.degree_summary_name = \"PHD\"",
    "readable_query": "SELECT DISTINCT departments.other_details FROM Departments AS departments JOIN Degree_Programs AS degree_programs ON departments.department_id = degree_programs.department_id WHERE degree_programs.degree_summary_name = \"PHD\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.middle_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T2.semester_id = 13",
    "readable_query": "SELECT DISTINCT students.middle_name FROM Students AS students JOIN Student_Enrolment AS student_enrolment ON students.student_id = student_enrolment.student_id WHERE student_enrolment.semester_id = 13"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.section_name FROM Sections AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id WHERE T2.course_name = \"oop\"",
    "readable_query": "SELECT DISTINCT sections.section_name FROM Sections AS sections JOIN Courses AS courses ON sections.course_id = courses.course_id WHERE courses.course_name = \"oop\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id WHERE T2.transcript_date = \"1990-03-05 11:59:41\"",
    "readable_query": "SELECT DISTINCT transcript_contents.transcript_id FROM Transcript_Contents AS transcript_contents JOIN Transcripts AS transcripts ON transcript_contents.transcript_id = transcripts.transcript_id WHERE transcripts.transcript_date = \"1990-03-05 11:59:41\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.student_course_id FROM Student_Enrolment_Courses AS T1 JOIN Transcript_Contents AS T2 ON T1.student_course_id = T2.student_course_id WHERE T2.transcript_id = 6",
    "readable_query": "SELECT DISTINCT student_enrolment_courses.student_course_id FROM Student_Enrolment_Courses AS student_enrolment_courses JOIN Transcript_Contents AS transcript_contents ON student_enrolment_courses.student_course_id = transcript_contents.student_course_id WHERE transcript_contents.transcript_id = 6"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.other_details) FROM Transcripts AS T1 WHERE T1.transcript_date = \"2010-12-13 10:55:15\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  transcripts.other_details) FROM Transcripts AS transcripts WHERE transcripts.transcript_date = \"2010-12-13 10:55:15\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.last_name) FROM Students AS T1 WHERE T1.student_id = 1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  students.last_name) FROM Students AS students WHERE students.student_id = 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.other_details) FROM Departments AS T1 WHERE T1.department_id = 14",
    "readable_query": "SELECT DISTINCT count(DISTINCT  departments.other_details) FROM Departments AS departments WHERE departments.department_id = 14"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.section_description) FROM Sections AS T1 WHERE T1.course_id = 7",
    "readable_query": "SELECT DISTINCT count(DISTINCT  sections.section_description) FROM Sections AS sections WHERE sections.course_id = 7"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.address_id) FROM Addresses AS T1 WHERE T1.zip_postcode = \"847\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  addresses.address_id) FROM Addresses AS addresses WHERE addresses.zip_postcode = \"847\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.course_id FROM Student_Enrolment_Courses AS T1 WHERE T1.student_course_id > 7",
    "readable_query": "SELECT student_enrolment_courses.course_id FROM Student_Enrolment_Courses AS student_enrolment_courses WHERE student_enrolment_courses.student_course_id > 7"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.department_id FROM Degree_Programs AS T1 WHERE T1.degree_program_id > 7",
    "readable_query": "SELECT degree_programs.department_id FROM Degree_Programs AS degree_programs WHERE degree_programs.degree_program_id > 7"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.section_name FROM Sections AS T1 WHERE T1.section_id > 14",
    "readable_query": "SELECT sections.section_name FROM Sections AS sections WHERE sections.section_id > 14"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.city FROM Addresses AS T1 WHERE T1.address_id > 1",
    "readable_query": "SELECT addresses.city FROM Addresses AS addresses WHERE addresses.address_id > 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.other_details FROM Departments AS T1 WHERE T1.department_id > 11",
    "readable_query": "SELECT departments.other_details FROM Departments AS departments WHERE departments.department_id > 11"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.semester_name, T2.degree_program_id, T3.department_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id",
    "readable_query": "SELECT semesters.semester_name, student_enrolment.degree_program_id, degree_programs.department_id FROM Semesters AS semesters JOIN Student_Enrolment AS student_enrolment ON semesters.semester_id = student_enrolment.semester_id JOIN Degree_Programs AS degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.semester_description, T2.other_details, T3.student_enrolment_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id JOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id",
    "readable_query": "SELECT semesters.semester_description, student_enrolment.other_details, student_enrolment_courses.student_enrolment_id FROM Semesters AS semesters JOIN Student_Enrolment AS student_enrolment ON semesters.semester_id = student_enrolment.semester_id JOIN Student_Enrolment_Courses AS student_enrolment_courses ON student_enrolment.student_enrolment_id = student_enrolment_courses.student_enrolment_id"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.middle_name, T2.degree_program_id, T3.student_course_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id",
    "readable_query": "SELECT students.middle_name, student_enrolment.degree_program_id, student_enrolment_courses.student_course_id FROM Students AS students JOIN Student_Enrolment AS student_enrolment ON students.student_id = student_enrolment.student_id JOIN Student_Enrolment_Courses AS student_enrolment_courses ON student_enrolment.student_enrolment_id = student_enrolment_courses.student_enrolment_id"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.other_details FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id     ORDER BY T2.student_enrolment_id ASC",
    "readable_query": "SELECT semesters.other_details FROM Semesters AS semesters JOIN Student_Enrolment AS student_enrolment ON semesters.semester_id = student_enrolment.semester_id     ORDER BY student_enrolment.student_enrolment_id ASC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.student_course_id FROM Student_Enrolment_Courses AS T1 JOIN Transcript_Contents AS T2 ON T1.student_course_id = T2.student_course_id     ORDER BY T2.transcript_id ASC",
    "readable_query": "SELECT student_enrolment_courses.student_course_id FROM Student_Enrolment_Courses AS student_enrolment_courses JOIN Transcript_Contents AS transcript_contents ON student_enrolment_courses.student_course_id = transcript_contents.student_course_id     ORDER BY transcript_contents.transcript_id ASC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.course_id FROM Student_Enrolment_Courses AS T1 JOIN Transcript_Contents AS T2 ON T1.student_course_id = T2.student_course_id     ORDER BY T2.student_course_id ASC",
    "readable_query": "SELECT student_enrolment_courses.course_id FROM Student_Enrolment_Courses AS student_enrolment_courses JOIN Transcript_Contents AS transcript_contents ON student_enrolment_courses.student_course_id = transcript_contents.student_course_id     ORDER BY transcript_contents.student_course_id ASC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.student_enrolment_id FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id     ORDER BY T2.degree_program_id ASC",
    "readable_query": "SELECT student_enrolment.student_enrolment_id FROM Student_Enrolment AS student_enrolment JOIN Degree_Programs AS degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id     ORDER BY degree_programs.degree_program_id ASC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id     ORDER BY T2.date_first_registered ASC",
    "readable_query": "SELECT addresses.line_2 FROM Addresses AS addresses JOIN Students AS students ON addresses.address_id = students.permanent_address_id     ORDER BY students.date_first_registered ASC"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.student_course_id FROM Transcript_Contents AS T1 WHERE T1.transcript_id = 11     INTERSECT SELECT T2.student_course_id FROM Transcript_Contents AS T2 WHERE T2.transcript_id = 13",
    "readable_query": "SELECT transcript_contents.student_course_id FROM Transcript_Contents AS transcript_contents WHERE transcript_contents.transcript_id = 11     INTERSECT SELECT transcript_contents.student_course_id FROM Transcript_Contents AS transcript_contents WHERE transcript_contents.transcript_id = 13"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.email_address FROM Students AS T1 WHERE T1.other_student_details = \"qui\"     INTERSECT SELECT T2.email_address FROM Students AS T2 WHERE T2.other_student_details = \"assumenda\"",
    "readable_query": "SELECT students.email_address FROM Students AS students WHERE students.other_student_details = \"qui\"     INTERSECT SELECT students.email_address FROM Students AS students WHERE students.other_student_details = \"assumenda\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.degree_program_id FROM Degree_Programs AS T1 WHERE T1.degree_summary_name = \"Master\"     INTERSECT SELECT T2.degree_program_id FROM Degree_Programs AS T2 WHERE T2.degree_summary_name = \"Bachelor\"",
    "readable_query": "SELECT degree_programs.degree_program_id FROM Degree_Programs AS degree_programs WHERE degree_programs.degree_summary_name = \"Master\"     INTERSECT SELECT degree_programs.degree_program_id FROM Degree_Programs AS degree_programs WHERE degree_programs.degree_summary_name = \"Bachelor\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.course_id FROM Courses AS T1 WHERE T1.course_name = \"cal\"     INTERSECT SELECT T2.course_id FROM Courses AS T2 WHERE T2.course_name = \"math\"",
    "readable_query": "SELECT courses.course_id FROM Courses AS courses WHERE courses.course_name = \"cal\"     INTERSECT SELECT courses.course_id FROM Courses AS courses WHERE courses.course_name = \"math\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.line_3 FROM Addresses AS T1 WHERE T1.line_2 = \"Apt. 335\"     INTERSECT SELECT T2.line_3 FROM Addresses AS T2 WHERE T2.line_2 = \"Apt. 305\"",
    "readable_query": "SELECT addresses.line_3 FROM Addresses AS addresses WHERE addresses.line_2 = \"Apt. 335\"     INTERSECT SELECT addresses.line_3 FROM Addresses AS addresses WHERE addresses.line_2 = \"Apt. 305\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.student_course_id) FROM Student_Enrolment_Courses AS T1 WHERE T1.course_id = 11",
    "readable_query": "SELECT avg( student_enrolment_courses.student_course_id) FROM Student_Enrolment_Courses AS student_enrolment_courses WHERE student_enrolment_courses.course_id = 11"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.course_id) FROM Student_Enrolment_Courses AS T1 WHERE T1.student_enrolment_id = 5",
    "readable_query": "SELECT avg( student_enrolment_courses.course_id) FROM Student_Enrolment_Courses AS student_enrolment_courses WHERE student_enrolment_courses.student_enrolment_id = 5"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.semester_id) FROM Semesters AS T1 WHERE T1.semester_description = \"q\"",
    "readable_query": "SELECT avg( semesters.semester_id) FROM Semesters AS semesters WHERE semesters.semester_description = \"q\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.department_name FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T2.degree_program_id = (SELECT max( T23.degree_program_id) FROM Degree_Programs AS T23)",
    "readable_query": "SELECT departments.department_name FROM Departments AS departments JOIN Degree_Programs AS degree_programs ON departments.department_id = degree_programs.department_id WHERE degree_programs.degree_program_id = (SELECT max( degree_programs.degree_program_id) FROM Degree_Programs AS degree_programs)"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.cell_mobile_number FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.address_id = (SELECT max( T23.address_id) FROM Addresses AS T23)",
    "readable_query": "SELECT students.cell_mobile_number FROM Students AS students JOIN Addresses AS addresses ON students.permanent_address_id = addresses.address_id WHERE addresses.address_id = (SELECT max( addresses.address_id) FROM Addresses AS addresses)"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.transcript_date FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id WHERE T2.student_course_id = (SELECT max( T23.student_course_id) FROM Transcript_Contents AS T23)",
    "readable_query": "SELECT transcripts.transcript_date FROM Transcripts AS transcripts JOIN Transcript_Contents AS transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE transcript_contents.student_course_id = (SELECT max( transcript_contents.student_course_id) FROM Transcript_Contents AS transcript_contents)"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.department_description, T2.degree_summary_description FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id JOIN Student_Enrolment AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.semester_id = 13 and T2.degree_summary_name = \"Bachelor\"",
    "readable_query": "SELECT departments.department_description, degree_programs.degree_summary_description FROM Departments AS departments JOIN Degree_Programs AS degree_programs ON departments.department_id = degree_programs.department_id JOIN Student_Enrolment AS student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id WHERE student_enrolment.semester_id = 13 and degree_programs.degree_summary_name = \"Bachelor\""
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.degree_summary_description, T2.other_details FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id JOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id WHERE T3.student_course_id = 96 and T2.degree_program_id = 5",
    "readable_query": "SELECT degree_programs.degree_summary_description, student_enrolment.other_details FROM Degree_Programs AS degree_programs JOIN Student_Enrolment AS student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id JOIN Student_Enrolment_Courses AS student_enrolment_courses ON student_enrolment.student_enrolment_id = student_enrolment_courses.student_enrolment_id WHERE student_enrolment_courses.student_course_id = 96 and student_enrolment.degree_program_id = 5"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.semester_id, T2.other_details FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id JOIN Students AS T3 ON T1.student_id = T3.student_id WHERE T3.middle_name = \"Golda\" and T2.department_id = 12",
    "readable_query": "SELECT student_enrolment.semester_id, degree_programs.other_details FROM Student_Enrolment AS student_enrolment JOIN Degree_Programs AS degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id JOIN Students AS students ON student_enrolment.student_id = students.student_id WHERE students.middle_name = \"Golda\" and degree_programs.department_id = 12"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.department_id, T2.student_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id JOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id WHERE T3.student_course_id = 70882679 and T2.semester_id = 12",
    "readable_query": "SELECT degree_programs.department_id, student_enrolment.student_id FROM Degree_Programs AS degree_programs JOIN Student_Enrolment AS student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id JOIN Student_Enrolment_Courses AS student_enrolment_courses ON student_enrolment.student_enrolment_id = student_enrolment_courses.student_enrolment_id WHERE student_enrolment_courses.student_course_id = 70882679 and student_enrolment.semester_id = 12"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.student_course_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id WHERE T2.transcript_id = 6 GROUP BY T1.student_course_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT transcript_contents.student_course_id FROM Transcript_Contents AS transcript_contents JOIN Transcripts AS transcripts ON transcript_contents.transcript_id = transcripts.transcript_id WHERE transcripts.transcript_id = 6 GROUP BY transcript_contents.student_course_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.transcript_date FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id WHERE T2.student_course_id = 2 GROUP BY T1.transcript_date  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT transcripts.transcript_date FROM Transcripts AS transcripts JOIN Transcript_Contents AS transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE transcript_contents.student_course_id = 2 GROUP BY transcripts.transcript_date  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.section_description FROM Sections AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id WHERE T2.course_description = \"w\" GROUP BY T1.section_description  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT sections.section_description FROM Sections AS sections JOIN Courses AS courses ON sections.course_id = courses.course_id WHERE courses.course_description = \"w\" GROUP BY sections.section_description  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id WHERE T2.student_course_id = 96 GROUP BY T1.transcript_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT transcripts.transcript_id FROM Transcripts AS transcripts JOIN Transcript_Contents AS transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id WHERE transcript_contents.student_course_id = 96 GROUP BY transcripts.transcript_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.course_id FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id WHERE T2.student_course_id = 1 GROUP BY T1.course_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT courses.course_id FROM Courses AS courses JOIN Student_Enrolment_Courses AS student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id WHERE student_enrolment_courses.student_course_id = 1 GROUP BY courses.course_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.other_details FROM Sections AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id WHERE T2.course_name = \"os\" GROUP BY T1.other_details  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT sections.other_details FROM Sections AS sections JOIN Courses AS courses ON sections.course_id = courses.course_id WHERE courses.course_name = \"os\" GROUP BY sections.other_details  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.semester_description FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_id = 5 GROUP BY T1.semester_description  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT semesters.semester_description FROM Semesters AS semesters JOIN Student_Enrolment AS student_enrolment ON semesters.semester_id = student_enrolment.semester_id WHERE student_enrolment.student_id = 5 GROUP BY semesters.semester_description  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.department_name FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T2.degree_summary_description = \"assumenda\" GROUP BY T1.department_name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT departments.department_name FROM Departments AS departments JOIN Degree_Programs AS degree_programs ON departments.department_id = degree_programs.department_id WHERE degree_programs.degree_summary_description = \"assumenda\" GROUP BY departments.department_name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.semester_id FROM Student_Enrolment AS T1        EXCEPT SELECT T2.semester_id FROM Student_Enrolment AS T2 WHERE T2.degree_program_id = 3",
    "readable_query": "SELECT student_enrolment.semester_id FROM Student_Enrolment AS student_enrolment        EXCEPT SELECT student_enrolment.semester_id FROM Student_Enrolment AS student_enrolment WHERE student_enrolment.degree_program_id = 3"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.student_enrolment_id FROM Student_Enrolment_Courses AS T1        EXCEPT SELECT T2.student_enrolment_id FROM Student_Enrolment_Courses AS T2 WHERE T2.student_course_id = 8",
    "readable_query": "SELECT student_enrolment_courses.student_enrolment_id FROM Student_Enrolment_Courses AS student_enrolment_courses        EXCEPT SELECT student_enrolment_courses.student_enrolment_id FROM Student_Enrolment_Courses AS student_enrolment_courses WHERE student_enrolment_courses.student_course_id = 8"
  },
  {
    "db_id": "student_transcripts_tracking",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.transcript_id FROM Transcript_Contents AS T1        EXCEPT SELECT T2.transcript_id FROM Transcript_Contents AS T2 WHERE T2.student_course_id = 0",
    "readable_query": "SELECT transcript_contents.transcript_id FROM Transcript_Contents AS transcript_contents        EXCEPT SELECT transcript_contents.transcript_id FROM Transcript_Contents AS transcript_contents WHERE transcript_contents.student_course_id = 0"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Is_full_time FROM hiring AS T1 WHERE T1.Employee_ID = 2",
    "readable_query": "SELECT hiring.Is_full_time FROM hiring AS hiring WHERE hiring.Employee_ID = 2"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Bonus FROM evaluation AS T1 WHERE T1.Employee_ID = \"7\"",
    "readable_query": "SELECT evaluation.Bonus FROM evaluation AS evaluation WHERE evaluation.Employee_ID = \"7\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Year_awarded FROM evaluation AS T1 WHERE T1.Bonus = 3200.0",
    "readable_query": "SELECT evaluation.Year_awarded FROM evaluation AS evaluation WHERE evaluation.Bonus = 3200.0"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Employee_ID FROM hiring AS T1 WHERE T1.Start_from = \"2009\"",
    "readable_query": "SELECT hiring.Employee_ID FROM hiring AS hiring WHERE hiring.Start_from = \"2009\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.City FROM employee AS T1 WHERE T1.Name = \"George Chuter\"",
    "readable_query": "SELECT employee.City FROM employee AS employee WHERE employee.Name = \"George Chuter\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Bonus FROM evaluation AS T1 WHERE T1.Year_awarded = \"2015\"",
    "readable_query": "SELECT evaluation.Bonus FROM evaluation AS evaluation WHERE evaluation.Year_awarded = \"2015\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Shop_ID FROM hiring AS T1 WHERE T1.Is_full_time = \"T\"",
    "readable_query": "SELECT hiring.Shop_ID FROM hiring AS hiring WHERE hiring.Is_full_time = \"T\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.District FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Is_full_time = \"F\"",
    "readable_query": "SELECT shop.District FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID WHERE hiring.Is_full_time = \"F\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.District FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Start_from = \"2009\"",
    "readable_query": "SELECT shop.District FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID WHERE hiring.Start_from = \"2009\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.City FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Is_full_time = \"F\"",
    "readable_query": "SELECT employee.City FROM employee AS employee JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID WHERE hiring.Is_full_time = \"F\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Bonus FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Name = \"Louis Deacon\"",
    "readable_query": "SELECT evaluation.Bonus FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID WHERE employee.Name = \"Louis Deacon\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Employee_ID, count(*) FROM evaluation AS T1  GROUP BY T1.Employee_ID",
    "readable_query": "SELECT evaluation.Employee_ID, count(*) FROM evaluation AS evaluation  GROUP BY evaluation.Employee_ID"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Year_awarded, count(*) FROM evaluation AS T1  GROUP BY T1.Year_awarded",
    "readable_query": "SELECT evaluation.Year_awarded, count(*) FROM evaluation AS evaluation  GROUP BY evaluation.Year_awarded"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Manager_name, count(*) FROM shop AS T1  GROUP BY T1.Manager_name",
    "readable_query": "SELECT shop.Manager_name, count(*) FROM shop AS shop  GROUP BY shop.Manager_name"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Age, count(*) FROM employee AS T1  GROUP BY T1.Age",
    "readable_query": "SELECT employee.Age, count(*) FROM employee AS employee  GROUP BY employee.Age"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Shop_ID, count(*) FROM shop AS T1  GROUP BY T1.Shop_ID",
    "readable_query": "SELECT shop.Shop_ID, count(*) FROM shop AS shop  GROUP BY shop.Shop_ID"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Number_products, count(*) FROM shop AS T1  GROUP BY T1.Number_products",
    "readable_query": "SELECT shop.Number_products, count(*) FROM shop AS shop  GROUP BY shop.Number_products"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Year_awarded, count(*) FROM evaluation AS T1  GROUP BY T1.Year_awarded",
    "readable_query": "SELECT evaluation.Year_awarded, count(*) FROM evaluation AS evaluation  GROUP BY evaluation.Year_awarded"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.District, count(*) FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.District",
    "readable_query": "SELECT shop.District, count(*) FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID  GROUP BY shop.District"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Year_awarded, count(*) FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID  GROUP BY T1.Year_awarded",
    "readable_query": "SELECT evaluation.Year_awarded, count(*) FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID  GROUP BY evaluation.Year_awarded"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Location, count(*) FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.Location",
    "readable_query": "SELECT shop.Location, count(*) FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID  GROUP BY shop.Location"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Name, count(*) FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.Name",
    "readable_query": "SELECT shop.Name, count(*) FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID  GROUP BY shop.Name"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Manager_name, count(*) FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.Manager_name",
    "readable_query": "SELECT shop.Manager_name, count(*) FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID  GROUP BY shop.Manager_name"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM hiring AS T1",
    "readable_query": "SELECT count(*) FROM hiring AS hiring"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Location, T1.Name FROM shop AS T1",
    "readable_query": "SELECT shop.Location, shop.Name FROM shop AS shop"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Employee_ID, T1.Start_from FROM hiring AS T1",
    "readable_query": "SELECT hiring.Employee_ID, hiring.Start_from FROM hiring AS hiring"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Shop_ID, T1.Location FROM shop AS T1",
    "readable_query": "SELECT shop.Shop_ID, shop.Location FROM shop AS shop"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Name, T1.Shop_ID FROM shop AS T1",
    "readable_query": "SELECT shop.Name, shop.Shop_ID FROM shop AS shop"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Manager_name, T1.Shop_ID FROM shop AS T1",
    "readable_query": "SELECT shop.Manager_name, shop.Shop_ID FROM shop AS shop"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Year_awarded, T2.City FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID",
    "readable_query": "SELECT evaluation.Year_awarded, employee.City FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Age, T2.Shop_ID FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID",
    "readable_query": "SELECT employee.Age, hiring.Shop_ID FROM employee AS employee JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Bonus, T2.City FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID",
    "readable_query": "SELECT evaluation.Bonus, employee.City FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Shop_ID, T2.Start_from FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID",
    "readable_query": "SELECT shop.Shop_ID, hiring.Start_from FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Bonus, T1.Employee_ID FROM evaluation AS T1 WHERE T1.Year_awarded = \"2017\"",
    "readable_query": "SELECT evaluation.Bonus, evaluation.Employee_ID FROM evaluation AS evaluation WHERE evaluation.Year_awarded = \"2017\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Shop_ID, T1.Start_from FROM hiring AS T1 WHERE T1.Is_full_time = \"T\"",
    "readable_query": "SELECT hiring.Shop_ID, hiring.Start_from FROM hiring AS hiring WHERE hiring.Is_full_time = \"T\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Year_awarded, T1.Bonus FROM evaluation AS T1 WHERE T1.Employee_ID = \"2\"",
    "readable_query": "SELECT evaluation.Year_awarded, evaluation.Bonus FROM evaluation AS evaluation WHERE evaluation.Employee_ID = \"2\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Manager_name, T1.Name FROM shop AS T1 WHERE T1.Shop_ID = 7",
    "readable_query": "SELECT shop.Manager_name, shop.Name FROM shop AS shop WHERE shop.Shop_ID = 7"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Name, T1.Manager_name FROM shop AS T1 WHERE T1.Location = \"Lahti\"",
    "readable_query": "SELECT shop.Name, shop.Manager_name FROM shop AS shop WHERE shop.Location = \"Lahti\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Age, T1.Employee_ID FROM employee AS T1 WHERE T1.City = \"Bath\"",
    "readable_query": "SELECT employee.Age, employee.Employee_ID FROM employee AS employee WHERE employee.City = \"Bath\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Is_full_time, T1.Employee_ID FROM hiring AS T1 WHERE T1.Start_from = \"2011\"",
    "readable_query": "SELECT hiring.Is_full_time, hiring.Employee_ID FROM hiring AS hiring WHERE hiring.Start_from = \"2011\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Year_awarded, T1.Bonus FROM evaluation AS T1 WHERE T1.Employee_ID = \"2\"",
    "readable_query": "SELECT evaluation.Year_awarded, evaluation.Bonus FROM evaluation AS evaluation WHERE evaluation.Employee_ID = \"2\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Start_from FROM hiring AS T1  GROUP BY T1.Start_from  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT hiring.Start_from FROM hiring AS hiring  GROUP BY hiring.Start_from  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Employee_ID FROM employee AS T1  GROUP BY T1.Employee_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT employee.Employee_ID FROM employee AS employee  GROUP BY employee.Employee_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Name FROM employee AS T1  GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT employee.Name FROM employee AS employee  GROUP BY employee.Name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Age FROM employee AS T1  GROUP BY T1.Age  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT employee.Age FROM employee AS employee  GROUP BY employee.Age  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM hiring AS T1 WHERE T1.Is_full_time = \"F\"",
    "readable_query": "SELECT count(*) FROM hiring AS hiring WHERE hiring.Is_full_time = \"F\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM evaluation AS T1 WHERE T1.Bonus = 2900.0",
    "readable_query": "SELECT count(*) FROM evaluation AS evaluation WHERE evaluation.Bonus = 2900.0"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Manager_name FROM shop AS T1    ORDER BY T1.Shop_ID DESC LIMIT 1",
    "readable_query": "SELECT shop.Manager_name FROM shop AS shop    ORDER BY shop.Shop_ID DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.City FROM employee AS T1    ORDER BY T1.Age DESC LIMIT 1",
    "readable_query": "SELECT employee.City FROM employee AS employee    ORDER BY employee.Age DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Year_awarded FROM evaluation AS T1    ORDER BY T1.Bonus DESC LIMIT 1",
    "readable_query": "SELECT evaluation.Year_awarded FROM evaluation AS evaluation    ORDER BY evaluation.Bonus DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Age FROM employee AS T1    ORDER BY T1.Employee_ID DESC LIMIT 1",
    "readable_query": "SELECT employee.Age FROM employee AS employee    ORDER BY employee.Employee_ID DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Start_from FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID    ORDER BY T2.Shop_ID DESC LIMIT 1",
    "readable_query": "SELECT hiring.Start_from FROM hiring AS hiring JOIN shop AS shop ON hiring.Shop_ID = shop.Shop_ID    ORDER BY shop.Shop_ID DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Location FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID    ORDER BY T2.Shop_ID DESC LIMIT 1",
    "readable_query": "SELECT shop.Location FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID    ORDER BY hiring.Shop_ID DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Employee_ID FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Bonus DESC LIMIT 1",
    "readable_query": "SELECT employee.Employee_ID FROM employee AS employee JOIN evaluation AS evaluation ON employee.Employee_ID = evaluation.Employee_ID    ORDER BY evaluation.Bonus DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Employee_ID DESC LIMIT 1",
    "readable_query": "SELECT employee.Name FROM employee AS employee JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID    ORDER BY hiring.Employee_ID DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Number_products FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID    ORDER BY T2.Employee_ID DESC LIMIT 1",
    "readable_query": "SELECT shop.Number_products FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID    ORDER BY hiring.Employee_ID DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID    ORDER BY T2.Employee_ID DESC LIMIT 1",
    "readable_query": "SELECT shop.Name FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID    ORDER BY hiring.Employee_ID DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Is_full_time FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Employee_ID DESC LIMIT 1",
    "readable_query": "SELECT hiring.Is_full_time FROM hiring AS hiring JOIN employee AS employee ON hiring.Employee_ID = employee.Employee_ID    ORDER BY employee.Employee_ID DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Shop_ID FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Age DESC LIMIT 1",
    "readable_query": "SELECT hiring.Shop_ID FROM hiring AS hiring JOIN employee AS employee ON hiring.Employee_ID = employee.Employee_ID    ORDER BY employee.Age DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Year_awarded FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Age DESC LIMIT 1",
    "readable_query": "SELECT evaluation.Year_awarded FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID    ORDER BY employee.Age DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Bonus FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Age ASC LIMIT 1",
    "readable_query": "SELECT evaluation.Bonus FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID    ORDER BY employee.Age ASC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Bonus ASC LIMIT 1",
    "readable_query": "SELECT employee.Name FROM employee AS employee JOIN evaluation AS evaluation ON employee.Employee_ID = evaluation.Employee_ID    ORDER BY evaluation.Bonus ASC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Shop_ID ASC LIMIT 1",
    "readable_query": "SELECT employee.Name FROM employee AS employee JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID    ORDER BY hiring.Shop_ID ASC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Number_products FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID    ORDER BY T2.Shop_ID ASC LIMIT 1",
    "readable_query": "SELECT shop.Number_products FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID    ORDER BY hiring.Shop_ID ASC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Year_awarded, T1.Employee_ID FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Age DESC LIMIT 1",
    "readable_query": "SELECT evaluation.Year_awarded, evaluation.Employee_ID FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID    ORDER BY employee.Age DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Name, T1.Manager_name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID    ORDER BY T2.Shop_ID DESC LIMIT 1",
    "readable_query": "SELECT shop.Name, shop.Manager_name FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID    ORDER BY hiring.Shop_ID DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Age, T1.City FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Shop_ID DESC LIMIT 1",
    "readable_query": "SELECT employee.Age, employee.City FROM employee AS employee JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID    ORDER BY hiring.Shop_ID DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.City, T1.Age FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Bonus DESC LIMIT 1",
    "readable_query": "SELECT employee.City, employee.Age FROM employee AS employee JOIN evaluation AS evaluation ON employee.Employee_ID = evaluation.Employee_ID    ORDER BY evaluation.Bonus DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Employee_ID) FROM employee AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  employee.Employee_ID) FROM employee AS employee"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Location) FROM shop AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  shop.Location) FROM shop AS shop"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Year_awarded) FROM evaluation AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  evaluation.Year_awarded) FROM evaluation AS evaluation"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Employee_ID) FROM evaluation AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  evaluation.Employee_ID) FROM evaluation AS evaluation"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Is_full_time) FROM hiring AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  hiring.Is_full_time) FROM hiring AS hiring"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Bonus) FROM evaluation AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  evaluation.Bonus) FROM evaluation AS evaluation"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Shop_ID) FROM shop AS T1",
    "readable_query": "SELECT avg( shop.Shop_ID) FROM shop AS shop"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Shop_ID) FROM hiring AS T1",
    "readable_query": "SELECT avg( hiring.Shop_ID) FROM hiring AS hiring"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Employee_ID) FROM employee AS T1",
    "readable_query": "SELECT avg( employee.Employee_ID) FROM employee AS employee"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Shop_ID) FROM hiring AS T1",
    "readable_query": "SELECT avg( hiring.Shop_ID) FROM hiring AS hiring"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Is_full_time FROM hiring AS T1",
    "readable_query": "SELECT hiring.Is_full_time FROM hiring AS hiring"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Start_from FROM hiring AS T1",
    "readable_query": "SELECT hiring.Start_from FROM hiring AS hiring"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Bonus FROM evaluation AS T1",
    "readable_query": "SELECT evaluation.Bonus FROM evaluation AS evaluation"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Year_awarded FROM evaluation AS T1",
    "readable_query": "SELECT evaluation.Year_awarded FROM evaluation AS evaluation"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Location FROM shop AS T1",
    "readable_query": "SELECT shop.Location FROM shop AS shop"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Age FROM employee AS T1",
    "readable_query": "SELECT employee.Age FROM employee AS employee"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Employee_ID FROM employee AS T1",
    "readable_query": "SELECT employee.Employee_ID FROM employee AS employee"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Bonus FROM evaluation AS T1",
    "readable_query": "SELECT DISTINCT evaluation.Bonus FROM evaluation AS evaluation"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Name FROM shop AS T1",
    "readable_query": "SELECT DISTINCT shop.Name FROM shop AS shop"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Year_awarded FROM evaluation AS T1",
    "readable_query": "SELECT DISTINCT evaluation.Year_awarded FROM evaluation AS evaluation"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Shop_ID FROM hiring AS T1",
    "readable_query": "SELECT DISTINCT hiring.Shop_ID FROM hiring AS hiring"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Employee_ID FROM employee AS T1",
    "readable_query": "SELECT DISTINCT employee.Employee_ID FROM employee AS employee"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Is_full_time FROM hiring AS T1",
    "readable_query": "SELECT DISTINCT hiring.Is_full_time FROM hiring AS hiring"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Bonus FROM evaluation AS T1",
    "readable_query": "SELECT DISTINCT evaluation.Bonus FROM evaluation AS evaluation"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.District FROM shop AS T1     ORDER BY T1.Shop_ID ASC",
    "readable_query": "SELECT shop.District FROM shop AS shop     ORDER BY shop.Shop_ID ASC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Number_products FROM shop AS T1     ORDER BY T1.Shop_ID ASC",
    "readable_query": "SELECT shop.Number_products FROM shop AS shop     ORDER BY shop.Shop_ID ASC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Year_awarded FROM evaluation AS T1     ORDER BY T1.Bonus ASC",
    "readable_query": "SELECT evaluation.Year_awarded FROM evaluation AS evaluation     ORDER BY evaluation.Bonus ASC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Manager_name FROM shop AS T1     ORDER BY T1.Shop_ID ASC",
    "readable_query": "SELECT shop.Manager_name FROM shop AS shop     ORDER BY shop.Shop_ID ASC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Shop_ID FROM hiring AS T1     ORDER BY T1.Employee_ID ASC",
    "readable_query": "SELECT hiring.Shop_ID FROM hiring AS hiring     ORDER BY hiring.Employee_ID ASC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Manager_name FROM shop AS T1     ORDER BY T1.Number_products ASC",
    "readable_query": "SELECT shop.Manager_name FROM shop AS shop     ORDER BY shop.Number_products ASC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Employee_ID FROM hiring AS T1     ORDER BY T1.Shop_ID ASC",
    "readable_query": "SELECT hiring.Employee_ID FROM hiring AS hiring     ORDER BY hiring.Shop_ID ASC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Number_products FROM shop AS T1     ORDER BY T1.Shop_ID ASC",
    "readable_query": "SELECT shop.Number_products FROM shop AS shop     ORDER BY shop.Shop_ID ASC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Location FROM shop AS T1     ORDER BY T1.Shop_ID DESC",
    "readable_query": "SELECT shop.Location FROM shop AS shop     ORDER BY shop.Shop_ID DESC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Employee_ID FROM employee AS T1     ORDER BY T1.Age DESC",
    "readable_query": "SELECT employee.Employee_ID FROM employee AS employee     ORDER BY employee.Age DESC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1     ORDER BY T1.Bonus DESC",
    "readable_query": "SELECT evaluation.Employee_ID FROM evaluation AS evaluation     ORDER BY evaluation.Bonus DESC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Location FROM shop AS T1     ORDER BY T1.Shop_ID DESC",
    "readable_query": "SELECT shop.Location FROM shop AS shop     ORDER BY shop.Shop_ID DESC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1     ORDER BY T1.Bonus DESC",
    "readable_query": "SELECT evaluation.Employee_ID FROM evaluation AS evaluation     ORDER BY evaluation.Bonus DESC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Name FROM employee AS T1     ORDER BY T1.Employee_ID DESC",
    "readable_query": "SELECT employee.Name FROM employee AS employee     ORDER BY employee.Employee_ID DESC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Number_products FROM shop AS T1     ORDER BY T1.Shop_ID DESC",
    "readable_query": "SELECT shop.Number_products FROM shop AS shop     ORDER BY shop.Shop_ID DESC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Year_awarded, T1.Bonus FROM evaluation AS T1     ORDER BY T1.Bonus ASC",
    "readable_query": "SELECT evaluation.Year_awarded, evaluation.Bonus FROM evaluation AS evaluation     ORDER BY evaluation.Bonus ASC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Employee_ID, T1.Bonus FROM evaluation AS T1     ORDER BY T1.Bonus ASC",
    "readable_query": "SELECT evaluation.Employee_ID, evaluation.Bonus FROM evaluation AS evaluation     ORDER BY evaluation.Bonus ASC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Start_from, T1.Shop_ID FROM hiring AS T1     ORDER BY T1.Shop_ID ASC",
    "readable_query": "SELECT hiring.Start_from, hiring.Shop_ID FROM hiring AS hiring     ORDER BY hiring.Shop_ID ASC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.District, T1.Number_products FROM shop AS T1     ORDER BY T1.Number_products ASC",
    "readable_query": "SELECT shop.District, shop.Number_products FROM shop AS shop     ORDER BY shop.Number_products ASC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Bonus FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN hiring AS T3 ON T2.Employee_ID = T3.Employee_ID WHERE T2.Name = \"Lee Mears\" and T3.Employee_ID = 3",
    "readable_query": "SELECT evaluation.Bonus FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID WHERE employee.Name = \"Lee Mears\" and hiring.Employee_ID = 3"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Bonus FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN hiring AS T3 ON T2.Employee_ID = T3.Employee_ID WHERE T2.Name = \"Phil Vickery\" and T3.Employee_ID = 7",
    "readable_query": "SELECT evaluation.Bonus FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID WHERE employee.Name = \"Phil Vickery\" and hiring.Employee_ID = 7"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Name FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN shop AS T3 ON T2.Shop_ID = T3.Shop_ID WHERE T2.Shop_ID = 1 and T3.Number_products = 1600",
    "readable_query": "SELECT employee.Name FROM employee AS employee JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID JOIN shop AS shop ON hiring.Shop_ID = shop.Shop_ID WHERE hiring.Shop_ID = 1 and shop.Number_products = 1600"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Employee_ID FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN hiring AS T3 ON T1.Employee_ID = T3.Employee_ID WHERE T2.Bonus = 3000.0 and T3.Shop_ID = 8",
    "readable_query": "SELECT employee.Employee_ID FROM employee AS employee JOIN evaluation AS evaluation ON employee.Employee_ID = evaluation.Employee_ID JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID WHERE evaluation.Bonus = 3000.0 and hiring.Shop_ID = 8"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Year_awarded = \"2017\" or T2.Year_awarded = \"2018\"",
    "readable_query": "SELECT employee.Name FROM employee AS employee JOIN evaluation AS evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE evaluation.Year_awarded = \"2017\" or evaluation.Year_awarded = \"2018\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Manager_name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Is_full_time = \"F\" or T2.Is_full_time = \"T\"",
    "readable_query": "SELECT shop.Manager_name FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID WHERE hiring.Is_full_time = \"F\" or hiring.Is_full_time = \"T\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Employee_ID FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.City = \"Bath\" or T2.City = \"Wasps\"",
    "readable_query": "SELECT hiring.Employee_ID FROM hiring AS hiring JOIN employee AS employee ON hiring.Employee_ID = employee.Employee_ID WHERE employee.City = \"Bath\" or employee.City = \"Wasps\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Bonus FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Age = 29 or T2.Age = 32",
    "readable_query": "SELECT evaluation.Bonus FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID WHERE employee.Age = 29 or employee.Age = 32"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Bonus FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.City = \"Bath\" or T2.City = \"Bath\"",
    "readable_query": "SELECT evaluation.Bonus FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID WHERE employee.City = \"Bath\" or employee.City = \"Bath\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.Employee_ID FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Is_full_time = \"F\" or T2.Is_full_time = \"F\"",
    "readable_query": "SELECT employee.Employee_ID FROM employee AS employee JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID WHERE hiring.Is_full_time = \"F\" or hiring.Is_full_time = \"F\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Name FROM employee AS T1 WHERE T1.City = \"Bristol\" and T1.Age = 32",
    "readable_query": "SELECT employee.Name FROM employee AS employee WHERE employee.City = \"Bristol\" and employee.Age = 32"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Is_full_time FROM hiring AS T1 WHERE T1.Employee_ID = 1 and T1.Start_from = \"2009\"",
    "readable_query": "SELECT hiring.Is_full_time FROM hiring AS hiring WHERE hiring.Employee_ID = 1 and hiring.Start_from = \"2009\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Year_awarded) FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Employee_ID = \"7\" and T2.Name = \"Steve Borthwick\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  evaluation.Year_awarded) FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID WHERE evaluation.Employee_ID = \"7\" and employee.Name = \"Steve Borthwick\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Bonus) FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Employee_ID = \"10\" and T2.Age = 28",
    "readable_query": "SELECT DISTINCT count(DISTINCT  evaluation.Bonus) FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID WHERE evaluation.Employee_ID = \"10\" and employee.Age = 28"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Start_from) FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T1.Shop_ID = 6 and T2.Manager_name = \"Job Dragtsma\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  hiring.Start_from) FROM hiring AS hiring JOIN shop AS shop ON hiring.Shop_ID = shop.Shop_ID WHERE hiring.Shop_ID = 6 and shop.Manager_name = \"Job Dragtsma\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Shop_ID) FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Employee_ID = 5 and T2.Name = \"Steve Borthwick\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  hiring.Shop_ID) FROM hiring AS hiring JOIN employee AS employee ON hiring.Employee_ID = employee.Employee_ID WHERE hiring.Employee_ID = 5 and employee.Name = \"Steve Borthwick\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Employee_ID) FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.City = \"Leicester\" and T2.Year_awarded = \"2015\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  employee.Employee_ID) FROM employee AS employee JOIN evaluation AS evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE employee.City = \"Leicester\" and evaluation.Year_awarded = \"2015\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Employee_ID) FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T1.Is_full_time = \"F\" and T2.Manager_name = \"Tommi Kautonen\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  hiring.Employee_ID) FROM hiring AS hiring JOIN shop AS shop ON hiring.Shop_ID = shop.Shop_ID WHERE hiring.Is_full_time = \"F\" and shop.Manager_name = \"Tommi Kautonen\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.City) FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Employee_ID = 10 and T2.Bonus = 4000.0",
    "readable_query": "SELECT DISTINCT count(DISTINCT  employee.City) FROM employee AS employee JOIN evaluation AS evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE employee.Employee_ID = 10 and evaluation.Bonus = 4000.0"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Employee_ID FROM employee AS T1 WHERE T1.Name = \"Phil Vickery\" or T1.Age = 29",
    "readable_query": "SELECT employee.Employee_ID FROM employee AS employee WHERE employee.Name = \"Phil Vickery\" or employee.Age = 29"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Year_awarded FROM evaluation AS T1 WHERE T1.Employee_ID = \"2\" or T1.Bonus = 3200.0",
    "readable_query": "SELECT evaluation.Year_awarded FROM evaluation AS evaluation WHERE evaluation.Employee_ID = \"2\" or evaluation.Bonus = 3200.0"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Name = \"George Chuter\" and T2.City = \"Leicester\"",
    "readable_query": "SELECT count(*) FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID WHERE employee.Name = \"George Chuter\" and employee.City = \"Leicester\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID = 5 and T2.Start_from = \"2011\"",
    "readable_query": "SELECT count(*) FROM employee AS employee JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID WHERE hiring.Employee_ID = 5 and hiring.Start_from = \"2011\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Shop_ID FROM hiring AS T1 WHERE T1.Start_from != \"2010\"",
    "readable_query": "SELECT hiring.Shop_ID FROM hiring AS hiring WHERE hiring.Start_from != \"2010\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Start_from FROM hiring AS T1 WHERE T1.Shop_ID != 1",
    "readable_query": "SELECT hiring.Start_from FROM hiring AS hiring WHERE hiring.Shop_ID != 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.District FROM shop AS T1 WHERE T1.Location != \"Kuopio\"",
    "readable_query": "SELECT shop.District FROM shop AS shop WHERE shop.Location != \"Kuopio\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Name FROM employee AS T1 WHERE T1.Employee_ID != 7",
    "readable_query": "SELECT employee.Name FROM employee AS employee WHERE employee.Employee_ID != 7"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Bonus FROM evaluation AS T1 WHERE T1.Year_awarded != \"2015\"",
    "readable_query": "SELECT evaluation.Bonus FROM evaluation AS evaluation WHERE evaluation.Year_awarded != \"2015\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Shop_ID FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Number_products != 10770",
    "readable_query": "SELECT hiring.Shop_ID FROM hiring AS hiring JOIN shop AS shop ON hiring.Shop_ID = shop.Shop_ID WHERE shop.Number_products != 10770"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Bonus != 3000.0",
    "readable_query": "SELECT employee.Name FROM employee AS employee JOIN evaluation AS evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE evaluation.Bonus != 3000.0"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Age FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Start_from != \"2010\"",
    "readable_query": "SELECT employee.Age FROM employee AS employee JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID WHERE hiring.Start_from != \"2010\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Bonus FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Age != 29",
    "readable_query": "SELECT evaluation.Bonus FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID WHERE employee.Age != 29"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Shop_ID FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Age = 29",
    "readable_query": "SELECT DISTINCT hiring.Shop_ID FROM hiring AS hiring JOIN employee AS employee ON hiring.Employee_ID = employee.Employee_ID WHERE employee.Age = 29"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Year_awarded FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID = 2",
    "readable_query": "SELECT DISTINCT evaluation.Year_awarded FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID WHERE employee.Employee_ID = 2"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Is_full_time FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Name = \"FC Honka\"",
    "readable_query": "SELECT DISTINCT hiring.Is_full_time FROM hiring AS hiring JOIN shop AS shop ON hiring.Shop_ID = shop.Shop_ID WHERE shop.Name = \"FC Honka\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.District FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Is_full_time = \"F\"",
    "readable_query": "SELECT DISTINCT shop.District FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID WHERE hiring.Is_full_time = \"F\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Shop_ID FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Start_from = \"2010\"",
    "readable_query": "SELECT DISTINCT shop.Shop_ID FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID WHERE hiring.Start_from = \"2010\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Start_from FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Age = 23",
    "readable_query": "SELECT DISTINCT hiring.Start_from FROM hiring AS hiring JOIN employee AS employee ON hiring.Employee_ID = employee.Employee_ID WHERE employee.Age = 23"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Manager_name) FROM shop AS T1 WHERE T1.District = \"Tapiolan Urheilupuisto\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  shop.Manager_name) FROM shop AS shop WHERE shop.District = \"Tapiolan Urheilupuisto\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Start_from) FROM hiring AS T1 WHERE T1.Shop_ID = 1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  hiring.Start_from) FROM hiring AS hiring WHERE hiring.Shop_ID = 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Age) FROM employee AS T1 WHERE T1.City = \"Wasps\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  employee.Age) FROM employee AS employee WHERE employee.City = \"Wasps\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.District) FROM shop AS T1 WHERE T1.Shop_ID = 6",
    "readable_query": "SELECT DISTINCT count(DISTINCT  shop.District) FROM shop AS shop WHERE shop.Shop_ID = 6"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM shop AS T1 WHERE T1.Shop_ID = 3",
    "readable_query": "SELECT DISTINCT count(DISTINCT  shop.Name) FROM shop AS shop WHERE shop.Shop_ID = 3"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.City) FROM employee AS T1 WHERE T1.Age = 40",
    "readable_query": "SELECT DISTINCT count(DISTINCT  employee.City) FROM employee AS employee WHERE employee.Age = 40"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM employee AS T1 WHERE T1.City = \"Leicester\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  employee.Name) FROM employee AS employee WHERE employee.City = \"Leicester\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Year_awarded) FROM evaluation AS T1 WHERE T1.Employee_ID = \"1\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  evaluation.Year_awarded) FROM evaluation AS evaluation WHERE evaluation.Employee_ID = \"1\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Bonus, T2.Name, T3.Shop_ID FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN hiring AS T3 ON T2.Employee_ID = T3.Employee_ID",
    "readable_query": "SELECT evaluation.Bonus, employee.Name, hiring.Shop_ID FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Employee_ID, T2.Age, T3.Is_full_time FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN hiring AS T3 ON T2.Employee_ID = T3.Employee_ID",
    "readable_query": "SELECT evaluation.Employee_ID, employee.Age, hiring.Is_full_time FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.City, T2.Employee_ID, T3.Name FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN shop AS T3 ON T2.Shop_ID = T3.Shop_ID",
    "readable_query": "SELECT employee.City, hiring.Employee_ID, shop.Name FROM employee AS employee JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID JOIN shop AS shop ON hiring.Shop_ID = shop.Shop_ID"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.City, T2.Shop_ID, T3.Bonus FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN evaluation AS T3 ON T1.Employee_ID = T3.Employee_ID",
    "readable_query": "SELECT employee.City, hiring.Shop_ID, evaluation.Bonus FROM employee AS employee JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID JOIN evaluation AS evaluation ON employee.Employee_ID = evaluation.Employee_ID"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Employee_ID, T2.Start_from, T3.Year_awarded FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN evaluation AS T3 ON T1.Employee_ID = T3.Employee_ID",
    "readable_query": "SELECT employee.Employee_ID, hiring.Start_from, evaluation.Year_awarded FROM employee AS employee JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID JOIN evaluation AS evaluation ON employee.Employee_ID = evaluation.Employee_ID"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Employee_ID, T2.City, T3.Start_from FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN hiring AS T3 ON T2.Employee_ID = T3.Employee_ID",
    "readable_query": "SELECT evaluation.Employee_ID, employee.City, hiring.Start_from FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Bonus, T2.City, T3.Employee_ID FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN hiring AS T3 ON T2.Employee_ID = T3.Employee_ID",
    "readable_query": "SELECT evaluation.Bonus, employee.City, hiring.Employee_ID FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.Bonus, T2.Name, T3.Employee_ID FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN hiring AS T3 ON T2.Employee_ID = T3.Employee_ID",
    "readable_query": "SELECT evaluation.Bonus, employee.Name, hiring.Employee_ID FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Number_products FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID     ORDER BY T2.Employee_ID ASC",
    "readable_query": "SELECT shop.Number_products FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID     ORDER BY hiring.Employee_ID ASC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Year_awarded FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID     ORDER BY T2.Age ASC",
    "readable_query": "SELECT evaluation.Year_awarded FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID     ORDER BY employee.Age ASC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Start_from FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID     ORDER BY T2.Age ASC",
    "readable_query": "SELECT hiring.Start_from FROM hiring AS hiring JOIN employee AS employee ON hiring.Employee_ID = employee.Employee_ID     ORDER BY employee.Age ASC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Location FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID     ORDER BY T2.Shop_ID ASC",
    "readable_query": "SELECT shop.Location FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID     ORDER BY hiring.Shop_ID ASC"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Number_products FROM shop AS T1 WHERE T1.Location = \"Lahti\"     INTERSECT SELECT T2.Number_products FROM shop AS T2 WHERE T2.Location = \"Helsinki\"",
    "readable_query": "SELECT shop.Number_products FROM shop AS shop WHERE shop.Location = \"Lahti\"     INTERSECT SELECT shop.Number_products FROM shop AS shop WHERE shop.Location = \"Helsinki\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1 WHERE T1.Year_awarded = \"2015\"     INTERSECT SELECT T2.Employee_ID FROM evaluation AS T2 WHERE T2.Year_awarded = \"2016\"",
    "readable_query": "SELECT evaluation.Employee_ID FROM evaluation AS evaluation WHERE evaluation.Year_awarded = \"2015\"     INTERSECT SELECT evaluation.Employee_ID FROM evaluation AS evaluation WHERE evaluation.Year_awarded = \"2016\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Manager_name FROM shop AS T1 WHERE T1.Location = \"Turku\"     INTERSECT SELECT T2.Manager_name FROM shop AS T2 WHERE T2.Location = \"Helsinki\"",
    "readable_query": "SELECT shop.Manager_name FROM shop AS shop WHERE shop.Location = \"Turku\"     INTERSECT SELECT shop.Manager_name FROM shop AS shop WHERE shop.Location = \"Helsinki\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.City FROM employee AS T1 WHERE T1.Age = 23     INTERSECT SELECT T2.City FROM employee AS T2 WHERE T2.Age = 36",
    "readable_query": "SELECT employee.City FROM employee AS employee WHERE employee.Age = 23     INTERSECT SELECT employee.City FROM employee AS employee WHERE employee.Age = 36"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1 WHERE T1.Year_awarded = \"2015\"     INTERSECT SELECT T2.Employee_ID FROM evaluation AS T2 WHERE T2.Year_awarded = \"2015\"",
    "readable_query": "SELECT evaluation.Employee_ID FROM evaluation AS evaluation WHERE evaluation.Year_awarded = \"2015\"     INTERSECT SELECT evaluation.Employee_ID FROM evaluation AS evaluation WHERE evaluation.Year_awarded = \"2015\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Is_full_time FROM hiring AS T1 WHERE T1.Start_from = \"2011\"     INTERSECT SELECT T2.Is_full_time FROM hiring AS T2 WHERE T2.Start_from = \"2010\"",
    "readable_query": "SELECT hiring.Is_full_time FROM hiring AS hiring WHERE hiring.Start_from = \"2011\"     INTERSECT SELECT hiring.Is_full_time FROM hiring AS hiring WHERE hiring.Start_from = \"2010\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Employee_ID) FROM hiring AS T1 WHERE T1.Shop_ID = 4",
    "readable_query": "SELECT avg( hiring.Employee_ID) FROM hiring AS hiring WHERE hiring.Shop_ID = 4"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Shop_ID) FROM hiring AS T1 WHERE T1.Start_from = \"2009\"",
    "readable_query": "SELECT avg( hiring.Shop_ID) FROM hiring AS hiring WHERE hiring.Start_from = \"2009\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Shop_ID) FROM hiring AS T1 WHERE T1.Is_full_time = \"F\"",
    "readable_query": "SELECT avg( hiring.Shop_ID) FROM hiring AS hiring WHERE hiring.Is_full_time = \"F\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.City FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Shop_ID = (SELECT max( T23.Shop_ID) FROM hiring AS T23)",
    "readable_query": "SELECT employee.City FROM employee AS employee JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID WHERE hiring.Shop_ID = (SELECT max( hiring.Shop_ID) FROM hiring AS hiring)"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Employee_ID FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Shop_ID = (SELECT max( T23.Shop_ID) FROM shop AS T23)",
    "readable_query": "SELECT hiring.Employee_ID FROM hiring AS hiring JOIN shop AS shop ON hiring.Shop_ID = shop.Shop_ID WHERE shop.Shop_ID = (SELECT max( shop.Shop_ID) FROM shop AS shop)"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Employee_ID FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Number_products = (SELECT max( T23.Number_products) FROM shop AS T23)",
    "readable_query": "SELECT hiring.Employee_ID FROM hiring AS hiring JOIN shop AS shop ON hiring.Shop_ID = shop.Shop_ID WHERE shop.Number_products = (SELECT max( shop.Number_products) FROM shop AS shop)"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Number_products FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID = (SELECT max( T23.Employee_ID) FROM hiring AS T23)",
    "readable_query": "SELECT shop.Number_products FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID WHERE hiring.Employee_ID = (SELECT max( hiring.Employee_ID) FROM hiring AS hiring)"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Number_products, T2.Start_from FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID JOIN employee AS T3 ON T2.Employee_ID = T3.Employee_ID WHERE T3.Name = \"Mark Regan\" and T2.Is_full_time = \"F\"",
    "readable_query": "SELECT shop.Number_products, hiring.Start_from FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID JOIN employee AS employee ON hiring.Employee_ID = employee.Employee_ID WHERE employee.Name = \"Mark Regan\" and hiring.Is_full_time = \"F\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Is_full_time, T2.Shop_ID FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID JOIN employee AS T3 ON T1.Employee_ID = T3.Employee_ID WHERE T3.Employee_ID = 4 and T2.Number_products = 10770",
    "readable_query": "SELECT hiring.Is_full_time, shop.Shop_ID FROM hiring AS hiring JOIN shop AS shop ON hiring.Shop_ID = shop.Shop_ID JOIN employee AS employee ON hiring.Employee_ID = employee.Employee_ID WHERE employee.Employee_ID = 4 and shop.Number_products = 10770"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Start_from, T2.District FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID JOIN employee AS T3 ON T1.Employee_ID = T3.Employee_ID WHERE T3.Age = 32 and T2.Name = \"FC Haka\"",
    "readable_query": "SELECT hiring.Start_from, shop.District FROM hiring AS hiring JOIN shop AS shop ON hiring.Shop_ID = shop.Shop_ID JOIN employee AS employee ON hiring.Employee_ID = employee.Employee_ID WHERE employee.Age = 32 and shop.Name = \"FC Haka\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Name, T2.Bonus FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN hiring AS T3 ON T1.Employee_ID = T3.Employee_ID WHERE T3.Employee_ID = 7 and T2.Year_awarded = \"2017\"",
    "readable_query": "SELECT employee.Name, evaluation.Bonus FROM employee AS employee JOIN evaluation AS evaluation ON employee.Employee_ID = evaluation.Employee_ID JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID WHERE hiring.Employee_ID = 7 and evaluation.Year_awarded = \"2017\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Is_full_time, T2.Age FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN evaluation AS T3 ON T2.Employee_ID = T3.Employee_ID WHERE T3.Bonus = 2900.0 and T2.City = \"Bristol\"",
    "readable_query": "SELECT hiring.Is_full_time, employee.Age FROM hiring AS hiring JOIN employee AS employee ON hiring.Employee_ID = employee.Employee_ID JOIN evaluation AS evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE evaluation.Bonus = 2900.0 and employee.City = \"Bristol\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.Year_awarded, T2.Age FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN hiring AS T3 ON T2.Employee_ID = T3.Employee_ID WHERE T3.Start_from = \"2008\" and T2.City = \"Bath\"",
    "readable_query": "SELECT evaluation.Year_awarded, employee.Age FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID JOIN hiring AS hiring ON employee.Employee_ID = hiring.Employee_ID WHERE hiring.Start_from = \"2008\" and employee.City = \"Bath\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Year_awarded FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID = 5 GROUP BY T1.Year_awarded  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT evaluation.Year_awarded FROM evaluation AS evaluation JOIN employee AS employee ON evaluation.Employee_ID = employee.Employee_ID WHERE employee.Employee_ID = 5 GROUP BY evaluation.Year_awarded  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Shop_ID FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Start_from = \"2009\" GROUP BY T1.Shop_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT shop.Shop_ID FROM shop AS shop JOIN hiring AS hiring ON shop.Shop_ID = hiring.Shop_ID WHERE hiring.Start_from = \"2009\" GROUP BY shop.Shop_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Shop_ID FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Age = 40 GROUP BY T1.Shop_ID  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT hiring.Shop_ID FROM hiring AS hiring JOIN employee AS employee ON hiring.Employee_ID = employee.Employee_ID WHERE employee.Age = 40 GROUP BY hiring.Shop_ID  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Start_from FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.District = \"Finnair Stadium\" GROUP BY T1.Start_from  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT hiring.Start_from FROM hiring AS hiring JOIN shop AS shop ON hiring.Shop_ID = shop.Shop_ID WHERE shop.District = \"Finnair Stadium\" GROUP BY hiring.Start_from  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.City FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Bonus = 4000.0 GROUP BY T1.City  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT employee.City FROM employee AS employee JOIN evaluation AS evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE evaluation.Bonus = 4000.0 GROUP BY employee.City  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Year_awarded FROM evaluation AS T1        EXCEPT SELECT T2.Year_awarded FROM evaluation AS T2 WHERE T2.Bonus = 3000.0",
    "readable_query": "SELECT evaluation.Year_awarded FROM evaluation AS evaluation        EXCEPT SELECT evaluation.Year_awarded FROM evaluation AS evaluation WHERE evaluation.Bonus = 3000.0"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Employee_ID FROM employee AS T1        EXCEPT SELECT T2.Employee_ID FROM employee AS T2 WHERE T2.City = \"Wasps\"",
    "readable_query": "SELECT employee.Employee_ID FROM employee AS employee        EXCEPT SELECT employee.Employee_ID FROM employee AS employee WHERE employee.City = \"Wasps\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Employee_ID FROM employee AS T1        EXCEPT SELECT T2.Employee_ID FROM employee AS T2 WHERE T2.Age = 40",
    "readable_query": "SELECT employee.Employee_ID FROM employee AS employee        EXCEPT SELECT employee.Employee_ID FROM employee AS employee WHERE employee.Age = 40"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Bonus FROM evaluation AS T1        EXCEPT SELECT T2.Bonus FROM evaluation AS T2 WHERE T2.Year_awarded = \"2016\"",
    "readable_query": "SELECT evaluation.Bonus FROM evaluation AS evaluation        EXCEPT SELECT evaluation.Bonus FROM evaluation AS evaluation WHERE evaluation.Year_awarded = \"2016\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.City FROM employee AS T1        EXCEPT SELECT T2.City FROM employee AS T2 WHERE T2.Employee_ID = 7",
    "readable_query": "SELECT employee.City FROM employee AS employee        EXCEPT SELECT employee.City FROM employee AS employee WHERE employee.Employee_ID = 7"
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Name FROM shop AS T1        EXCEPT SELECT T2.Name FROM shop AS T2 WHERE T2.District = \"Tehtaan kentt\u00e4\"",
    "readable_query": "SELECT shop.Name FROM shop AS shop        EXCEPT SELECT shop.Name FROM shop AS shop WHERE shop.District = \"Tehtaan kentt\u00e4\""
  },
  {
    "db_id": "employee_hire_evaluation",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1        EXCEPT SELECT T2.Employee_ID FROM evaluation AS T2 WHERE T2.Year_awarded = \"2016\"",
    "readable_query": "SELECT evaluation.Employee_ID FROM evaluation AS evaluation        EXCEPT SELECT evaluation.Employee_ID FROM evaluation AS evaluation WHERE evaluation.Year_awarded = \"2016\""
  },
  {
    "db_id": "flight_2",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1 WHERE T1.FlightNo = 219",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights WHERE flights.FlightNo = 219"
  },
  {
    "db_id": "flight_2",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Country FROM airlines AS T1 WHERE T1.Abbreviation = \"AirTran\"",
    "readable_query": "SELECT airlines.Country FROM airlines AS airlines WHERE airlines.Abbreviation = \"AirTran\""
  },
  {
    "db_id": "flight_2",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.DestAirport FROM flights AS T1 WHERE T1.SourceAirport = \" AUK\"",
    "readable_query": "SELECT flights.DestAirport FROM flights AS flights WHERE flights.SourceAirport = \" AUK\""
  },
  {
    "db_id": "flight_2",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1 WHERE T1.Airline = 9",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights WHERE flights.Airline = 9"
  },
  {
    "db_id": "flight_2",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Country FROM airports AS T1 WHERE T1.AirportCode = \"ALM\"",
    "readable_query": "SELECT airports.Country FROM airports AS airports WHERE airports.AirportCode = \"ALM\""
  },
  {
    "db_id": "flight_2",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.FlightNo FROM flights AS T1 WHERE T1.Airline = 6",
    "readable_query": "SELECT flights.FlightNo FROM flights AS flights WHERE flights.Airline = 6"
  },
  {
    "db_id": "flight_2",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Airline FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.AirportCode = \"AIA\"",
    "readable_query": "SELECT flights.Airline FROM flights AS flights JOIN airports AS airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportCode = \"AIA\""
  },
  {
    "db_id": "flight_2",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.SourceAirport = \" AXB\"",
    "readable_query": "SELECT airports.AirportName FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport WHERE flights.SourceAirport = \" AXB\""
  },
  {
    "db_id": "flight_2",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.uid FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.FlightNo = 1244",
    "readable_query": "SELECT airlines.uid FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline WHERE flights.FlightNo = 1244"
  },
  {
    "db_id": "flight_2",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.Airline = 9",
    "readable_query": "SELECT airlines.Country FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline WHERE flights.Airline = 9"
  },
  {
    "db_id": "flight_2",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Country FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.DestAirport = \" CAK\"",
    "readable_query": "SELECT airports.Country FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport WHERE flights.DestAirport = \" CAK\""
  },
  {
    "db_id": "flight_2",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.CountryAbbrev FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.SourceAirport = \" ALB\"",
    "readable_query": "SELECT airports.CountryAbbrev FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport WHERE flights.SourceAirport = \" ALB\""
  },
  {
    "db_id": "flight_2",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Airline, count(*) FROM airlines AS T1  GROUP BY T1.Airline",
    "readable_query": "SELECT airlines.Airline, count(*) FROM airlines AS airlines  GROUP BY airlines.Airline"
  },
  {
    "db_id": "flight_2",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Country, count(*) FROM airports AS T1  GROUP BY T1.Country",
    "readable_query": "SELECT airports.Country, count(*) FROM airports AS airports  GROUP BY airports.Country"
  },
  {
    "db_id": "flight_2",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.SourceAirport, count(*) FROM flights AS T1  GROUP BY T1.SourceAirport",
    "readable_query": "SELECT flights.SourceAirport, count(*) FROM flights AS flights  GROUP BY flights.SourceAirport"
  },
  {
    "db_id": "flight_2",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.City, count(*) FROM airports AS T1  GROUP BY T1.City",
    "readable_query": "SELECT airports.City, count(*) FROM airports AS airports  GROUP BY airports.City"
  },
  {
    "db_id": "flight_2",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.uid, count(*) FROM airlines AS T1  GROUP BY T1.uid",
    "readable_query": "SELECT airlines.uid, count(*) FROM airlines AS airlines  GROUP BY airlines.uid"
  },
  {
    "db_id": "flight_2",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.AirportCode, count(*) FROM airports AS T1  GROUP BY T1.AirportCode",
    "readable_query": "SELECT airports.AirportCode, count(*) FROM airports AS airports  GROUP BY airports.AirportCode"
  },
  {
    "db_id": "flight_2",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Abbreviation, count(*) FROM airlines AS T1  GROUP BY T1.Abbreviation",
    "readable_query": "SELECT airlines.Abbreviation, count(*) FROM airlines AS airlines  GROUP BY airlines.Abbreviation"
  },
  {
    "db_id": "flight_2",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Airline, count(*) FROM flights AS T1  GROUP BY T1.Airline",
    "readable_query": "SELECT flights.Airline, count(*) FROM flights AS flights  GROUP BY flights.Airline"
  },
  {
    "db_id": "flight_2",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Abbreviation, count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline  GROUP BY T1.Abbreviation",
    "readable_query": "SELECT airlines.Abbreviation, count(*) FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline  GROUP BY airlines.Abbreviation"
  },
  {
    "db_id": "flight_2",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.City, count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport  GROUP BY T1.City",
    "readable_query": "SELECT airports.City, count(*) FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport  GROUP BY airports.City"
  },
  {
    "db_id": "flight_2",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.DestAirport, count(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid  GROUP BY T1.DestAirport",
    "readable_query": "SELECT flights.DestAirport, count(*) FROM flights AS flights JOIN airlines AS airlines ON flights.Airline = airlines.uid  GROUP BY flights.DestAirport"
  },
  {
    "db_id": "flight_2",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.FlightNo, count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode  GROUP BY T1.FlightNo",
    "readable_query": "SELECT flights.FlightNo, count(*) FROM flights AS flights JOIN airports AS airports ON flights.DestAirport = airports.AirportCode  GROUP BY flights.FlightNo"
  },
  {
    "db_id": "flight_2",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Country, count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport  GROUP BY T1.Country",
    "readable_query": "SELECT airports.Country, count(*) FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport  GROUP BY airports.Country"
  },
  {
    "db_id": "flight_2",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.Abbreviation, count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline  GROUP BY T1.Abbreviation",
    "readable_query": "SELECT airlines.Abbreviation, count(*) FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline  GROUP BY airlines.Abbreviation"
  },
  {
    "db_id": "flight_2",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "query": "SELECT T1.uid, count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline  GROUP BY T1.uid",
    "readable_query": "SELECT airlines.uid, count(*) FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline  GROUP BY airlines.uid"
  },
  {
    "db_id": "flight_2",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM flights AS T1",
    "readable_query": "SELECT count(*) FROM flights AS flights"
  },
  {
    "db_id": "flight_2",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.CountryAbbrev, T1.Country FROM airports AS T1",
    "readable_query": "SELECT airports.CountryAbbrev, airports.Country FROM airports AS airports"
  },
  {
    "db_id": "flight_2",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.DestAirport, T1.FlightNo FROM flights AS T1",
    "readable_query": "SELECT flights.DestAirport, flights.FlightNo FROM flights AS flights"
  },
  {
    "db_id": "flight_2",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.FlightNo, T1.SourceAirport FROM flights AS T1",
    "readable_query": "SELECT flights.FlightNo, flights.SourceAirport FROM flights AS flights"
  },
  {
    "db_id": "flight_2",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Airline, T1.Country FROM airlines AS T1",
    "readable_query": "SELECT airlines.Airline, airlines.Country FROM airlines AS airlines"
  },
  {
    "db_id": "flight_2",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.uid, T1.Country FROM airlines AS T1",
    "readable_query": "SELECT airlines.uid, airlines.Country FROM airlines AS airlines"
  },
  {
    "db_id": "flight_2",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.City, T1.AirportName FROM airports AS T1",
    "readable_query": "SELECT airports.City, airports.AirportName FROM airports AS airports"
  },
  {
    "db_id": "flight_2",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.CountryAbbrev, T1.AirportCode FROM airports AS T1",
    "readable_query": "SELECT airports.CountryAbbrev, airports.AirportCode FROM airports AS airports"
  },
  {
    "db_id": "flight_2",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.AirportCode, T2.DestAirport FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport",
    "readable_query": "SELECT airports.AirportCode, flights.DestAirport FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport"
  },
  {
    "db_id": "flight_2",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.FlightNo, T2.uid FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid",
    "readable_query": "SELECT flights.FlightNo, airlines.uid FROM flights AS flights JOIN airlines AS airlines ON flights.Airline = airlines.uid"
  },
  {
    "db_id": "flight_2",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.DestAirport, T2.Abbreviation FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid",
    "readable_query": "SELECT flights.DestAirport, airlines.Abbreviation FROM flights AS flights JOIN airlines AS airlines ON flights.Airline = airlines.uid"
  },
  {
    "db_id": "flight_2",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "query": "SELECT T1.Airline, T2.AirportName FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode",
    "readable_query": "SELECT flights.Airline, airports.AirportName FROM flights AS flights JOIN airports AS airports ON flights.DestAirport = airports.AirportCode"
  },
  {
    "db_id": "flight_2",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.AirportName, T1.AirportCode FROM airports AS T1 WHERE T1.Country = \"United States \"",
    "readable_query": "SELECT airports.AirportName, airports.AirportCode FROM airports AS airports WHERE airports.Country = \"United States \""
  },
  {
    "db_id": "flight_2",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.AirportName, T1.City FROM airports AS T1 WHERE T1.Country = \"United States \"",
    "readable_query": "SELECT airports.AirportName, airports.City FROM airports AS airports WHERE airports.Country = \"United States \""
  },
  {
    "db_id": "flight_2",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Country, T1.City FROM airports AS T1 WHERE T1.CountryAbbrev = \"US\"",
    "readable_query": "SELECT airports.Country, airports.City FROM airports AS airports WHERE airports.CountryAbbrev = \"US\""
  },
  {
    "db_id": "flight_2",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Airline, T1.FlightNo FROM flights AS T1 WHERE T1.SourceAirport = \" AHT\"",
    "readable_query": "SELECT flights.Airline, flights.FlightNo FROM flights AS flights WHERE flights.SourceAirport = \" AHT\""
  },
  {
    "db_id": "flight_2",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Country, T1.AirportName FROM airports AS T1 WHERE T1.City = \"Amchitka \"",
    "readable_query": "SELECT airports.Country, airports.AirportName FROM airports AS airports WHERE airports.City = \"Amchitka \""
  },
  {
    "db_id": "flight_2",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.FlightNo, T1.DestAirport FROM flights AS T1 WHERE T1.SourceAirport = \" ANQ\"",
    "readable_query": "SELECT flights.FlightNo, flights.DestAirport FROM flights AS flights WHERE flights.SourceAirport = \" ANQ\""
  },
  {
    "db_id": "flight_2",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.City, T1.AirportCode FROM airports AS T1 WHERE T1.CountryAbbrev = \"US \"",
    "readable_query": "SELECT airports.City, airports.AirportCode FROM airports AS airports WHERE airports.CountryAbbrev = \"US \""
  },
  {
    "db_id": "flight_2",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.SourceAirport, T1.DestAirport FROM flights AS T1 WHERE T1.FlightNo = 622",
    "readable_query": "SELECT flights.SourceAirport, flights.DestAirport FROM flights AS flights WHERE flights.FlightNo = 622"
  },
  {
    "db_id": "flight_2",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.CountryAbbrev, T1.City FROM airports AS T1 WHERE T1.Country = \"United States \"",
    "readable_query": "SELECT airports.CountryAbbrev, airports.City FROM airports AS airports WHERE airports.Country = \"United States \""
  },
  {
    "db_id": "flight_2",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.Airline, T1.SourceAirport FROM flights AS T1 WHERE T1.DestAirport = \" AKI\"",
    "readable_query": "SELECT flights.Airline, flights.SourceAirport FROM flights AS flights WHERE flights.DestAirport = \" AKI\""
  },
  {
    "db_id": "flight_2",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.SourceAirport, T1.FlightNo FROM flights AS T1 WHERE T1.Airline = 6",
    "readable_query": "SELECT flights.SourceAirport, flights.FlightNo FROM flights AS flights WHERE flights.Airline = 6"
  },
  {
    "db_id": "flight_2",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.City FROM airports AS T1  GROUP BY T1.City  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT airports.City FROM airports AS airports  GROUP BY airports.City  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1  GROUP BY T1.SourceAirport  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights  GROUP BY flights.SourceAirport  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.City FROM airports AS T1  GROUP BY T1.City  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT airports.City FROM airports AS airports  GROUP BY airports.City  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.DestAirport FROM flights AS T1  GROUP BY T1.DestAirport  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT flights.DestAirport FROM flights AS flights  GROUP BY flights.DestAirport  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.Airline FROM airlines AS T1  GROUP BY T1.Airline  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT airlines.Airline FROM airlines AS airlines  GROUP BY airlines.Airline  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.CountryAbbrev FROM airports AS T1  GROUP BY T1.CountryAbbrev  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT airports.CountryAbbrev FROM airports AS airports  GROUP BY airports.CountryAbbrev  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1  GROUP BY T1.SourceAirport  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights  GROUP BY flights.SourceAirport  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM flights AS T1 WHERE T1.DestAirport = \" KKI\"",
    "readable_query": "SELECT count(*) FROM flights AS flights WHERE flights.DestAirport = \" KKI\""
  },
  {
    "db_id": "flight_2",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM airports AS T1 WHERE T1.City = \"Arctic Village \"",
    "readable_query": "SELECT count(*) FROM airports AS airports WHERE airports.City = \"Arctic Village \""
  },
  {
    "db_id": "flight_2",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM airlines AS T1 WHERE T1.Abbreviation = \"UAL\"",
    "readable_query": "SELECT count(*) FROM airlines AS airlines WHERE airlines.Abbreviation = \"UAL\""
  },
  {
    "db_id": "flight_2",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM airlines AS T1 WHERE T1.uid = 11",
    "readable_query": "SELECT count(*) FROM airlines AS airlines WHERE airlines.uid = 11"
  },
  {
    "db_id": "flight_2",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM flights AS T1 WHERE T1.SourceAirport = \" APV\"",
    "readable_query": "SELECT count(*) FROM flights AS flights WHERE flights.SourceAirport = \" APV\""
  },
  {
    "db_id": "flight_2",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM airports AS T1 WHERE T1.AirportName = \"Downtown \"",
    "readable_query": "SELECT count(*) FROM airports AS airports WHERE airports.AirportName = \"Downtown \""
  },
  {
    "db_id": "flight_2",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM airlines AS T1 WHERE T1.Country = \"USA\"",
    "readable_query": "SELECT count(*) FROM airlines AS airlines WHERE airlines.Country = \"USA\""
  },
  {
    "db_id": "flight_2",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM flights AS T1 WHERE T1.Airline = 5",
    "readable_query": "SELECT count(*) FROM flights AS flights WHERE flights.Airline = 5"
  },
  {
    "db_id": "flight_2",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1    ORDER BY T1.FlightNo DESC LIMIT 1",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights    ORDER BY flights.FlightNo DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.DestAirport FROM flights AS T1    ORDER BY T1.Airline DESC LIMIT 1",
    "readable_query": "SELECT flights.DestAirport FROM flights AS flights    ORDER BY flights.Airline DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Country FROM airlines AS T1    ORDER BY T1.uid DESC LIMIT 1",
    "readable_query": "SELECT airlines.Country FROM airlines AS airlines    ORDER BY airlines.uid DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.DestAirport FROM flights AS T1    ORDER BY T1.FlightNo DESC LIMIT 1",
    "readable_query": "SELECT flights.DestAirport FROM flights AS flights    ORDER BY flights.FlightNo DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Airline FROM airlines AS T1    ORDER BY T1.uid DESC LIMIT 1",
    "readable_query": "SELECT airlines.Airline FROM airlines AS airlines    ORDER BY airlines.uid DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.CountryAbbrev FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport    ORDER BY T2.Airline DESC LIMIT 1",
    "readable_query": "SELECT airports.CountryAbbrev FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport    ORDER BY flights.Airline DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.uid FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline    ORDER BY T2.FlightNo DESC LIMIT 1",
    "readable_query": "SELECT airlines.uid FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline    ORDER BY flights.FlightNo DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport    ORDER BY T2.Airline ASC LIMIT 1",
    "readable_query": "SELECT airports.AirportCode FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport    ORDER BY flights.Airline ASC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.uid FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline    ORDER BY T2.Airline ASC LIMIT 1",
    "readable_query": "SELECT airlines.uid FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline    ORDER BY flights.Airline ASC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline    ORDER BY T2.FlightNo ASC LIMIT 1",
    "readable_query": "SELECT airlines.Airline FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline    ORDER BY flights.FlightNo ASC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.FlightNo, T1.SourceAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid    ORDER BY T2.uid DESC LIMIT 1",
    "readable_query": "SELECT flights.FlightNo, flights.SourceAirport FROM flights AS flights JOIN airlines AS airlines ON flights.Airline = airlines.uid    ORDER BY airlines.uid DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.uid, T1.Abbreviation FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline    ORDER BY T2.FlightNo DESC LIMIT 1",
    "readable_query": "SELECT airlines.uid, airlines.Abbreviation FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline    ORDER BY flights.FlightNo DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Country, T1.CountryAbbrev FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport    ORDER BY T2.Airline DESC LIMIT 1",
    "readable_query": "SELECT airports.Country, airports.CountryAbbrev FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport    ORDER BY flights.Airline DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.CountryAbbrev, T1.Country FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport    ORDER BY T2.Airline DESC LIMIT 1",
    "readable_query": "SELECT airports.CountryAbbrev, airports.Country FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport    ORDER BY flights.Airline DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.City) FROM airports AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  airports.City) FROM airports AS airports"
  },
  {
    "db_id": "flight_2",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.FlightNo) FROM flights AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  flights.FlightNo) FROM flights AS flights"
  },
  {
    "db_id": "flight_2",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.DestAirport) FROM flights AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  flights.DestAirport) FROM flights AS flights"
  },
  {
    "db_id": "flight_2",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.Airline) FROM flights AS T1",
    "readable_query": "SELECT avg( flights.Airline) FROM flights AS flights"
  },
  {
    "db_id": "flight_2",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.uid) FROM airlines AS T1",
    "readable_query": "SELECT avg( airlines.uid) FROM airlines AS airlines"
  },
  {
    "db_id": "flight_2",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.AirportCode FROM airports AS T1",
    "readable_query": "SELECT airports.AirportCode FROM airports AS airports"
  },
  {
    "db_id": "flight_2",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.AirportName FROM airports AS T1",
    "readable_query": "SELECT airports.AirportName FROM airports AS airports"
  },
  {
    "db_id": "flight_2",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights"
  },
  {
    "db_id": "flight_2",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.Abbreviation FROM airlines AS T1",
    "readable_query": "SELECT airlines.Abbreviation FROM airlines AS airlines"
  },
  {
    "db_id": "flight_2",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.DestAirport FROM flights AS T1",
    "readable_query": "SELECT flights.DestAirport FROM flights AS flights"
  },
  {
    "db_id": "flight_2",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Airline FROM airlines AS T1",
    "readable_query": "SELECT DISTINCT airlines.Airline FROM airlines AS airlines"
  },
  {
    "db_id": "flight_2",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.SourceAirport FROM flights AS T1",
    "readable_query": "SELECT DISTINCT flights.SourceAirport FROM flights AS flights"
  },
  {
    "db_id": "flight_2",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.SourceAirport FROM flights AS T1",
    "readable_query": "SELECT DISTINCT flights.SourceAirport FROM flights AS flights"
  },
  {
    "db_id": "flight_2",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.Abbreviation FROM airlines AS T1",
    "readable_query": "SELECT DISTINCT airlines.Abbreviation FROM airlines AS airlines"
  },
  {
    "db_id": "flight_2",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.AirportCode FROM airports AS T1",
    "readable_query": "SELECT DISTINCT airports.AirportCode FROM airports AS airports"
  },
  {
    "db_id": "flight_2",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.City FROM airports AS T1",
    "readable_query": "SELECT DISTINCT airports.City FROM airports AS airports"
  },
  {
    "db_id": "flight_2",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Country FROM airlines AS T1     ORDER BY T1.uid ASC",
    "readable_query": "SELECT airlines.Country FROM airlines AS airlines     ORDER BY airlines.uid ASC"
  },
  {
    "db_id": "flight_2",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Country FROM airlines AS T1     ORDER BY T1.uid ASC",
    "readable_query": "SELECT airlines.Country FROM airlines AS airlines     ORDER BY airlines.uid ASC"
  },
  {
    "db_id": "flight_2",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1     ORDER BY T1.Airline ASC",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights     ORDER BY flights.Airline ASC"
  },
  {
    "db_id": "flight_2",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1     ORDER BY T1.Airline DESC",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights     ORDER BY flights.Airline DESC"
  },
  {
    "db_id": "flight_2",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1     ORDER BY T1.Airline DESC",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights     ORDER BY flights.Airline DESC"
  },
  {
    "db_id": "flight_2",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Airline FROM airlines AS T1     ORDER BY T1.uid DESC",
    "readable_query": "SELECT airlines.Airline FROM airlines AS airlines     ORDER BY airlines.uid DESC"
  },
  {
    "db_id": "flight_2",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Abbreviation FROM airlines AS T1     ORDER BY T1.uid DESC",
    "readable_query": "SELECT airlines.Abbreviation FROM airlines AS airlines     ORDER BY airlines.uid DESC"
  },
  {
    "db_id": "flight_2",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.DestAirport FROM flights AS T1     ORDER BY T1.Airline DESC",
    "readable_query": "SELECT flights.DestAirport FROM flights AS flights     ORDER BY flights.Airline DESC"
  },
  {
    "db_id": "flight_2",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.Country FROM airlines AS T1     ORDER BY T1.uid DESC",
    "readable_query": "SELECT airlines.Country FROM airlines AS airlines     ORDER BY airlines.uid DESC"
  },
  {
    "db_id": "flight_2",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.FlightNo FROM flights AS T1     ORDER BY T1.Airline DESC",
    "readable_query": "SELECT flights.FlightNo FROM flights AS flights     ORDER BY flights.Airline DESC"
  },
  {
    "db_id": "flight_2",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Airline, T1.DestAirport FROM flights AS T1     ORDER BY T1.DestAirport ASC",
    "readable_query": "SELECT flights.Airline, flights.DestAirport FROM flights AS flights     ORDER BY flights.DestAirport ASC"
  },
  {
    "db_id": "flight_2",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Abbreviation, T1.Country FROM airlines AS T1     ORDER BY T1.Country ASC",
    "readable_query": "SELECT airlines.Abbreviation, airlines.Country FROM airlines AS airlines     ORDER BY airlines.Country ASC"
  },
  {
    "db_id": "flight_2",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.AirportName, T1.AirportCode FROM airports AS T1     ORDER BY T1.AirportCode ASC",
    "readable_query": "SELECT airports.AirportName, airports.AirportCode FROM airports AS airports     ORDER BY airports.AirportCode ASC"
  },
  {
    "db_id": "flight_2",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Country, T1.AirportName FROM airports AS T1     ORDER BY T1.AirportName ASC",
    "readable_query": "SELECT airports.Country, airports.AirportName FROM airports AS airports     ORDER BY airports.AirportName ASC"
  },
  {
    "db_id": "flight_2",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.DestAirport, T1.Airline FROM flights AS T1     ORDER BY T1.Airline ASC",
    "readable_query": "SELECT flights.DestAirport, flights.Airline FROM flights AS flights     ORDER BY flights.Airline ASC"
  },
  {
    "db_id": "flight_2",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.DestAirport, T1.SourceAirport FROM flights AS T1     ORDER BY T1.SourceAirport ASC",
    "readable_query": "SELECT flights.DestAirport, flights.SourceAirport FROM flights AS flights     ORDER BY flights.SourceAirport ASC"
  },
  {
    "db_id": "flight_2",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.Country, T1.Abbreviation FROM airlines AS T1     ORDER BY T1.Abbreviation ASC",
    "readable_query": "SELECT airlines.Country, airlines.Abbreviation FROM airlines AS airlines     ORDER BY airlines.Abbreviation ASC"
  },
  {
    "db_id": "flight_2",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T2.DestAirport = T3.AirportCode WHERE T2.Airline = 10 and T3.AirportCode = \"ANY\"",
    "readable_query": "SELECT airlines.Country FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline JOIN airports AS airports ON flights.DestAirport = airports.AirportCode WHERE flights.Airline = 10 and airports.AirportCode = \"ANY\""
  },
  {
    "db_id": "flight_2",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.uid FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T2.DestAirport = T3.AirportCode WHERE T2.DestAirport = \" AOS\" and T3.AirportCode = \"ALB\"",
    "readable_query": "SELECT airlines.uid FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline JOIN airports AS airports ON flights.DestAirport = airports.AirportCode WHERE flights.DestAirport = \" AOS\" and airports.AirportCode = \"ALB\""
  },
  {
    "db_id": "flight_2",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.Airline FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode JOIN airlines AS T3 ON T1.Airline = T3.uid WHERE T2.AirportName = \"Akhiok SPB \" and T3.uid = 8",
    "readable_query": "SELECT flights.Airline FROM flights AS flights JOIN airports AS airports ON flights.DestAirport = airports.AirportCode JOIN airlines AS airlines ON flights.Airline = airlines.uid WHERE airports.AirportName = \"Akhiok SPB \" and airlines.uid = 8"
  },
  {
    "db_id": "flight_2",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode JOIN airlines AS T3 ON T1.Airline = T3.uid WHERE T2.City = \" Alexander City AL  \" and T3.Abbreviation = \"Northwest\"",
    "readable_query": "SELECT flights.FlightNo FROM flights AS flights JOIN airports AS airports ON flights.DestAirport = airports.AirportCode JOIN airlines AS airlines ON flights.Airline = airlines.uid WHERE airports.City = \" Alexander City AL  \" and airlines.Abbreviation = \"Northwest\""
  },
  {
    "db_id": "flight_2",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid JOIN airports AS T3 ON T1.DestAirport = T3.AirportCode WHERE T2.Airline = \"Virgin America\" and T3.Country = \"United States \"",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights JOIN airlines AS airlines ON flights.Airline = airlines.uid JOIN airports AS airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = \"Virgin America\" and airports.Country = \"United States \""
  },
  {
    "db_id": "flight_2",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Country = \"USA\" or T2.Country = \"USA\"",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights JOIN airlines AS airlines ON flights.Airline = airlines.uid WHERE airlines.Country = \"USA\" or airlines.Country = \"USA\""
  },
  {
    "db_id": "flight_2",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.FlightNo = 80 or T2.FlightNo = 166",
    "readable_query": "SELECT airports.City FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport WHERE flights.FlightNo = 80 or flights.FlightNo = 166"
  },
  {
    "db_id": "flight_2",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.DestAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = \"Northwest Airlines\" or T2.Airline = \"Frontier Airlines\"",
    "readable_query": "SELECT flights.DestAirport FROM flights AS flights JOIN airlines AS airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = \"Northwest Airlines\" or airlines.Airline = \"Frontier Airlines\""
  },
  {
    "db_id": "flight_2",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.FlightNo = 398 or T2.FlightNo = 1477",
    "readable_query": "SELECT airports.City FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport WHERE flights.FlightNo = 398 or flights.FlightNo = 1477"
  },
  {
    "db_id": "flight_2",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.SourceAirport = \" ADR\" or T2.SourceAirport = \" AXN\"",
    "readable_query": "SELECT airports.AirportName FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport WHERE flights.SourceAirport = \" ADR\" or flights.SourceAirport = \" AXN\""
  },
  {
    "db_id": "flight_2",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Abbreviation FROM airlines AS T1 WHERE T1.Airline = \"Virgin America\" and T1.uid = 10",
    "readable_query": "SELECT airlines.Abbreviation FROM airlines AS airlines WHERE airlines.Airline = \"Virgin America\" and airlines.uid = 10"
  },
  {
    "db_id": "flight_2",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.uid FROM airlines AS T1 WHERE T1.Abbreviation = \"Allegiant\" and T1.Country = \"USA\"",
    "readable_query": "SELECT airlines.uid FROM airlines AS airlines WHERE airlines.Abbreviation = \"Allegiant\" and airlines.Country = \"USA\""
  },
  {
    "db_id": "flight_2",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Airline) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T1.FlightNo = 888 and T2.uid = 10",
    "readable_query": "SELECT DISTINCT count(DISTINCT  flights.Airline) FROM flights AS flights JOIN airlines AS airlines ON flights.Airline = airlines.uid WHERE flights.FlightNo = 888 and airlines.uid = 10"
  },
  {
    "db_id": "flight_2",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.FlightNo) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T1.DestAirport = \" AKP\" and T2.AirportName = \"Dougherty County \"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  flights.FlightNo) FROM flights AS flights JOIN airports AS airports ON flights.DestAirport = airports.AirportCode WHERE flights.DestAirport = \" AKP\" and airports.AirportName = \"Dougherty County \""
  },
  {
    "db_id": "flight_2",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.City) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T1.CountryAbbrev = \"US \" and T2.DestAirport = \" ABY\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  airports.City) FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport WHERE airports.CountryAbbrev = \"US \" and flights.DestAirport = \" ABY\""
  },
  {
    "db_id": "flight_2",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.CountryAbbrev FROM airports AS T1 WHERE T1.AirportName = \"Aspen \" or T1.AirportCode = \"AKO\"",
    "readable_query": "SELECT airports.CountryAbbrev FROM airports AS airports WHERE airports.AirportName = \"Aspen \" or airports.AirportCode = \"AKO\""
  },
  {
    "db_id": "flight_2",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.uid FROM airlines AS T1 WHERE T1.Abbreviation = \"JetBlue\" or T1.Airline = \"US Airways\"",
    "readable_query": "SELECT airlines.uid FROM airlines AS airlines WHERE airlines.Abbreviation = \"JetBlue\" or airlines.Airline = \"US Airways\""
  },
  {
    "db_id": "flight_2",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1 WHERE T1.FlightNo = 118 or T1.Airline = 5",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights WHERE flights.FlightNo = 118 or flights.Airline = 5"
  },
  {
    "db_id": "flight_2",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.DestAirport FROM flights AS T1 WHERE T1.Airline = 12 or T1.FlightNo = 605",
    "readable_query": "SELECT flights.DestAirport FROM flights AS flights WHERE flights.Airline = 12 or flights.FlightNo = 605"
  },
  {
    "db_id": "flight_2",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Abbreviation FROM airlines AS T1 WHERE T1.Airline = \"Virgin America\" or T1.uid = 2",
    "readable_query": "SELECT airlines.Abbreviation FROM airlines AS airlines WHERE airlines.Airline = \"Virgin America\" or airlines.uid = 2"
  },
  {
    "db_id": "flight_2",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.Airline FROM airlines AS T1 WHERE T1.Country = \"USA\" or T1.uid = 8",
    "readable_query": "SELECT airlines.Airline FROM airlines AS airlines WHERE airlines.Country = \"USA\" or airlines.uid = 8"
  },
  {
    "db_id": "flight_2",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.AirportCode = \"VJI\" and T2.City = \"Aberdeen \"",
    "readable_query": "SELECT count(*) FROM flights AS flights JOIN airports AS airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportCode = \"VJI\" and airports.City = \"Aberdeen \""
  },
  {
    "db_id": "flight_2",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.AirportName = \"USN Heliport \" and T2.AirportCode = \"WKK\"",
    "readable_query": "SELECT count(*) FROM flights AS flights JOIN airports AS airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportName = \"USN Heliport \" and airports.AirportCode = \"WKK\""
  },
  {
    "db_id": "flight_2",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "query": "SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.FlightNo = 301 and T2.DestAirport = \" ABI\"",
    "readable_query": "SELECT count(*) FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline WHERE flights.FlightNo = 301 and flights.DestAirport = \" ABI\""
  },
  {
    "db_id": "flight_2",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.AirportName FROM airports AS T1 WHERE T1.Country != \"United States \"",
    "readable_query": "SELECT airports.AirportName FROM airports AS airports WHERE airports.Country != \"United States \""
  },
  {
    "db_id": "flight_2",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.DestAirport FROM flights AS T1 WHERE T1.FlightNo != 901",
    "readable_query": "SELECT flights.DestAirport FROM flights AS flights WHERE flights.FlightNo != 901"
  },
  {
    "db_id": "flight_2",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Airline FROM airlines AS T1 WHERE T1.Country != \"USA\"",
    "readable_query": "SELECT airlines.Airline FROM airlines AS airlines WHERE airlines.Country != \"USA\""
  },
  {
    "db_id": "flight_2",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Airline FROM airlines AS T1 WHERE T1.Abbreviation != \"Virgin\"",
    "readable_query": "SELECT airlines.Airline FROM airlines AS airlines WHERE airlines.Abbreviation != \"Virgin\""
  },
  {
    "db_id": "flight_2",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1 WHERE T1.DestAirport != \" ABR\"",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights WHERE flights.DestAirport != \" ABR\""
  },
  {
    "db_id": "flight_2",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.AirportCode FROM airports AS T1 WHERE T1.City != \"Antlers \"",
    "readable_query": "SELECT airports.AirportCode FROM airports AS airports WHERE airports.City != \"Antlers \""
  },
  {
    "db_id": "flight_2",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.FlightNo != 837",
    "readable_query": "SELECT airlines.Airline FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline WHERE flights.FlightNo != 837"
  },
  {
    "db_id": "flight_2",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Abbreviation FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.FlightNo != 485",
    "readable_query": "SELECT airlines.Abbreviation FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline WHERE flights.FlightNo != 485"
  },
  {
    "db_id": "flight_2",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.CountryAbbrev != \"US\"",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights JOIN airports AS airports ON flights.DestAirport = airports.AirportCode WHERE airports.CountryAbbrev != \"US\""
  },
  {
    "db_id": "flight_2",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport != \" ADK\"",
    "readable_query": "SELECT airlines.Airline FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport != \" ADK\""
  },
  {
    "db_id": "flight_2",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.SourceAirport != \" AIV\"",
    "readable_query": "SELECT airports.AirportName FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport WHERE flights.SourceAirport != \" AIV\""
  },
  {
    "db_id": "flight_2",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Country FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.FlightNo != 171",
    "readable_query": "SELECT airports.Country FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport WHERE flights.FlightNo != 171"
  },
  {
    "db_id": "flight_2",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.DestAirport != \" AOS\"",
    "readable_query": "SELECT airports.AirportName FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport WHERE flights.DestAirport != \" AOS\""
  },
  {
    "db_id": "flight_2",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.DestAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Abbreviation != \"Northwest\"",
    "readable_query": "SELECT flights.DestAirport FROM flights AS flights JOIN airlines AS airlines ON flights.Airline = airlines.uid WHERE airlines.Abbreviation != \"Northwest\""
  },
  {
    "db_id": "flight_2",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = \"Virgin America\"",
    "readable_query": "SELECT DISTINCT flights.Airline FROM flights AS flights JOIN airlines AS airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = \"Virgin America\""
  },
  {
    "db_id": "flight_2",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = \" AIB\"",
    "readable_query": "SELECT DISTINCT airlines.Airline FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = \" AIB\""
  },
  {
    "db_id": "flight_2",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.DestAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = \"American Airlines\"",
    "readable_query": "SELECT DISTINCT flights.DestAirport FROM flights AS flights JOIN airlines AS airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = \"American Airlines\""
  },
  {
    "db_id": "flight_2",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.FlightNo = 525",
    "readable_query": "SELECT DISTINCT airports.City FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport WHERE flights.FlightNo = 525"
  },
  {
    "db_id": "flight_2",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT DISTINCT T1.CountryAbbrev FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.DestAirport = \" APV\"",
    "readable_query": "SELECT DISTINCT airports.CountryAbbrev FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport WHERE flights.DestAirport = \" APV\""
  },
  {
    "db_id": "flight_2",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.AirportCode) FROM airports AS T1 WHERE T1.CountryAbbrev = \"US\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  airports.AirportCode) FROM airports AS airports WHERE airports.CountryAbbrev = \"US\""
  },
  {
    "db_id": "flight_2",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.CountryAbbrev) FROM airports AS T1 WHERE T1.AirportName = \"Ashland \"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  airports.CountryAbbrev) FROM airports AS airports WHERE airports.AirportName = \"Ashland \""
  },
  {
    "db_id": "flight_2",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.AirportName) FROM airports AS T1 WHERE T1.City = \"Anniston \"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  airports.AirportName) FROM airports AS airports WHERE airports.City = \"Anniston \""
  },
  {
    "db_id": "flight_2",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.AirportName) FROM airports AS T1 WHERE T1.City = \"Alamogordo \"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  airports.AirportName) FROM airports AS airports WHERE airports.City = \"Alamogordo \""
  },
  {
    "db_id": "flight_2",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.Airline) FROM flights AS T1 WHERE T1.DestAirport = \" LTS\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  flights.Airline) FROM flights AS flights WHERE flights.DestAirport = \" LTS\""
  },
  {
    "db_id": "flight_2",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.FlightNo FROM flights AS T1 WHERE T1.Airline > 9",
    "readable_query": "SELECT flights.FlightNo FROM flights AS flights WHERE flights.Airline > 9"
  },
  {
    "db_id": "flight_2",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Airline FROM airlines AS T1 WHERE T1.uid > 8",
    "readable_query": "SELECT airlines.Airline FROM airlines AS airlines WHERE airlines.uid > 8"
  },
  {
    "db_id": "flight_2",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1 WHERE T1.FlightNo > 784",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights WHERE flights.FlightNo > 784"
  },
  {
    "db_id": "flight_2",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1 WHERE T1.FlightNo > 1233",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights WHERE flights.FlightNo > 1233"
  },
  {
    "db_id": "flight_2",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.Country FROM airlines AS T1 WHERE T1.uid > 1",
    "readable_query": "SELECT airlines.Country FROM airlines AS airlines WHERE airlines.uid > 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1 WHERE T1.Airline > 6",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights WHERE flights.Airline > 6"
  },
  {
    "db_id": "flight_2",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.FlightNo FROM flights AS T1 WHERE T1.Airline > 12",
    "readable_query": "SELECT flights.FlightNo FROM flights AS flights WHERE flights.Airline > 12"
  },
  {
    "db_id": "flight_2",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.AirportCode, T2.Airline, T3.Airline FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport JOIN airlines AS T3 ON T2.Airline = T3.uid",
    "readable_query": "SELECT airports.AirportCode, flights.Airline, airlines.Airline FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport JOIN airlines AS airlines ON flights.Airline = airlines.uid"
  },
  {
    "db_id": "flight_2",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.CountryAbbrev, T2.Airline, T3.Abbreviation FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport JOIN airlines AS T3 ON T2.Airline = T3.uid",
    "readable_query": "SELECT airports.CountryAbbrev, flights.Airline, airlines.Abbreviation FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport JOIN airlines AS airlines ON flights.Airline = airlines.uid"
  },
  {
    "db_id": "flight_2",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "query": "SELECT T1.DestAirport, T2.AirportName, T3.Country FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode JOIN airlines AS T3 ON T1.Airline = T3.uid",
    "readable_query": "SELECT flights.DestAirport, airports.AirportName, airlines.Country FROM flights AS flights JOIN airports AS airports ON flights.DestAirport = airports.AirportCode JOIN airlines AS airlines ON flights.Airline = airlines.uid"
  },
  {
    "db_id": "flight_2",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Abbreviation FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline     ORDER BY T2.Airline ASC",
    "readable_query": "SELECT airlines.Abbreviation FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline     ORDER BY flights.Airline ASC"
  },
  {
    "db_id": "flight_2",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid     ORDER BY T2.uid ASC",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights JOIN airlines AS airlines ON flights.Airline = airlines.uid     ORDER BY airlines.uid ASC"
  },
  {
    "db_id": "flight_2",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport     ORDER BY T2.FlightNo ASC",
    "readable_query": "SELECT airports.AirportName FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport     ORDER BY flights.FlightNo ASC"
  },
  {
    "db_id": "flight_2",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.AirportName FROM airports AS T1 WHERE T1.Country = \"United States \"     INTERSECT SELECT T2.AirportName FROM airports AS T2 WHERE T2.Country = \"United States \"",
    "readable_query": "SELECT airports.AirportName FROM airports AS airports WHERE airports.Country = \"United States \"     INTERSECT SELECT airports.AirportName FROM airports AS airports WHERE airports.Country = \"United States \""
  },
  {
    "db_id": "flight_2",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.AirportName FROM airports AS T1 WHERE T1.CountryAbbrev = \"US\"     INTERSECT SELECT T2.AirportName FROM airports AS T2 WHERE T2.CountryAbbrev = \"US \"",
    "readable_query": "SELECT airports.AirportName FROM airports AS airports WHERE airports.CountryAbbrev = \"US\"     INTERSECT SELECT airports.AirportName FROM airports AS airports WHERE airports.CountryAbbrev = \"US \""
  },
  {
    "db_id": "flight_2",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Country FROM airlines AS T1 WHERE T1.uid = 9     INTERSECT SELECT T2.Country FROM airlines AS T2 WHERE T2.uid = 3",
    "readable_query": "SELECT airlines.Country FROM airlines AS airlines WHERE airlines.uid = 9     INTERSECT SELECT airlines.Country FROM airlines AS airlines WHERE airlines.uid = 3"
  },
  {
    "db_id": "flight_2",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Airline FROM airlines AS T1 WHERE T1.Country = \"USA\"     INTERSECT SELECT T2.Airline FROM airlines AS T2 WHERE T2.Country = \"USA\"",
    "readable_query": "SELECT airlines.Airline FROM airlines AS airlines WHERE airlines.Country = \"USA\"     INTERSECT SELECT airlines.Airline FROM airlines AS airlines WHERE airlines.Country = \"USA\""
  },
  {
    "db_id": "flight_2",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.Country FROM airports AS T1 WHERE T1.City = \"Alitak \"     INTERSECT SELECT T2.Country FROM airports AS T2 WHERE T2.City = \"Andrews \"",
    "readable_query": "SELECT airports.Country FROM airports AS airports WHERE airports.City = \"Alitak \"     INTERSECT SELECT airports.Country FROM airports AS airports WHERE airports.City = \"Andrews \""
  },
  {
    "db_id": "flight_2",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Airline) FROM flights AS T1 WHERE T1.FlightNo = 559",
    "readable_query": "SELECT avg( flights.Airline) FROM flights AS flights WHERE flights.FlightNo = 559"
  },
  {
    "db_id": "flight_2",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.FlightNo) FROM flights AS T1 WHERE T1.DestAirport = \" AOS\"",
    "readable_query": "SELECT avg( flights.FlightNo) FROM flights AS flights WHERE flights.DestAirport = \" AOS\""
  },
  {
    "db_id": "flight_2",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Airline) FROM flights AS T1 WHERE T1.FlightNo = 1158",
    "readable_query": "SELECT avg( flights.Airline) FROM flights AS flights WHERE flights.FlightNo = 1158"
  },
  {
    "db_id": "flight_2",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.Airline) FROM flights AS T1 WHERE T1.DestAirport = \" ATW\"",
    "readable_query": "SELECT avg( flights.Airline) FROM flights AS flights WHERE flights.DestAirport = \" ATW\""
  },
  {
    "db_id": "flight_2",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.uid) FROM airlines AS T1 WHERE T1.Country = \"USA\"",
    "readable_query": "SELECT avg( airlines.uid) FROM airlines AS airlines WHERE airlines.Country = \"USA\""
  },
  {
    "db_id": "flight_2",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.uid) FROM airlines AS T1 WHERE T1.Abbreviation = \"Continental\"",
    "readable_query": "SELECT avg( airlines.uid) FROM airlines AS airlines WHERE airlines.Abbreviation = \"Continental\""
  },
  {
    "db_id": "flight_2",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.FlightNo) FROM flights AS T1 WHERE T1.Airline = 6",
    "readable_query": "SELECT avg( flights.FlightNo) FROM flights AS flights WHERE flights.Airline = 6"
  },
  {
    "db_id": "flight_2",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.uid FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.Airline = (SELECT max( T23.Airline) FROM flights AS T23)",
    "readable_query": "SELECT airlines.uid FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline WHERE flights.Airline = (SELECT max( flights.Airline) FROM flights AS flights)"
  },
  {
    "db_id": "flight_2",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "query": "SELECT T1.Country FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.Airline = (SELECT max( T23.Airline) FROM flights AS T23)",
    "readable_query": "SELECT airports.Country FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport WHERE flights.Airline = (SELECT max( flights.Airline) FROM flights AS flights)"
  },
  {
    "db_id": "flight_2",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.FlightNo, T2.AirportCode FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode JOIN airlines AS T3 ON T1.Airline = T3.uid WHERE T3.Abbreviation = \"Continental\" and T2.City = \"Amityville \"",
    "readable_query": "SELECT flights.FlightNo, airports.AirportCode FROM flights AS flights JOIN airports AS airports ON flights.DestAirport = airports.AirportCode JOIN airlines AS airlines ON flights.Airline = airlines.uid WHERE airlines.Abbreviation = \"Continental\" and airports.City = \"Amityville \""
  },
  {
    "db_id": "flight_2",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.AirportCode, T2.FlightNo FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport JOIN airlines AS T3 ON T2.Airline = T3.uid WHERE T3.uid = 2 and T2.SourceAirport = \" KQA\"",
    "readable_query": "SELECT airports.AirportCode, flights.FlightNo FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport JOIN airlines AS airlines ON flights.Airline = airlines.uid WHERE airlines.uid = 2 and flights.SourceAirport = \" KQA\""
  },
  {
    "db_id": "flight_2",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.City, T2.DestAirport FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport JOIN airlines AS T3 ON T2.Airline = T3.uid WHERE T3.Airline = \"Delta Airlines\" and T2.SourceAirport = \" ALM\"",
    "readable_query": "SELECT airports.City, flights.DestAirport FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport JOIN airlines AS airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = \"Delta Airlines\" and flights.SourceAirport = \" ALM\""
  },
  {
    "db_id": "flight_2",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "query": "SELECT T1.AirportName, T2.SourceAirport FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport JOIN airlines AS T3 ON T2.Airline = T3.uid WHERE T3.Abbreviation = \"Northwest\" and T2.FlightNo = 1252",
    "readable_query": "SELECT airports.AirportName, flights.SourceAirport FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport JOIN airlines AS airlines ON flights.Airline = airlines.uid WHERE airlines.Abbreviation = \"Northwest\" and flights.FlightNo = 1252"
  },
  {
    "db_id": "flight_2",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.DestAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Country = \"USA\" GROUP BY T1.DestAirport  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT flights.DestAirport FROM flights AS flights JOIN airlines AS airlines ON flights.Airline = airlines.uid WHERE airlines.Country = \"USA\" GROUP BY flights.DestAirport  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.Airline = 1 GROUP BY T1.City  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT airports.City FROM airports AS airports JOIN flights AS flights ON airports.AirportCode = flights.DestAirport WHERE flights.Airline = 1 GROUP BY airports.City  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Abbreviation FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.FlightNo = 813 GROUP BY T1.Abbreviation  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT airlines.Abbreviation FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline WHERE flights.FlightNo = 813 GROUP BY airlines.Abbreviation  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = \" OTS\" GROUP BY T1.Airline  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT airlines.Airline FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = \" OTS\" GROUP BY airlines.Airline  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "query": "SELECT T1.Abbreviation FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.FlightNo = 902 GROUP BY T1.Abbreviation  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT airlines.Abbreviation FROM airlines AS airlines JOIN flights AS flights ON airlines.uid = flights.Airline WHERE flights.FlightNo = 902 GROUP BY airlines.Abbreviation  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "flight_2",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Airline FROM flights AS T1        EXCEPT SELECT T2.Airline FROM flights AS T2 WHERE T2.DestAirport = \" ASE\"",
    "readable_query": "SELECT flights.Airline FROM flights AS flights        EXCEPT SELECT flights.Airline FROM flights AS flights WHERE flights.DestAirport = \" ASE\""
  },
  {
    "db_id": "flight_2",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.DestAirport FROM flights AS T1        EXCEPT SELECT T2.DestAirport FROM flights AS T2 WHERE T2.FlightNo = 369",
    "readable_query": "SELECT flights.DestAirport FROM flights AS flights        EXCEPT SELECT flights.DestAirport FROM flights AS flights WHERE flights.FlightNo = 369"
  },
  {
    "db_id": "flight_2",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.Airline FROM airlines AS T1        EXCEPT SELECT T2.Airline FROM airlines AS T2 WHERE T2.uid = 8",
    "readable_query": "SELECT airlines.Airline FROM airlines AS airlines        EXCEPT SELECT airlines.Airline FROM airlines AS airlines WHERE airlines.uid = 8"
  },
  {
    "db_id": "flight_2",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.SourceAirport FROM flights AS T1        EXCEPT SELECT T2.SourceAirport FROM flights AS T2 WHERE T2.FlightNo = 1226",
    "readable_query": "SELECT flights.SourceAirport FROM flights AS flights        EXCEPT SELECT flights.SourceAirport FROM flights AS flights WHERE flights.FlightNo = 1226"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.size_description FROM Sizes AS T1 WHERE T1.size_code = \"LGE\"",
    "readable_query": "SELECT sizes.size_description FROM Sizes AS sizes WHERE sizes.size_code = \"LGE\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.treatment_type_description FROM Treatment_Types AS T1 WHERE T1.treatment_type_code = \"WALK\"",
    "readable_query": "SELECT treatment_types.treatment_type_description FROM Treatment_Types AS treatment_types WHERE treatment_types.treatment_type_code = \"WALK\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.charge_type FROM Charges AS T1 WHERE T1.charge_id = 3",
    "readable_query": "SELECT charges.charge_type FROM Charges AS charges WHERE charges.charge_id = 3"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.size_description FROM Sizes AS T1 WHERE T1.size_code = \"SML\"",
    "readable_query": "SELECT sizes.size_description FROM Sizes AS sizes WHERE sizes.size_code = \"SML\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.role_code FROM Professionals AS T1 WHERE T1.first_name = \"Karley\"",
    "readable_query": "SELECT professionals.role_code FROM Professionals AS professionals WHERE professionals.first_name = \"Karley\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.treatment_type_code FROM Treatments AS T1 WHERE T1.professional_id = 6",
    "readable_query": "SELECT treatments.treatment_type_code FROM Treatments AS treatments WHERE treatments.professional_id = 6"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.professional_id FROM Treatments AS T1 WHERE T1.treatment_id = 13",
    "readable_query": "SELECT treatments.professional_id FROM Treatments AS treatments WHERE treatments.treatment_id = 13"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.cell_number FROM Owners AS T1 WHERE T1.email_address = \"lynn81@example.org\"",
    "readable_query": "SELECT owners.cell_number FROM Owners AS owners WHERE owners.email_address = \"lynn81@example.org\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.charge_id FROM Charges AS T1 WHERE T1.charge_amount = 322",
    "readable_query": "SELECT charges.charge_id FROM Charges AS charges WHERE charges.charge_amount = 322"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.charge_type FROM Charges AS T1 WHERE T1.charge_amount = 322",
    "readable_query": "SELECT charges.charge_type FROM Charges AS charges WHERE charges.charge_amount = 322"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.breed_code FROM Dogs AS T1 WHERE T1.age = \"4\"",
    "readable_query": "SELECT dogs.breed_code FROM Dogs AS dogs WHERE dogs.age = \"4\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.dog_id, count(*) FROM Treatments AS T1  GROUP BY T1.dog_id",
    "readable_query": "SELECT treatments.dog_id, count(*) FROM Treatments AS treatments  GROUP BY treatments.dog_id"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.charge_amount, count(*) FROM Charges AS T1  GROUP BY T1.charge_amount",
    "readable_query": "SELECT charges.charge_amount, count(*) FROM Charges AS charges  GROUP BY charges.charge_amount"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.treatment_type_code, count(*) FROM Treatment_Types AS T1  GROUP BY T1.treatment_type_code",
    "readable_query": "SELECT treatment_types.treatment_type_code, count(*) FROM Treatment_Types AS treatment_types  GROUP BY treatment_types.treatment_type_code"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.cell_number, count(*) FROM Professionals AS T1  GROUP BY T1.cell_number",
    "readable_query": "SELECT professionals.cell_number, count(*) FROM Professionals AS professionals  GROUP BY professionals.cell_number"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.treatment_type_description, count(*) FROM Treatment_Types AS T1  GROUP BY T1.treatment_type_description",
    "readable_query": "SELECT treatment_types.treatment_type_description, count(*) FROM Treatment_Types AS treatment_types  GROUP BY treatment_types.treatment_type_description"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.last_name, count(*) FROM Owners AS T1  GROUP BY T1.last_name",
    "readable_query": "SELECT owners.last_name, count(*) FROM Owners AS owners  GROUP BY owners.last_name"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.treatment_type_description, count(*) FROM Treatment_Types AS T1  GROUP BY T1.treatment_type_description",
    "readable_query": "SELECT treatment_types.treatment_type_description, count(*) FROM Treatment_Types AS treatment_types  GROUP BY treatment_types.treatment_type_description"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.first_name, count(*) FROM Professionals AS T1  GROUP BY T1.first_name",
    "readable_query": "SELECT professionals.first_name, count(*) FROM Professionals AS professionals  GROUP BY professionals.first_name"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Sizes AS T1",
    "readable_query": "SELECT count(*) FROM Sizes AS sizes"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Owners AS T1",
    "readable_query": "SELECT count(*) FROM Owners AS owners"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Sizes AS T1",
    "readable_query": "SELECT count(*) FROM Sizes AS sizes"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Treatments AS T1",
    "readable_query": "SELECT count(*) FROM Treatments AS treatments"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Charges AS T1",
    "readable_query": "SELECT count(*) FROM Charges AS charges"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Owners AS T1",
    "readable_query": "SELECT count(*) FROM Owners AS owners"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Breeds AS T1",
    "readable_query": "SELECT count(*) FROM Breeds AS breeds"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Treatments AS T1",
    "readable_query": "SELECT count(*) FROM Treatments AS treatments"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Treatment_Types AS T1",
    "readable_query": "SELECT count(*) FROM Treatment_Types AS treatment_types"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT count(*) FROM Professionals AS T1",
    "readable_query": "SELECT count(*) FROM Professionals AS professionals"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.owner_id, T1.first_name FROM Owners AS T1",
    "readable_query": "SELECT owners.owner_id, owners.first_name FROM Owners AS owners"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.cost_of_treatment, T1.treatment_id FROM Treatments AS T1",
    "readable_query": "SELECT treatments.cost_of_treatment, treatments.treatment_id FROM Treatments AS treatments"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.date_departed, T1.weight FROM Dogs AS T1",
    "readable_query": "SELECT dogs.date_departed, dogs.weight FROM Dogs AS dogs"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.treatment_type_description, T1.treatment_type_code FROM Treatment_Types AS T1",
    "readable_query": "SELECT treatment_types.treatment_type_description, treatment_types.treatment_type_code FROM Treatment_Types AS treatment_types"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.breed_name, T1.breed_code FROM Breeds AS T1",
    "readable_query": "SELECT breeds.breed_name, breeds.breed_code FROM Breeds AS breeds"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.charge_amount, T1.charge_id FROM Charges AS T1",
    "readable_query": "SELECT charges.charge_amount, charges.charge_id FROM Charges AS charges"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.email_address, T1.owner_id FROM Owners AS T1",
    "readable_query": "SELECT owners.email_address, owners.owner_id FROM Owners AS owners"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.breed_name, T1.breed_code FROM Breeds AS T1",
    "readable_query": "SELECT breeds.breed_name, breeds.breed_code FROM Breeds AS breeds"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.gender, T1.size_code FROM Dogs AS T1",
    "readable_query": "SELECT dogs.gender, dogs.size_code FROM Dogs AS dogs"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.treatment_type_code, T1.treatment_type_description FROM Treatment_Types AS T1",
    "readable_query": "SELECT treatment_types.treatment_type_code, treatment_types.treatment_type_description FROM Treatment_Types AS treatment_types"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.charge_type, T1.charge_amount FROM Charges AS T1 WHERE T1.charge_id = 3",
    "readable_query": "SELECT charges.charge_type, charges.charge_amount FROM Charges AS charges WHERE charges.charge_id = 3"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.treatment_id, T1.treatment_type_code FROM Treatments AS T1 WHERE T1.date_of_treatment = \"2018-03-10 11:45:58\"",
    "readable_query": "SELECT treatments.treatment_id, treatments.treatment_type_code FROM Treatments AS treatments WHERE treatments.date_of_treatment = \"2018-03-10 11:45:58\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.email_address, T1.zip_code FROM Professionals AS T1 WHERE T1.first_name = \"Ruben\"",
    "readable_query": "SELECT professionals.email_address, professionals.zip_code FROM Professionals AS professionals WHERE professionals.first_name = \"Ruben\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.street, T1.cell_number FROM Owners AS T1 WHERE T1.last_name = \"Hamill\"",
    "readable_query": "SELECT owners.street, owners.cell_number FROM Owners AS owners WHERE owners.last_name = \"Hamill\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.zip_code, T1.email_address FROM Owners AS T1 WHERE T1.owner_id = 2",
    "readable_query": "SELECT owners.zip_code, owners.email_address FROM Owners AS owners WHERE owners.owner_id = 2"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.cost_of_treatment, T1.treatment_type_code FROM Treatments AS T1 WHERE T1.date_of_treatment = \"2018-03-13 12:22:58\"",
    "readable_query": "SELECT treatments.cost_of_treatment, treatments.treatment_type_code FROM Treatments AS treatments WHERE treatments.date_of_treatment = \"2018-03-13 12:22:58\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.charge_id, T1.charge_type FROM Charges AS T1 WHERE T1.charge_amount = 640",
    "readable_query": "SELECT charges.charge_id, charges.charge_type FROM Charges AS charges WHERE charges.charge_amount = 640"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "query": "SELECT T1.charge_type, T1.charge_id FROM Charges AS T1 WHERE T1.charge_amount = 98",
    "readable_query": "SELECT charges.charge_type, charges.charge_id FROM Charges AS charges WHERE charges.charge_amount = 98"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.breed_name FROM Breeds AS T1  GROUP BY T1.breed_name  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT breeds.breed_name FROM Breeds AS breeds  GROUP BY breeds.breed_name  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.charge_type FROM Charges AS T1  GROUP BY T1.charge_type  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT charges.charge_type FROM Charges AS charges  GROUP BY charges.charge_type  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.treatment_type_code FROM Treatment_Types AS T1  GROUP BY T1.treatment_type_code  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT treatment_types.treatment_type_code FROM Treatment_Types AS treatment_types  GROUP BY treatment_types.treatment_type_code  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.breed_code FROM Breeds AS T1  GROUP BY T1.breed_code  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT breeds.breed_code FROM Breeds AS breeds  GROUP BY breeds.breed_code  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.treatment_type_description FROM Treatment_Types AS T1  GROUP BY T1.treatment_type_description  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT treatment_types.treatment_type_description FROM Treatment_Types AS treatment_types  GROUP BY treatment_types.treatment_type_description  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.zip_code FROM Professionals AS T1  GROUP BY T1.zip_code  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT professionals.zip_code FROM Professionals AS professionals  GROUP BY professionals.zip_code  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "query": "SELECT T1.dog_id FROM Treatments AS T1  GROUP BY T1.dog_id  ORDER BY count(*) DESC LIMIT 1",
    "readable_query": "SELECT treatments.dog_id FROM Treatments AS treatments  GROUP BY treatments.dog_id  ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Treatment_Types AS T1 WHERE T1.treatment_type_description = \"Take for a Walk\"",
    "readable_query": "SELECT count(*) FROM Treatment_Types AS treatment_types WHERE treatment_types.treatment_type_description = \"Take for a Walk\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Sizes AS T1 WHERE T1.size_description = \"Large\"",
    "readable_query": "SELECT count(*) FROM Sizes AS sizes WHERE sizes.size_description = \"Large\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Dogs AS T1 WHERE T1.dog_id = 13",
    "readable_query": "SELECT count(*) FROM Dogs AS dogs WHERE dogs.dog_id = 13"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Owners AS T1 WHERE T1.cell_number = \"559.874.3011x989\"",
    "readable_query": "SELECT count(*) FROM Owners AS owners WHERE owners.cell_number = \"559.874.3011x989\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Charges AS T1 WHERE T1.charge_type = \"Health Check\"",
    "readable_query": "SELECT count(*) FROM Charges AS charges WHERE charges.charge_type = \"Health Check\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Owners AS T1 WHERE T1.email_address = \"kturner@example.net\"",
    "readable_query": "SELECT count(*) FROM Owners AS owners WHERE owners.email_address = \"kturner@example.net\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "query": "SELECT count(*) FROM Treatments AS T1 WHERE T1.cost_of_treatment = 349",
    "readable_query": "SELECT count(*) FROM Treatments AS treatments WHERE treatments.cost_of_treatment = 349"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.zip_code FROM Professionals AS T1    ORDER BY T1.professional_id DESC LIMIT 1",
    "readable_query": "SELECT professionals.zip_code FROM Professionals AS professionals    ORDER BY professionals.professional_id DESC LIMIT 1"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.age FROM Dogs AS T1    ORDER BY T1.date_adopted DESC LIMIT 1",
    "readable_query": "SELECT dogs.age FROM Dogs AS dogs    ORDER BY dogs.date_adopted DESC LIMIT 1"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.charge_type FROM Charges AS T1    ORDER BY T1.charge_id DESC LIMIT 1",
    "readable_query": "SELECT charges.charge_type FROM Charges AS charges    ORDER BY charges.charge_id DESC LIMIT 1"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.date_of_treatment FROM Treatments AS T1    ORDER BY T1.professional_id DESC LIMIT 1",
    "readable_query": "SELECT treatments.date_of_treatment FROM Treatments AS treatments    ORDER BY treatments.professional_id DESC LIMIT 1"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.treatment_id FROM Treatments AS T1    ORDER BY T1.professional_id DESC LIMIT 1",
    "readable_query": "SELECT treatments.treatment_id FROM Treatments AS treatments    ORDER BY treatments.professional_id DESC LIMIT 1"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.zip_code FROM Owners AS T1    ORDER BY T1.owner_id DESC LIMIT 1",
    "readable_query": "SELECT owners.zip_code FROM Owners AS owners    ORDER BY owners.owner_id DESC LIMIT 1"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.city FROM Owners AS T1    ORDER BY T1.owner_id DESC LIMIT 1",
    "readable_query": "SELECT owners.city FROM Owners AS owners    ORDER BY owners.owner_id DESC LIMIT 1"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.cell_number FROM Owners AS T1    ORDER BY T1.owner_id DESC LIMIT 1",
    "readable_query": "SELECT owners.cell_number FROM Owners AS owners    ORDER BY owners.owner_id DESC LIMIT 1"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.size_description) FROM Sizes AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  sizes.size_description) FROM Sizes AS sizes"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.email_address) FROM Owners AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  owners.email_address) FROM Owners AS owners"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.zip_code) FROM Professionals AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  professionals.zip_code) FROM Professionals AS professionals"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.professional_id) FROM Treatments AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  treatments.professional_id) FROM Treatments AS treatments"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.state) FROM Owners AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  owners.state) FROM Owners AS owners"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.home_phone) FROM Professionals AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  professionals.home_phone) FROM Professionals AS professionals"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.breed_name) FROM Breeds AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  breeds.breed_name) FROM Breeds AS breeds"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.first_name) FROM Owners AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  owners.first_name) FROM Owners AS owners"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.professional_id) FROM Professionals AS T1",
    "readable_query": "SELECT DISTINCT count(DISTINCT  professionals.professional_id) FROM Professionals AS professionals"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.professional_id) FROM Treatments AS T1",
    "readable_query": "SELECT avg( treatments.professional_id) FROM Treatments AS treatments"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.owner_id) FROM Dogs AS T1",
    "readable_query": "SELECT avg( dogs.owner_id) FROM Dogs AS dogs"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.professional_id) FROM Treatments AS T1",
    "readable_query": "SELECT avg( treatments.professional_id) FROM Treatments AS treatments"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.dog_id) FROM Dogs AS T1",
    "readable_query": "SELECT avg( dogs.dog_id) FROM Dogs AS dogs"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.professional_id) FROM Professionals AS T1",
    "readable_query": "SELECT avg( professionals.professional_id) FROM Professionals AS professionals"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.charge_amount) FROM Charges AS T1",
    "readable_query": "SELECT avg( charges.charge_amount) FROM Charges AS charges"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.charge_id) FROM Charges AS T1",
    "readable_query": "SELECT avg( charges.charge_id) FROM Charges AS charges"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.cost_of_treatment) FROM Treatments AS T1",
    "readable_query": "SELECT avg( treatments.cost_of_treatment) FROM Treatments AS treatments"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT avg( T1.owner_id) FROM Owners AS T1",
    "readable_query": "SELECT avg( owners.owner_id) FROM Owners AS owners"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.owner_id FROM Dogs AS T1",
    "readable_query": "SELECT dogs.owner_id FROM Dogs AS dogs"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.dog_id FROM Treatments AS T1",
    "readable_query": "SELECT treatments.dog_id FROM Treatments AS treatments"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.treatment_type_code FROM Treatment_Types AS T1",
    "readable_query": "SELECT treatment_types.treatment_type_code FROM Treatment_Types AS treatment_types"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.breed_code FROM Breeds AS T1",
    "readable_query": "SELECT breeds.breed_code FROM Breeds AS breeds"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.treatment_type_code FROM Treatment_Types AS T1",
    "readable_query": "SELECT treatment_types.treatment_type_code FROM Treatment_Types AS treatment_types"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.size_code FROM Sizes AS T1",
    "readable_query": "SELECT sizes.size_code FROM Sizes AS sizes"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.breed_name FROM Breeds AS T1",
    "readable_query": "SELECT breeds.breed_name FROM Breeds AS breeds"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.breed_name FROM Breeds AS T1",
    "readable_query": "SELECT breeds.breed_name FROM Breeds AS breeds"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.size_description FROM Sizes AS T1",
    "readable_query": "SELECT sizes.size_description FROM Sizes AS sizes"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.charge_id FROM Charges AS T1",
    "readable_query": "SELECT charges.charge_id FROM Charges AS charges"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT T1.state FROM Professionals AS T1",
    "readable_query": "SELECT professionals.state FROM Professionals AS professionals"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.treatment_id FROM Treatments AS T1",
    "readable_query": "SELECT DISTINCT treatments.treatment_id FROM Treatments AS treatments"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.size_description FROM Sizes AS T1",
    "readable_query": "SELECT DISTINCT sizes.size_description FROM Sizes AS sizes"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.breed_name FROM Breeds AS T1",
    "readable_query": "SELECT DISTINCT breeds.breed_name FROM Breeds AS breeds"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.size_code FROM Dogs AS T1",
    "readable_query": "SELECT DISTINCT dogs.size_code FROM Dogs AS dogs"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.treatment_type_description FROM Treatment_Types AS T1",
    "readable_query": "SELECT DISTINCT treatment_types.treatment_type_description FROM Treatment_Types AS treatment_types"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.zip_code FROM Owners AS T1",
    "readable_query": "SELECT DISTINCT owners.zip_code FROM Owners AS owners"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "query": "SELECT DISTINCT T1.gender FROM Dogs AS T1",
    "readable_query": "SELECT DISTINCT dogs.gender FROM Dogs AS dogs"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.charge_amount FROM Charges AS T1     ORDER BY T1.charge_id ASC",
    "readable_query": "SELECT charges.charge_amount FROM Charges AS charges     ORDER BY charges.charge_id ASC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.charge_id FROM Charges AS T1     ORDER BY T1.charge_amount ASC",
    "readable_query": "SELECT charges.charge_id FROM Charges AS charges     ORDER BY charges.charge_amount ASC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.date_of_treatment FROM Treatments AS T1     ORDER BY T1.professional_id ASC",
    "readable_query": "SELECT treatments.date_of_treatment FROM Treatments AS treatments     ORDER BY treatments.professional_id ASC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.home_phone FROM Owners AS T1     ORDER BY T1.owner_id ASC",
    "readable_query": "SELECT owners.home_phone FROM Owners AS owners     ORDER BY owners.owner_id ASC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.last_name FROM Owners AS T1     ORDER BY T1.owner_id ASC",
    "readable_query": "SELECT owners.last_name FROM Owners AS owners     ORDER BY owners.owner_id ASC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.charge_amount FROM Charges AS T1     ORDER BY T1.charge_id ASC",
    "readable_query": "SELECT charges.charge_amount FROM Charges AS charges     ORDER BY charges.charge_id ASC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.dog_id FROM Treatments AS T1     ORDER BY T1.cost_of_treatment DESC",
    "readable_query": "SELECT treatments.dog_id FROM Treatments AS treatments     ORDER BY treatments.cost_of_treatment DESC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.last_name FROM Owners AS T1     ORDER BY T1.owner_id DESC",
    "readable_query": "SELECT owners.last_name FROM Owners AS owners     ORDER BY owners.owner_id DESC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.zip_code FROM Professionals AS T1     ORDER BY T1.professional_id DESC",
    "readable_query": "SELECT professionals.zip_code FROM Professionals AS professionals     ORDER BY professionals.professional_id DESC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.date_arrived FROM Dogs AS T1     ORDER BY T1.dog_id DESC",
    "readable_query": "SELECT dogs.date_arrived FROM Dogs AS dogs     ORDER BY dogs.dog_id DESC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.state FROM Owners AS T1     ORDER BY T1.owner_id DESC",
    "readable_query": "SELECT owners.state FROM Owners AS owners     ORDER BY owners.owner_id DESC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.first_name FROM Professionals AS T1     ORDER BY T1.professional_id DESC",
    "readable_query": "SELECT professionals.first_name FROM Professionals AS professionals     ORDER BY professionals.professional_id DESC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.charge_amount FROM Charges AS T1     ORDER BY T1.charge_id DESC",
    "readable_query": "SELECT charges.charge_amount FROM Charges AS charges     ORDER BY charges.charge_id DESC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.abandoned_yn FROM Dogs AS T1     ORDER BY T1.date_of_birth DESC",
    "readable_query": "SELECT dogs.abandoned_yn FROM Dogs AS dogs     ORDER BY dogs.date_of_birth DESC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "query": "SELECT T1.date_of_treatment FROM Treatments AS T1     ORDER BY T1.cost_of_treatment DESC",
    "readable_query": "SELECT treatments.date_of_treatment FROM Treatments AS treatments     ORDER BY treatments.cost_of_treatment DESC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.size_code, T1.gender FROM Dogs AS T1     ORDER BY T1.gender ASC",
    "readable_query": "SELECT dogs.size_code, dogs.gender FROM Dogs AS dogs     ORDER BY dogs.gender ASC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.charge_type, T1.charge_amount FROM Charges AS T1     ORDER BY T1.charge_amount ASC",
    "readable_query": "SELECT charges.charge_type, charges.charge_amount FROM Charges AS charges     ORDER BY charges.charge_amount ASC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.owner_id, T1.size_code FROM Dogs AS T1     ORDER BY T1.size_code ASC",
    "readable_query": "SELECT dogs.owner_id, dogs.size_code FROM Dogs AS dogs     ORDER BY dogs.size_code ASC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.weight, T1.date_of_birth FROM Dogs AS T1     ORDER BY T1.date_of_birth ASC",
    "readable_query": "SELECT dogs.weight, dogs.date_of_birth FROM Dogs AS dogs     ORDER BY dogs.date_of_birth ASC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.date_adopted, T1.abandoned_yn FROM Dogs AS T1     ORDER BY T1.abandoned_yn ASC",
    "readable_query": "SELECT dogs.date_adopted, dogs.abandoned_yn FROM Dogs AS dogs     ORDER BY dogs.abandoned_yn ASC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.email_address, T1.zip_code FROM Professionals AS T1     ORDER BY T1.zip_code ASC",
    "readable_query": "SELECT professionals.email_address, professionals.zip_code FROM Professionals AS professionals     ORDER BY professionals.zip_code ASC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.owner_id, T1.first_name FROM Owners AS T1     ORDER BY T1.first_name ASC",
    "readable_query": "SELECT owners.owner_id, owners.first_name FROM Owners AS owners     ORDER BY owners.first_name ASC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.professional_id, T1.treatment_type_code FROM Treatments AS T1     ORDER BY T1.treatment_type_code ASC",
    "readable_query": "SELECT treatments.professional_id, treatments.treatment_type_code FROM Treatments AS treatments     ORDER BY treatments.treatment_type_code ASC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.charge_amount, T1.charge_type FROM Charges AS T1     ORDER BY T1.charge_type ASC",
    "readable_query": "SELECT charges.charge_amount, charges.charge_type FROM Charges AS charges     ORDER BY charges.charge_type ASC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.last_name, T1.state FROM Professionals AS T1     ORDER BY T1.state ASC",
    "readable_query": "SELECT professionals.last_name, professionals.state FROM Professionals AS professionals     ORDER BY professionals.state ASC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "query": "SELECT T1.size_description, T1.size_code FROM Sizes AS T1     ORDER BY T1.size_code ASC",
    "readable_query": "SELECT sizes.size_description, sizes.size_code FROM Sizes AS sizes     ORDER BY sizes.size_code ASC"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.state FROM Professionals AS T1 WHERE T1.professional_id = 4 and T1.first_name = \"Ruben\"",
    "readable_query": "SELECT professionals.state FROM Professionals AS professionals WHERE professionals.professional_id = 4 and professionals.first_name = \"Ruben\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.charge_type FROM Charges AS T1 WHERE T1.charge_amount = 322 and T1.charge_id = 3",
    "readable_query": "SELECT charges.charge_type FROM Charges AS charges WHERE charges.charge_amount = 322 and charges.charge_id = 3"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.cell_number FROM Professionals AS T1 WHERE T1.street = \"44234 Marvin Shoals Suite 659\nNorth Frances, AL 23\" and T1.home_phone = \"320-508-6023\"",
    "readable_query": "SELECT professionals.cell_number FROM Professionals AS professionals WHERE professionals.street = \"44234 Marvin Shoals Suite 659\nNorth Frances, AL 23\" and professionals.home_phone = \"320-508-6023\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.street FROM Professionals AS T1 WHERE T1.home_phone = \"+71(6)2898266914\" and T1.city = \"Jaceton\"",
    "readable_query": "SELECT professionals.street FROM Professionals AS professionals WHERE professionals.home_phone = \"+71(6)2898266914\" and professionals.city = \"Jaceton\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.state FROM Professionals AS T1 WHERE T1.first_name = \"Sigurd\" and T1.city = \"Raynorfort\"",
    "readable_query": "SELECT professionals.state FROM Professionals AS professionals WHERE professionals.first_name = \"Sigurd\" and professionals.city = \"Raynorfort\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.email_address FROM Owners AS T1 WHERE T1.cell_number = \"1-739-421-2225x38148\" and T1.street = \"6950 Katherine Forges Apt. 630\"",
    "readable_query": "SELECT owners.email_address FROM Owners AS owners WHERE owners.cell_number = \"1-739-421-2225x38148\" and owners.street = \"6950 Katherine Forges Apt. 630\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.date_departed FROM Dogs AS T1 WHERE T1.date_arrived = \"2017-10-25 00:55:34\" and T1.date_of_birth = \"2008-05-30 12:51:34\"",
    "readable_query": "SELECT dogs.date_departed FROM Dogs AS dogs WHERE dogs.date_arrived = \"2017-10-25 00:55:34\" and dogs.date_of_birth = \"2008-05-30 12:51:34\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.state FROM Owners AS T1 WHERE T1.cell_number = \"739-136-7202\" and T1.owner_id = 15",
    "readable_query": "SELECT owners.state FROM Owners AS owners WHERE owners.cell_number = \"739-136-7202\" and owners.owner_id = 15"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.street FROM Professionals AS T1 WHERE T1.last_name = \"Kshlerin\" and T1.cell_number = \"(275)939-2435x80863\"",
    "readable_query": "SELECT professionals.street FROM Professionals AS professionals WHERE professionals.last_name = \"Kshlerin\" and professionals.cell_number = \"(275)939-2435x80863\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.date_of_birth FROM Dogs AS T1 WHERE T1.owner_id = 1 or T1.date_arrived = \"2017-12-29 23:24:13\"",
    "readable_query": "SELECT dogs.date_of_birth FROM Dogs AS dogs WHERE dogs.owner_id = 1 or dogs.date_arrived = \"2017-12-29 23:24:13\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.street FROM Owners AS T1 WHERE T1.last_name = \"DuBuque\" or T1.home_phone = \"363.948.1090\"",
    "readable_query": "SELECT owners.street FROM Owners AS owners WHERE owners.last_name = \"DuBuque\" or owners.home_phone = \"363.948.1090\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.last_name FROM Professionals AS T1 WHERE T1.first_name = \"Domenica\" or T1.professional_id = 5",
    "readable_query": "SELECT professionals.last_name FROM Professionals AS professionals WHERE professionals.first_name = \"Domenica\" or professionals.professional_id = 5"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.first_name FROM Owners AS T1 WHERE T1.cell_number = \"(257)399-3116\" or T1.street = \"2417 Keara Stravenue Apt. 146\"",
    "readable_query": "SELECT owners.first_name FROM Owners AS owners WHERE owners.cell_number = \"(257)399-3116\" or owners.street = \"2417 Keara Stravenue Apt. 146\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.weight FROM Dogs AS T1 WHERE T1.gender = \"1\" or T1.abandoned_yn = \"1\"",
    "readable_query": "SELECT dogs.weight FROM Dogs AS dogs WHERE dogs.gender = \"1\" or dogs.abandoned_yn = \"1\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.cell_number FROM Professionals AS T1 WHERE T1.state = \"SouthCarolina\" or T1.role_code = \"Veterenarian\"",
    "readable_query": "SELECT professionals.cell_number FROM Professionals AS professionals WHERE professionals.state = \"SouthCarolina\" or professionals.role_code = \"Veterenarian\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.dog_id FROM Treatments AS T1 WHERE T1.treatment_type_code = \"VAC\" or T1.date_of_treatment = \"2018-03-01 04:14:46\"",
    "readable_query": "SELECT treatments.dog_id FROM Treatments AS treatments WHERE treatments.treatment_type_code = \"VAC\" or treatments.date_of_treatment = \"2018-03-01 04:14:46\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.professional_id FROM Treatments AS T1 WHERE T1.treatment_type_code = \"WALK\" or T1.cost_of_treatment = 429",
    "readable_query": "SELECT treatments.professional_id FROM Treatments AS treatments WHERE treatments.treatment_type_code = \"WALK\" or treatments.cost_of_treatment = 429"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.name FROM Dogs AS T1 WHERE T1.date_departed = \"2018-03-25 02:47:40\" or T1.size_code = \"LGE\"",
    "readable_query": "SELECT dogs.name FROM Dogs AS dogs WHERE dogs.date_departed = \"2018-03-25 02:47:40\" or dogs.size_code = \"LGE\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.zip_code FROM Owners AS T1 WHERE T1.street = \"692 Jaskolski Forges\" or T1.last_name = \"Feil\"",
    "readable_query": "SELECT owners.zip_code FROM Owners AS owners WHERE owners.street = \"692 Jaskolski Forges\" or owners.last_name = \"Feil\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.street FROM Professionals AS T1 WHERE T1.cell_number = \"499-434-0215x1628\" or T1.city = \"Kirastad\"",
    "readable_query": "SELECT professionals.street FROM Professionals AS professionals WHERE professionals.cell_number = \"499-434-0215x1628\" or professionals.city = \"Kirastad\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "query": "SELECT T1.treatment_id FROM Treatments AS T1 WHERE T1.dog_id = 13 or T1.professional_id = 9",
    "readable_query": "SELECT treatments.treatment_id FROM Treatments AS treatments WHERE treatments.dog_id = 13 or treatments.professional_id = 9"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.city FROM Owners AS T1 WHERE T1.first_name != \"Kade\"",
    "readable_query": "SELECT owners.city FROM Owners AS owners WHERE owners.first_name != \"Kade\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.breed_code FROM Breeds AS T1 WHERE T1.breed_name != \"Husky\"",
    "readable_query": "SELECT breeds.breed_code FROM Breeds AS breeds WHERE breeds.breed_name != \"Husky\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.treatment_type_code FROM Treatment_Types AS T1 WHERE T1.treatment_type_description != \"Physical examination\"",
    "readable_query": "SELECT treatment_types.treatment_type_code FROM Treatment_Types AS treatment_types WHERE treatment_types.treatment_type_description != \"Physical examination\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.charge_amount FROM Charges AS T1 WHERE T1.charge_id != 2",
    "readable_query": "SELECT charges.charge_amount FROM Charges AS charges WHERE charges.charge_id != 2"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.breed_name FROM Breeds AS T1 WHERE T1.breed_code != \"BUL\"",
    "readable_query": "SELECT breeds.breed_name FROM Breeds AS breeds WHERE breeds.breed_code != \"BUL\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.treatment_type_code) FROM Treatments AS T1 WHERE T1.cost_of_treatment = 567",
    "readable_query": "SELECT DISTINCT count(DISTINCT  treatments.treatment_type_code) FROM Treatments AS treatments WHERE treatments.cost_of_treatment = 567"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.breed_code) FROM Breeds AS T1 WHERE T1.breed_name = \"Bulldog\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  breeds.breed_code) FROM Breeds AS breeds WHERE breeds.breed_name = \"Bulldog\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.first_name) FROM Professionals AS T1 WHERE T1.home_phone = \"(920)304-4499x59146\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  professionals.first_name) FROM Professionals AS professionals WHERE professionals.home_phone = \"(920)304-4499x59146\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.city) FROM Professionals AS T1 WHERE T1.first_name = \"Ruben\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  professionals.city) FROM Professionals AS professionals WHERE professionals.first_name = \"Ruben\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.treatment_type_code) FROM Treatment_Types AS T1 WHERE T1.treatment_type_description = \"Vaccination\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  treatment_types.treatment_type_code) FROM Treatment_Types AS treatment_types WHERE treatment_types.treatment_type_description = \"Vaccination\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.date_of_treatment) FROM Treatments AS T1 WHERE T1.dog_id = 12",
    "readable_query": "SELECT DISTINCT count(DISTINCT  treatments.date_of_treatment) FROM Treatments AS treatments WHERE treatments.dog_id = 12"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.professional_id) FROM Treatments AS T1 WHERE T1.treatment_type_code = \"EXAM\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  treatments.professional_id) FROM Treatments AS treatments WHERE treatments.treatment_type_code = \"EXAM\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT DISTINCT count(DISTINCT  T1.cell_number) FROM Owners AS T1 WHERE T1.last_name = \"Rippin\"",
    "readable_query": "SELECT DISTINCT count(DISTINCT  owners.cell_number) FROM Owners AS owners WHERE owners.last_name = \"Rippin\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.date_of_birth FROM Dogs AS T1 WHERE T1.date_arrived > \"2017-04-20 00:58:55\"",
    "readable_query": "SELECT dogs.date_of_birth FROM Dogs AS dogs WHERE dogs.date_arrived > \"2017-04-20 00:58:55\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.abandoned_yn FROM Dogs AS T1 WHERE T1.owner_id > 13",
    "readable_query": "SELECT dogs.abandoned_yn FROM Dogs AS dogs WHERE dogs.owner_id > 13"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.treatment_type_code FROM Treatments AS T1 WHERE T1.treatment_id > 12",
    "readable_query": "SELECT treatments.treatment_type_code FROM Treatments AS treatments WHERE treatments.treatment_id > 12"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.state FROM Professionals AS T1 WHERE T1.professional_id > 4",
    "readable_query": "SELECT professionals.state FROM Professionals AS professionals WHERE professionals.professional_id > 4"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.treatment_id FROM Treatments AS T1 WHERE T1.dog_id > 2",
    "readable_query": "SELECT treatments.treatment_id FROM Treatments AS treatments WHERE treatments.dog_id > 2"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.home_phone FROM Owners AS T1 WHERE T1.owner_id > 2",
    "readable_query": "SELECT owners.home_phone FROM Owners AS owners WHERE owners.owner_id > 2"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.state FROM Owners AS T1 WHERE T1.owner_id > 2",
    "readable_query": "SELECT owners.state FROM Owners AS owners WHERE owners.owner_id > 2"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.role_code FROM Professionals AS T1 WHERE T1.professional_id > 15",
    "readable_query": "SELECT professionals.role_code FROM Professionals AS professionals WHERE professionals.professional_id > 15"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.charge_id FROM Charges AS T1 WHERE T1.charge_amount > 322",
    "readable_query": "SELECT charges.charge_id FROM Charges AS charges WHERE charges.charge_amount > 322"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.charge_id FROM Charges AS T1 WHERE T1.charge_amount > 98",
    "readable_query": "SELECT charges.charge_id FROM Charges AS charges WHERE charges.charge_amount > 98"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.home_phone FROM Owners AS T1 WHERE T1.owner_id > 4",
    "readable_query": "SELECT owners.home_phone FROM Owners AS owners WHERE owners.owner_id > 4"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "query": "SELECT T1.treatment_id FROM Treatments AS T1 WHERE T1.date_of_treatment > \"2018-03-15 19:10:02\"",
    "readable_query": "SELECT treatments.treatment_id FROM Treatments AS treatments WHERE treatments.date_of_treatment > \"2018-03-15 19:10:02\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.size_description FROM Sizes AS T1 WHERE T1.size_code = \"MED\"     INTERSECT SELECT T2.size_description FROM Sizes AS T2 WHERE T2.size_code = \"MED\"",
    "readable_query": "SELECT sizes.size_description FROM Sizes AS sizes WHERE sizes.size_code = \"MED\"     INTERSECT SELECT sizes.size_description FROM Sizes AS sizes WHERE sizes.size_code = \"MED\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.date_of_treatment FROM Treatments AS T1 WHERE T1.treatment_type_code = \"VAC\"     INTERSECT SELECT T2.date_of_treatment FROM Treatments AS T2 WHERE T2.treatment_type_code = \"VAC\"",
    "readable_query": "SELECT treatments.date_of_treatment FROM Treatments AS treatments WHERE treatments.treatment_type_code = \"VAC\"     INTERSECT SELECT treatments.date_of_treatment FROM Treatments AS treatments WHERE treatments.treatment_type_code = \"VAC\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.size_description FROM Sizes AS T1 WHERE T1.size_code = \"SML\"     INTERSECT SELECT T2.size_description FROM Sizes AS T2 WHERE T2.size_code = \"LGE\"",
    "readable_query": "SELECT sizes.size_description FROM Sizes AS sizes WHERE sizes.size_code = \"SML\"     INTERSECT SELECT sizes.size_description FROM Sizes AS sizes WHERE sizes.size_code = \"LGE\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.zip_code FROM Owners AS T1 WHERE T1.city = \"Lake Valentin\"     INTERSECT SELECT T2.zip_code FROM Owners AS T2 WHERE T2.city = \"Port Zackery\"",
    "readable_query": "SELECT owners.zip_code FROM Owners AS owners WHERE owners.city = \"Lake Valentin\"     INTERSECT SELECT owners.zip_code FROM Owners AS owners WHERE owners.city = \"Port Zackery\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.street FROM Professionals AS T1 WHERE T1.city = \"Raynorfort\"     INTERSECT SELECT T2.street FROM Professionals AS T2 WHERE T2.city = \"Raynorfort\"",
    "readable_query": "SELECT professionals.street FROM Professionals AS professionals WHERE professionals.city = \"Raynorfort\"     INTERSECT SELECT professionals.street FROM Professionals AS professionals WHERE professionals.city = \"Raynorfort\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.street FROM Owners AS T1 WHERE T1.owner_id = 13     INTERSECT SELECT T2.street FROM Owners AS T2 WHERE T2.owner_id = 5",
    "readable_query": "SELECT owners.street FROM Owners AS owners WHERE owners.owner_id = 13     INTERSECT SELECT owners.street FROM Owners AS owners WHERE owners.owner_id = 5"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.breed_code FROM Breeds AS T1 WHERE T1.breed_name = \"Eskimo\"     INTERSECT SELECT T2.breed_code FROM Breeds AS T2 WHERE T2.breed_name = \"Eskimo\"",
    "readable_query": "SELECT breeds.breed_code FROM Breeds AS breeds WHERE breeds.breed_name = \"Eskimo\"     INTERSECT SELECT breeds.breed_code FROM Breeds AS breeds WHERE breeds.breed_name = \"Eskimo\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.size_code FROM Sizes AS T1 WHERE T1.size_description = \"Large\"     INTERSECT SELECT T2.size_code FROM Sizes AS T2 WHERE T2.size_description = \"Large\"",
    "readable_query": "SELECT sizes.size_code FROM Sizes AS sizes WHERE sizes.size_description = \"Large\"     INTERSECT SELECT sizes.size_code FROM Sizes AS sizes WHERE sizes.size_description = \"Large\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "query": "SELECT T1.charge_type FROM Charges AS T1 WHERE T1.charge_amount = 98     INTERSECT SELECT T2.charge_type FROM Charges AS T2 WHERE T2.charge_amount = 98",
    "readable_query": "SELECT charges.charge_type FROM Charges AS charges WHERE charges.charge_amount = 98     INTERSECT SELECT charges.charge_type FROM Charges AS charges WHERE charges.charge_amount = 98"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.owner_id) FROM Owners AS T1 WHERE T1.zip_code = \"35747\"",
    "readable_query": "SELECT avg( owners.owner_id) FROM Owners AS owners WHERE owners.zip_code = \"35747\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.charge_amount) FROM Charges AS T1 WHERE T1.charge_id = 2",
    "readable_query": "SELECT avg( charges.charge_amount) FROM Charges AS charges WHERE charges.charge_id = 2"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.professional_id) FROM Professionals AS T1 WHERE T1.city = \"Raynorfort\"",
    "readable_query": "SELECT avg( professionals.professional_id) FROM Professionals AS professionals WHERE professionals.city = \"Raynorfort\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.charge_amount) FROM Charges AS T1 WHERE T1.charge_type = \"Daily Accommodation\"",
    "readable_query": "SELECT avg( charges.charge_amount) FROM Charges AS charges WHERE charges.charge_type = \"Daily Accommodation\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.charge_id) FROM Charges AS T1 WHERE T1.charge_type = \"Daily Accommodation\"",
    "readable_query": "SELECT avg( charges.charge_id) FROM Charges AS charges WHERE charges.charge_type = \"Daily Accommodation\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.professional_id) FROM Treatments AS T1 WHERE T1.dog_id = 2",
    "readable_query": "SELECT avg( treatments.professional_id) FROM Treatments AS treatments WHERE treatments.dog_id = 2"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.professional_id) FROM Professionals AS T1 WHERE T1.state = \"NewMexico\"",
    "readable_query": "SELECT avg( professionals.professional_id) FROM Professionals AS professionals WHERE professionals.state = \"NewMexico\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT avg( T1.owner_id) FROM Dogs AS T1 WHERE T1.date_departed = \"2018-03-25 15:05:16\"",
    "readable_query": "SELECT avg( dogs.owner_id) FROM Dogs AS dogs WHERE dogs.date_departed = \"2018-03-25 15:05:16\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.treatment_type_description FROM Treatment_Types AS T1        EXCEPT SELECT T2.treatment_type_description FROM Treatment_Types AS T2 WHERE T2.treatment_type_code = \"VAC\"",
    "readable_query": "SELECT treatment_types.treatment_type_description FROM Treatment_Types AS treatment_types        EXCEPT SELECT treatment_types.treatment_type_description FROM Treatment_Types AS treatment_types WHERE treatment_types.treatment_type_code = \"VAC\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.role_code FROM Professionals AS T1        EXCEPT SELECT T2.role_code FROM Professionals AS T2 WHERE T2.zip_code = \"84515\"",
    "readable_query": "SELECT professionals.role_code FROM Professionals AS professionals        EXCEPT SELECT professionals.role_code FROM Professionals AS professionals WHERE professionals.zip_code = \"84515\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.treatment_type_description FROM Treatment_Types AS T1        EXCEPT SELECT T2.treatment_type_description FROM Treatment_Types AS T2 WHERE T2.treatment_type_code = \"WALK\"",
    "readable_query": "SELECT treatment_types.treatment_type_description FROM Treatment_Types AS treatment_types        EXCEPT SELECT treatment_types.treatment_type_description FROM Treatment_Types AS treatment_types WHERE treatment_types.treatment_type_code = \"WALK\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.charge_amount FROM Charges AS T1        EXCEPT SELECT T2.charge_amount FROM Charges AS T2 WHERE T2.charge_id = 2",
    "readable_query": "SELECT charges.charge_amount FROM Charges AS charges        EXCEPT SELECT charges.charge_amount FROM Charges AS charges WHERE charges.charge_id = 2"
  },
  {
    "db_id": "dog_kennels",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.zip_code FROM Owners AS T1        EXCEPT SELECT T2.zip_code FROM Owners AS T2 WHERE T2.email_address = \"pearlie18@example.com\"",
    "readable_query": "SELECT owners.zip_code FROM Owners AS owners        EXCEPT SELECT owners.zip_code FROM Owners AS owners WHERE owners.email_address = \"pearlie18@example.com\""
  },
  {
    "db_id": "dog_kennels",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "query": "SELECT T1.breed_code FROM Breeds AS T1        EXCEPT SELECT T2.breed_code FROM Breeds AS T2 WHERE T2.breed_name = \"Bulldog\"",
    "readable_query": "SELECT breeds.breed_code FROM Breeds AS breeds        EXCEPT SELECT breeds.breed_code FROM Breeds AS breeds WHERE breeds.breed_name = \"Bulldog\""
  }
]