[
  {
    "query": "SELECT T1.Nationality FROM people AS T1 WHERE T1.People_ID = 2",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the nationality of the person with People ID 2?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Name FROM people AS T1 WHERE T1.Nationality = \"Bulgaria\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of all people with nationality Bulgaria?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM people AS T1 WHERE T1.Birth_Date = \"August 8, 1986\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of all people who were born on August 8, 1986?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Nationality FROM people AS T1 WHERE T1.Height = 194.0",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the nationalities of all people whose height is 194.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID = 7",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the name of the poker player with People ID 7?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poker_Player_ID = 1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of all the poker players with Poker Player ID 1?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = 196.0",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of all poker players whose height is 196.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Money_Rank = 58.0",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the heights of the poker players with the money rank of 58.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID = 2",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the final tables made by the player with id 2?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name = \"Yevgeni Sivozhelez\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the final tables made by the player with the name \"Yevgeni Sivozhelez\"?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Money_Rank, count(*) FROM poker_player AS T1  GROUP BY T1.Money_Rank",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the money rank and the number of players for each rank.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Nationality, count(*) FROM people AS T1  GROUP BY T1.Nationality",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all nationalities and the number of people in each nationality.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID, count(*) FROM people AS T1  GROUP BY T1.People_ID",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all people id and the number of people with the same id.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Final_Table_Made, count(*) FROM poker_player AS T1  GROUP BY T1.Final_Table_Made",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the final table made by each player and the number of times for each final table made.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Earnings, count(*) FROM poker_player AS T1  GROUP BY T1.Earnings",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the earnings of players and the number of players with each earnings.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Name, count(*) FROM people AS T1  GROUP BY T1.Name",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the names of people and the number of people with each name.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Poker_Player_ID, count(*) FROM poker_player AS T1  GROUP BY T1.Poker_Player_ID",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many players have participated in poker?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Best_Finish, count(*) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID  GROUP BY T1.Best_Finish",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the best finish and the number of players with the best finish for all poker players.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height, count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID  GROUP BY T1.Height",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the height and number of people who have the same height for people who are poker players.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Nationality, count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID  GROUP BY T1.Nationality",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show all nations and the number of people from each nation who are poker players.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Name, count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID  GROUP BY T1.Name",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the names of people and the number of poker players they have.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID, count(*) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID  GROUP BY T1.People_ID",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many people are associated with each player?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT count(*) FROM people AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many people are there?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT count(*) FROM poker_player AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many players are there?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Poker_Player_ID, T1.Best_Finish FROM poker_player AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the id and best finish of all poker players.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Money_Rank, T1.Poker_Player_ID FROM poker_player AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show the money rank and id of all poker players.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Name, T1.Height FROM people AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the names and heights of all people?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID, T1.Height FROM people AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the id and height of all people?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID, T1.Birth_Date FROM people AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the id and birth date of all people?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height, T1.Nationality FROM people AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the heights and nationalities of all people?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Nationality, T1.People_ID FROM people AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all nationalities and people ids.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Money_Rank, T2.Height FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show the money rank and height of poker players.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height, T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the heights of poker players, and what are their money ranks?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID, T2.Best_Finish FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the id and best finish of the people who played poker?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID, T2.Birth_Date FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the ids of the players and when were they born?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Birth_Date, T1.Nationality FROM people AS T1 WHERE T1.Height = 187.0",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the birth dates and nationalities of all people whose height is 187.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Nationality, T1.Name FROM people AS T1 WHERE T1.People_ID = 2",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the names and nationalities of the people with ID 2?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID, T1.Poker_Player_ID FROM poker_player AS T1 WHERE T1.Best_Finish = 3.0",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the ids of the players with best finish equal to 3.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Best_Finish, T1.People_ID FROM poker_player AS T1 WHERE T1.Poker_Player_ID = 1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the best finish of the player with id 1 and what are the people ids?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID, T1.Height FROM people AS T1 WHERE T1.Birth_Date = \"April 17, 1987\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the id and height of the person who was born on April 17, 1987.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1  GROUP BY T1.Poker_Player_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the id of the player with the most appearances?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1  GROUP BY T1.Final_Table_Made  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which player has made the most final tables?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height FROM people AS T1  GROUP BY T1.Height  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the height of the most common height.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Birth_Date FROM people AS T1  GROUP BY T1.Birth_Date  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the birth date of the person who was born the most times?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM people AS T1  GROUP BY T1.People_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the id of the person with the most appearances?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Name FROM people AS T1  GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the name of the person who has been mentioned the most?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT count(*) FROM people AS T1 WHERE T1.Height = 193.0",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many people have the height 193.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT count(*) FROM poker_player AS T1 WHERE T1.Poker_Player_ID = 1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many players are there with id 1?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT count(*) FROM poker_player AS T1 WHERE T1.Poker_Player_ID = 3",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many players are associated with poker player id 3?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM poker_player AS T1    ORDER BY T1.Final_Table_Made DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the player who made the final table most recently?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM people AS T1    ORDER BY T1.Height DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the person with the greatest height?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Earnings FROM poker_player AS T1    ORDER BY T1.Best_Finish DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the earnings of the player with the best finish?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1    ORDER BY T1.Earnings DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the player with the highest earnings?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1    ORDER BY T1.Earnings DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the money rank of the player with the highest earnings?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Best_Finish DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the height of the player with the best finish?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Earnings DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the birth date of the player with the highest earnings?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.People_ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the height of the oldest poker player?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Money_Rank DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the height of the highest ranked poker player?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.People_ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the oldest poker player?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Height ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the player with the greatest height?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.People_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the nationality of the player with the smallest ID?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Earnings FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.People_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the earnings of the player with the smallest People ID?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Earnings ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the height of the poker player with the highest earnings?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Money_Rank ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the player with the highest money rank?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Poker_Player_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the height of the poker player with the smallest Poker Player ID?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID, T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Best_Finish DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id and birth date of the player with the best finish?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Final_Table_Made, T1.Poker_Player_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.People_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the final table made by the player with the id 1?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Name, T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Final_Table_Made DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name and birth date of the player who made the final table most recently?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height, T1.People_ID FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Earnings DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the height and People ID of the poker player with the highest earnings?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Money_Rank, T1.People_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Height DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the money rank and id of the player with the greatest height?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Poker_Player_ID, T1.People_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID    ORDER BY T2.Height DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the player with the tallest people?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Poker_Player_ID) FROM poker_player AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different poker players are there?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.People_ID) FROM poker_player AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different people play poker?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM people AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different people are there?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Earnings) FROM poker_player AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different earnings do the players have?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Best_Finish) FROM poker_player AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct best finishes did the players have?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Money_Rank) FROM poker_player AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct money ranks do the players have?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Final_Table_Made) FROM poker_player AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different players have made final tables?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT avg( T1.Height) FROM people AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average height of people?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT avg( T1.Poker_Player_ID) FROM poker_player AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average poker player id?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT avg( T1.Money_Rank) FROM poker_player AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average money rank of all poker players?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM people AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the people IDs?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Birth_Date FROM people AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the birth dates of the people?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "List the final tables made by each poker player.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What is the money rank of each player?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT T1.Nationality FROM people AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct nationalities of the people?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT T1.People_ID FROM people AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct people ids?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT T1.Birth_Date FROM people AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct birth dates of the people?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT T1.Best_Finish FROM poker_player AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct best finishes of the players?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT T1.Height FROM people AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct heights of people?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT T1.Earnings FROM poker_player AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct earnings of the players?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1     ORDER BY T1.Poker_Player_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the money ranks of all players in ascending order of player ID.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Earnings FROM poker_player AS T1     ORDER BY T1.Poker_Player_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the earnings of poker players in ascending order of poker player ID.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height FROM people AS T1     ORDER BY T1.People_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the heights of people in ascending order of their People IDs?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Name FROM people AS T1     ORDER BY T1.People_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of people in descending order of people ID.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height FROM people AS T1     ORDER BY T1.People_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the heights of people in descending order of their people IDs?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Nationality FROM people AS T1     ORDER BY T1.People_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the nationalities of people in descending order of people ID.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM poker_player AS T1     ORDER BY T1.Best_Finish DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the ids of players in descending order of best finish.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1     ORDER BY T1.Poker_Player_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the money ranks of all players in descending order of player ID.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Earnings FROM poker_player AS T1     ORDER BY T1.Poker_Player_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the earnings of all poker players in descending order of poker player id.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Nationality, T1.Height FROM people AS T1     ORDER BY T1.Height ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the nationalities and heights of the people?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Nationality, T1.People_ID FROM people AS T1     ORDER BY T1.People_ID ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the nationalities and corresponding people IDs of all people?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Birth_Date, T1.Nationality FROM people AS T1     ORDER BY T1.Nationality ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the birth dates and nationalities of people in ascending order of nationality.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Best_Finish, T1.Money_Rank FROM poker_player AS T1     ORDER BY T1.Money_Rank ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the best finish and the money rank of all players.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Money_Rank, T1.People_ID FROM poker_player AS T1     ORDER BY T1.People_ID ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the money rank and people id of all poker players in ascending order of people id.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Birth_Date, T1.Name FROM people AS T1     ORDER BY T1.Name ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the birth dates and names of people in ascending order of name.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Poker_Player_ID, T1.Earnings FROM poker_player AS T1     ORDER BY T1.Earnings ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the id and earnings of all poker players in ascending order of earnings.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Money_Rank = 68.0 or T2.Money_Rank = 68.0",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the nationalities of the poker players with rank 68.0 or 68.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = 182.0 or T2.Height = 196.0",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the ids of the poker players whose height is 182.0 or 196.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Birth_Date = \"April 17, 1987\" or T2.Birth_Date = \"August 8, 1986\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the ids of all poker players who have either the birth date \"April 17, 1987\" or \"August 8, 1986\"?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Best_Finish = 3.0 or T2.Best_Finish = 1.0",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the nationalities of poker players with a best finish of 3.0 or 1.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Final_Table_Made = 10.0 or T2.Final_Table_Made = 19.0",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the birth dates of the poker players who made a final table of 10.0 or 19.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Best_Finish = 3.0 or T2.Best_Finish = 3.0",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the nationalities of poker players with best finish of 3.0 or 3.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM people AS T1 WHERE T1.Nationality = \"Russia\" and T1.Height = 187.0",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ids of all people with nationality Russia and height 187.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM people AS T1 WHERE T1.Nationality = \"Russia\" and T1.Height = 207.0",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ids of all people with nationality Russia and height 207.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height FROM people AS T1 WHERE T1.Name = \"Aleksey Ostapenko\" and T1.People_ID = 5",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the height of the person with the name \"Aleksey Ostapenko\" and the people id 5?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1 WHERE T1.People_ID = 1 and T1.Best_Finish = 2.0",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the money rank of the player with id 1 and best finish 2.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Earnings FROM poker_player AS T1 WHERE T1.Final_Table_Made = 42.0 and T1.People_ID = 7",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the earnings of the player whose final table made is 42 and whose People ID is 7?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Birth_Date) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Name = \"Teodor Salparov\" and T2.Best_Finish = 2.0",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct birth dates does the person with the name Teodor Salparov have and whose best finish is 2.0 have?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Nationality) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height = 205.0 and T2.Earnings = 189233.0",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct nationalities have people with height 205.0 and earnings 189233.0 played with?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Birth_Date = \"August 8, 1986\" and T2.Final_Table_Made = 26.0",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct people have made a final table score of 26.0 on the birth date \"August 8, 1986\"?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Earnings FROM poker_player AS T1 WHERE T1.Poker_Player_ID = 1 or T1.Final_Table_Made = 10.0",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the earnings of the player with id 1 or who made the final table with score 10.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Earnings FROM poker_player AS T1 WHERE T1.Final_Table_Made = 19.0 or T1.Best_Finish = 2.0",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the earnings of the players who made the final table with score 19.0 or finished in the second place?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Birth_Date FROM people AS T1 WHERE T1.Height = 205.0 or T1.Name = \"Semen Poltavskiy\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the birth dates of people whose height is 205.0 or whose name is \"Semen Poltavskiy\".",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height FROM people AS T1 WHERE T1.People_ID = 3 or T1.Name = \"Aleksey Ostapenko\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the heights of the person with id 3 or whose name is \"Aleksey Ostapenko\"?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poker_Player_ID = 1 and T2.Money_Rank = 58.0",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many people are associated with the poker player with id 1 and money rank 58.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Final_Table_Made = 10.0 and T2.Earnings = 189233.0",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many people made the final table of a tournament with score 10.0 and earned 189233.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT count(*) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID = 5 and T2.Height = 182.0",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many players have the person with the id 5 and the height 182.0 played against?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Money_Rank = 68.0 and T2.People_ID = 6",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many people have the rank of poker player with money rank of 68.0 and People ID is 6?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Best_Finish = 2.0 and T2.People_ID = 5",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many people have the best finish of 2.0 and are associated with the id 5?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Money_Rank = 154.0 and T2.Poker_Player_ID = 4",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many people have the rank 154.0 and are associated with the poker player with id 4?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings = 476090.0 and T2.People_ID = 7",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many people have the poker player with earnings 476090 and People ID 7?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID = 1 and T2.Best_Finish = 1.0",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many people have the id 1 and have a best finish of 1.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Name FROM people AS T1 WHERE T1.Nationality != \"Bulgaria\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of all people who have not the nationality Bulgaria?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Best_Finish FROM poker_player AS T1 WHERE T1.People_ID != 1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the best finishes of the players whose id are not 1?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM poker_player AS T1 WHERE T1.Poker_Player_ID != 5",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of players with poker player id that is not 5?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height != 193.0",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of all poker players whose height is not 193.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Birth_Date != \"July 14, 1983\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of all players who have not been born on July 14, 1983?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height != 182.0",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of all poker players whose height is not 182.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poker_Player_ID != 3",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the heights of the poker players whose Poker Player ID is not 3?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name != \"Aleksey Ostapenko\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of the poker players whose name is not \"Aleksey Ostapenko\"?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Final_Table_Made != 21.0",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the heights of the poker players who did not make a final table with a score below 21.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name != \"Maksim Botin\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the final tables the players have made that do not have the name \"Maksim Botin\"?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT T1.People_ID FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings = 142800.0",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct People IDs of the poker players whose earnings are 142800.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT T1.People_ID FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Best_Finish = 2.0",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct People IDs of the poker players with best finish of 2.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT T1.Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID = 3",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct money ranks of the player with people id 3?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT T1.Earnings FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Nationality = \"Russia\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct earnings of all the poker players whose nationality is Russia.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT T1.Earnings FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name = \"Semen Poltavskiy\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct earnings of the player whose name is \"Semen Poltavskiy\".",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Final_Table_Made = 21.0",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct birth dates of the players who made a final table of score 21.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Final_Table_Made) FROM poker_player AS T1 WHERE T1.Best_Finish = 1.0",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct players have made a final table with a best finish of 1.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM people AS T1 WHERE T1.Nationality = \"Bulgaria\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many people have the nationality Bulgaria?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Final_Table_Made) FROM poker_player AS T1 WHERE T1.Earnings = 104871.0",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct players have made a final table with earnings of 104871.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.People_ID) FROM people AS T1 WHERE T1.Nationality = \"Russia\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many people have the nationality Russia?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.People_ID) FROM poker_player AS T1 WHERE T1.Money_Rank = 68.0",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct people have rank 68.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Earnings) FROM poker_player AS T1 WHERE T1.People_ID = 7",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct earnings does the player with People ID 7 have?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Name FROM people AS T1 WHERE T1.People_ID > 2",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of people whose People ID is larger than 2?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM poker_player AS T1 WHERE T1.Poker_Player_ID > 2",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the ids of all players with id bigger than 2?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1 WHERE T1.Best_Finish > 3.0",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What is the money rank of all players with best finish better than 3.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Nationality FROM people AS T1 WHERE T1.Height > 196.0",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the nationalities of all people whose height is greater than 196.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM people AS T1 WHERE T1.Height > 207.0",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the ids of all people whose height is greater than 207?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID     ORDER BY T2.People_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the money rank of all poker players, ordered by their people id.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Earnings FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID     ORDER BY T2.People_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the earnings of the different poker players, ordered by their people id?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Earnings FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID     ORDER BY T2.Height ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the earnings of the poker players, ordered by the height of the people in ascending order?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID     ORDER BY T2.Final_Table_Made ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the nationalities of poker players who have made it to the final table?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID     ORDER BY T2.Money_Rank ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the birth dates of poker players, ordered by their money rank?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID     ORDER BY T2.Height ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the money rank of all poker players, ordered by the height of the people they are associated with.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID     ORDER BY T2.Money_Rank ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the heights of poker players, ordered by their money rank?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID     ORDER BY T2.People_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of all poker players, ordered by their id?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height FROM people AS T1 WHERE T1.Name = \"Maksim Botin\"     INTERSECT SELECT T2.Height FROM people AS T2 WHERE T2.Name = \"Maksim Botin\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the height of the person whose name is both \"Maksim Botin\" and \"Maksim Botin\".",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1 WHERE T1.People_ID = 2     INTERSECT SELECT T2.Poker_Player_ID FROM poker_player AS T2 WHERE T2.People_ID = 6",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the ids of all the poker players who have both people with id 2 and 6?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM poker_player AS T1 WHERE T1.Money_Rank = 154.0     INTERSECT SELECT T2.People_ID FROM poker_player AS T2 WHERE T2.Money_Rank = 154.0",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the ids of the players with money rank 154.0 who have won a tournament?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM people AS T1 WHERE T1.Height = 196.0     INTERSECT SELECT T2.People_ID FROM people AS T2 WHERE T2.Height = 193.0",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the people ids who have both the height of 196.0 and the height of 193.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Nationality FROM people AS T1 WHERE T1.Birth_Date = \"May 26, 1986\"     INTERSECT SELECT T2.Nationality FROM people AS T2 WHERE T2.Birth_Date = \"April 17, 1987\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the nationalities of the people who were born on May 26, 1986, and the people who were born on April 17, 1987?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT avg( T1.Final_Table_Made) FROM poker_player AS T1 WHERE T1.Poker_Player_ID = 1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of final tables made by the player with id 1?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT avg( T1.People_ID) FROM people AS T1 WHERE T1.Nationality = \"Russia\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of people from Russia per conference?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT avg( T1.Earnings) FROM poker_player AS T1 WHERE T1.Poker_Player_ID = 3",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average earnings of the poker player with id 3?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT avg( T1.Poker_Player_ID) FROM poker_player AS T1 WHERE T1.Final_Table_Made = 10.0",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average id of players who made the final table score 10.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poker_Player_ID = (SELECT max( T23.Poker_Player_ID) FROM poker_player AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the ids of the people who have the highest poker player id?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Best_Finish FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID = (SELECT max( T23.People_ID) FROM people AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the best finish of the player with the highest finish among all people?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID = (SELECT max( T23.People_ID) FROM people AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the most experienced poker player?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poker_Player_ID = (SELECT max( T23.Poker_Player_ID) FROM poker_player AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the birth dates of the most experienced poker players?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Best_Finish = (SELECT max( T23.Best_Finish) FROM poker_player AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the heights of the poker players with the best finish?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Best_Finish FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT max( T23.Height) FROM people AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the best finish of the poker player whose height is the maximum among all the people?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT max( T23.Height) FROM people AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the ids of the poker players with the same height as the tallest person?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT max( T23.Height) FROM people AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the final table made by the poker players whose height is the maximum among all the people?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Nationality = \"Russia\" GROUP BY T1.Money_Rank  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the rank of the player with the most money whose nationality is Russia.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Money_Rank = 58.0 GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the name of the poker player with the rank of 58.0 who has played the most games?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = 196.0 GROUP BY T1.Money_Rank  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the rank of the player with the most money whose height is 196.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings = 596462.0 GROUP BY T1.People_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the person who has played the most poker games and has the highest earnings.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Best_Finish FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name = \"Teodor Salparov\" GROUP BY T1.Best_Finish  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the best finish of the player whose name is \"Teodor Salparov\".",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Birth_Date = \"January 22, 1987\" GROUP BY T1.Poker_Player_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the id of the player who was involved in the most events with the birth date of \"January 22, 1987\"?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.People_ID FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings = 189233.0 GROUP BY T1.People_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the person who has played the most poker games with an earnings of 189233.",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Best_Finish FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name = \"Yevgeni Sivozhelez\" GROUP BY T1.Best_Finish  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the best finish of the player whose name is \"Yevgeni Sivozhelez\".",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Earnings FROM poker_player AS T1        EXCEPT SELECT T2.Earnings FROM poker_player AS T2 WHERE T2.Best_Finish = 3.0",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the earnings of all players with a best finish below 3.0?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Final_Table_Made FROM poker_player AS T1        EXCEPT SELECT T2.Final_Table_Made FROM poker_player AS T2 WHERE T2.Money_Rank = 166.0",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the players who have not made any final tables, except the player with rank 166?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1        EXCEPT SELECT T2.Poker_Player_ID FROM poker_player AS T2 WHERE T2.Best_Finish = 1.0",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of all players who have never finished first?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Height FROM people AS T1        EXCEPT SELECT T2.Height FROM people AS T2 WHERE T2.Name = \"Aleksey Ostapenko\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the heights of people except Aleksey Ostapenko?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Birth_Date FROM people AS T1        EXCEPT SELECT T2.Birth_Date FROM people AS T2 WHERE T2.Nationality = \"Russia\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the birth dates of the people who do not have the nationality \"Russia\"?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Earnings FROM poker_player AS T1        EXCEPT SELECT T2.Earnings FROM poker_player AS T2 WHERE T2.Final_Table_Made = 21.0",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the earnings of players who did not make a final table with a score of 21?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.Poker_Player_ID FROM poker_player AS T1        EXCEPT SELECT T2.Poker_Player_ID FROM poker_player AS T2 WHERE T2.Best_Finish = 3.0",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of all players who have never finished in 3rd place?",
    "db_id": "poker_player"
  },
  {
    "query": "SELECT T1.killed FROM death AS T1 WHERE T1.id = 11",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the cause of death of the person with id 11?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.date FROM battle AS T1 WHERE T1.result = \"Latin victory\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the dates of battles with result \"Latin victory\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.killed FROM death AS T1 WHERE T1.note = \"Kanker, Chhattisgarh\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the killed people whose note is \"Kanker, Chhattisgarh\".",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name FROM ship AS T1 WHERE T1.ship_type = \"8 gun Brig\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of ships whose type is \"8 gun Brig\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.result FROM battle AS T1 WHERE T1.name = \"Battle of Serres\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the result of the battle named \"Battle of Serres\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.ship_type FROM ship AS T1 WHERE T1.tonnage = \"t\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the types of ships with tonnage \"t\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.disposition_of_ship FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T2.date = \"June 1205\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the dispositions of ships that were involved in the battle on June 1205?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.result FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.disposition_of_ship = \"Scuttled\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the results of the battles in which the ships with the disposition of \"Scuttled\" were lost?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.disposition_of_ship FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T2.note = \"Sundargarh, Odisha\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the dispositions of the ships that caused the death with the note \"Sundargarh, Odisha\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.caused_by_ship_id FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.disposition_of_ship = \"Sank\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of ships that caused death with the disposition of ship \"Sank\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.lost_in_battle = 7",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of the people who were killed on the ship with id 7 that was lost in battle?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.caused_by_ship_id, count(*) FROM death AS T1  GROUP BY T1.caused_by_ship_id",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the id of ships that have caused the most deaths and the number of deaths caused by each ship.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.location, count(*) FROM ship AS T1  GROUP BY T1.location",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all locations and the number of ships in each location.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.killed, count(*) FROM death AS T1  GROUP BY T1.killed",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show different kinds of death and the number of times they happen.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.tonnage, count(*) FROM ship AS T1  GROUP BY T1.tonnage",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the tonnage of ships and the number of ships in each tonnage.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id, count(*) FROM ship AS T1  GROUP BY T1.id",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all id of ships and the number of ships with that id.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name, count(*) FROM battle AS T1  GROUP BY T1.name",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all names of battles and the number of battles with each name.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.injured, count(*) FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id  GROUP BY T1.injured",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the different kinds of injuries that caused different number of deaths.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.ship_type, count(*) FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id  GROUP BY T1.ship_type",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show all ship types and the number of battles each type has lost.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.lost_in_battle, count(*) FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id  GROUP BY T1.lost_in_battle",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the number of ships lost in battles for each kind of ship.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.latin_commander, count(*) FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle  GROUP BY T1.latin_commander",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each commander, show the number of ships lost in battles.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.date, count(*) FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle  GROUP BY T1.date",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the dates when battles happened and the number of ships lost in those battles.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id, count(*) FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id  GROUP BY T1.id",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each id, what are the number of deaths caused by the ship?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.killed, count(*) FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id  GROUP BY T1.killed",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each kind of death, show the number of ships that caused it.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name, count(*) FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle  GROUP BY T1.name",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the names of battles and the number of ships lost in those battles.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.bulgarian_commander, count(*) FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle  GROUP BY T1.bulgarian_commander",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the different commanders and the number of ships they lost in battles.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id, count(*) FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle  GROUP BY T1.id",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each id, how many ships did the battle lose?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT count(*) FROM ship AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many ships are there?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT count(*) FROM death AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many deaths are there?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.disposition_of_ship, T1.name FROM ship AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all the disposition of ships and their names.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.injured, T1.note FROM death AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all the injured and their notes.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id, T1.tonnage FROM ship AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the id and tonnage of ships?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id, T1.note FROM death AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all id and note of deaths.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.lost_in_battle, T1.ship_type FROM ship AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all lost in battle ships and their types.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.note, T1.killed FROM death AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all notes and people killed for each death.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.caused_by_ship_id, T2.id FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the ids of the ships that caused deaths and what are the causes of deaths?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.killed, T2.location FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the locations of the ships that have caused the deaths?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.note, T2.lost_in_battle FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the notes of the deaths and the ships that were lost in battles?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name, T2.tonnage FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the names of battles and the tonnage of ships lost in those battles?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.caused_by_ship_id, T2.lost_in_battle FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the id and lost in battle of the ships that caused the death?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name, T1.ship_type FROM ship AS T1 WHERE T1.lost_in_battle = 5",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the names and ship types of the ships that lost in battle with the score of 5?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name, T1.disposition_of_ship FROM ship AS T1 WHERE T1.location = \"English Channel\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the names and dispositions of ships located in the English Channel?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id, T1.location FROM ship AS T1 WHERE T1.tonnage = \"225\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the id and location of the ship with tonnage 225.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.ship_type, T1.lost_in_battle FROM ship AS T1 WHERE T1.tonnage = \"t\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the ship type and lost in battle for the ships with tonnage \"t\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.lost_in_battle, T1.id FROM ship AS T1 WHERE T1.name = \"Bon Accord\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the lost in battle id and name of the ship called Bon Accord?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name, T1.ship_type FROM ship AS T1 WHERE T1.location = \"SW Approaches\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the names and ship types of all ships located in SW Approaches?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.note FROM death AS T1  GROUP BY T1.note  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the note that has the most number of deaths.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name FROM battle AS T1  GROUP BY T1.name  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the name of battle that was involved in the most battles?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.tonnage FROM ship AS T1  GROUP BY T1.tonnage  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which ship has the greatest tonnage?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.caused_by_ship_id FROM death AS T1  GROUP BY T1.caused_by_ship_id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which ship caused the most deaths?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT count(*) FROM battle AS T1 WHERE T1.date = \"June 1205\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many battles happened on June 1205?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT count(*) FROM death AS T1 WHERE T1.killed = 14",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many deaths happened when the person was killed by the 14th person?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT count(*) FROM ship AS T1 WHERE T1.name = \"HMS Avon\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many ships have the name \"HMS Avon\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT count(*) FROM death AS T1 WHERE T1.caused_by_ship_id = 2",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many deaths are caused by ship with id 2?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.lost_in_battle FROM ship AS T1    ORDER BY T1.id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the oldest ship that was lost in battle?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name FROM ship AS T1    ORDER BY T1.id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the name of the ship with the largest id?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM death AS T1    ORDER BY T1.caused_by_ship_id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the first death caused by a ship?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.ship_type FROM ship AS T1    ORDER BY T1.id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the type of the ship with the largest id?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.note FROM death AS T1    ORDER BY T1.id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the note of the most recent death?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.caused_by_ship_id FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id    ORDER BY T2.id DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the ship that caused the most deaths?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id    ORDER BY T2.id DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the ship that was involved in the greatest number of battles?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle    ORDER BY T2.lost_in_battle DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the battle in which the ship with the highest number of lost in battles was involved?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.disposition_of_ship FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id    ORDER BY T2.id DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the disposition of the ship that was involved in the greatest number of battles?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id    ORDER BY T2.id DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the ship that caused the most deaths?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id    ORDER BY T2.lost_in_battle ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the first ship that caused the death of someone?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.latin_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle    ORDER BY T2.lost_in_battle ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the latin name of the commander of the ship that was lost in the greatest number of battles?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle    ORDER BY T2.lost_in_battle ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "When was the first battle?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.caused_by_ship_id FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id    ORDER BY T2.id ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the ship that caused the most deaths?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id    ORDER BY T2.lost_in_battle ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the ship that caused the most deaths?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id    ORDER BY T2.id ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the ship that was involved in the battle with the smallest id?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name, T1.latin_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle    ORDER BY T2.id DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the commander of the ship that lost in the greatest number of battles?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.bulgarian_commander, T1.result FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle    ORDER BY T2.id DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the commander who lost the largest number of ships, and what is the result of the battle?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id, T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle    ORDER BY T2.lost_in_battle DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the battle in which the ship with the highest loss in battle was involved?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.date, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle    ORDER BY T2.lost_in_battle DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the date and name of the battle in which the most ships were lost?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.killed, T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id    ORDER BY T2.id DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the killed and injured count of the most recent death caused by a ship?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.location) FROM ship AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct locations are used by ships?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.name) FROM ship AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different ships are there?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.bulgarian_commander) FROM battle AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different bulgarian commanders were involved in the battles?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.latin_commander) FROM battle AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different commanders took part in battles?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.tonnage) FROM ship AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct tonnages of ships are there?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.name) FROM battle AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different battles are there?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT avg( T1.injured) FROM death AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average number of people injured when someone dies?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name FROM battle AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the names of battles?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.location FROM ship AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Show all locations of ships.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name FROM ship AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the names of ships?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.note FROM death AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the notes of all deaths?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT T1.latin_commander FROM battle AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct latin commanders of the battles?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT T1.id FROM battle AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct ids of battles?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT T1.note FROM death AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct notes of deaths?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT T1.killed FROM death AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct people who died?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT T1.date FROM battle AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct dates of battles?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT T1.id FROM ship AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct ids of all ships?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.result FROM battle AS T1     ORDER BY T1.id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the results of battles? Sort the results in ascending order of battle id.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.killed FROM death AS T1     ORDER BY T1.id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the killed persons in ascending order of their ids.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.ship_type FROM ship AS T1     ORDER BY T1.lost_in_battle ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the ship types in ascending order of the number of ships lost in battles.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.tonnage FROM ship AS T1     ORDER BY T1.id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the tonnage of ships in descending order of ship id.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.disposition_of_ship FROM ship AS T1     ORDER BY T1.id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the disposition of ships in descending order of ship id.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM death AS T1     ORDER BY T1.caused_by_ship_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the ids of deaths in descending order of the id of the ship that caused the death.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name FROM ship AS T1     ORDER BY T1.lost_in_battle DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of ships in descending order of the number of times they were lost in battle.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.caused_by_ship_id, T1.injured FROM death AS T1     ORDER BY T1.injured ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the id of ships that caused death and the number of people injured for each ship in ascending order of the number of people injured.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.injured, T1.id FROM death AS T1     ORDER BY T1.id ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the id and the number of injured for each death in ascending order of death id.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id, T1.injured FROM death AS T1     ORDER BY T1.injured ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the id and number of injured for each death.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id WHERE T2.id = 5 and T3.killed = 14",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the dates of the battles in which the ship with id 5 caused the death of 14 people?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.ship_type FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id JOIN battle AS T3 ON T1.lost_in_battle = T3.id WHERE T2.injured = 9 and T3.result = \"Two Year Truce\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the types of ships that caused the death of 9 people and were involved in the result \"Two Year Truce\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id WHERE T2.disposition_of_ship = \"Scuttled\" and T3.injured = 9",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the ids of the battles in which a ship with a disposition of \"Scuttled\" caused the death of an injured person with an injury level of 9?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.killed FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id JOIN battle AS T3 ON T2.lost_in_battle = T3.id WHERE T2.lost_in_battle = 7 and T3.latin_commander = \"John of Brienne\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the names of people who were killed by the ship that lost in battle 7 and whose commander was \"John of Brienne\".",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.result FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id WHERE T2.id = 3 and T3.injured = 0",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the results of the battles in which the ship with id 3 did not cause any injuries?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id WHERE T2.location = \"Mid-Atlantic\" and T3.killed = 3",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the names of battles in which ships located in Mid-Atlantic caused 3 deaths?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.location = \"SW Approaches\" or T2.location = \"SW Approaches\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the number of people died or injured caused by ships in the location \"SW Approaches\" or \"SW Approaches\".",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.latin_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = \"8 gun Brig\" or T2.ship_type = \"8 gun Brig\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the latin commanders of the battles in which a ship of type \"8 gun Brig\" or \"8 gun Brig\" was lost?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = \"Lettice\" or T2.name = \"Lettice\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the dates of the battles in which the ship named \"Lettice\" or \"Lettice\" was lost?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = \"t\" or T2.tonnage = \"225\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the names of ships that caused death or injury with a tonnage of \"t\" or \"225\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.killed FROM death AS T1 WHERE T1.injured = 5 and T1.id = 12",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the killed of the death with injured = 5 and id = 12?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.result FROM battle AS T1 WHERE T1.bulgarian_commander = \"Unknown\" and T1.name = \"Battle of Philippopolis\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the result of the battle where the bulgarian commander is \"Unknown\" and the battle is called \"Battle of Philippopolis\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.tonnage FROM ship AS T1 WHERE T1.name = \"HMS Avon\" and T1.ship_type = \"8 gun Brig\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the tonnage of the ship named \"HMS Avon\" and of type \"8 gun Brig\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.tonnage FROM ship AS T1 WHERE T1.lost_in_battle = 4 and T1.location = \"English Channel\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the tonnage of the ships that were lost in battle at English Channel.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.note FROM death AS T1 WHERE T1.injured = 5 and T1.caused_by_ship_id = 4",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the notes of the deaths that are caused by the ship with id 4 and have an injured of 5?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.lost_in_battle FROM ship AS T1 WHERE T1.ship_type = \"18-gun Brig\" and T1.location = \"English Channel\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the ships that were lost in battles in the English Channel and have the ship type \"18-gun Brig\".",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM death AS T1 WHERE T1.killed = 8 and T1.note = \"Erraboru, Chhattisgarh\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ids of the deaths that were killed by the monster with the note \"Erraboru, Chhattisgarh\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.result) FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T1.date = \"31 January 1206\" and T2.tonnage = \"225\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "Find the number of distinct results of the battle in which the ship with tonnage 225 lost on 31 January 1206.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.disposition_of_ship) FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T1.location = \"SW Approaches\" and T2.id = 7",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct dispositions of ships caused the death with id 7 in the area SW Approaches?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.date) FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T1.latin_commander = \"Unknown\" and T2.tonnage = \"391\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct battles did the commander \"Unknown\" lose a ship with tonnage of 391 in?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.note) FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T1.injured = 5 and T2.lost_in_battle = 5",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct notes are associated with the deaths caused by the ships with lost in battle attribute equal to 5 and the injured attribute equal to 5?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.note) FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T1.caused_by_ship_id = 3 and T2.location = \"SW Approaches\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct notes are associated with deaths caused by ship with id 3 and located in \"SW Approaches\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.tonnage) FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T1.location = \"SW Approaches\" and T2.id = 7",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "What is the distinct number of tonnage of ships that are located in SW Approaches and caused the death with id 7?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.lost_in_battle FROM ship AS T1 WHERE T1.ship_type = \"8 gun Brig\" or T1.disposition_of_ship = \"Wrecked\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the lost in battle ships whose ship type is \"8 gun Brig\" or whose disposition of ship is \"Wrecked\".",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.ship_type FROM ship AS T1 WHERE T1.disposition_of_ship = \"Scuttled\" or T1.name = \"HMS Avon\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the types of ships that have been disposed of or named \"HMS Avon\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM battle AS T1 WHERE T1.date = \"4 September 1207\" or T1.result = \"Bulgarian victory\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ids of battles that happened on 4 September 1207 or had the result \"Bulgarian victory\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.bulgarian_commander FROM battle AS T1 WHERE T1.id = 1 or T1.latin_commander = \"Boniface of Montferrat\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the bulgarian commander of the battle with id 1 or whose latin commander is \"Boniface of Montferrat\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM death AS T1 WHERE T1.caused_by_ship_id = 6 or T1.killed = 29",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ids of deaths caused by ship with id 6 or people killed by ship with id 6?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.result FROM battle AS T1 WHERE T1.name = \"Battle of Messinopolis\" or T1.id = 2",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the result of the battle called \"Battle of Messinopolis\" or with id 2?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT count(*) FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T2.result = \"Bulgarian victory\" and T2.date = \"31 June 1208\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many battles did the ship lost in on 31 June 1208 have the result \"Bulgarian victory\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT count(*) FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T2.name = \"Battle of Philippopolis\" and T2.result = \"Two Year Truce\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many ships were involved in the battle called \"Battle of Philippopolis\" and resulted in \"Two Year Truce\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT count(*) FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = \"HMS Avon\" and T2.tonnage = \"t\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many battles did the ship with the name \"HMS Avon\" and tonnage \"t\" lost?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT count(*) FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.id = 1 and T2.ship_type = \"Brig\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many battles did the ship with id 1 belong to lose in which the ship type was \"Brig\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT count(*) FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.disposition_of_ship = \"Scuttled\" and T2.lost_in_battle = 8",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many deaths were caused by ships that were disposed of and lost in battle?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name FROM ship AS T1 WHERE T1.location != \"Mid-Atlantic\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of ships that are not in the Mid-Atlantic?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM ship AS T1 WHERE T1.lost_in_battle != 7",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of ships that did not lose in battle 7?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name FROM battle AS T1 WHERE T1.result != \"Latin victory\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of battles that have a result different from \"Latin victory\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name FROM battle AS T1 WHERE T1.id != 1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of battles that have an id different from 1?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM battle AS T1 WHERE T1.bulgarian_commander != \"Ivan Asen II\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of battles that have no \"Ivan Asen II\" as the bulgarian commander?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.bulgarian_commander FROM battle AS T1 WHERE T1.name != \"Battle of Adrianople\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of all battles that are not \"Battle of Adrianople\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.result FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type != \"18-gun Brig\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the results of the battles in which a ship with a type other than \"18-gun Brig\" was lost?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage != \"391\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of deaths caused by ships with a tonnage smaller than \"391\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.caused_by_ship_id FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.id != 4",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of ships that did not cause any deaths?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.id != 4",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of battles in which the ship with id 4 was not involved?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.lost_in_battle FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T2.id != 12",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of ships that did not cause the death of Horatio?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.latin_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.lost_in_battle != 4",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the latin commanders of the battles in which the ships lost the battle with the lost in battle number not equal to 4?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.note FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.ship_type != \"Brig\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the notes of deaths caused by ships that are not of type \"Brig\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = \"391\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct causes of death on ships with tonnage \"391\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = \"8 gun Brig\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct names of battles in which a ship of type \"8 gun Brig\" lost?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.id = 6",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct names of battles that ship with id 6 was lost in?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT T1.lost_in_battle FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T2.note = \"Kanker, Chhattisgarh\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct ships that caused the death with the note \"Kanker, Chhattisgarh\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.date) FROM battle AS T1 WHERE T1.result = \"Two Year Truce\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct battles resulted in \"Two Year Truce\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.name) FROM battle AS T1 WHERE T1.result = \"Bulgarian victory\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct battles have result \"Bulgarian victory\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.caused_by_ship_id) FROM death AS T1 WHERE T1.id = 2",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct causes of death are associated with the ship with id 2?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.name) FROM battle AS T1 WHERE T1.bulgarian_commander = \"Ivan Asen II\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the distinct number of battles that have the Bulgarian commander \"Ivan Asen II\".",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.killed) FROM death AS T1 WHERE T1.note = \"Bastar, Chattisgarh\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct people were killed in the note \"Bastar, Chattisgarh\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.lost_in_battle) FROM ship AS T1 WHERE T1.tonnage = \"391\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct ships have a tonnage of 391?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM ship AS T1 WHERE T1.lost_in_battle > 7",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the ids of ships that were lost in battle more than 7 times?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.tonnage FROM ship AS T1 WHERE T1.id > 2",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the tonnages of ships with ids bigger than 2?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.location FROM ship AS T1 WHERE T1.id > 4",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the locations of ships with ids greater than 4?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name, T2.ship_type, T3.caused_by_ship_id FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the names of battles, ship types, and the ids of ships that caused the deaths?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.tonnage, T2.result, T3.killed FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id JOIN death AS T3 ON T1.id = T3.caused_by_ship_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Show all ships' tonnage, battle result, and the number of people killed by each ship.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id     ORDER BY T2.lost_in_battle ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the injured for each ship in ascending order of the number of times the ship was lost in battle.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.location FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id     ORDER BY T2.injured ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Show the locations of ships which caused the most injuries.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle     ORDER BY T2.id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "When were the ships lost in battle?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM battle AS T1 WHERE T1.latin_commander = \"Unknown\"     INTERSECT SELECT T2.id FROM battle AS T2 WHERE T2.latin_commander = \"Henry I\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the id of battles that have an unknown commander and the id of battles that have a commander named Henry I.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.tonnage FROM ship AS T1 WHERE T1.ship_type = \"8 gun Brig\"     INTERSECT SELECT T2.tonnage FROM ship AS T2 WHERE T2.ship_type = \"8 gun Brig\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the tonnage of ships that have both type \"8 gun Brig\" and \"8 gun Brig\".",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM death AS T1 WHERE T1.injured = 5     INTERSECT SELECT T2.id FROM death AS T2 WHERE T2.injured = 9",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the ids of deaths that have both an injured of 5 and an injured of 9?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM death AS T1 WHERE T1.caused_by_ship_id = 2     INTERSECT SELECT T2.id FROM death AS T2 WHERE T2.caused_by_ship_id = 6",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the ids of deaths that were caused by both ship 2 and ship 6?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.lost_in_battle FROM ship AS T1 WHERE T1.tonnage = \"t\"     INTERSECT SELECT T2.lost_in_battle FROM ship AS T2 WHERE T2.tonnage = \"t\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the ships that were lost in battles with both low and high tonnage.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.bulgarian_commander FROM battle AS T1 WHERE T1.id = 3     INTERSECT SELECT T2.bulgarian_commander FROM battle AS T2 WHERE T2.id = 4",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the commanders of the battles with id 3 and 4?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.tonnage FROM ship AS T1 WHERE T1.name = \"HMS Avon\"     INTERSECT SELECT T2.tonnage FROM ship AS T2 WHERE T2.name = \"Lettice\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the tonnage of ships that have both HMS Avon and Lettice.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT avg( T1.lost_in_battle) FROM ship AS T1 WHERE T1.id = 7",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of battles that the ship with id 7 has lost?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT avg( T1.id) FROM death AS T1 WHERE T1.killed = 3",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average id of people who were killed by the third one?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT avg( T1.id) FROM battle AS T1 WHERE T1.result = \"Bulgarian victory\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average id of battles that have the result \"Bulgarian victory\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT avg( T1.injured) FROM death AS T1 WHERE T1.note = \"Gajapati, Odisha\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of people injured when someone dies in the note \"Gajapati, Odisha\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.killed FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.lost_in_battle = (SELECT max( T23.lost_in_battle) FROM ship AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the names of the ships that have caused the most deaths in battles.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T2.injured = (SELECT max( T23.injured) FROM death AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the ids of the ships that caused the most injuries?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.killed FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.id = (SELECT max( T23.id) FROM ship AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of the ships that have caused the most deaths?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.name FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T2.caused_by_ship_id = (SELECT max( T23.caused_by_ship_id) FROM death AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the names of ships that caused the most deaths.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.caused_by_ship_id FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.lost_in_battle = (SELECT max( T23.lost_in_battle) FROM ship AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the ids of the ships that have caused the most deaths in battles?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.latin_commander, T2.tonnage FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id WHERE T3.id = 8 and T2.disposition_of_ship = \"Scuttled\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the latin commanders and ship tonnage of the battles in which the ship with id 8 was caused to be Scuttled?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id, T2.ship_type FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id JOIN battle AS T3 ON T2.lost_in_battle = T3.id WHERE T3.result = \"Latin victory\" and T2.tonnage = \"t\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the ids, and ship types of the ships that caused the deaths of people in battles with result \"Latin victory\" and ship tonnage \"t\".",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.lost_in_battle, T2.killed FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id JOIN battle AS T3 ON T1.lost_in_battle = T3.id WHERE T3.name = \"Battle of Adrianople\" and T2.injured = 5",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What ships were involved in the battle of Adrianople and what crew members were injured?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.result, T2.id FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id WHERE T3.note = \"Kanker, Chhattisgarh\" and T2.tonnage = \"225\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the results and ids of the battles in which a ship with a tonnage of 225 caused the death of someone with the note \"Kanker, Chhattisgarh\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.caused_by_ship_id, T2.name FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id JOIN battle AS T3 ON T2.lost_in_battle = T3.id WHERE T3.bulgarian_commander = \"Boril\" and T2.tonnage = \"t\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the id, and name of the ships which caused the death of people with the bulgarian commander Boril and the tonnage of t.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.note, T2.location FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id JOIN battle AS T3 ON T2.lost_in_battle = T3.id WHERE T3.latin_commander = \"Unknown\" and T2.ship_type = \"18-gun Brig\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the note and location of the ships that caused the death of an officer whose Latin commander is \"Unknown\" and whose ship type is \"18-gun Brig\".",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.injured, T2.lost_in_battle FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id JOIN battle AS T3 ON T2.lost_in_battle = T3.id WHERE T3.id = 3 and T2.ship_type = \"8 gun Brig\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the names of the sailors, the cause of death, and the ships that were involved in the battle with id 3 and the ship type \"8 gun Brig\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.latin_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.lost_in_battle = 7 GROUP BY T1.latin_commander  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Which commander lost the most ships in the battle where the lost in battle number is 7?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T2.note = \"Kanker, Chhattisgarh\" GROUP BY T1.id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the ship which caused the most deaths with the note \"Kanker, Chhattisgarh\".",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.killed FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.location = \"English Channel\" GROUP BY T1.killed  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Which ship caused the most deaths in the English Channel?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.caused_by_ship_id FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.ship_type = \"8 gun Brig\" GROUP BY T1.caused_by_ship_id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the ship that caused the most deaths.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T2.date = \"1235\" GROUP BY T1.id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the ship that was involved in the battle which happened in 1235 and has the largest number of crew members.",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.location FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T2.id = 2 GROUP BY T1.location  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Which location has been involved in the most battles?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.result FROM battle AS T1        EXCEPT SELECT T2.result FROM battle AS T2 WHERE T2.id = 3",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the results of battles that do not have the id 3?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM death AS T1        EXCEPT SELECT T2.id FROM death AS T2 WHERE T2.killed = 4",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of deaths that were not killed by the fourth one?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.date FROM battle AS T1        EXCEPT SELECT T2.date FROM battle AS T2 WHERE T2.name = \"Battle of Philippopolis\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the dates of battles that are not the Battle of Philippopolis?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.id FROM death AS T1        EXCEPT SELECT T2.id FROM death AS T2 WHERE T2.note = \"Gajapati, Odisha\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of deaths that do not have the note \"Gajapati, Odisha\"?",
    "db_id": "battle_death"
  },
  {
    "query": "SELECT T1.Birth_Year FROM singer AS T1 WHERE T1.Net_Worth_Millions = 17.8",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the birth years of singers with net worth millions equal to 17.8?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1 WHERE T1.Birth_Year = 1961.0",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the net worth of the singer who was born in 1961?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Sales FROM song AS T1 WHERE T1.Song_ID = 4",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the sales of the song with id 4?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Name FROM singer AS T1 WHERE T1.Singer_ID = 4",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the name of the singer with id 4?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Sales FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Birth_Year = 1953.0",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the sales of the songs sung by the singers born in 1953?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Birth_Year = 1949.0",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of songs sung by singers who were born in year 1949?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Title FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Birth_Year = 1942.0",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the titles of songs sung by singers born in year 1942?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Birth_Year = 1962.0",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the song ids sung by the singer who was born in 1962?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Sales FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Citizenship = \"Germany\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the sales of the songs sung by singers with citizenship \"Germany\".",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID, count(*) FROM song AS T1  GROUP BY T1.Song_ID",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all song ids and the number of songs with that id.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Net_Worth_Millions, count(*) FROM singer AS T1  GROUP BY T1.Net_Worth_Millions",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the net worth millions and the number of singers for each net worth millions.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Sales, count(*) FROM song AS T1  GROUP BY T1.Sales",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the sales of songs and the number of songs with each sales.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Highest_Position, count(*) FROM song AS T1  GROUP BY T1.Highest_Position",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the highest position of songs and the number of songs in that position.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Title, count(*) FROM song AS T1  GROUP BY T1.Title",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the titles of songs and the number of songs with each title.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Birth_Year, count(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Birth_Year",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the birth years and the number of songs sung by singers.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Citizenship, count(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Citizenship",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the different citizenship of singers and the number of songs they have sung.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID, count(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Singer_ID",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many songs does each singer have? Return both the id of the singer and the number of songs.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Name, count(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the names of singers and the number of songs sung by each singer.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Title, count(*) FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Title",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the titles of songs and the number of singers for each song.",
    "db_id": "singer"
  },
  {
    "query": "SELECT count(*) FROM song AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many songs are there?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID, T1.Citizenship FROM singer AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the id and citizenship of each singer?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Net_Worth_Millions, T1.Name FROM singer AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the net worth millions of singers?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID, T1.Title FROM song AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the song ids and titles?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Title, T1.Sales FROM song AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the titles and sales of all songs?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Name, T1.Birth_Year FROM singer AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the names and birth years of singers?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID, T2.Highest_Position FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the id and highest position of songs sung by each singer?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Highest_Position, T2.Singer_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the highest position and id of singer for each song?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Birth_Year, T2.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the birth years and id of singers who have sung songs?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID, T2.Net_Worth_Millions FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the id and net worth millions of singers who have sung songs?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID, T2.Sales FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the id and sales of songs sung by each singer?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID, T2.Net_Worth_Millions FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the id and net worth millions of songs sung by each singer?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Birth_Year, T2.Song_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the birth years and song IDs of singers?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Citizenship, T2.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the citizenship and id of singer who sings each song?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID, T1.Net_Worth_Millions FROM singer AS T1 WHERE T1.Name = \"Gina Rinehart\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the id and net worth of the singer Gina Rinehart?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Citizenship, T1.Singer_ID FROM singer AS T1 WHERE T1.Birth_Year = 1953.0",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the citizenship and id of the singer who was born in 1953?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Sales, T1.Song_ID FROM song AS T1 WHERE T1.Singer_ID = 7",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the sales and song id of the songs sung by singer with id 7.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Net_Worth_Millions, T1.Name FROM singer AS T1 WHERE T1.Singer_ID = 6",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the net worth of the singer with the id 6?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID FROM song AS T1  GROUP BY T1.Song_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the id of song which has the most number of songs played.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Citizenship FROM singer AS T1  GROUP BY T1.Citizenship  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the citizenship of the singer who has the most appearances?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Name FROM singer AS T1  GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the name of the singer who has the most appearances?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1  GROUP BY T1.Net_Worth_Millions  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the net worth of the singer with the most number of singers.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Title FROM song AS T1  GROUP BY T1.Title  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the title of song that has the most number of songs.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM song AS T1  GROUP BY T1.Singer_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the id of singer who has the most songs.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Sales FROM song AS T1  GROUP BY T1.Sales  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the song that has the highest number of sales.",
    "db_id": "singer"
  },
  {
    "query": "SELECT count(*) FROM singer AS T1 WHERE T1.Birth_Year = 1944.0",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many singers were born in year 1944?",
    "db_id": "singer"
  },
  {
    "query": "SELECT count(*) FROM song AS T1 WHERE T1.Sales = 300000.0",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many songs have sales 300000.0?",
    "db_id": "singer"
  },
  {
    "query": "SELECT count(*) FROM song AS T1 WHERE T1.Singer_ID = 5",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many songs have singer id 5?",
    "db_id": "singer"
  },
  {
    "query": "SELECT count(*) FROM singer AS T1 WHERE T1.Birth_Year = 1940.0",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many singers were born in year 1940?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Birth_Year FROM singer AS T1    ORDER BY T1.Singer_ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the birth year of the singer with the largest ID?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Sales FROM song AS T1    ORDER BY T1.Singer_ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the sales of the song with the id of 1?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Sales FROM song AS T1    ORDER BY T1.Song_ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the sales of the song with the largest song id?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Title FROM song AS T1    ORDER BY T1.Song_ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the title of the song with the largest song id?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Highest_Position FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Singer_ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the highest position of the song sung by the singer with the highest singer ID?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Birth_Year FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Highest_Position DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the birth year of the singer of the song with the highest position?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Highest_Position FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Birth_Year DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the highest position of the song sung by the singer who was born in the oldest year?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Title FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Birth_Year DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the title of the oldest song?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Sales FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Net_Worth_Millions DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the sales of the song sung by the singer with the highest net worth?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Net_Worth_Millions DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the id of the singer with the highest net worth.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Sales DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the singer who sang the song that had the highest sales?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Highest_Position ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the singer of the song that was in the highest position?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Net_Worth_Millions ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the id of the singer with the highest net worth.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Birth_Year FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Highest_Position ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the birth year of the singer of the song with the highest position?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Sales ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the singer who sang the song with the highest sales?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Citizenship FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Highest_Position ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the citizenship of the singer of the song with the highest position?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Sales ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the singer who made the highest sales?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Sales, T1.Title FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Singer_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the sales and title of the song sung by the singer with the highest singer id?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Citizenship, T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Singer_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the citizenship and name of the singer of the song with the highest singer ID?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID, T1.Highest_Position FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Birth_Year DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the id and highest position of the singer who was born in the oldest year.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Sales, T1.Song_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Singer_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the sales of the song with the highest sales.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Name, T1.Citizenship FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Highest_Position DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name and citizenship of the singer of the song that was in the highest position?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Title) FROM song AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different songs exist?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Highest_Position) FROM song AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct highest positions are there in songs?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Singer_ID) FROM singer AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different singers are there?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Song_ID) FROM song AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many songs exist in total?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM singer AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different singers are there?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Net_Worth_Millions) FROM singer AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct net worths are there in singers?",
    "db_id": "singer"
  },
  {
    "query": "SELECT avg( T1.Singer_ID) FROM singer AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average id of singers?",
    "db_id": "singer"
  },
  {
    "query": "SELECT avg( T1.Song_ID) FROM song AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average song id?",
    "db_id": "singer"
  },
  {
    "query": "SELECT avg( T1.Birth_Year) FROM singer AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average birth year of singers?",
    "db_id": "singer"
  },
  {
    "query": "SELECT avg( T1.Singer_ID) FROM song AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average Singer ID of songs?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Highest_Position FROM song AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What is the highest position of each song?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the net worth millions of singers?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID FROM song AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the song ids?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Title FROM song AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the titles of songs?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the IDs of all singers?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM song AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the IDs of singers of songs?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Birth_Year FROM singer AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the birth years of singers?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT T1.Sales FROM song AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct sales of songs?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT T1.Citizenship FROM singer AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct citizenship of singers?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT T1.Singer_ID FROM singer AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct singer ids?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT T1.Song_ID FROM song AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct song ids?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT T1.Highest_Position FROM song AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct highest positions of songs?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Sales FROM song AS T1     ORDER BY T1.Song_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the sales of songs in ascending order of song id.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Highest_Position FROM song AS T1     ORDER BY T1.Sales ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the highest position of songs in ascending order of sales.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1     ORDER BY T1.Birth_Year ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the net worth millions of singers in ascending order of their birth years.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Title FROM song AS T1     ORDER BY T1.Song_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the titles of songs in ascending order of song id.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM song AS T1     ORDER BY T1.Highest_Position ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the singer id for songs in ascending order of highest position.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM song AS T1     ORDER BY T1.Song_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the singer id for songs in ascending order of song id.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1     ORDER BY T1.Birth_Year ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the singer ID for singers sorted by their birth year.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID FROM song AS T1     ORDER BY T1.Highest_Position ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the song ids in ascending order of highest position.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Birth_Year FROM singer AS T1     ORDER BY T1.Net_Worth_Millions DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the birth years of singers in descending order of net worth in millions.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Sales FROM song AS T1     ORDER BY T1.Song_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the sales of songs in descending order of song id.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Name FROM singer AS T1     ORDER BY T1.Net_Worth_Millions DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the names of singers in descending order of net worth millions?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1     ORDER BY T1.Singer_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the net worth millions of singers in descending order of singer id.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Name FROM singer AS T1     ORDER BY T1.Birth_Year DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of singers in descending order of birth year.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID, T1.Song_ID FROM song AS T1     ORDER BY T1.Song_ID ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the singer id and song id of songs in ascending order of song id.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Name, T1.Net_Worth_Millions FROM singer AS T1     ORDER BY T1.Net_Worth_Millions ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the name and net worth millions of singers in ascending order of net worth millions.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID, T1.Citizenship FROM singer AS T1     ORDER BY T1.Citizenship ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the singer ID and citizenship for all singers in ascending order of citizenship.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Name, T1.Birth_Year FROM singer AS T1     ORDER BY T1.Birth_Year ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the names and birth years of singers in ascending order of birth year.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID, T1.Title FROM song AS T1     ORDER BY T1.Title ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the singer id and title of songs in ascending order of song title.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Highest_Position, T1.Title FROM song AS T1     ORDER BY T1.Title ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the highest position and title of songs.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Birth_Year, T1.Singer_ID FROM singer AS T1     ORDER BY T1.Singer_ID ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the birth years and ids of singers in ascending order of id.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Title, T1.Sales FROM song AS T1     ORDER BY T1.Sales ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the titles and sales of songs in ascending order of sales.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Name = \"Liliane Bettencourt\" or T2.Name = \"Iris Fontbona\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the song ids for the singers Liliane Bettencourt or Iris Fontbona.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Highest_Position = 1.0 or T2.Highest_Position = 1.0",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the net worths of singers who have produced songs with the highest position equal to 1.0 or 1.0?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Name = \"Alice Walton\" or T2.Name = \"Jacqueline Mars\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the id of songs sung by Alice Walton or Jacqueline Mars?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Title FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Citizenship = \"United States\" or T2.Citizenship = \"France\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the titles of songs sung by singers with citizenship \"United States\" or \"France\"?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Highest_Position FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Citizenship = \"United States\" or T2.Citizenship = \"Chile\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the highest positions of songs whose singers have citizenship \"United States\" or \"Chile\"?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Citizenship FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID = 5 or T2.Song_ID = 6",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the citizenships of the singers who performed the songs with id 5 or 6?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1 WHERE T1.Citizenship = \"Australia\" and T1.Net_Worth_Millions = 28.8",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the IDs of all singers who have citizenship \"Australia\" and net worth millions 28.8?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID FROM song AS T1 WHERE T1.Highest_Position = 3.0 and T1.Title = \"Yeah\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the song id for the song with the highest position equal to 3.0 and title equal to \"Yeah\".",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Name FROM singer AS T1 WHERE T1.Net_Worth_Millions = 30.0 and T1.Citizenship = \"Chile\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the names of singers whose net worth is 30.0 and whose citizenship is \"Chile\"?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1 WHERE T1.Net_Worth_Millions = 28.8 and T1.Name = \"Christy Walton\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the id of the singer with net worth 28.8 and whose name is Christy Walton?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Citizenship FROM singer AS T1 WHERE T1.Birth_Year = 1961.0 and T1.Net_Worth_Millions = 17.8",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the citizenship of the singer who was born in 1961 and has a net worth of 17.8 millions?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Title FROM song AS T1 WHERE T1.Sales = 292000.0 and T1.Song_ID = 2",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the titles of songs that have sales 292000 and song id 2?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Singer_ID) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Birth_Year = 1940.0 and T2.Title = \"Call on Me\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many different singers were associated with the song with title \"Call on Me\" and whose birth year is 1940.",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Net_Worth_Millions) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Singer_ID = 7 and T2.Sales = 335000.0",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct songs has the singer with id 7 made with sales of 335000?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Singer_ID) FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Highest_Position = 1.0 and T2.Net_Worth_Millions = 12.7",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct singers have produced songs with highest position equal to 1.0 and whose net worth is 12.7 millions?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Singer_ID) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Name = \"Susanne Klatten\" and T2.Song_ID = 3",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct songs does the singer with the name \"Susanne Klatten\" singed?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Song_ID) FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Singer_ID = 4 and T2.Name = \"Iris Fontbona\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many songs does the singer with id 4 have? And what are the songs' names?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Birth_Year FROM singer AS T1 WHERE T1.Name = \"Gina Rinehart\" or T1.Net_Worth_Millions = 30.0",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the birth years of the singer with name \"Gina Rinehart\" or whose net worth millions is 30.0?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Citizenship FROM singer AS T1 WHERE T1.Net_Worth_Millions = 14.3 or T1.Name = \"Iris Fontbona\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the citizenships of singers with net worth millions equal to 14.3 or whose name is \"Iris Fontbona\"?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID FROM song AS T1 WHERE T1.Highest_Position = 1.0 or T1.Singer_ID = 2",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ids of songs with highest position 1.0 or whose singer id is 2?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Highest_Position FROM song AS T1 WHERE T1.Song_ID = 6 or T1.Title = \"Left Outside Alone\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the highest positions of the songs with id 6 or title \"Left Outside Alone\"?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Sales FROM song AS T1 WHERE T1.Title = \"Cha Cha Slide\" or T1.Song_ID = 2",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the sales of the song with the title \"Cha Cha Slide\" or with song id 2?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1 WHERE T1.Citizenship = \"Chile\" or T1.Net_Worth_Millions = 28.8",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the IDs of all singers who have citizenship \"Chile\" or whose net worth millions are 28.8?",
    "db_id": "singer"
  },
  {
    "query": "SELECT count(*) FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Name = \"Susanne Klatten\" and T2.Singer_ID = 4",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many songs does the singer with name \"Susanne Klatten\" have?",
    "db_id": "singer"
  },
  {
    "query": "SELECT count(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales = 300000.0 and T2.Singer_ID = 4",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many songs has the singer with ID 4 sold when the sales are 300000.0?",
    "db_id": "singer"
  },
  {
    "query": "SELECT count(*) FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Name = \"Christy Walton\" and T2.Citizenship = \"France\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many songs does the singer with the name Christy Walton and citizenship France have?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Citizenship FROM singer AS T1 WHERE T1.Birth_Year != 1953.0",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the citizenships of singers who were not born in 1953?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Highest_Position FROM song AS T1 WHERE T1.Song_ID != 7",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the highest positions of songs that do not have song id 7?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Birth_Year FROM singer AS T1 WHERE T1.Net_Worth_Millions != 28.8",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the birth years of singers whose net worth is not 28.8 millions?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Highest_Position FROM song AS T1 WHERE T1.Singer_ID != 4",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the highest positions of songs whose singer id is not 4?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Sales FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID != 4",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the sales of the songs whose singers id is not 4?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Title FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Birth_Year != 1942.0",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the titles of songs sung by singers who were not born in 1942?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Title FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID != 6",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the titles of songs whose singer ID is not 6?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Citizenship FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID != 2",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the citizenships of the singers who did not sing song id 2?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID != 1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of singers who did not sing song with id 1?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID != 3",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the net worth millions of singers who do not sing song id 3?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT T1.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Highest_Position = 3.0",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct singer ids who sang songs with highest position equal to 3.0?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID = 8",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of singers who sang song with id 8?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT T1.Song_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Net_Worth_Millions = 17.8",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct song ids that are sung by singers with net worth of 17.8 millions?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT T1.Net_Worth_Millions FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales = 275000.0",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct net worths of singers who sang songs that have sales of 275000?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Birth_Year) FROM singer AS T1 WHERE T1.Singer_ID = 3",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many different singers were born in the year 3?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Song_ID) FROM song AS T1 WHERE T1.Singer_ID = 2",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many songs has singer id 2?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Title) FROM song AS T1 WHERE T1.Highest_Position = 3.0",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many songs have the highest position equal to 3.0 are there?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Highest_Position) FROM song AS T1 WHERE T1.Song_ID = 8",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct positions does the song with id 8 have?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Song_ID) FROM song AS T1 WHERE T1.Singer_ID = 6",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many songs has singer id 6?",
    "db_id": "singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Net_Worth_Millions) FROM singer AS T1 WHERE T1.Birth_Year = 1948.0",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct net worths did the singer who were born in year 1948 have?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Sales FROM song AS T1 WHERE T1.Singer_ID > 4",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "Find the sales of songs whose singer id is larger than 4.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM song AS T1 WHERE T1.Highest_Position > 3.0",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the id of singers of songs with highest position above 3.0?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Highest_Position FROM song AS T1 WHERE T1.Singer_ID > 6",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the highest positions of songs whose singers have IDs larger than 6?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Citizenship FROM singer AS T1 WHERE T1.Birth_Year > 1948.0",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the citizenships of singers who were born after 1948?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Citizenship FROM singer AS T1 WHERE T1.Net_Worth_Millions > 17.8",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the citizenships of singers with net worth millions greater than 17.8?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1 WHERE T1.Singer_ID > 6",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the net worth millions of singers with an ID greater than 6?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.Singer_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the id of songs sung by the singers in ascending order of their id?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.Highest_Position ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of singers who have songs with highest positions?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.Sales ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the net worth millions of singers who sing songs in ascending order of sales?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Sales FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.Net_Worth_Millions ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the sales of songs by their singers in ascending order of their net worth in millions.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.Net_Worth_Millions ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the song ids, together with their singers' net worth in millions, ordered by their singers' net worth in millions ascending.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Birth_Year FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.Highest_Position ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the birth years of singers who have songs with highest position?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Title FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.Net_Worth_Millions ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the titles of songs, ordered by the singers' net worth in millions?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Birth_Year FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.Song_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the birth years of singers who have sung songs in ascending order of song id?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID FROM song AS T1 WHERE T1.Highest_Position = 3.0     INTERSECT SELECT T2.Song_ID FROM song AS T2 WHERE T2.Highest_Position = 1.0",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the song ids that have both the highest position 1.0 and 3.0.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM song AS T1 WHERE T1.Song_ID = 3     INTERSECT SELECT T2.Singer_ID FROM song AS T2 WHERE T2.Song_ID = 7",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the id of singers who have songs with both song id 3 and 7?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Citizenship FROM singer AS T1 WHERE T1.Name = \"Susanne Klatten\"     INTERSECT SELECT T2.Citizenship FROM singer AS T2 WHERE T2.Name = \"Iris Fontbona\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the citizenship of the singers whose name is \"Susanne Klatten\" and \"Iris Fontbona\"?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Citizenship FROM singer AS T1 WHERE T1.Birth_Year = 1953.0     INTERSECT SELECT T2.Citizenship FROM singer AS T2 WHERE T2.Birth_Year = 1942.0",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the citizenship of singers who were born in 1953 and singers who were born in 1942?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM song AS T1 WHERE T1.Highest_Position = 1.0     INTERSECT SELECT T2.Singer_ID FROM song AS T2 WHERE T2.Highest_Position = 1.0",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the singer id for songs that have the highest position and have been in top 1.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID FROM song AS T1 WHERE T1.Singer_ID = 7     INTERSECT SELECT T2.Song_ID FROM song AS T2 WHERE T2.Singer_ID = 5",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the song ids that have both singer 5 and 7.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM song AS T1 WHERE T1.Title = \"All This Time\"     INTERSECT SELECT T2.Singer_ID FROM song AS T2 WHERE T2.Title = \"Cha Cha Slide\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the singer ids that have sung both \"All This Time\" and \"Cha Cha Slide\".",
    "db_id": "singer"
  },
  {
    "query": "SELECT avg( T1.Birth_Year) FROM singer AS T1 WHERE T1.Citizenship = \"Australia\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average birth year of singers whose citizenship is \"Australia\"?",
    "db_id": "singer"
  },
  {
    "query": "SELECT avg( T1.Highest_Position) FROM song AS T1 WHERE T1.Sales = 351421.0",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average highest position of songs that have sales 351421.0?",
    "db_id": "singer"
  },
  {
    "query": "SELECT avg( T1.Singer_ID) FROM singer AS T1 WHERE T1.Net_Worth_Millions = 17.8",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average id of singers whose net worth is 17.8 millions?",
    "db_id": "singer"
  },
  {
    "query": "SELECT avg( T1.Singer_ID) FROM singer AS T1 WHERE T1.Citizenship = \"Australia\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average id of singers who have citizenship \"Australia\"?",
    "db_id": "singer"
  },
  {
    "query": "SELECT avg( T1.Birth_Year) FROM singer AS T1 WHERE T1.Singer_ID = 8",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average birth year of the singer with id 8?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Highest_Position = (SELECT max( T23.Highest_Position) FROM song AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of singers who have the highest position in any song?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Title FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Birth_Year = (SELECT max( T23.Birth_Year) FROM singer AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the titles of songs sung by the singers who were born in the maximum year.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Net_Worth_Millions FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales = (SELECT max( T23.Sales) FROM song AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the net worths of the singers who sang the songs with the highest sales?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Highest_Position = (SELECT max( T23.Highest_Position) FROM song AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the id of the singer who sang the song with the highest position.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Net_Worth_Millions = 17.4 GROUP BY T1.Song_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the song sung by the singer with net worth of 17.4 millions.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Name = \"Gina Rinehart\" GROUP BY T1.Song_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the song sung by the singer with the name Gina Rinehart.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Highest_Position = 1.0 GROUP BY T1.Singer_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Which singer has the most songs with highest position 1.0?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Highest_Position FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Name = \"Christy Walton\" GROUP BY T1.Highest_Position  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the highest position of the song sung by the singer named Christy Walton.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Birth_Year = 1953.0 GROUP BY T1.Song_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the song sung by the singer who was born in 1953.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Net_Worth_Millions = 12.7 GROUP BY T1.Singer_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the singer with the most songs whose net worth is 12.7 millions.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Citizenship FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Title = \"All This Time\" GROUP BY T1.Citizenship  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Which citizenship has the most singers who sang the song with the title \"All This Time\"?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Song_ID FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Citizenship = \"Australia\" GROUP BY T1.Song_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the song sung by the singer with citizenship \"Australia\".",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Highest_Position FROM song AS T1        EXCEPT SELECT T2.Highest_Position FROM song AS T2 WHERE T2.Singer_ID = 5",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the highest position of songs whose singer id is 5.",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Citizenship FROM singer AS T1        EXCEPT SELECT T2.Citizenship FROM singer AS T2 WHERE T2.Net_Worth_Millions = 12.7",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the citizenships of singers whose net worth is not 12.7 millions?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.Highest_Position FROM song AS T1        EXCEPT SELECT T2.Highest_Position FROM song AS T2 WHERE T2.Song_ID = 8",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the highest positions of songs that do not have song 8?",
    "db_id": "singer"
  },
  {
    "query": "SELECT T1.ContId FROM continents AS T1 WHERE T1.Continent = \"america\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Return the id of the continent america.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.ContId FROM continents AS T1 WHERE T1.Continent = \"africa\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Return the id of the continent with the name \"africa\".",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.ModelId FROM model_list AS T1 WHERE T1.Maker = 16",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of models made by the maker with id 16?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Continent FROM countries AS T1 WHERE T1.CountryId = 4",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the continent of the country with id 4?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker FROM car_makers AS T1 WHERE T1.Id = 20",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the maker of the car with id 20?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Model FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Id = 18",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the models of the car maker with id 18?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model WHERE T2.Model = \"amc\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the makers of the car named \"amc\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Id FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryId = 10",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of car makers that are in the country with id 10?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Continent FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent WHERE T2.CountryName = \"russia\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the continents of the country with name \"russia\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.FullName, count(*) FROM car_makers AS T1  GROUP BY T1.FullName",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the full names of car makers and the number of cars they make.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.MPG, count(*) FROM cars_data AS T1  GROUP BY T1.MPG",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the MPG and the number of cars for each MPG.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Model, count(*) FROM car_names AS T1  GROUP BY T1.Model",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the model of cars and the number of cars with each model.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Country, count(*) FROM car_makers AS T1  GROUP BY T1.Country",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all countries and the number of car makers in each country.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Id, count(*) FROM car_makers AS T1  GROUP BY T1.Id",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all id of car makers and the number of cars they make.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.MakeId, count(*) FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id  GROUP BY T1.MakeId",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the make id and the number of cars for each make.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.MPG, count(*) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId  GROUP BY T1.MPG",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the average MPG and the number of cars for each MPG.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.ContId, count(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent  GROUP BY T1.ContId",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the id of each continent and the number of countries on that continent.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Make, count(*) FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id  GROUP BY T1.Make",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the make of each car and the number of its data.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker, count(*) FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model  GROUP BY T1.Maker",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the makers of cars and the number of cars they have made.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT count(*) FROM model_list AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many models are there?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT count(*) FROM car_makers AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many car makers are there?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT count(*) FROM countries AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many countries are there?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Country, T1.Id FROM car_makers AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all countries and ids of car makers.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Id, T1.FullName FROM car_makers AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Return the id and full name of all car makers.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.MPG, T1.Year FROM cars_data AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show the MPG and year for all cars.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker, T1.Country FROM car_makers AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all makers and countries of cars.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker, T1.ModelId FROM model_list AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the makers and model ids of all models?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Cylinders, T2.MakeId FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the cylinder count and id for each car?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Model, T2.Year FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show the model and year of all cars.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.FullName, T2.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show the full names of car makers and the models they have.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Model, T2.MakeId FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show all models and their ids, and the names of the cars they are models of.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Continent, T2.ContId FROM countries AS T1 JOIN continents AS T2 ON T1.Continent = T2.ContId",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the continents of the countries and what are their id?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.MPG, T1.Weight FROM cars_data AS T1 WHERE T1.Id = 282",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the fuel consumption and weight of the car with id 282?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.MakeId, T1.Make FROM car_names AS T1 WHERE T1.Model = \"pontiac\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the id and make of the car whose model is \"pontiac\".",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.MakeId, T1.Model FROM car_names AS T1 WHERE T1.Make = \"dodge coronet brougham\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the id and model of cars whose make is \"dodge coronet brougham\".",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.FullName, T1.Country FROM car_makers AS T1 WHERE T1.Maker = \"renault\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the full names and countries of makers of cars with the maker \"renault\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Model, T1.Maker FROM model_list AS T1 WHERE T1.ModelId = 2",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the model and maker of the product with id 2?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker FROM model_list AS T1  GROUP BY T1.Maker  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which maker has produced the most models?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Horsepower FROM cars_data AS T1  GROUP BY T1.Horsepower  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the horsepower of the car that has the most number of cars?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.FullName FROM car_makers AS T1  GROUP BY T1.FullName  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the full name of the car maker that has the most cars?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Model FROM model_list AS T1  GROUP BY T1.Model  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the name of the model that has the most devices?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.ContId FROM continents AS T1  GROUP BY T1.ContId  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which continent has the most countries?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Model FROM car_names AS T1  GROUP BY T1.Model  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the name of the car that has been mentioned the most?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT count(*) FROM model_list AS T1 WHERE T1.Model = \"scion\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many cars are listed under the model scion?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT count(*) FROM continents AS T1 WHERE T1.Continent = \"africa\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many continents have the value \"africa\" in their Continent attribute?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT count(*) FROM car_makers AS T1 WHERE T1.Id = 5",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many car makers have the id 5?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT count(*) FROM continents AS T1 WHERE T1.Continent = \"asia\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many continents are there in the continent Asia?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryName FROM countries AS T1    ORDER BY T1.Continent DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the name of the country on the continent of the world with the most countries?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Accelerate FROM cars_data AS T1    ORDER BY T1.Edispl DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the accelerate value of the car with the highest displacement?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryId FROM countries AS T1    ORDER BY T1.Continent DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the country on the continent with the lowest value?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.MPG FROM cars_data AS T1    ORDER BY T1.Year DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the maximum mileage of the oldest car?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker FROM car_makers AS T1    ORDER BY T1.Id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the name of the car maker with the largest id?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker    ORDER BY T2.Maker DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the full name of the maker of the most recent model?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.FullName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId    ORDER BY T2.CountryId DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the full name of the car maker from the country with the highest id?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Country FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId    ORDER BY T2.CountryId DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the country where the car maker with the highest market share is located?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId    ORDER BY T2.CountryId DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the country that has the car maker with the highest market share?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Id FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId    ORDER BY T2.MakeId DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the car with the greatest name?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.ContId FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent    ORDER BY T2.CountryId DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the continent with the largest number of countries?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.ContId FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent    ORDER BY T2.Continent ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the continent with the smallest country?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Year FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId    ORDER BY T2.MakeId ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the year of the first car?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryName FROM countries AS T1 JOIN continents AS T2 ON T1.Continent = T2.ContId    ORDER BY T2.ContId ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the country that belongs to the continent with the id of 1?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Country FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker    ORDER BY T2.Maker ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the country of the car maker that produced the model with the highest number?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Make FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id    ORDER BY T2.Edispl ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the make of the car with the smallest displacement?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Continent FROM countries AS T1 JOIN continents AS T2 ON T1.Continent = T2.ContId    ORDER BY T2.ContId ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the continent with the id of 1?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Continent FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent    ORDER BY T2.CountryId ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the continent with the id 1?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Continent, T1.CountryName FROM countries AS T1 JOIN continents AS T2 ON T1.Continent = T2.ContId    ORDER BY T2.ContId DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the continent with the id of 1 and what countries are on it?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker, T1.FullName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId    ORDER BY T2.CountryId DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the full name of the car maker from the country with the highest country id?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Horsepower, T1.Id FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId    ORDER BY T2.MakeId DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the horsepower of the car with the greatest horsepower?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.ContId, T1.Continent FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent    ORDER BY T2.CountryId DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the continent with the lowest id of countries?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.FullName, T1.Country FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker    ORDER BY T2.Maker DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the full name and country of the car maker of the last model in the list?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Continent) FROM countries AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct continents are there?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Make) FROM car_names AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different car makes are there?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.ContId) FROM continents AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct continents are there?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.MPG) FROM cars_data AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct MPG values are there in the cars data?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Continent) FROM continents AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct continents are there?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.MakeId) FROM car_names AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different car makes are there?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT avg( T1.ContId) FROM continents AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average continent id?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT avg( T1.Edispl) FROM cars_data AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average displacement of cars?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT avg( T1.Maker) FROM model_list AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average of the makers of the models?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT avg( T1.Id) FROM cars_data AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average id of cars?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Year FROM cars_data AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the years of cars data?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Country FROM car_makers AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Show all countries where car makers are from.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Continent FROM countries AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the continents of the countries?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.ContId FROM continents AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the continent IDs?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT T1.Horsepower FROM cars_data AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Return the distinct horsepower of cars.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT T1.Id FROM car_makers AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct ids of car makers?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT T1.CountryName FROM countries AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct country names?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT T1.ContId FROM continents AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct continent ids?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT T1.Id FROM cars_data AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct ids of cars data?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT T1.ModelId FROM model_list AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct model ids?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Weight FROM cars_data AS T1     ORDER BY T1.Id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the weights of cars in ascending order of their ids.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Make FROM car_names AS T1     ORDER BY T1.MakeId ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of cars in ascending order of their id.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.FullName FROM car_makers AS T1     ORDER BY T1.Id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the full names of car makers in ascending order of id.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Model FROM model_list AS T1     ORDER BY T1.ModelId ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List all models in ascending order of model id.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Id FROM cars_data AS T1     ORDER BY T1.Accelerate ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the ids of cars in ascending order of accelerate?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.MPG FROM cars_data AS T1     ORDER BY T1.Accelerate DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the fuel consumption rates of cars, ordered by the value of \"Accelerate\" in descending order?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.FullName FROM car_makers AS T1     ORDER BY T1.Id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the full names of car makers in descending order of id.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Horsepower FROM cars_data AS T1     ORDER BY T1.Weight DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the horsepower of cars in descending order of weight?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryId FROM countries AS T1     ORDER BY T1.Continent DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the country ids in descending order of the continents.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryName FROM countries AS T1     ORDER BY T1.CountryId DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the country names in descending order of country id.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Continent, T1.CountryName FROM countries AS T1     ORDER BY T1.CountryName ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the continents and country names of all the countries?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.MakeId, T1.Model FROM car_names AS T1     ORDER BY T1.Model ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the id and model of cars in ascending order of model.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Make, T1.MakeId FROM car_names AS T1     ORDER BY T1.MakeId ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the names of car makers and their id in ascending order of id.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker, T1.Id FROM car_makers AS T1     ORDER BY T1.Id ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the makers and ids of cars in ascending order of id.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.FullName, T1.Maker FROM car_makers AS T1     ORDER BY T1.Maker ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the full names of car makers and order them by their maker attribute ascending.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Make, T1.Model FROM car_names AS T1     ORDER BY T1.Model ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the make and model of cars in ascending order of model.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.ContId FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country WHERE T2.CountryName = \"italy\" and T3.FullName = \"Kia Motors\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the continents and their id of the countries that have the country name \"italy\" and the car maker \"Kia Motors\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Id FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId JOIN model_list AS T3 ON T1.Id = T3.Maker WHERE T2.CountryName = \"uk\" and T3.Maker = 18",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What is the id of the car maker that makes the model with id 18 and the country is called \"uk\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Continent FROM countries AS T1 JOIN continents AS T2 ON T1.Continent = T2.ContId JOIN car_makers AS T3 ON T1.CountryId = T3.Country WHERE T2.ContId = 3 and T3.Id = 11",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the countries that have car maker with id 11 and whose continent is 3?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Edispl FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T2.MakeId = 65 and T3.Maker = 15",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the displacement of cars whose make id is 65 and whose model is made by maker 15?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Year FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T2.Model = \"renault\" and T3.ModelId = 11",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the years of cars with the model \"renault\" and model id 11?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id JOIN model_list AS T3 ON T1.Model = T3.Model WHERE T2.MPG = \"27.2\" and T3.Maker = 22",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the names of the models of the cars that have an MPG of 27.2 and belong to maker 22?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Make FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id JOIN model_list AS T3 ON T1.Model = T3.Model WHERE T2.Weight = 3150 and T3.Maker = 9",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the names of the cars that have an weight of 3150 and are made by the maker 9?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Country = \"6\" or T2.Country = \"4\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the names of the countries where the car maker has the country code \"6\" or \"4\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Accelerate FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = \"hi\" or T2.Model = \"mercury\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the accelerate speeds of the cars with model \"hi\" or \"mercury\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Country FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T2.ModelId = 35 or T2.ModelId = 1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the countries of the makers that have produced the car with model id 35 or 1?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.FullName = \"Daimler Benz\" or T2.FullName = \"Opel\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the names of the countries where the car maker \"Daimler Benz\" or \"Opel\" is from?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = \"American Motor Company\" or T2.FullName = \"Opel\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the models produced by \"American Motor Company\" or \"Opel\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryId = 14 or T2.CountryId = 5",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the makers of cars that are in the country with id 14 or 5?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker FROM model_list AS T1 WHERE T1.Model = \"peugeot\" and T1.ModelId = 22",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the makers of the model with id 22 and its name is \"peugeot\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.FullName FROM car_makers AS T1 WHERE T1.Maker = \"chrysler\" and T1.Id = 8",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the full name of the car maker with id 8 whose maker is \"chrysler\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Id FROM cars_data AS T1 WHERE T1.Edispl = 113.0 and T1.Horsepower = \"125\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ids of cars that have edisplacement of 113.0 and horsepower of 125?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Cylinders FROM cars_data AS T1 WHERE T1.Edispl = 304.0 and T1.Year = 1982",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the cylinder of the cars with edisplacement of 304.0 and year of 1982?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Continent) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent WHERE T1.ContId = 1 and T2.CountryName = \"italy\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct continents are there in the country with the continent id 1 and country name \"Italy\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Model) FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T1.ModelId = 28 and T2.Id = 6",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct models of car with id 6 are made by the company with id 28?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.CountryId) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T1.CountryName = \"japan\" and T2.Country = \"2\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct car makers are there in the country with country name \"japan\" and car maker country code 2?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Make) FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model = T2.Model WHERE T1.MakeId = 306 and T2.Model = \"subaru\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct models of car with make id 306 are in the subaru model list?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Country) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.Id = 15 and T2.Maker = 5",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct countries are associated with the car whose maker id is 15 and the model whose maker is 5?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Continent) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent WHERE T1.ContId = 3 and T2.CountryName = \"germany\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct countries belong to the continent with id 3 and the country \"germany\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryName FROM countries AS T1 WHERE T1.Continent = 4 or T1.CountryId = 7",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the names of countries that belong to the continent 4 or have the id 7?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Model FROM model_list AS T1 WHERE T1.Maker = 22 or T1.ModelId = 6",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the models that have the maker 22 or the model id 6?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.FullName FROM car_makers AS T1 WHERE T1.Maker = \"ford\" or T1.Country = \"7\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the full names of car makers whose maker is \"ford\" or whose country is \"7\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Continent FROM countries AS T1 WHERE T1.CountryName = \"russia\" or T1.CountryId = 7",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the continents of the countries whose name is \"Russia\" or whose country id is 7?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Model FROM model_list AS T1 WHERE T1.Maker = 11 or T1.ModelId = 22",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the models that have the maker 11 or the model id 22?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Weight FROM cars_data AS T1 WHERE T1.Id = 70 or T1.Year = 1972",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the weight of the car with id 70 or year 1972?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT count(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T2.Model = \"mercury\" and T2.ModelId = 12",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many cars are made by the maker with model \"mercury\" and model id 12?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT count(*) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = \"subaru\" and T2.Make = \"buick century special\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many cars have the make and model \"subaru\" and the make \"buick century special\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT count(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent WHERE T2.CountryName = \"sweden\" and T2.Continent = 4",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many countries are in the 4th continent and have the country name \"sweden\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryId FROM countries AS T1 WHERE T1.CountryName != \"nigeria\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the country ids of all countries whose name is not \"nigeria\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryName FROM countries AS T1 WHERE T1.CountryId != 3",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of countries that have an id different from 3?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.MakeId FROM car_names AS T1 WHERE T1.Model != \"pontiac\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of cars whose model is not \"pontiac\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Model FROM model_list AS T1 WHERE T1.ModelId != 23",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of models that do not have the id 23?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryName FROM countries AS T1 WHERE T1.CountryId != 9",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of countries that have an id different from 9?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.ContId FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent WHERE T2.CountryName != \"uk\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the continent IDs of the countries that have a country name that is not \"uk\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.MakeId FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders != 3",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of cars that have cylinders other than 3?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T2.Model != \"chrysler\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of car makers who do not have any car with model \"chrysler\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName != \"russia\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the makers of cars that are not from russia?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Id FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName != \"italy\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of car makers that do not have the country with the name \"italy\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT T1.Horsepower FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = \"mazda\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct horsepower of cars whose model is \"mazda\".",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT T1.Id FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryId = 3",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct ids of car makers that have country id 3?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT T1.Model FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = \"Ford Motor Company\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct models of cars made by the company with full name \"Ford Motor Company\".",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT T1.ContId FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent WHERE T2.CountryName = \"russia\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct continents that have a country named russia?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.ContId) FROM continents AS T1 WHERE T1.Continent = \"australia\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct continents are there in the continent \"australia\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.CountryId) FROM countries AS T1 WHERE T1.Continent = 5",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many countries are in the continent 5?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.CountryName) FROM countries AS T1 WHERE T1.CountryId = 4",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many countries have the id 4?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Id) FROM car_makers AS T1 WHERE T1.FullName = \"Kia Motors\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct car makers have the full name \"Kia Motors\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Model) FROM car_names AS T1 WHERE T1.Make = \"mercury zephyr\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct models of cars are made by the make \"mercury zephyr\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Weight FROM cars_data AS T1 WHERE T1.Id > 94",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the weights of cars with ids bigger than 94?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Continent FROM continents AS T1 WHERE T1.ContId > 1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "Return the continents with ids larger than 1.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Continent FROM countries AS T1 WHERE T1.CountryId > 12",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the continents of the countries with ids greater than 12?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.MPG, T2.Make, T3.ModelId FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the MPG, make, and model of each car?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Year, T2.Make, T3.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Show all years, makes, and models of cars.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Edispl, T2.Make, T3.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the edisplacement, make, and model of all the cars?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker, T2.Make, T3.Id FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model JOIN car_makers AS T3 ON T1.Maker = T3.Id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Show the maker, make, and id of each car.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Horsepower, T2.Model, T3.ModelId FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What is the horsepower of each car, and what are the model and model id?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Model, T2.Year, T3.ModelId FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id JOIN model_list AS T3 ON T1.Model = T3.Model",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Show the names of cars, their data, and model ids.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryId, T2.Country, T3.Continent FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country JOIN continents AS T3 ON T1.Continent = T3.ContId",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Show the country id, country, and continent for all the car makers.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.MakeId FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id     ORDER BY T2.Year ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the id of cars made in ascending order of year?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryName FROM countries AS T1 JOIN continents AS T2 ON T1.Continent = T2.ContId     ORDER BY T2.ContId ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of the countries, ordered by their continent IDs ascending?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Continent FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent     ORDER BY T2.CountryId ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the continents of the countries, and what are the corresponding continent ids?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.ContId FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent     ORDER BY T2.Continent ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the id of the continents, ordered by their ascending continent?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Continent FROM countries AS T1 WHERE T1.CountryId = 2     INTERSECT SELECT T2.Continent FROM countries AS T2 WHERE T2.CountryId = 1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the continents shared by the two countries with id 1 and the country with id 2?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.ModelId FROM model_list AS T1 WHERE T1.Model = \"ford\"     INTERSECT SELECT T2.ModelId FROM model_list AS T2 WHERE T2.Model = \"volvo\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Show the ids of models that both have \"ford\" and \"volvo\" as models.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT avg( T1.Id) FROM car_makers AS T1 WHERE T1.Maker = \"bmw\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average id of cars made by bmw?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT avg( T1.ContId) FROM continents AS T1 WHERE T1.Continent = \"america\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average id of continents that have the continent america?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT avg( T1.ModelId) FROM model_list AS T1 WHERE T1.Maker = 21",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average model id of cameras made by company with id 21?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT avg( T1.Id) FROM car_makers AS T1 WHERE T1.FullName = \"Subaru\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average id of car makers whose full name is \"Subaru\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model WHERE T2.MakeId = (SELECT max( T23.MakeId) FROM car_names AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the makers of the most common car?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T2.ModelId = (SELECT max( T23.ModelId) FROM model_list AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the full names of car makers that have the maximum model id in the model list?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model WHERE T2.MakeId = (SELECT max( T23.MakeId) FROM car_names AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the models of the oldest cars?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.ModelId FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model WHERE T2.MakeId = (SELECT max( T23.MakeId) FROM car_names AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the model ids of the cars with the maximum make id?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Cylinders FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.MakeId = (SELECT max( T23.MakeId) FROM car_names AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the cylinders of the cars with the maximum cylinder listed first in car names?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryName FROM countries AS T1 JOIN continents AS T2 ON T1.Continent = T2.ContId WHERE T2.ContId = (SELECT max( T23.ContId) FROM continents AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of the countries that are on the continent with the maximum id among all continents?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryId FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Id = (SELECT max( T23.Id) FROM car_makers AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the countries that have the most car makers?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Id FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.Continent = (SELECT max( T23.Continent) FROM countries AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the id of car makers that are in the most southern countries in the world?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.ContId, T2.CountryId FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country WHERE T3.FullName = \"Kia Motors\" and T2.Continent = 3",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the continent and country id of the car makers whose full name is \"Kia Motors\" and whose cars are made in the continent 3?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker, T2.ModelId FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker JOIN countries AS T3 ON T1.Country = T3.CountryId WHERE T3.CountryName = \"nigeria\" and T2.Model = \"renault\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the maker and model id of the car made in Nigeria and produced by Renault.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.FullName, T2.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker JOIN countries AS T3 ON T1.Country = T3.CountryId WHERE T3.CountryName = \"sweden\" and T2.ModelId = 13",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the full names of car makers and the model list of cars made in the country with the country name \"sweden\" and the model id 13?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Continent, T2.CountryName FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country WHERE T3.Maker = \"citroen\" and T2.CountryId = 4",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the names of the continents and countries that have the car maker \"citroen\" and the country with id 4?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model WHERE T2.MakeId = 304 GROUP BY T1.Maker  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the name of the car that has been made by the most popular car maker?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Year FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.MakeId = 322 GROUP BY T1.Year  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the year of the car with the name \"322\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryId FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Id = 8 GROUP BY T1.CountryId  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Which country has produced the most cars?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Maker FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Country = \"1\" GROUP BY T1.Maker  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Which maker has the most cars in the country with code 1?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Continent FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent WHERE T2.CountryId = 10 GROUP BY T1.Continent  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Which continent has the most countries in the country with id 10?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T2.ModelId = 15 GROUP BY T1.Id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the car maker that has the most models with id 15.",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryId FROM countries AS T1        EXCEPT SELECT T2.CountryId FROM countries AS T2 WHERE T2.Continent = 3",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the country ids that are not on the continent of 3?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.ModelId FROM model_list AS T1        EXCEPT SELECT T2.ModelId FROM model_list AS T2 WHERE T2.Model = \"peugeot\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the model ids of cars that are not peugeots?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Model FROM car_names AS T1        EXCEPT SELECT T2.Model FROM car_names AS T2 WHERE T2.Make = \"vw pickup\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of cars that are not made by \"vw pickup\"?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.CountryId FROM countries AS T1        EXCEPT SELECT T2.CountryId FROM countries AS T2 WHERE T2.Continent = 1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the country ids that are not on the continent 1?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.Continent FROM continents AS T1        EXCEPT SELECT T2.Continent FROM continents AS T2 WHERE T2.ContId = 1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the continents that do not have the continent with id 1?",
    "db_id": "car_1"
  },
  {
    "query": "SELECT T1.section_id FROM Sections AS T1 WHERE T1.course_id = 7",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the section ids for the course with id 7?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_id FROM Student_Enrolment AS T1 WHERE T1.student_enrolment_id = 8",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the id of the student with enrolment id 8?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.course_id FROM Sections AS T1 WHERE T1.section_id = 8",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the id of the course taught in section 8?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_enrolment_id FROM Student_Enrolment AS T1 WHERE T1.student_id = 1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the enrolment id of the student with id 1?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.section_id FROM Sections AS T1 WHERE T1.section_description = \"ad\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the id of the section with the description \"ad\".",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.section_id FROM Sections AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id WHERE T2.course_id = 11",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of sections that have the course with id 11?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.degree_program_id = 8",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of semesters that have a student enrolled in the degree program with id 8?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.ssn, count(*) FROM Students AS T1  GROUP BY T1.ssn",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many students have each Social Security number?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.course_description, count(*) FROM Courses AS T1  GROUP BY T1.course_description",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all course descriptions and the number of courses with each description.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_id, count(*) FROM Student_Enrolment AS T1  GROUP BY T1.student_id",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many students are enrolled in each course?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.semester_name, count(*) FROM Semesters AS T1  GROUP BY T1.semester_name",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the names of semesters and the number of courses in each semester.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.date_first_registered, count(*) FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id  GROUP BY T1.date_first_registered",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the first registration dates and the number of addresses for each group of students.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.course_id, count(*) FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id  GROUP BY T1.course_id",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show all course ids and the number of sections they have.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.ssn, count(*) FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id  GROUP BY T1.ssn",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many different address do each of the students have?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.transcript_id, count(*) FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many different transcripts are there, and how many contents are associated with each one?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_course_id, count(*) FROM Student_Enrolment_Courses AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id  GROUP BY T1.student_course_id",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many different courses are enrolled in by each student?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT count(*) FROM Courses AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many courses are there?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT count(*) FROM Semesters AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many semesters exist?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT count(*) FROM Departments AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many departments are there?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT count(*) FROM Students AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many students are there?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT count(*) FROM Transcript_Contents AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many transcripts are there?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.transcript_date, T1.transcript_id FROM Transcripts AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "When was each transcript created and what is its id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.department_id, T1.department_description FROM Departments AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the id and description of all departments?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.section_id, T1.course_id FROM Sections AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the section ids and course ids?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.department_description, T1.department_id FROM Departments AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the descriptions of the departments and their ids?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.email_address, T2.other_address_details FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show all email addresses and their details for all students.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details, T2.degree_summary_description FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the other details and degree summary description for the departments?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.course_name, T2.student_course_id FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the names of courses and their corresponding ids?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.course_id, T2.semester_id FROM Student_Enrolment_Courses AS T1 JOIN Student_Enrolment AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the id and semester of the courses that have been enrolled in by the student with the id 1?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.semester_description, T2.student_enrolment_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the descriptions of semesters and what are the ids of students enrolled in those semesters?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_enrolment_id, T2.degree_program_id FROM Student_Enrolment_Courses AS T1 JOIN Student_Enrolment AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the id and degree program id of the student enrolments?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.middle_name, T1.current_address_id FROM Students AS T1 WHERE T1.last_name = \"Christiansen\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the middle names and current address ids of all students whose last name is Christiansen?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details, T1.student_id FROM Student_Enrolment AS T1 WHERE T1.semester_id = 2",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the other details and the id of the student enrolled in semester 2?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.semester_description, T1.semester_name FROM Semesters AS T1 WHERE T1.semester_id = 1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the description and name of the first semester?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details, T1.transcript_id FROM Transcripts AS T1 WHERE T1.transcript_date = \"1985-04-29 01:20:20\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the other details and transcript id of the transcript with the date \"1985-04-29 01:20:20\"?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.transcript_id FROM Transcript_Contents AS T1  GROUP BY T1.transcript_id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the id of the transcript which has the most contents.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_address_details FROM Addresses AS T1  GROUP BY T1.other_address_details  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the other address detail that is used most often?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.degree_summary_description FROM Degree_Programs AS T1  GROUP BY T1.degree_summary_description  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the most common degree summary description?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.department_name FROM Departments AS T1  GROUP BY T1.department_name  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the name of the department that has the most employees?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_course_id FROM Student_Enrolment_Courses AS T1  GROUP BY T1.student_course_id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the id of the course with the most enrollments?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.cell_mobile_number FROM Students AS T1  GROUP BY T1.cell_mobile_number  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the cell phone number of the student who has the most cell phones.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT count(*) FROM Degree_Programs AS T1 WHERE T1.degree_summary_name = \"Master\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many students are enrolled in the Master degree program?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT count(*) FROM Degree_Programs AS T1 WHERE T1.degree_program_id = 2",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many students are enrolled in the second degree program?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT count(*) FROM Transcript_Contents AS T1 WHERE T1.student_course_id = 2",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many contents are related to the course with id 2?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT count(*) FROM Transcript_Contents AS T1 WHERE T1.transcript_id = 2",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many contents are related to transcript id 2?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.section_description FROM Sections AS T1    ORDER BY T1.section_id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the description of the section with the largest id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details FROM Transcripts AS T1    ORDER BY T1.transcript_id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the other detail of the transcript with the largest id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.course_id FROM Student_Enrolment_Courses AS T1    ORDER BY T1.student_course_id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the course with the highest id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.department_description FROM Departments AS T1    ORDER BY T1.department_id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the description of the department with the largest department id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.permanent_address_id FROM Students AS T1    ORDER BY T1.date_left DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the student who left the school last?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.country FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id    ORDER BY T2.date_left DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the country of the address where the student left permanently last?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.line_3 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id    ORDER BY T2.date_first_registered DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the line 3 of the address where the student with the oldest registration date lives?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id    ORDER BY T2.student_id DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the zip code of the permanent address of the most senior student?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id    ORDER BY T2.student_course_id DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the other detail of the transcript with the highest course id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.address_id FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id    ORDER BY T2.permanent_address_id DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the address with the most recent student?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_enrolment_id FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id    ORDER BY T2.degree_program_id DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the id of the student who is enrolled in the highest degree program.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.transcript_id FROM Transcript_Contents AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id    ORDER BY T2.student_enrolment_id DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the transcript with the highest score?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id    ORDER BY T2.student_course_id DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the transcript with the highest student course id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.current_address_id FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id    ORDER BY T2.address_id ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the address of the student with the highest address id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.semester_id FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id    ORDER BY T2.degree_program_id ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the semester with the lowest enrolled students?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.section_id FROM Sections AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id    ORDER BY T2.course_id ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the section with the lowest course id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.degree_program_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id    ORDER BY T2.semester_id ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the degree program with the first semester enrolled?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id    ORDER BY T2.degree_program_id ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the department that offers the highest degree program?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id    ORDER BY T2.transcript_date ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the transcript with the latest release date?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.current_address_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id    ORDER BY T2.student_id ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the current address of the student with the id that has the highest enrolment?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.course_id FROM Student_Enrolment_Courses AS T1 JOIN Transcript_Contents AS T2 ON T1.student_course_id = T2.student_course_id    ORDER BY T2.student_course_id ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the course with the highest transcript contents?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.country FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id    ORDER BY T2.current_address_id ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the country of the address of the student with the current address id closest to the top of the list?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_course_id, T1.course_id FROM Student_Enrolment_Courses AS T1 JOIN Student_Enrolment AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id    ORDER BY T2.student_id DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the course with the most enrolled students?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.section_name, T1.section_id FROM Sections AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id    ORDER BY T2.course_id DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name and id of the section of the course with the greatest course id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details, T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id    ORDER BY T2.student_course_id DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the other detail and the id of the transcript with the highest student course id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.first_name, T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id    ORDER BY T2.address_id DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the first name and last name of the student who lives at the highest address id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.transcript_date) FROM Transcripts AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct dates are there for transcripts?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.semester_description) FROM Semesters AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct semester descriptions are there?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.other_details) FROM Transcripts AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct other details are there in the transcripts?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.other_details) FROM Student_Enrolment AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct other details are there for students?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.department_description) FROM Departments AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different descriptions are there for departments?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.transcript_id) FROM Transcripts AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct transcripts are there?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT avg( T1.transcript_id) FROM Transcript_Contents AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average transcript id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT avg( T1.transcript_id) FROM Transcripts AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average transcript id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT avg( T1.department_id) FROM Degree_Programs AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average department id of the programs?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT avg( T1.student_course_id) FROM Transcript_Contents AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average course id of transcripts?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT avg( T1.address_id) FROM Addresses AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average address id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT avg( T1.student_id) FROM Students AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average student id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT avg( T1.student_enrolment_id) FROM Student_Enrolment_Courses AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average student enrolment id across all student enrolment courses?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT avg( T1.permanent_address_id) FROM Students AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average permanent address id of all students?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details FROM Semesters AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the other details of the semesters?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_student_details FROM Students AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the other student details for all students?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_address_details FROM Addresses AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the other address details of the addresses?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_enrolment_id FROM Student_Enrolment_Courses AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the ids of student enrolment courses?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT T1.course_description FROM Courses AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct course descriptions?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT T1.student_course_id FROM Transcript_Contents AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct student course ids that have been used in transcripts?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT T1.student_enrolment_id FROM Student_Enrolment_Courses AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct ids of the student enrolments?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT T1.current_address_id FROM Students AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct current address ids of all students?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT T1.transcript_date FROM Transcripts AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "When are the transcripts created?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details FROM Departments AS T1     ORDER BY T1.department_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the other details of the departments?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.semester_description FROM Semesters AS T1     ORDER BY T1.semester_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the descriptions of semesters in ascending order of semester id.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.transcript_id FROM Transcript_Contents AS T1     ORDER BY T1.student_course_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the ids of transcripts, ordered by the student course id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.transcript_date FROM Transcripts AS T1     ORDER BY T1.transcript_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the date of transcripts in descending order of their id.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_address_details FROM Addresses AS T1     ORDER BY T1.address_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the other address details of the addresses, ordered by their id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.course_id FROM Sections AS T1     ORDER BY T1.section_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List all course ids of sections in descending order of section id.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details, T1.degree_program_id FROM Student_Enrolment AS T1     ORDER BY T1.degree_program_id ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the other details and the id of the degree program for each enrolment?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_course_id, T1.student_enrolment_id FROM Student_Enrolment_Courses AS T1     ORDER BY T1.student_enrolment_id ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the student course ids and their enrollments' ids for all the student enrollments in ascending order by their enrollments' ids.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.degree_program_id, T1.department_id FROM Degree_Programs AS T1     ORDER BY T1.department_id ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the id and department id of all degree programs.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.transcript_id, T1.student_course_id FROM Transcript_Contents AS T1     ORDER BY T1.student_course_id ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the id and contents of the transcripts for different courses?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id JOIN Students AS T3 ON T2.student_id = T3.student_id WHERE T2.student_enrolment_id = 15 and T3.permanent_address_id = 15",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the other details of the semester in which the student with the enrolment id 15 and the permanent address id 15 is enrolled?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.line_1 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id JOIN Student_Enrolment AS T3 ON T2.student_id = T3.student_id WHERE T2.permanent_address_id = 5 and T3.student_id = 1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What is the line 1 of the address of the student with permanent address id 5 and student id 1 in the enrolment record?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id JOIN Student_Enrolment AS T3 ON T1.degree_program_id = T3.degree_program_id WHERE T2.department_description = \"aliquam\" and T3.degree_program_id = 5",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the other details of the degree program with the department description \"aliquam\" and the id of the degree program 5?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details FROM Student_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id JOIN Student_Enrolment_Courses AS T3 ON T1.student_enrolment_id = T3.student_enrolment_id WHERE T2.date_left = \"1982-06-11 00:25:39\" and T3.student_enrolment_id = 13",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the other details of the student whose date of leaving is \"1982-06-11 00:25:39\" and whose student enrolment id is 13?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id JOIN Student_Enrolment AS T3 ON T2.student_id = T3.student_id WHERE T2.middle_name = \"Violet\" and T3.student_id = 12",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the state province county count of the addresses where the student with the middle name \"Violet\" and the student id 12 is enrolled.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_description = \"dolorem\" or T2.department_description = \"non\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the other details of the degree programs that are in the department with the description \"dolorem\" or \"non\"?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.course_id FROM Sections AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id WHERE T2.course_description = \"l\" or T2.course_description = \"p\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the ids of the courses whose description is 'l' or 'p'.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.student_enrolment_id = 9 or T2.student_enrolment_id = 3",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the names of the degree programs that have student enrolments with the enrolment id 9 or 3?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.department_name FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T2.degree_summary_description = \"architecto\" or T2.degree_summary_description = \"earum\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the names of departments that have any student enrolled in any degree program with the description \"architecto\" or \"earum\".",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.section_description FROM Sections AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id WHERE T2.course_id = 9 or T2.course_id = 6",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the descriptions of the sections that have course 9 or course 6?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.semester_id = 4 or T2.semester_id = 4",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the other details of the semesters with semester id 4 or 4?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_course_id FROM Transcript_Contents AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id WHERE T2.course_id = 2 or T2.course_id = 10",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the id of transcript contents that are related to course id 2 or 10?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.line_2 FROM Addresses AS T1 WHERE T1.country = \"Norfolk Island\" and T1.address_id = 10",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the line 2 of the address with the country \"Norfolk Island\" and the address id 10?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details FROM Student_Enrolment AS T1 WHERE T1.student_id = 9 and T1.student_enrolment_id = 7",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the other details of the enrollment of the student with id 9?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.permanent_address_id FROM Students AS T1 WHERE T1.ssn = \"3\" and T1.cell_mobile_number = \"(096)889-8954x524\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the permanent address id of the student with ssn 3 and cell mobile number (096) 889-8954 x 524?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details FROM Student_Enrolment AS T1 WHERE T1.student_enrolment_id = 11 and T1.semester_id = 5",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the other details of the enrollment of the student with id 11 and semester id 5?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.course_id FROM Sections AS T1 WHERE T1.section_name = \"j\" and T1.section_description = \"ad\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the ids of the sections with the section name \"j\" and section description \"ad\".",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.date_first_registered FROM Students AS T1 WHERE T1.middle_name = \"Golda\" and T1.permanent_address_id = 8",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the dates of first registration for the students whose middle name is \"Golda\" and whose permanent address id is 8?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.date_first_registered) FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T1.other_student_details = \"dolorum\" and T2.zip_postcode = \"943\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct students live in the zip code 943 and have the detail 'dolorum' in their other student details?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.student_enrolment_id) FROM Student_Enrolment_Courses AS T1 JOIN Transcript_Contents AS T2 ON T1.student_course_id = T2.student_course_id WHERE T1.student_course_id = 1 and T2.transcript_id = 8",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct students took the course with transcript id 8 and enrolled in the course with id 1?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.student_id) FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T1.date_first_registered = \"2005-12-15 08:42:10\" and T2.address_id = 10",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct students live at address 10 on the date first registered?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.other_details) FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id WHERE T1.transcript_id = 11 and T2.student_course_id = 8",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct other details are associated with the transcript with the id 11 and the student course id 8?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.permanent_address_id) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T1.ssn = \"304246\" and T2.degree_program_id = 3",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "Find the number of distinct enrolments associated with the student whose ssn is 304246 and whose degree program id is 3.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.other_details) FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id WHERE T1.transcript_id = 4 and T2.student_course_id = 76",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct other details are associated with the transcript with transcript id 4 and the student course id 76?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.degree_summary_description) FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id WHERE T1.degree_summary_name = \"Bachelor\" and T2.department_id = 10",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct Bachelor degree programs are in the department with id 10?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_enrolment_id FROM Student_Enrolment_Courses AS T1 WHERE T1.course_id = 12 or T1.student_course_id = 0",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ids of the student enrolments for course 12 or whose student course id is 0?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.date_first_registered FROM Students AS T1 WHERE T1.middle_name = \"Anna\" or T1.last_name = \"Ward\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the date first registered for all the students whose middle name is Anna or last name is Ward.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT count(*) FROM Student_Enrolment_Courses AS T1 JOIN Student_Enrolment AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id WHERE T2.student_enrolment_id = 10 and T2.degree_program_id = 3",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many courses is student with id 10 enrolled in which belongs to degree program with id 3?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T2.degree_program_id = 8 and T2.semester_id = 6",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many students are enrolled in the degree program with id 8 and are in semester 6?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_course_id FROM Student_Enrolment_Courses AS T1 WHERE T1.student_enrolment_id != 6",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of the courses that the student with the enrolment id 6 is not enrolled in?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.current_address_id FROM Students AS T1 WHERE T1.email_address != \"skassulke@example.net\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the id of the students whose email address is not \"skassulke@example.net\"?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.line_3 FROM Addresses AS T1 WHERE T1.address_id != 13",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the line 3 of the address that has an id different from 13?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.section_description FROM Sections AS T1 WHERE T1.section_id != 7",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the description of the section with id not 7?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.transcript_id FROM Transcripts AS T1 WHERE T1.transcript_date != \"1975-05-20 18:31:21\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of transcripts whose date is not \"1975-05-20 18:31:21\"?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_enrolment_id FROM Student_Enrolment_Courses AS T1 JOIN Student_Enrolment AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id WHERE T2.student_id != 6",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of the student enrolments that do not have the student with id 6?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id WHERE T2.transcript_id != 13",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the other details of the transcript with id 13?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.student_id != 5",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the degree summary descriptions of the degree programs that do not have the student with id 5 enrolled?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.degree_program_id FROM Student_Enrolment AS T1 JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id WHERE T2.semester_name != \"fall 2010\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of the degree program for the student who is enrolled in the semester that is not \"fall 2010\"?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.date_left FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T2.semester_id != 1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the dates when the students enrolled in the semester other than 1 leave?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_id != 7",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of semesters that do not have the student with id 7?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.semester_id FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_program_id != 2",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the semester ids of the students enrolled in a degree program whose id is not 2?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id WHERE T2.section_description != \"provident\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of courses that have sections with description other than \"provident\"?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT T1.student_id FROM Student_Enrolment AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id WHERE T2.student_course_id = 83814225",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct student ids that took the course with id 83814225?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT T1.student_enrolment_id FROM Student_Enrolment_Courses AS T1 JOIN Transcript_Contents AS T2 ON T1.student_course_id = T2.student_course_id WHERE T2.transcript_id = 4",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct ids of the student enrolments that have the transcript with id 4?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT T1.course_description FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id WHERE T2.student_course_id = 1",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct course descriptions for the course with student course id 1?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id WHERE T2.student_course_id = 76",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct transcripts id that have contents related to the course with id 76?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT T1.cell_mobile_number FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T2.semester_id = 2",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct cell phone numbers of the students who are enrolled in the semester 2?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT T1.transcript_id FROM Transcript_Contents AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id WHERE T2.student_enrolment_id = 6",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct transcript ids of the contents that are associated with the student enrolment course with the id 6?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT T1.degree_program_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.semester_id = 9",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct id of the degree programs that have a student enrolled in the semester 9?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.student_enrolment_id) FROM Student_Enrolment_Courses AS T1 WHERE T1.course_id = 14",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many students are enrolled in the course with id 14?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.current_address_id) FROM Students AS T1 WHERE T1.last_name = \"Weimann\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the number of distinct current addresses of the students whose last name is \"Weimann\".",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.degree_program_id) FROM Student_Enrolment AS T1 WHERE T1.student_enrolment_id = 15",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct degree programs does the student with enrolment id 15 have?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.transcript_id FROM Transcripts AS T1 WHERE T1.transcript_date > \"2013-06-30 13:01:40\"",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "Find the ids of transcripts whose date is after 2013-06-30 13:01:40.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.department_description FROM Departments AS T1 WHERE T1.department_id > 4",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the descriptions of departments with id larger than 4?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.semester_description FROM Semesters AS T1 WHERE T1.semester_id > 10",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the descriptions of semesters with ids bigger than 10?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.degree_summary_name, T2.department_id, T3.semester_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id JOIN Student_Enrolment AS T3 ON T1.degree_program_id = T3.degree_program_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the names of the degree programs, their department ids, and the semester ids of the students enrolled in them?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.zip_postcode, T2.current_address_id, T3.student_id FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id JOIN Student_Enrolment AS T3 ON T2.student_id = T3.student_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the zip post codes of the addresses, and what are the ids of the students who live there now?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.semester_description, T2.other_details, T3.student_enrolment_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id JOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the descriptions, other details, and ids of the semesters, and the courses of the students enrolled in them?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.semester_name, T2.degree_program_id, T3.department_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the names of semesters, the id of the degree program, and the id of the department?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_enrolment_id, T2.course_id, T3.section_description FROM Student_Enrolment_Courses AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id JOIN Sections AS T3 ON T2.course_id = T3.course_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the id, course id, and section description of the enrolments of each student?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id     ORDER BY T2.department_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the other details of the degree programs, ordered by the department id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.section_description FROM Sections AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id     ORDER BY T2.course_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the descriptions of the sections that have the highest course id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_enrolment_id FROM Student_Enrolment AS T1 JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id     ORDER BY T2.semester_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the id of enrollments for each semester?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.department_description FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id     ORDER BY T2.degree_program_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the descriptions of departments, ordered by their degree program id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_course_id FROM Student_Enrolment_Courses AS T1 JOIN Transcript_Contents AS T2 ON T1.student_course_id = T2.student_course_id     ORDER BY T2.transcript_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the id of the courses for the students whose transcript ids are in ascending order?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id     ORDER BY T2.course_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the other details of the courses, ordered by their course id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.permanent_address_id FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id     ORDER BY T2.address_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the id of permanent address for students?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.email_address FROM Students AS T1 WHERE T1.other_student_details = \"qui\"     INTERSECT SELECT T2.email_address FROM Students AS T2 WHERE T2.other_student_details = \"assumenda\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the email address of the students whose other student details are both \"qui\" and \"assumenda\".",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.semester_id FROM Semesters AS T1 WHERE T1.semester_description = \"g\"     INTERSECT SELECT T2.semester_id FROM Semesters AS T2 WHERE T2.semester_description = \"o\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the id of semesters that have both \"g\" and \"o\" in their descriptions.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.degree_summary_description FROM Degree_Programs AS T1 WHERE T1.department_id = 11     INTERSECT SELECT T2.degree_summary_description FROM Degree_Programs AS T2 WHERE T2.department_id = 4",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the descriptions of the degree programs that are in department 11 and the ones that are in department 4?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT avg( T1.permanent_address_id) FROM Students AS T1 WHERE T1.current_address_id = 1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of students who live in the current address 1?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT avg( T1.current_address_id) FROM Students AS T1 WHERE T1.last_name = \"Balistreri\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of students who live in the last name \"Balistreri\"?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT avg( T1.student_course_id) FROM Transcript_Contents AS T1 WHERE T1.transcript_id = 5",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average contents of the transcript with id 5?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT avg( T1.student_enrolment_id) FROM Student_Enrolment AS T1 WHERE T1.degree_program_id = 9",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average enrolment of students who are in the degree program with id 9?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT avg( T1.semester_id) FROM Semesters AS T1 WHERE T1.semester_description = \"t\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of semesters for the semesters with description \"t\"?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T2.department_id = (SELECT max( T23.department_id) FROM Degree_Programs AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the other details of the department that has the maximum number of degree programs?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.semester_description FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id = (SELECT max( T23.student_enrolment_id) FROM Student_Enrolment AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the descriptions of the semesters with the highest number of students enrolled?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.cell_mobile_number FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.address_id = (SELECT max( T23.address_id) FROM Addresses AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the cell phone numbers of the students who have the address with the largest address id?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.degree_program_id FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.department_id = (SELECT max( T23.department_id) FROM Degree_Programs AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the id of the degree program that has the maximum department id among all the degree programs.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.date_first_registered FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T2.student_enrolment_id = (SELECT max( T23.student_enrolment_id) FROM Student_Enrolment AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the dates of the first registration of the students with the highest number of enrollments?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_course_id FROM Student_Enrolment_Courses AS T1 JOIN Student_Enrolment AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id WHERE T2.student_enrolment_id = (SELECT max( T23.student_enrolment_id) FROM Student_Enrolment AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the ids of the courses with the most enrolled students?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_enrolment_id FROM Student_Enrolment AS T1 JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id WHERE T2.semester_id = (SELECT max( T23.semester_id) FROM Semesters AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the last enrolled student?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.semester_id, T2.degree_program_id FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id JOIN Students AS T3 ON T1.student_id = T3.student_id WHERE T3.other_student_details = \"non\" and T2.department_id = 4",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the semester ids and the degree program ids of the students whose other details are \"non\" and whose department id is 4?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.department_description, T2.degree_summary_description FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id JOIN Student_Enrolment AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.semester_id = 13 and T2.degree_summary_name = \"Bachelor\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the department description and degree summary description of the Bachelor degree program which is enrolled in semester 13.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.first_name, T2.line_2 FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id JOIN Student_Enrolment AS T3 ON T1.student_id = T3.student_id WHERE T3.degree_program_id = 10 and T2.line_1 = \"186 Evan Motorway Apt. 409\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the first name and line 2 of address for all the students who are enrolled in the degree program with id 10 and live at \"186 Evan Motorway Apt. 409\".",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.email_address, T2.other_address_details FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id JOIN Student_Enrolment AS T3 ON T1.student_id = T3.student_id WHERE T3.student_id = 14 and T2.address_id = 15",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the email address and other address details of the student with the student id of 14 and the address id of 15?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.transcript_date FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id WHERE T2.student_course_id = 2 GROUP BY T1.transcript_date  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the most recent transcript contents for the course with id 2?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.course_id FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id WHERE T2.student_course_id = 1 GROUP BY T1.course_id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the id of the course with the most enrollments for the student with id 1?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id WHERE T2.section_description = \"provident\" GROUP BY T1.other_details  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the other details of the course that has the section description \"provident\" and has the highest number of students.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.semester_description FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_id = 5 GROUP BY T1.semester_description  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the description of the semester in which the student with the id 5 was enrolled the most?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T2.degree_summary_name = \"Bachelor\" GROUP BY T1.department_id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the department that has the most students enrolled in the program with the degree summary name \"Bachelor\".",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_enrolment_id FROM Student_Enrolment AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id WHERE T2.course_id = 6 GROUP BY T1.student_enrolment_id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the student who enrolled in the most courses with id 6.",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.course_id FROM Courses AS T1        EXCEPT SELECT T2.course_id FROM Courses AS T2 WHERE T2.course_description = \"b\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of courses whose description does not contain the letter 'b'?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.other_details FROM Transcripts AS T1        EXCEPT SELECT T2.other_details FROM Transcripts AS T2 WHERE T2.transcript_date = \"1998-11-22 12:18:29\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the other details of the transcripts that were not recorded on Nov 22 1998 12:18:29?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.department_id FROM Departments AS T1        EXCEPT SELECT T2.department_id FROM Departments AS T2 WHERE T2.department_description = \"nisi\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of departments that do not have the description \"nisi\"?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.student_course_id FROM Transcript_Contents AS T1        EXCEPT SELECT T2.student_course_id FROM Transcript_Contents AS T2 WHERE T2.transcript_id = 15",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the course ids of the transcripts that do not have the transcript with id 15?",
    "db_id": "student_transcripts_tracking"
  },
  {
    "query": "SELECT T1.Language FROM countrylanguage AS T1 WHERE T1.Percentage = 27.8",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the languages of the countries with a percentage of 27.8?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Population FROM city AS T1 WHERE T1.ID = 1953",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the population of the city with the ID 1953?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.HeadOfState FROM country AS T1 WHERE T1.Region = \"Eastern Asia\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the head of states of the countries in the region \"Eastern Asia\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.ID FROM city AS T1 WHERE T1.District = \"Kabol\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the id of all cities in district \"Kabol\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.HeadOfState FROM country AS T1 WHERE T1.Region = \"North America\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the head of states of the countries in the region \"North America\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IsOfficial FROM countrylanguage AS T1 WHERE T1.Percentage = 1.4",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the official languages of the countries with a percentage of 1.4?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.seq FROM sqlite_sequence AS T1 WHERE T1.name = \"city\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the sequence number of the column named \"city\".",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IndepYear FROM country AS T1 WHERE T1.Code = \"GMB\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the independent years of the country with code GMB?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.name FROM sqlite_sequence AS T1 WHERE T1.seq = \"4079\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the name of the 40th sequence in the database?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode, count(*) FROM countrylanguage AS T1  GROUP BY T1.CountryCode",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all country codes and the number of languages for each country.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.seq, count(*) FROM sqlite_sequence AS T1  GROUP BY T1.seq",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all sequence and the number of database associated with each sequence.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Code, count(*) FROM country AS T1  GROUP BY T1.Code",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all country codes and the number of countries with that code.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Population, count(*) FROM city AS T1  GROUP BY T1.Population",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the population of cities and the number of cities with that population.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.ID, count(*) FROM city AS T1  GROUP BY T1.ID",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the id of each city and the number of scientists in that city.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Capital, count(*) FROM country AS T1  GROUP BY T1.Capital",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all capital cities and the number of countries that have each capital.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.LifeExpectancy, count(*) FROM country AS T1  GROUP BY T1.LifeExpectancy",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the life expectancy of countries and the number of countries in each life expectancy range.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IsOfficial, count(*) FROM countrylanguage AS T1  GROUP BY T1.IsOfficial",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all official languages and the number of countries that use each official language.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.name, count(*) FROM sqlite_sequence AS T1  GROUP BY T1.name",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all sequence names and the number of entries associated with each sequence.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.GovernmentForm, count(*) FROM country AS T1  GROUP BY T1.GovernmentForm",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all government forms and the number of countries that have each form.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT count(*) FROM countrylanguage AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many languages are there in each country?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT count(*) FROM sqlite_sequence AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many sequence exist in the database?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT count(*) FROM city AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many cities exist?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Population, T1.IndepYear FROM country AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all population and independence year of all countries.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode, T1.Percentage FROM countrylanguage AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show the country code and percentage for all languages in each country.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Language, T1.IsOfficial FROM countrylanguage AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all languages and whether they are official languages of countries.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Continent, T1.GovernmentForm FROM country AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all continents and government forms of countries.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.seq, T1.name FROM sqlite_sequence AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the sequence and name for each sqlite sequence?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.GovernmentForm, T1.Code FROM country AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all government forms and codes of all countries.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.LifeExpectancy, T1.HeadOfState FROM country AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the life expectancies and head of states of all countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.District, T1.Population FROM city AS T1 WHERE T1.CountryCode = \"NER\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the district and population of the cities in the country with country code \"NER\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.GovernmentForm, T1.LocalName FROM country AS T1 WHERE T1.GNPOld = 755.0",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the government form and local name of the country whose GNPOld is 755.0?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Code2, T1.Population FROM country AS T1 WHERE T1.GovernmentForm = \"Nonmetropolitan Territory of New Zealand\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the code2 and population of the country with government form \"Nonmetropolitan Territory of New Zealand\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Name, T1.Population FROM city AS T1 WHERE T1.ID = 134",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the name and population of the city with ID 134?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.GNPOld, T1.Population FROM country AS T1 WHERE T1.LocalName = \"Magyarorsz\u00e1g\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the old and the population of the country called Magyarorsz\u00e1g?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.LocalName, T1.LifeExpectancy FROM country AS T1 WHERE T1.GovernmentForm = \"Dependent Territory of the US\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the local names and life expectancies of the countries that have the government form \"Dependent Territory of the US\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode, T1.District FROM city AS T1 WHERE T1.Name = \"Ladysmith\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the country code and district of the city called Ladysmith?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Continent, T1.Code FROM country AS T1 WHERE T1.LifeExpectancy = 77.7",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the continents and codes of the countries with life expectancy of 77.7?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Language, T1.Percentage FROM countrylanguage AS T1 WHERE T1.CountryCode = \"HRV\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the language and percentage of the language used in Croatia?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IsOfficial, T1.Percentage FROM countrylanguage AS T1 WHERE T1.CountryCode = \"BIH\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the official languages and their percentage of the total population of the country with country code \"BIH\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IndepYear FROM country AS T1  GROUP BY T1.IndepYear  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the year in which the most countries gained independence.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1  GROUP BY T1.CountryCode  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which country has the most languages?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.name FROM sqlite_sequence AS T1  GROUP BY T1.name  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the name of the sequence with the most number of entries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.GovernmentForm FROM country AS T1  GROUP BY T1.GovernmentForm  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which government form is used by the most countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode FROM city AS T1  GROUP BY T1.CountryCode  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the country code of the city that has the most number of cities?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Percentage FROM countrylanguage AS T1  GROUP BY T1.Percentage  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the percentage of languages spoken in the country with the most languages?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.seq FROM sqlite_sequence AS T1  GROUP BY T1.seq  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the sequence of the database that has the most number of tables.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT count(*) FROM country AS T1 WHERE T1.Code2 = \"SC\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many countries have the code2 \"SC\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT count(*) FROM country AS T1 WHERE T1.IndepYear = 1980",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many countries were independent in year 1980?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT count(*) FROM countrylanguage AS T1 WHERE T1.Percentage = 13.7",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many languages are used in the country with the percentage of 13.7?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT count(*) FROM sqlite_sequence AS T1 WHERE T1.name = \"city\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many city exist in the database?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT count(*) FROM countrylanguage AS T1 WHERE T1.Percentage = 21.2",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many languages are used in the country with the percentage of 21.2?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT count(*) FROM country AS T1 WHERE T1.SurfaceArea = 1.5",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many countries have an area of 1.5 square kilometers?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT count(*) FROM city AS T1 WHERE T1.ID = 1905",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many cities have an ID of 1905?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT count(*) FROM sqlite_sequence AS T1 WHERE T1.seq = \"4079\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many sequences have the value 4079?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT count(*) FROM countrylanguage AS T1 WHERE T1.Language = \"Sumo\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many countries have the language Sumo?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.GNPOld FROM country AS T1    ORDER BY T1.IndepYear DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the oldest country in the world?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Language FROM countrylanguage AS T1    ORDER BY T1.Percentage DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the language of the country that has the highest percentage?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.District FROM city AS T1    ORDER BY T1.ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the district of the city with the largest id?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1    ORDER BY T1.Percentage DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the code of the country that has the highest percentage of speakers?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Population FROM city AS T1    ORDER BY T1.ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the population of the city with the largest ID?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Capital FROM country AS T1    ORDER BY T1.Population DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the capital of the country with the largest population?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.GNPOld FROM country AS T1    ORDER BY T1.LifeExpectancy DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the oldest country in the world?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.LifeExpectancy FROM country AS T1    ORDER BY T1.GNPOld DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the life expectancy of the country with the highest GNP old?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.SurfaceArea FROM country AS T1    ORDER BY T1.IndepYear DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the surface area of the country that gained independence last?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode FROM city AS T1    ORDER BY T1.Population DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the country code of the city with the largest population?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.seq) FROM sqlite_sequence AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct sequence numbers are in use?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM country AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many countries are there in total?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.GNPOld) FROM country AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different old GNPs are there in each country?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Capital) FROM country AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different capitals are there in countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.CountryCode) FROM city AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct countries are there?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.name) FROM sqlite_sequence AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct sequence names are there?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.LocalName) FROM country AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many countries are there on the planet?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Percentage) FROM countrylanguage AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct percentage values are there for languages in countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.Percentage) FROM countrylanguage AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average percentage of native speakers for all countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.IndepYear) FROM country AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average independence year for all countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.Population) FROM city AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average population of the cities?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.SurfaceArea) FROM country AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average surface area of countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.Population) FROM country AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average population of the countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.ID) FROM city AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average id of cities?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.GNP) FROM country AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average gross national product of the countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.Capital) FROM country AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average capital of countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.LifeExpectancy) FROM country AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average life expectancy of countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Language FROM countrylanguage AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the languages of all countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Population FROM country AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Show all countries' population.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.seq FROM sqlite_sequence AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "WHERE sqlite_sequence.name = \"id\" ->What is the sequence for the id column?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IndepYear FROM country AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the independent years of countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Code FROM country AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the codes of all countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.name FROM sqlite_sequence AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": " JOIN sqlite_statements AS sqlite_statement ON sqlite_sequence.sqlite_id  =  sqlite_statement.sqlite_sequence_id -> WHERE sqlite_statement.sqlite_sequence_id = 1 -> ->What is the name of the sequence used by the first statement?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.District FROM city AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the districts of the cities?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.LocalName FROM country AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the local names of all countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.HeadOfState FROM country AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the head of states of all countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Population FROM city AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What is the population of each city?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT T1.CountryCode FROM countrylanguage AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct country codes of languages?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT T1.Region FROM country AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Show all distinct region names of countries.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT T1.ID FROM city AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct ids of all cities?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT T1.IsOfficial FROM countrylanguage AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Show all distinct languages that are official.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT T1.seq FROM sqlite_sequence AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct sequence numbers of all sqlite sequences?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT T1.Capital FROM country AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the capital cities of all countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT T1.Code2 FROM country AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Show all distinct country codes.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT T1.Population FROM city AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct population values of the cities?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT T1.Name FROM city AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct names of cities?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT T1.name FROM sqlite_sequence AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": " JOIN sqlite_stat3 AS sqlite_stat ON sqlite_stat.tablespace_name = sqlite_sequence.name AND sqlite_stat.name = \"total_changes\" -> WHERE sqlite_stat.value = (SELECT COUNT(*) FROM sqlite_change) -> ->What are the distinct names of sequence used by the total changes statistic?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IndepYear FROM country AS T1     ORDER BY T1.SurfaceArea ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the independent years of countries in ascending order of surface area.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Name FROM city AS T1     ORDER BY T1.ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of cities in ascending order of their IDs.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.District FROM city AS T1     ORDER BY T1.Population ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the district of cities in ascending order of population.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1     ORDER BY T1.Percentage ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the country codes of languages in ascending order of percentage.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IsOfficial FROM countrylanguage AS T1     ORDER BY T1.Percentage ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the official languages of countries in ascending order of percentage.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Population FROM city AS T1     ORDER BY T1.ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the population of cities in ascending order of their IDs.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.LocalName FROM country AS T1     ORDER BY T1.IndepYear ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the local names of countries in ascending order of independence year.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.ID FROM city AS T1     ORDER BY T1.Population ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the id of cities in ascending order of population.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.GNPOld FROM country AS T1     ORDER BY T1.LifeExpectancy ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the old generation participation ratio of the countries in ascending order of life expectancy.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Name FROM country AS T1     ORDER BY T1.IndepYear ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of countries in ascending order of independence year.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IndepYear FROM country AS T1     ORDER BY T1.Capital DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the independent year of countries in descending order of capital.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.District FROM city AS T1     ORDER BY T1.ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show all district names of cities in descending order of city IDs.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IsOfficial FROM countrylanguage AS T1     ORDER BY T1.Percentage DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the languages that have the highest percentage of speakers as the official language of a country, ordered by the percentage in descending order.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.GNPOld FROM country AS T1     ORDER BY T1.Capital DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the old capital of countries in descending order of capital.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Language FROM countrylanguage AS T1     ORDER BY T1.Percentage DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the languages of countries in descending order of percentage of speakers.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.GovernmentForm FROM country AS T1     ORDER BY T1.GNP DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the government forms of countries in descending order of GNP.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.ID FROM city AS T1     ORDER BY T1.Population DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the id of cities in descending order of population.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1     ORDER BY T1.Percentage DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the country code for languages with the highest percentage.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Name FROM city AS T1     ORDER BY T1.ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of cities in descending order of their IDs.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IsOfficial, T1.Language FROM countrylanguage AS T1     ORDER BY T1.Language ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the official languages and their ascending order?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Language, T1.Percentage FROM countrylanguage AS T1     ORDER BY T1.Percentage ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the languages and their percentages of the countries in ascending order of percentages.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode, T1.IsOfficial FROM countrylanguage AS T1     ORDER BY T1.IsOfficial ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the country code and whether the language is official for all countries.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.GNPOld, T1.Capital FROM country AS T1     ORDER BY T1.Capital ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show the old names and capitals of countries in ascending order of capital.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.seq, T1.name FROM sqlite_sequence AS T1     ORDER BY T1.name ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List all sequence names and their corresponding sequence numbers.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IndepYear, T1.Population FROM country AS T1     ORDER BY T1.Population ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show the independent year and population of countries.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Percentage, T1.IsOfficial FROM countrylanguage AS T1     ORDER BY T1.IsOfficial ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show the percentage of each language and whether it is official for all countries.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Population, T1.Name FROM country AS T1     ORDER BY T1.Name ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the population and name of countries in ascending order of country name.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IsOfficial FROM countrylanguage AS T1 WHERE T1.Percentage = 1.5 and T1.Language = \"Sena\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the official languages of the countries that have a percentage of 1.5 and use the language \"Sena\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Name FROM city AS T1 WHERE T1.Population = 409632 and T1.ID = 2057",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the name of the city that has a population of 409632 and an ID of 2057?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.GNP FROM country AS T1 WHERE T1.Code2 = \"MY\" and T1.GNPOld = 4935.0",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the old GNP of the country with code 2 \"MY\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode FROM city AS T1 WHERE T1.Population = 99693 and T1.Name = \"Malita\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the country code of the city called Malita with population 99693?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.LifeExpectancy FROM country AS T1 WHERE T1.Capital = 2515 and T1.Name = \"Madagascar\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the life expectancy of the capital city of Madagascar?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Code FROM country AS T1 WHERE T1.LocalName = \"British Virgin Islands\" and T1.GNPOld = 5924.0",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the code of the country with the local name \"British Virgin Islands\" and the gross national product old figure 5924.0?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Region FROM country AS T1 WHERE T1.SurfaceArea = 801590.0 and T1.Population = 1972000",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the regions of the countries that have surface area 801590.0 and population 1972000?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Continent FROM country AS T1 WHERE T1.Population = 156483000 and T1.Code = \"CIV\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the continent of the country with the population 156483000 and code \"CIV\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1 WHERE T1.Percentage = 86.2 or T1.IsOfficial = \"T\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the country codes of languages that have a percentage of 86.2 or are marked as official?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Percentage FROM countrylanguage AS T1 WHERE T1.IsOfficial = \"T\" or T1.Language = \"Mbum\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the percentage of the languages that are either official or language is Mbum in each country?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Code FROM country AS T1 WHERE T1.Region = \"Central America\" or T1.GovernmentForm = \"US Territory\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the codes of the countries in Central America or are governed by the US Territory government form?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IsOfficial FROM countrylanguage AS T1 WHERE T1.Language = \"Ga-adangme\" or T1.CountryCode = \"WLF\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the official languages of the countries in Ga-adangme or with country code WLF?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Language FROM countrylanguage AS T1 WHERE T1.Percentage = 21.4 or T1.IsOfficial = \"T\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the languages of the countries with percentage of population below the poverty line of 21.4 or with official language \"T\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1 WHERE T1.Percentage = 4.3 or T1.IsOfficial = \"F\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the country codes of languages that have a percentage of 4.3 or are \"F\" official languages?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Name FROM city AS T1 WHERE T1.Population = 473276 or T1.ID = 2142",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the names of cities that have a population of 473276 or have an ID of 2142?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Name FROM country AS T1 WHERE T1.LocalName = \"Shqip\u00ebria\" or T1.Code = \"TZA\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the name of the country whose local name is Shqip\u00ebria or whose code is TZA?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Continent FROM country AS T1 WHERE T1.Name = \"Dominican Republic\" or T1.Code = \"TMP\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the continent of the country with the name \"Dominican Republic\" or country code \"TMP\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1 WHERE T1.IsOfficial != \"F\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the country codes of languages that are not official?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IsOfficial FROM countrylanguage AS T1 WHERE T1.CountryCode != \"CYP\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the languages that are official but do not have the country code \"CYP\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.seq FROM sqlite_sequence AS T1 WHERE T1.name != \"city\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the sequence number of the sequence named \"city\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.GovernmentForm FROM country AS T1 WHERE T1.LifeExpectancy != 72.4",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What government forms are used in countries with a life expectancy that is not 72.4?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.name FROM sqlite_sequence AS T1 WHERE T1.seq != \"4079\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of sequences whose sequence number is not 4079?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Name FROM city AS T1 WHERE T1.District != \"Basse-Normandie\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of all cities that have a district that is not \"Basse-Normandie\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Percentage FROM countrylanguage AS T1 WHERE T1.IsOfficial != \"T\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the percentage of official languages that are not official?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Population FROM city AS T1 WHERE T1.CountryCode != \"ATG\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the population of all the cities that have a country code that is not \"ATG\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1 WHERE T1.Language != \"Tagalog\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the country codes of languages that are not \"Tagalog\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1 WHERE T1.Language != \"Berberi\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the country codes of languages that are not \"Berberi\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Population) FROM country AS T1 WHERE T1.GNP = 212.0",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the distinct number of countries that have GNP of 212.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.CountryCode) FROM city AS T1 WHERE T1.District = \"Cheju\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct countries are there in the city that has the district \"Cheju\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.LocalName) FROM country AS T1 WHERE T1.GovernmentForm = \"Federal Republic\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many countries have the government form \"Federal Republic\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM country AS T1 WHERE T1.GNPOld = 401461.0",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many countries have an GNP of 401461.0?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Capital) FROM country AS T1 WHERE T1.HeadOfState = \"Eduard \u0160evardnadze\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many countries have Eduard \u0160evardnadze as the head of state?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM city AS T1 WHERE T1.CountryCode = \"CYM\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many different cities are there in the country with code CYM?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.seq) FROM sqlite_sequence AS T1 WHERE T1.name = \"city\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many different city names are in use?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.name) FROM sqlite_sequence AS T1 WHERE T1.seq = \"4079\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the number of distinct sequences that have the sequence 4079.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Continent FROM country AS T1 WHERE T1.LifeExpectancy > 50.1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the continents of the countries whose life expectancies are higher than 50.1?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.LifeExpectancy FROM country AS T1 WHERE T1.IndepYear > 1838",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the life expectancies of countries that became independent after 1838?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode FROM city AS T1 WHERE T1.ID > 260",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the country codes of cities with an ID greater than 260?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Name FROM city AS T1 WHERE T1.Population > 332288",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of all cities with population larger than 332288?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Language FROM countrylanguage AS T1 WHERE T1.Percentage > 20.0",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the languages used by more than 20% of the countries?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IsOfficial FROM countrylanguage AS T1 WHERE T1.Percentage > 63.6",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the official languages of countries where the percentage of people using the official language is higher than 63.6?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Name FROM city AS T1 WHERE T1.ID > 360",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of cities with an ID greater than 360?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Population FROM country AS T1 WHERE T1.Capital > 187",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the populations of countries that have capitals larger than 187?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.seq FROM sqlite_sequence AS T1 WHERE T1.name = \"city\"     INTERSECT SELECT T2.seq FROM sqlite_sequence AS T2 WHERE T2.name = \"city\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the sequence number of the only sequence that has both city and city2 in its name.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1 WHERE T1.Language = \"Kongo\"     INTERSECT SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.Language = \"Nepali\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the country codes of the languages that are both in the \"Kongo\" language and in the \"Nepali\" language?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IsOfficial FROM countrylanguage AS T1 WHERE T1.CountryCode = \"MDG\"     INTERSECT SELECT T2.IsOfficial FROM countrylanguage AS T2 WHERE T2.CountryCode = \"ISL\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Show the languages that are official in both country MDG and country ISL.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.HeadOfState FROM country AS T1 WHERE T1.SurfaceArea = 1240192.0     INTERSECT SELECT T2.HeadOfState FROM country AS T2 WHERE T2.SurfaceArea = 51197.0",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the names of heads of states of countries with both surface area 1240192.0 and 51197.0?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.District FROM city AS T1 WHERE T1.Population = 135621     INTERSECT SELECT T2.District FROM city AS T2 WHERE T2.Population = 319033",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the districts that have both a city with a population of 135621 and a city with a population of 319033?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Language FROM countrylanguage AS T1 WHERE T1.IsOfficial = \"T\"     INTERSECT SELECT T2.Language FROM countrylanguage AS T2 WHERE T2.IsOfficial = \"T\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the languages that are both official and spoken by few people?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Name FROM city AS T1 WHERE T1.ID = 53     INTERSECT SELECT T2.Name FROM city AS T2 WHERE T2.ID = 1926",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What is the name of the city with ID 53 that has a city with ID 1926?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.SurfaceArea FROM country AS T1 WHERE T1.LifeExpectancy = 56.6     INTERSECT SELECT T2.SurfaceArea FROM country AS T2 WHERE T2.LifeExpectancy = 76.1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the surface areas of the countries that have both a life expectancy of 56.6 and a life expectancy of 76.1?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1 WHERE T1.Percentage = 6.0     INTERSECT SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.Percentage = 12.4",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the country codes of languages that have both percentage of native speakers below 6.0 and percentage of native speakers below 12.4?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.ID) FROM city AS T1 WHERE T1.District = \"Managua\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average population of the cities that have the district \"Managua\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.GNP) FROM country AS T1 WHERE T1.Capital = 2401",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average GDP of the countries whose capital is 2401?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.Percentage) FROM countrylanguage AS T1 WHERE T1.Language = \"Akan\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average percentage of native speakers for the language \"Akan\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.Percentage) FROM countrylanguage AS T1 WHERE T1.CountryCode = \"ZAF\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average percentage of languages spoken in the country with country code \"ZAF\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.ID) FROM city AS T1 WHERE T1.CountryCode = \"MKD\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average population of the cities in the country with code \"MKD\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.GNP) FROM country AS T1 WHERE T1.Capital = 3016",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average GDP of the countries whose capital is 3016?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.Population) FROM country AS T1 WHERE T1.IndepYear = 1908",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average population of the countries that became independent in 1908?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.ID) FROM city AS T1 WHERE T1.CountryCode = \"COK\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average population of the cities in the country with the code \"COK\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT avg( T1.SurfaceArea) FROM country AS T1 WHERE T1.LocalName = \"Sri Lanka/Ilankai\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average surface area of the countries with the local name \"Sri Lanka/Ilankai\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Name FROM city AS T1        EXCEPT SELECT T2.Name FROM city AS T2 WHERE T2.ID = 415",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of all cities that do not have a city with id 415?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.LifeExpectancy FROM country AS T1        EXCEPT SELECT T2.LifeExpectancy FROM country AS T2 WHERE T2.GNP = 818.0",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the life expectancies of countries that do not have a GNP of 818.0?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.GNPOld FROM country AS T1        EXCEPT SELECT T2.GNPOld FROM country AS T2 WHERE T2.LocalName = \"Bolivia\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the old GNPs of countries that have \"Bolivia\" in their local name?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.IsOfficial FROM countrylanguage AS T1        EXCEPT SELECT T2.IsOfficial FROM countrylanguage AS T2 WHERE T2.Language = \"Comorian-Swahili\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the countries that do not have the language \"Comorian-Swahili\" as an official language?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.GNP FROM country AS T1        EXCEPT SELECT T2.GNP FROM country AS T2 WHERE T2.Continent = \"Asia\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Show the GNP of all countries that are not in Asia.",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.CountryCode FROM countrylanguage AS T1        EXCEPT SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.IsOfficial = \"F\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the country codes of languages that are not official?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.seq FROM sqlite_sequence AS T1        EXCEPT SELECT T2.seq FROM sqlite_sequence AS T2 WHERE T2.name = \"city\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the sequence numbers of sqlite sequences that do not have the name \"city\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Percentage FROM countrylanguage AS T1        EXCEPT SELECT T2.Percentage FROM countrylanguage AS T2 WHERE T2.Language = \"Mongo\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the percentage of languages that are not Mongo?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.LocalName FROM country AS T1        EXCEPT SELECT T2.LocalName FROM country AS T2 WHERE T2.Code2 = \"HU\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of countries that do not have the code \"HU\"?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.Language FROM countrylanguage AS T1        EXCEPT SELECT T2.Language FROM countrylanguage AS T2 WHERE T2.Percentage = 17.9",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the languages that are not used by any country with an percentage of below 18?",
    "db_id": "world_1"
  },
  {
    "query": "SELECT T1.FlightNo FROM flights AS T1 WHERE T1.DestAirport = \" AAF\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the flight numbers of all flights that destination airport is AAF.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.CountryAbbrev FROM airports AS T1 WHERE T1.AirportName = \"Reilly AHP \"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the abbreviations of the countries that have an airport named \"Reilly AHP\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Country FROM airports AS T1 WHERE T1.City = \"Apple Valley \"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the countries of the airports in Apple Valley?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline FROM airlines AS T1 WHERE T1.Country = \"USA\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Return the airlines that have their country set to \"USA\".",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.SourceAirport FROM flights AS T1 WHERE T1.Airline = 9",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the source airports of the airlines with id 9?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Country FROM airports AS T1 WHERE T1.AirportCode = \"ALM\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the country that the airport with code \"ALM\" is in?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.uid FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.FlightNo = 1244",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the uid of the airline that operated flight no 1244?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.FlightNo = 34",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of airports that the flight with the number 34 took off from?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.SourceAirport = \" AXB\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of the airports that the flights with the source airport AXB arrive at?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Country FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.DestAirport = \" CAK\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the countries of the airports that the destination airport for the flight is \"CAK\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.AirportName = \"Lee \"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the flight numbers of the planes that depart from the airport named Lee.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.AirportCode = \"AIA\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the airline of all the flights that depart from the airport with code \"AIA\".",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Country FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.FlightNo = 609",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the countries that the flight with code 609 took off from?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.uid, count(*) FROM airlines AS T1  GROUP BY T1.uid",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all uids and the number of airlines with each uid.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Country, count(*) FROM airports AS T1  GROUP BY T1.Country",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all countries and the number of airports in each country.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline, count(*) FROM airlines AS T1  GROUP BY T1.Airline",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all airlines and the number of airlines belonging to each airline.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportName, count(*) FROM airports AS T1  GROUP BY T1.AirportName",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the names of airports and the number of airports in each name.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.DestAirport, count(*) FROM flights AS T1  GROUP BY T1.DestAirport",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all destination airports and the number of flights going to each one.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.uid, count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline  GROUP BY T1.uid",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the uid of each airline and the number of flights it has.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.City, count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport  GROUP BY T1.City",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the city names of airports and the number of flights going out of each city.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Abbreviation, count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline  GROUP BY T1.Abbreviation",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the abbreviation of each airline and the number of its flights.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.FlightNo, count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode  GROUP BY T1.FlightNo",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the flight number and the number of flights that land at the same airport for each flight number.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportName, count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport  GROUP BY T1.AirportName",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the names of airports and the number of flights going on each airport.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Abbreviation, T1.uid FROM airlines AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List all abbreviation and uid of airlines.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.CountryAbbrev, T1.AirportName FROM airports AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the country abbreviations and names of all airports?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline, T1.uid FROM airlines AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List all airlines and their ids.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.CountryAbbrev, T1.AirportCode FROM airports AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the country abbreviations and airport codes of all airports?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.CountryAbbrev, T1.Country FROM airports AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the country abbreviations and names of all airports?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Country, T1.Abbreviation FROM airlines AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the countries and abbreviations of airlines?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.SourceAirport, T2.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the source airports and airlines of the flights?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.FlightNo, T2.AirportName FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show the flight number and the name of the airport for all flights.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.CountryAbbrev, T2.DestAirport FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show all country abbreviations and the number of flights that leave from the airports in each country.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline, T2.SourceAirport FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show all airlines and the source airports of the flights.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.uid, T2.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show all the uids of airlines and the number of flights they have.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.FlightNo, T2.uid FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the flight numbers and uids of airlines that have made flights?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline, T2.DestAirport FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show all airlines and the airports where they have flights.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.City, T1.Country FROM airports AS T1 WHERE T1.AirportName = \"Merrill Field \"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the city and country of the airport named Merrill Field?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.FlightNo, T1.DestAirport FROM flights AS T1 WHERE T1.SourceAirport = \" ANQ\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the flight numbers and destination airports of the flights that originate from airport ANQ?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline, T1.SourceAirport FROM flights AS T1 WHERE T1.FlightNo = 370",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the airline and the source airport of the flight with the number 370?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline, T1.SourceAirport FROM flights AS T1 WHERE T1.DestAirport = \" AKI\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the airline and the source airport of the flights whose destination airport is \"AKI\".",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline, T1.FlightNo FROM flights AS T1 WHERE T1.SourceAirport = \" AHT\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the airline and flight number of all flights that originate in airport AHT?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Country, T1.City FROM airports AS T1 WHERE T1.CountryAbbrev = \"US\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the country and city of all the airports in US.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.CountryAbbrev, T1.City FROM airports AS T1 WHERE T1.Country = \"United States \"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the country abbrevs and cities of all airports in United States?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.City FROM airports AS T1  GROUP BY T1.City  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which city has the most airports?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Abbreviation FROM airlines AS T1  GROUP BY T1.Abbreviation  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which abbreviation is used by the most airlines?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT count(*) FROM airports AS T1 WHERE T1.City = \"Amarillo \"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many airports are there in the city of Amarillo?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT count(*) FROM airlines AS T1 WHERE T1.Abbreviation = \"Continental\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many airlines have the abbreviation Continental?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT count(*) FROM flights AS T1 WHERE T1.SourceAirport = \" APV\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many flights have the airport APV as its source airport?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT count(*) FROM airlines AS T1 WHERE T1.Airline = \"JetBlue Airways\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many airlines have the airline JetBlue Airways?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.SourceAirport FROM flights AS T1    ORDER BY T1.Airline DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the name of the airport from which the most flights departed?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.DestAirport FROM flights AS T1    ORDER BY T1.FlightNo DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the destination airport of the last flight?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport    ORDER BY T2.FlightNo DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the code of the airport from which the most flights departed?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.uid FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline    ORDER BY T2.FlightNo DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the uid of the airline that took the last flight?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport    ORDER BY T2.Airline DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the city of the airport that has the airline with the highest rank?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport    ORDER BY T2.FlightNo ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the airport that had the first flight?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport    ORDER BY T2.FlightNo ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the city of the airport that the first flight took off from?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.SourceAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid    ORDER BY T2.uid ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the airport that has the airline with the uid of 1?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline    ORDER BY T2.Airline ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the airline that took the most number of flights?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline    ORDER BY T2.FlightNo ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the airline that took the last flight?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.CountryAbbrev FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport    ORDER BY T2.FlightNo ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the abbreviation of the country where the first flight took off?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.DestAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid    ORDER BY T2.uid ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the destination airport of the airline with the smallest uid?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.CountryAbbrev FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport    ORDER BY T2.Airline ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the abbreviation of the country where the destination airport of the last flight is located?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport    ORDER BY T2.FlightNo ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the code of the airport from which the first flight took off?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.uid, T1.Abbreviation FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline    ORDER BY T2.FlightNo DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the uid and abbreviation of the airline that took the last flight?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.DestAirport, T1.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid    ORDER BY T2.uid DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the destination airport and airline of the most recent flight?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.AirportCode) FROM airports AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct airport codes are there?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Country) FROM airports AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many countries have at least one airport?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.SourceAirport) FROM flights AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different airports are used as the source of flights?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Country) FROM airlines AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct countries have airlines?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.FlightNo) FROM flights AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different flight numbers are there?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Airline) FROM flights AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different airlines operate flights?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT avg( T1.uid) FROM airlines AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average uid of airlines?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT avg( T1.Airline) FROM flights AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average number of flights for all airlines?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportName FROM airports AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the names of all airports?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Country FROM airports AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the countries of the airports?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportCode FROM airports AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the airport codes for all airports?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline FROM flights AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the names of airlines that have flights?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.DestAirport FROM flights AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the airports that have flights?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Abbreviation FROM airlines AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the abbreviations of all airlines?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT T1.FlightNo FROM flights AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct flight numbers?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT T1.DestAirport FROM flights AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct airports that have been visited by flights?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT T1.AirportName FROM airports AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct names of all airports?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT T1.AirportCode FROM airports AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct airport codes?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.SourceAirport FROM flights AS T1     ORDER BY T1.FlightNo ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the source airports of flights in ascending order of flight number.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.DestAirport FROM flights AS T1     ORDER BY T1.FlightNo ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the destination airports of flights in ascending order of flight number.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline FROM airlines AS T1     ORDER BY T1.uid ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the airlines in ascending order of uid.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline FROM flights AS T1     ORDER BY T1.FlightNo ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the airlines of the flights in ascending order of flight number.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.SourceAirport FROM flights AS T1     ORDER BY T1.FlightNo DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the source airports of flights in descending order of flight number.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline, T1.DestAirport FROM flights AS T1     ORDER BY T1.DestAirport ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the airline and destination airport of all flights in ascending order of destination airport.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Abbreviation, T1.Country FROM airlines AS T1     ORDER BY T1.Country ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the abbreviation of airlines and the country they are in, ordered by country ascending.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportCode, T1.AirportName FROM airports AS T1     ORDER BY T1.AirportName ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the airport codes and names in ascending order of airport names.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.FlightNo, T1.SourceAirport FROM flights AS T1     ORDER BY T1.SourceAirport ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the flight numbers and the source airports of the flights in ascending order of the source airport.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Country, T1.Abbreviation FROM airlines AS T1     ORDER BY T1.Abbreviation ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the country and abbreviation of airlines in ascending order of abbreviation.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Country, T1.AirportName FROM airports AS T1     ORDER BY T1.AirportName ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the country and airport name of all airports in ascending order of airport name.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.uid, T1.Airline FROM airlines AS T1     ORDER BY T1.Airline ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the uid and Airline of all airlines in ascending order of Airline.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.uid FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T2.DestAirport = T3.AirportCode WHERE T2.SourceAirport = \" AND\" and T3.AirportCode = \"ALB\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the uid of airlines that have an airport in ALB.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.FlightNo FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid JOIN airports AS T3 ON T1.DestAirport = T3.AirportCode WHERE T2.Country = \"USA\" and T3.City = \"Alameda \"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the flight numbers of the airlines which operate from the airport whose city is Alameda and the country is USA.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.uid FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T2.DestAirport = T3.AirportCode WHERE T2.Airline = 6 and T3.AirportCode = \"AET\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the uid of airlines that operate at the airport with code \"AET\".",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport JOIN airlines AS T3 ON T2.Airline = T3.uid WHERE T2.FlightNo = 845 and T3.Abbreviation = \"American\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the names of the airports that the flight with the code 845 took off from and whose airline has the abbreviation \"American\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.uid FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T2.DestAirport = T3.AirportCode WHERE T2.Airline = 6 and T3.AirportCode = \"ATO\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the uid of airlines that operate at the airport with code \"ATO\".",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.Airline = 6 or T2.Airline = 5",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the names of the airports that either have airline 6 or 5?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.DestAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Abbreviation = \"Continental\" or T2.Abbreviation = \"JetBlue\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the airports that either the airline with the uid \"Continental\" or \"JetBlue\" flies to?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.SourceAirport = \" APV\" or T2.SourceAirport = \" AUK\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the names of the airports that have either the airport APV or AUK as the origin of the flights?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = \" EDF\" or T2.DestAirport = \" AND\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the airlines that have at least one flight destination airport is EDF or AND.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.SourceAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Country = \"USA\" or T2.Country = \"USA\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the source airports of the flights that the airlines with country \"USA\" or \"USA\" have.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.SourceAirport = \" ATE\" or T2.SourceAirport = \" ALZ\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the cities of the airports that the source airport is \"ATE\" or \"ALZ\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.FlightNo = 80 or T2.FlightNo = 166",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the cities that the flight with number 80 or 166 took off from or landed at?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.uid FROM airlines AS T1 WHERE T1.Abbreviation = \"Allegiant\" and T1.Country = \"USA\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the uid of the airline whose abbreviation is \"Allegiant\" and whose country is \"USA\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Abbreviation FROM airlines AS T1 WHERE T1.Airline = \"Virgin America\" and T1.uid = 10",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the abbreviations of all airlines with airline \"Virgin America\" and uid 10?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportName FROM airports AS T1 WHERE T1.CountryAbbrev = \"US \" and T1.Country = \"United States \"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the names of all airports in United States?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline FROM airlines AS T1 WHERE T1.Abbreviation = \"Allegiant\" and T1.Country = \"USA\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the airline with abbreviation \"Allegiant\" and country \"USA\".",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Airline) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T1.SourceAirport = \" ANV\" and T2.Country = \"United States \"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct airlines operate from the airport ANV in United States?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.AirportName) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T1.AirportCode = \"AKO\" and T2.SourceAirport = \" ATO\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "Find the distinct number of flights that leave from airport AKO and arrive at ATO.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.City) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T1.CountryAbbrev = \"US \" and T2.DestAirport = \" ABY\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct airports are there in US with destination airport Aby?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.City) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T1.CountryAbbrev = \"US \" and T2.DestAirport = \" ALM\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct airports are there in US with the destination airport being in ALM?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.DestAirport) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T1.SourceAirport = \" DYS\" and T2.Country = \"USA\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct airlines have flown from Dyess Air Force Base and what are the distinct destinations?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Country) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = \"Northwest Airlines\" and T2.DestAirport = \" ATO\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct airlines have a flight destination ATO?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Abbreviation FROM airlines AS T1 WHERE T1.uid = 12 or T1.Country = \"USA\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the abbreviations of airlines whose uid is 12 or whose country is \"USA\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.uid FROM airlines AS T1 WHERE T1.Abbreviation = \"USAir\" or T1.Airline = \"AirTran Airways\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the uid of airlines whose abbreviation is \"USAir\" or whose airline is \"AirTran Airways\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.SourceAirport FROM flights AS T1 WHERE T1.DestAirport = \" AIB\" or T1.FlightNo = 10",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the source airport of the flight whose destination is AIB or whose flight number is 10.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.City FROM airports AS T1 WHERE T1.AirportCode = \"ANP\" or T1.CountryAbbrev = \"US\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the city of the airport with code \"ANP\" or country abbreviation \"US\".",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.uid FROM airlines AS T1 WHERE T1.Airline = \"Southwest Airlines\" or T1.Abbreviation = \"Delta\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the uid of airlines whose Airline is \"Southwest Airlines\" or whose Abbreviation is \"Delta\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline FROM flights AS T1 WHERE T1.DestAirport = \" AXG\" or T1.SourceAirport = \" ANW\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the airlines that have either a destination airport of AXG or a source airport of ANW?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.Airline = 6 and T2.DestAirport = \" MRI\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many flights are there whose airline is 6 and destination airport is \"MRI\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT count(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Abbreviation = \"UAL\" and T2.Country = \"USA\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many flights are there for the airline with uid \"UAL\" and country \"USA\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT count(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = \" ABL\" and T2.SourceAirport = \" ABQ\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many airlines have made a flight from ABL to ABQ?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = \"Albany \" and T2.Country = \"United States \"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many flights depart from the city Albany and the country is United States?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.City FROM airports AS T1 WHERE T1.AirportCode != \"AIV\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the cities of airports whose airport code is not \"AIV\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Country FROM airports AS T1 WHERE T1.City != \" Amarillo   \"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the countries of the airports that have city \"Amarillo\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportName FROM airports AS T1 WHERE T1.Country != \"United States \"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of all airports that are not in United States?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.SourceAirport FROM flights AS T1 WHERE T1.DestAirport != \" ABR\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the source airports of the flights that do not have the destination \"ABR\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.DestAirport FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.AirportName != \"Ainsworth \"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the destination airport for all the flights that do not have the airport with the name \"Ainsworth\".",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Abbreviation FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport != \" AIA\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the abbreviations of airlines that have at least one flight whose destination airport is not \"AIA\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.uid FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport != \" ATW\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of airlines that have a flight whose destination airport is not ATW?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Abbreviation FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.FlightNo != 485",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the abbreviations of airlines that have a flight with a number other than 485?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.SourceAirport FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.CountryAbbrev != \"US\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the source airports of the flights that do not have the country abbreviation \"US\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport != \" AST\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the countries of airlines that have not sent any flight from the airport AST?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.FlightNo != 641",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of the cities that do not have the flight number 641?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.CountryAbbrev FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.SourceAirport != \" AUK\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the abbreviations of the countries that do not have an airport named \"AUK\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT T1.CountryAbbrev FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.DestAirport = \" ALM\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct country abbreviations of the airports that have an airport with code \"ALM\" as the destination airport.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT T1.Country FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.Airline = 2",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct countries that have an airport that airline 2 flies to?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT T1.DestAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = \"American Airlines\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct airports which have at least one flight from the airline with uid \"American Airlines\".",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.DestAirport = \" ANY\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct airport codes that have any destination airport?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = \"Anderson \"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct flight numbers that depart from the city \"Anderson\".",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT T1.uid FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.Airline = 9",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct uids of airlines that have an airline id of 9?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT T1.SourceAirport FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.CountryAbbrev = \"US\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct source airports of the flights that depart from an airport in the US?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Airline) FROM airlines AS T1 WHERE T1.Country = \"USA\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many airlines are there in USA?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.FlightNo) FROM flights AS T1 WHERE T1.DestAirport = \" AEX\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct flights go to the airport AEX?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.AirportName) FROM airports AS T1 WHERE T1.AirportCode = \"ADT\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the number of airports that have the code ADT.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Country) FROM airlines AS T1 WHERE T1.Abbreviation = \"Southwest\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many countries have at least one airline with abbreviation \"Southwest\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Abbreviation) FROM airlines AS T1 WHERE T1.Airline = \"Allegiant Air\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct airlines use the abbreviation \"Allegiant Air\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.AirportCode) FROM airports AS T1 WHERE T1.CountryAbbrev = \"US \"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct airports are there in the US?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.SourceAirport FROM flights AS T1 WHERE T1.FlightNo > 886",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the source airports of flights with flight numbers larger than 886?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.SourceAirport FROM flights AS T1 WHERE T1.FlightNo > 1324",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the source airports of flights with flight numbers bigger than 1324?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.SourceAirport FROM flights AS T1 WHERE T1.Airline > 9",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the source airports of the flights with an airline score higher than 9?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Abbreviation FROM airlines AS T1 WHERE T1.uid > 1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the abbreviations of airlines with ids greater than 1?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.DestAirport FROM flights AS T1 WHERE T1.FlightNo > 817",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of airports that have received flights with numbers larger than 817?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.FlightNo FROM flights AS T1 WHERE T1.Airline > 4",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the flight numbers of airlines with more than 4?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline FROM airlines AS T1 WHERE T1.uid > 2",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of airlines with uid greater than 2?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline, T2.FlightNo, T3.AirportName FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T2.DestAirport = T3.AirportCode",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Show the airline, flight number, and airport name for each flight.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Abbreviation FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline     ORDER BY T2.Airline ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the abbreviations of airlines in ascending order of airlines uid.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline     ORDER BY T2.Airline ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the airlines in ascending order of airline id.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.CountryAbbrev FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport     ORDER BY T2.Airline ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the abbreviations of the countries that have airports that are the destinations of flights operated by airlines in ascending order?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport     ORDER BY T2.FlightNo ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the codes of airports that have flights departing in ascending order of flight number?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.DestAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid     ORDER BY T2.uid ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the destination airports of the flights ordered by their uids.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport     ORDER BY T2.Airline ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the codes of airports that have flights departing from them ordered by airline?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Abbreviation FROM airlines AS T1 WHERE T1.Country = \"USA\"     INTERSECT SELECT T2.Abbreviation FROM airlines AS T2 WHERE T2.Country = \"USA\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the abbreviation of airlines that operate in both USA and Canada.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportName FROM airports AS T1 WHERE T1.CountryAbbrev = \"US\"     INTERSECT SELECT T2.AirportName FROM airports AS T2 WHERE T2.CountryAbbrev = \"US \"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the names of all the airports that are in both the US and US.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.City FROM airports AS T1 WHERE T1.Country = \"United States \"     INTERSECT SELECT T2.City FROM airports AS T2 WHERE T2.Country = \"United States \"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the cities that have both an airport in the United States and an airport in the United States?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.FlightNo FROM flights AS T1 WHERE T1.DestAirport = \" ADM\"     INTERSECT SELECT T2.FlightNo FROM flights AS T2 WHERE T2.DestAirport = \" ATW\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the flight numbers that depart from both Adm and Atw airports.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline FROM airlines AS T1 WHERE T1.Abbreviation = \"Southwest\"     INTERSECT SELECT T2.Airline FROM airlines AS T2 WHERE T2.Abbreviation = \"American\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the intersection of the airlines that have both Southwest and American.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.DestAirport FROM flights AS T1 WHERE T1.SourceAirport = \" ANW\"     INTERSECT SELECT T2.DestAirport FROM flights AS T2 WHERE T2.SourceAirport = \" AKI\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the airports that are both the source and destination of a flight that originates from Anw and destination from Aki.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline FROM airlines AS T1 WHERE T1.Country = \"USA\"     INTERSECT SELECT T2.Airline FROM airlines AS T2 WHERE T2.Country = \"USA\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the airlines that operate in both USA and Canada.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.SourceAirport FROM flights AS T1 WHERE T1.Airline = 12     INTERSECT SELECT T2.SourceAirport FROM flights AS T2 WHERE T2.Airline = 12",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the airports that are used by both airline 12 and airline 12.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Country FROM airports AS T1 WHERE T1.City = \"Alitak \"     INTERSECT SELECT T2.Country FROM airports AS T2 WHERE T2.City = \"Andrews \"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the countries that have at least one airport in the city of Alitak and at least one airport in the city of Andrews.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT avg( T1.Airline) FROM flights AS T1 WHERE T1.DestAirport = \" HMN\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of flights from the airport HMN?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT avg( T1.uid) FROM airlines AS T1 WHERE T1.Abbreviation = \"Allegiant\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of passengers that airlines with abbreviation \"Allegiant\" carry?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT avg( T1.uid) FROM airlines AS T1 WHERE T1.Country = \"USA\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of employees for airlines in USA?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT avg( T1.Airline) FROM flights AS T1 WHERE T1.DestAirport = \" AHT\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of flights from the airport AHT?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT avg( T1.FlightNo) FROM flights AS T1 WHERE T1.DestAirport = \" AOS\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of flights that depart from airport AOS?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.FlightNo FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.uid = (SELECT max( T23.uid) FROM airlines AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the flight number of the airline with the maximum uid.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.uid FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.Airline = (SELECT max( T23.Airline) FROM flights AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the uids of the airlines that have taken the most flights?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Country FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.Airline = (SELECT max( T23.Airline) FROM flights AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the countries of the airports that the airline with the most flights has used?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.City, T2.DestAirport FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport JOIN airlines AS T3 ON T2.Airline = T3.uid WHERE T3.Airline = \"Delta Airlines\" and T2.SourceAirport = \" ALM\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the city and number of departures for the airports which have an airline with uid \"Delta Airlines\" and the airport \"ALM\" as the source airport of the flights.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportCode, T2.FlightNo FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport JOIN airlines AS T3 ON T2.Airline = T3.uid WHERE T3.uid = 2 and T2.SourceAirport = \" KQA\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the code and flight number of the last flight from the airport with uid 2 which has the airport code \"KQA\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.FlightNo, T2.AirportCode FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode JOIN airlines AS T3 ON T1.Airline = T3.uid WHERE T3.Abbreviation = \"Continental\" and T2.City = \"Amityville \"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the flight number and airport code of all the flights that are operated by the airline whose abbreviation is \"Continental\" and the destination airport is in the city of \"Amityville\".",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.SourceAirport, T2.Country FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode JOIN airlines AS T3 ON T1.Airline = T3.uid WHERE T3.uid = 10 and T2.AirportCode = \"AAF\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the source airport and country for the flights that are operated by airline with uid 10 and whose destination airport code is \"AAF\".",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Country, T2.Airline FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport JOIN airlines AS T3 ON T2.Airline = T3.uid WHERE T3.Abbreviation = \"USAir\" and T2.FlightNo = 115",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the country and airline of the airport where the flight with the number 115 took off?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.AirportName, T2.FlightNo FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport JOIN airlines AS T3 ON T2.Airline = T3.uid WHERE T3.Country = \"USA\" and T2.Airline = 1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the names of airports and the flight numbers that have an airline with country code \"USA\" and airline 1 as the airline?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.SourceAirport = \" TDW\" GROUP BY T1.City  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the city where the most flights depart from the airport TDW?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Abbreviation FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.FlightNo = 902 GROUP BY T1.Abbreviation  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the abbreviation of the airline that made the most trips with flight number 902?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.uid FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.FlightNo = 753 GROUP BY T1.uid  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the uid of the airline that made the most trips with flight number 753?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.AirportCode = \"ALM\" GROUP BY T1.FlightNo  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the number of flights that depart from the airport with code \"ALM\" and sort the result by the number of flights in descending order.",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.DestAirport FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = \"American Airlines\" GROUP BY T1.DestAirport  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the airport that has the most number of flights from airline \"American Airlines\".",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T2.Airline = 1 GROUP BY T1.City  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the city where the airline with code 1 has the most flights?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.City FROM airports AS T1        EXCEPT SELECT T2.City FROM airports AS T2 WHERE T2.AirportCode = \"AXG\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the cities of the airports that do not have the airport code \"AXG\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline FROM flights AS T1        EXCEPT SELECT T2.Airline FROM flights AS T2 WHERE T2.DestAirport = \" ASE\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of airlines that do not have any flight destinationed in ASE?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.CountryAbbrev FROM airports AS T1        EXCEPT SELECT T2.CountryAbbrev FROM airports AS T2 WHERE T2.AirportCode = \"ANY\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the country abbrevivs of all airports that do not have an airport with code \"ANY\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.CountryAbbrev FROM airports AS T1        EXCEPT SELECT T2.CountryAbbrev FROM airports AS T2 WHERE T2.AirportName = \"Rick Husband Amarillo International \"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the country abbreviations of all airports except Rick Husband Amarillo International?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.Airline FROM flights AS T1        EXCEPT SELECT T2.Airline FROM flights AS T2 WHERE T2.SourceAirport = \" AXG\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of airlines that have not sent any flights from the airport \"AXG\"?",
    "db_id": "flight_2"
  },
  {
    "query": "SELECT T1.professional_id FROM Treatments AS T1 WHERE T1.treatment_id = 13",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the professional id of the treatment with id 13?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_type_code FROM Treatments AS T1 WHERE T1.professional_id = 6",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the types of treatments done by professional id 6?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.date_arrived FROM Dogs AS T1 WHERE T1.gender = \"0\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Return the arrival date of male dogs.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.first_name FROM Professionals AS T1 WHERE T1.street = \"09615 McKenzie Stravenue Apt. 128\nWest Elliottview\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the first names of all professionals who live on 09615 McKenzie Stravenue Apt. 128West Elliottview?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.breed_name FROM Breeds AS T1 WHERE T1.breed_code = \"ESK\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the name of the Eskimo dog breed?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.role_code FROM Professionals AS T1 WHERE T1.first_name = \"Karley\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the role codes of all professionals whose first name is \"Karley\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_type_description FROM Treatment_Types AS T1 WHERE T1.treatment_type_code = \"WALK\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the description of the treatment type with the code \"WALK\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.cell_number, count(*) FROM Professionals AS T1  GROUP BY T1.cell_number",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the cell number and the number of professionals in each cell.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_type_code, count(*) FROM Treatments AS T1  GROUP BY T1.treatment_type_code",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all treatment types and the number of treatments in each type.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.dog_id, count(*) FROM Treatments AS T1  GROUP BY T1.dog_id",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many dogs received different treatments?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.breed_name, count(*) FROM Breeds AS T1  GROUP BY T1.breed_name",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all breed names and the number of dogs owned by each breeder.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_type_code, count(*) FROM Treatment_Types AS T1  GROUP BY T1.treatment_type_code",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the different treatment types and the number of treatments in each type.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.breed_code, count(*) FROM Breeds AS T1  GROUP BY T1.breed_code",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all code of breeds and the number of dogs owned by each breeder.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.first_name, count(*) FROM Owners AS T1  GROUP BY T1.first_name",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the first names of owners and the number of instruments owned by each owner.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_type_description, count(*) FROM Treatment_Types AS T1  GROUP BY T1.treatment_type_description",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the description of each treatment type and the number of treatments of that type.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.home_phone, count(*) FROM Owners AS T1  GROUP BY T1.home_phone",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all home phones and the number of owners with each phone.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT count(*) FROM Charges AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many charges exist?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT count(*) FROM Breeds AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many different breeds are there?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT count(*) FROM Owners AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many owners are there?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT count(*) FROM Sizes AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many different sizes are there?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT count(*) FROM Professionals AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many professionals are there?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT count(*) FROM Treatments AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many different treatments are available?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT count(*) FROM Dogs AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many dogs are there?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT count(*) FROM Treatment_Types AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many different treatment types are there?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.gender, T1.size_code FROM Dogs AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the genders and size codes of dogs?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.cost_of_treatment, T1.treatment_id FROM Treatments AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the costs of treatments and their ids?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.breed_name, T1.breed_code FROM Breeds AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Return the names and codes of all breeds.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.email_address, T1.owner_id FROM Owners AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the email addresses and owner ids of all owners?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_amount, T1.charge_id FROM Charges AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the amount and id of each charge?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.size_description, T1.size_code FROM Sizes AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the size descriptions and codes for all sizes?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.city, T1.street FROM Professionals AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the cities and streets of all professionals?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.owner_id, T1.first_name FROM Owners AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the owner ids and first names?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.name, T1.date_arrived FROM Dogs AS T1 WHERE T1.owner_id = 5",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the names and arrival dates of dogs owned by the owner with id 5?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.dog_id, T1.treatment_type_code FROM Treatments AS T1 WHERE T1.date_of_treatment = \"2018-03-15 20:25:34\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the id and type of treatment of the dog that received treatment on March 15, 2018 at 8:25 pm?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.email_address, T1.zip_code FROM Professionals AS T1 WHERE T1.first_name = \"Ruben\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the email address and zip code of the professional whose first name is \"Ruben\".",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.dog_id, T1.treatment_id FROM Treatments AS T1 WHERE T1.treatment_type_code = \"VAC\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the ids and ids of the dogs that received the treatment type \"VAC\".",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.city, T1.street FROM Owners AS T1 WHERE T1.owner_id = 13",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What city and street does owner with id 13 live in?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.zip_code, T1.email_address FROM Owners AS T1 WHERE T1.owner_id = 2",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the zip code and email address of the owner with id 2?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_type, T1.charge_id FROM Charges AS T1 WHERE T1.charge_amount = 98",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the charge types and ids of the charges whose amount is 98?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.breed_code, T1.dog_id FROM Dogs AS T1 WHERE T1.name = \"Merritt\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the breed code and id of the dog named Merritt.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.age FROM Dogs AS T1  GROUP BY T1.age  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the oldest dog in the dogs database.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_type_description FROM Treatment_Types AS T1  GROUP BY T1.treatment_type_description  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the description of the most common treatment type?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.size_description FROM Sizes AS T1  GROUP BY T1.size_description  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the description of the size that is used most?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.city FROM Owners AS T1  GROUP BY T1.city  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which city has the most owners listed?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_id FROM Charges AS T1  GROUP BY T1.charge_id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the id of the charge that has been made the most number of times.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_amount FROM Charges AS T1  GROUP BY T1.charge_amount  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the most common charge amount.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.zip_code FROM Owners AS T1  GROUP BY T1.zip_code  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the zip code of the owner who has the most cats?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.zip_code FROM Professionals AS T1  GROUP BY T1.zip_code  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the zip code with the most number of professionals.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.date_of_treatment FROM Treatments AS T1  GROUP BY T1.date_of_treatment  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the date of the most recent treatment?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT count(*) FROM Owners AS T1 WHERE T1.email_address = \"kturner@example.net\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many owners have email address kturner@example.net?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT count(*) FROM Breeds AS T1 WHERE T1.breed_code = \"BUL\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many breeds have the code \"BUL\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT count(*) FROM Sizes AS T1 WHERE T1.size_description = \"Large\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many students have the size \"Large\" on their record?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT count(*) FROM Treatment_Types AS T1 WHERE T1.treatment_type_code = \"EXAM\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many treatment types have the code EXAM?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT count(*) FROM Treatments AS T1 WHERE T1.cost_of_treatment = 349",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many treatments have cost 349 dollars?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT count(*) FROM Sizes AS T1 WHERE T1.size_description = \"Small\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many sizes have the description \"Small\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT count(*) FROM Professionals AS T1 WHERE T1.street = \"44234 Marvin Shoals Suite 659\nNorth Frances, AL 23\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many professionals live on the street \"44234 Marvin Shoals Suite 659 North Frances, AL 23\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_type_code FROM Treatments AS T1    ORDER BY T1.date_of_treatment DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the code of the last treatment?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_type_code FROM Treatments AS T1    ORDER BY T1.dog_id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the code of the treatment of the dog with the largest id?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.city FROM Owners AS T1    ORDER BY T1.owner_id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the name of the owner of the record with the greatest owner id?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.cell_number FROM Professionals AS T1    ORDER BY T1.professional_id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the cell number of the most experienced professional?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_id FROM Treatments AS T1    ORDER BY T1.professional_id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the treatment performed by the professional with the highest professional id?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.zip_code FROM Professionals AS T1    ORDER BY T1.professional_id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the zip code of the professional with the greatest professional id?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_amount FROM Charges AS T1    ORDER BY T1.charge_id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the highest charge amount?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_id FROM Charges AS T1    ORDER BY T1.charge_amount DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the charge with the highest amount?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.treatment_type_description) FROM Treatment_Types AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct treatment types are there?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.date_of_treatment) FROM Treatments AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct dates of treatments are there?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.professional_id) FROM Professionals AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct professionals are there?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.breed_code) FROM Breeds AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct breeds are there?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.professional_id) FROM Treatments AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many professionals are involved in the treatments.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.treatment_type_code) FROM Treatment_Types AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct treatment types are there?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.breed_name) FROM Breeds AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct breeds are there?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.owner_id) FROM Owners AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct owners are there?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.zip_code) FROM Professionals AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different zip codes do professionals live in?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.size_description) FROM Sizes AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different size descriptions are there?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.dog_id) FROM Treatments AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average id of dogs in the treatments?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.charge_id) FROM Charges AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average charge id?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.professional_id) FROM Treatments AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average professional id of the treatments?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.professional_id) FROM Professionals AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average professional id across all professions?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.cost_of_treatment) FROM Treatments AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average cost of treatment?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.dog_id) FROM Dogs AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average dog id across all dogs?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.owner_id) FROM Owners AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average owner id?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.treatment_id) FROM Treatments AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average id of the treatments?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.charge_amount) FROM Charges AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average charge amount?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_type_code FROM Treatment_Types AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the codes of all treatment types?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.state FROM Professionals AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the states of all professionals?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.breed_name FROM Breeds AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the names of all breeds?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.size_code FROM Sizes AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the size codes of the sizes?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_type_description FROM Treatment_Types AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the descriptions of the treatment types?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.dog_id FROM Treatments AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the ids of dogs in treatments?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_id FROM Charges AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the ids of the charges?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.size_description FROM Sizes AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the size descriptions of the sizes?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.owner_id FROM Dogs AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the owner ids of dogs?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT T1.size_code FROM Sizes AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct size codes?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT T1.email_address FROM Professionals AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct email addresses of the professionals?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT T1.size_description FROM Sizes AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct size descriptions?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT T1.state FROM Professionals AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct states that have professionals?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT T1.charge_type FROM Charges AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct charge types?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT T1.charge_id FROM Charges AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Find the distinct charge ids that have been charged.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT T1.breed_name FROM Breeds AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct names of breeds?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT T1.gender FROM Dogs AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct genders of dogs?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT T1.home_phone FROM Professionals AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct home phone numbers of all professionals?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT T1.zip_code FROM Owners AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct zip codes of owners?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.abandoned_yn FROM Dogs AS T1     ORDER BY T1.date_of_birth ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Are the dogs abandoned according to their date of birth?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.dog_id FROM Treatments AS T1     ORDER BY T1.cost_of_treatment ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the dog ids of treatments in ascending order of cost of treatment.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.first_name FROM Professionals AS T1     ORDER BY T1.professional_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the first names of all professionals in ascending order of professional id?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.date_adopted FROM Dogs AS T1     ORDER BY T1.owner_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "When were the dogs adopted?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_amount FROM Charges AS T1     ORDER BY T1.charge_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the charge amounts for the different charges?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_id FROM Charges AS T1     ORDER BY T1.charge_amount ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the charge ids in ascending order of charge amount.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.date_adopted FROM Dogs AS T1     ORDER BY T1.date_arrived ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the dates when dogs arrived in ascending order.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.home_phone FROM Professionals AS T1     ORDER BY T1.professional_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the home phone of all professionals in ascending order of professional id.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.home_phone FROM Owners AS T1     ORDER BY T1.owner_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List all home phones of owners in ascending order of owner IDs.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.last_name FROM Owners AS T1     ORDER BY T1.owner_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the last names of owners in descending order of owner id.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_id FROM Charges AS T1     ORDER BY T1.charge_amount DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the charge ids in descending order of charge amount.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.date_arrived FROM Dogs AS T1     ORDER BY T1.dog_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the dates arrived in descending order of dog ids.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.dog_id FROM Treatments AS T1     ORDER BY T1.cost_of_treatment DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the ids of dogs in descending order of cost of treatment.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.home_phone FROM Owners AS T1     ORDER BY T1.owner_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List all home phones of owners in descending order of owner id.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_amount FROM Charges AS T1     ORDER BY T1.charge_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the charge amount of charges in descending order of charge id.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.date_of_treatment FROM Treatments AS T1     ORDER BY T1.cost_of_treatment DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the dates of treatments in descending order of cost of treatment.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_id FROM Treatments AS T1     ORDER BY T1.date_of_treatment DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the id of treatments in descending order of date of treatment.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.owner_id FROM Dogs AS T1     ORDER BY T1.dog_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the owner id for all dogs in descending order of dog id.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.email_address, T1.zip_code FROM Professionals AS T1     ORDER BY T1.zip_code ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the email address and zip code for all professionals in ascending order by zip code.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_id, T1.charge_amount FROM Charges AS T1     ORDER BY T1.charge_amount ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the charge ids and amounts for all charges in ascending order of charge amount.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.breed_name, T1.breed_code FROM Breeds AS T1     ORDER BY T1.breed_code ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List all breed names and codes in ascending order of code.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_type_description, T1.treatment_type_code FROM Treatment_Types AS T1     ORDER BY T1.treatment_type_code ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the descriptions and codes of the different treatment types?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.date_adopted, T1.abandoned_yn FROM Dogs AS T1     ORDER BY T1.abandoned_yn ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the date adopted and abandoned status of dogs in ascending order of abandoned status.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.state, T1.zip_code FROM Owners AS T1     ORDER BY T1.zip_code ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the state and zip code of owners in ascending order of zip code.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.city, T1.street FROM Owners AS T1     ORDER BY T1.street ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the city and street of the owners in ascending order by street?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.owner_id, T1.size_code FROM Dogs AS T1     ORDER BY T1.size_code ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the owner id and size code of dogs in ascending order of size code.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.weight, T1.date_departed FROM Dogs AS T1     ORDER BY T1.date_departed ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the weight and date departed of all dogs in ascending order of date departed.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.cell_number FROM Owners AS T1 WHERE T1.email_address = \"ybergstrom@example.com\" and T1.first_name = \"Tre\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the cell number of the owner with the email address ybergstrom@example.com and first name Tre.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.home_phone FROM Owners AS T1 WHERE T1.cell_number = \"(783)271-6744x4507\" and T1.state = \"Mississippi\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the home phone of the owner with the cell number given and living in the state of Mississippi?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.date_of_treatment FROM Treatments AS T1 WHERE T1.dog_id = 12 and T1.professional_id = 6",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the dates of the treatments of the dog with id 12 and the professional with id 6?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_amount FROM Charges AS T1 WHERE T1.charge_type = \"Health Check\" and T1.charge_id = 2",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the amount of the second health check charge?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.date_departed FROM Dogs AS T1 WHERE T1.date_arrived = \"2017-10-25 00:55:34\" and T1.date_of_birth = \"2008-05-30 12:51:34\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the dates when the dog with the birth date \"2008-05-30 12:51:34\" arrived and departed?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.street FROM Owners AS T1 WHERE T1.first_name = \"Nora\" and T1.state = \"Mississippi\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the street of the owner whose first name is Nora and whose state is Mississippi.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.street FROM Professionals AS T1 WHERE T1.home_phone = \"+71(6)2898266914\" and T1.city = \"Jaceton\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the professionals' streets in Jaceton?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_id FROM Charges AS T1 WHERE T1.charge_amount = 98 and T1.charge_type = \"Daily Accommodation\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the id of the charge that has the amount 98 and type \"Daily Accommodation\".",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.city FROM Owners AS T1 WHERE T1.cell_number = \"478.978.0729\" and T1.zip_code = \"35747\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the names of owners who live in the city with the zip code 35747 and have the cell number 478.978.0729?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.email_address FROM Owners AS T1 WHERE T1.cell_number = \"1-739-421-2225x38148\" and T1.street = \"6950 Katherine Forges Apt. 630\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the email address of the owner with the given cell number and street address?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.date_of_birth FROM Dogs AS T1 WHERE T1.owner_id = 1 or T1.date_arrived = \"2017-12-29 23:24:13\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the dates of birth of the dogs whose owner id is 1 or arrived at \"2017-12-29 23:24:13\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.role_code FROM Professionals AS T1 WHERE T1.street = \"44234 Marvin Shoals Suite 659\nNorth Frances, AL 23\" or T1.first_name = \"Domenica\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the role codes of all the professionals whose address is 44234 Marvin Shoals Suite 659 North Frances, AL 23 or whose first name is Domenica?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.street FROM Professionals AS T1 WHERE T1.cell_number = \"499-434-0215x1628\" or T1.city = \"Kirastad\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the street of the professionals whose cell number or city is \"Kirastad\".",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.zip_code FROM Owners AS T1 WHERE T1.street = \"692 Jaskolski Forges\" or T1.last_name = \"Feil\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the zip codes of the owners of the house at 692 Jaskolski Forges or whose last name is Feil.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.professional_id FROM Treatments AS T1 WHERE T1.treatment_type_code = \"WALK\" or T1.cost_of_treatment = 429",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the professional ids of the treatments with the type code \"WALK\" or the cost of the treatment is 429?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.weight FROM Dogs AS T1 WHERE T1.gender = \"1\" or T1.abandoned_yn = \"1\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the weight of male or abandoned dogs.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.cell_number FROM Professionals AS T1 WHERE T1.state = \"SouthCarolina\" or T1.role_code = \"Veterenarian\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the cell number of professionals who live in South Carolina or have role code \"Veterinarian\" in state \"South Carolina\".",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.name FROM Dogs AS T1 WHERE T1.date_departed = \"2018-03-25 02:47:40\" or T1.size_code = \"LGE\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the names of dogs that departed on March 25, 2018 at 2:47 am or are size LGE?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.street FROM Owners AS T1 WHERE T1.last_name = \"DuBuque\" or T1.home_phone = \"363.948.1090\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the street of the owners whose last name is \"DuBuque\" or whose home phone is \"363.948.1090\".",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.city FROM Professionals AS T1 WHERE T1.cell_number != \"(275)939-2435x80863\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the cities of professionals whose cell number is not \"(275)939-2435x80863\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.breed_code FROM Breeds AS T1 WHERE T1.breed_name != \"Husky\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Return the code of all breeds that have \"Husky\" not in their names.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.gender FROM Dogs AS T1 WHERE T1.name != \"Kacey\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the genders of dogs whose names are not \"Kacey\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_type_code FROM Treatment_Types AS T1 WHERE T1.treatment_type_description != \"Physical examination\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the code of treatment types whose description is not \"Physical examination\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.city FROM Owners AS T1 WHERE T1.first_name != \"Kade\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the city in which the owner whose first name is not \"Kade\" lives.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_type_code FROM Treatment_Types AS T1 WHERE T1.treatment_type_description != \"Take for a Walk\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the code of the treatment types whose descriptions are not \"Take for a Walk\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.last_name FROM Owners AS T1 WHERE T1.email_address != \"angeline99@example.com\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the last names of owners whose email address is not \"angeline99@example.com\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.cost_of_treatment FROM Treatments AS T1 WHERE T1.date_of_treatment != \"2018-02-26 09:08:53\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the costs of the treatments that were not performed on 2018-02-26 09:08:53?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.breed_name FROM Breeds AS T1 WHERE T1.breed_code != \"BUL\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of breeds with an code that is not \"BUL\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.first_name) FROM Professionals AS T1 WHERE T1.home_phone = \"(920)304-4499x59146\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct professionals live at the home phone number listed?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.breed_code) FROM Breeds AS T1 WHERE T1.breed_name = \"Eskimo\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct breeds have the breed name Eskimo?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.owner_id) FROM Owners AS T1 WHERE T1.street = \"1858 Jan Park\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the number of distinct owners who live at 1858 Jan Park.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.treatment_type_code) FROM Treatments AS T1 WHERE T1.cost_of_treatment = 514",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct kinds of treatments have a cost of 514?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.treatment_type_code) FROM Treatments AS T1 WHERE T1.cost_of_treatment = 567",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct kinds of treatments have a cost of 567?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.date_of_treatment) FROM Treatments AS T1 WHERE T1.dog_id = 12",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct dates of treatment did the dog with id 12 have?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.breed_code) FROM Breeds AS T1 WHERE T1.breed_name = \"Bulldog\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct breeds of dogs have the breed name \"Bulldog\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.last_name) FROM Professionals AS T1 WHERE T1.city = \"Juddton\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many professionals are there in Juddton?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.abandoned_yn FROM Dogs AS T1 WHERE T1.owner_id > 13",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the abandoned yns of the dogs with owners ids bigger than 13?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.city FROM Owners AS T1 WHERE T1.owner_id > 13",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of owners with ids larger than 13?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.state FROM Professionals AS T1 WHERE T1.professional_id > 4",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the states of the professionals with id smaller than 4?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.home_phone FROM Professionals AS T1 WHERE T1.professional_id > 14",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the home phones of all professionals with id smaller than 14?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.professional_id FROM Treatments AS T1 WHERE T1.treatment_id > 14",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the professional ids for the treatments with id greater than 14?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_amount FROM Charges AS T1 WHERE T1.charge_id > 3",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the amount of charges with id bigger than 3?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_type FROM Charges AS T1 WHERE T1.charge_id > 1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the types of the charges with id greater than 1?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.role_code FROM Professionals AS T1 WHERE T1.professional_id > 15",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the role codes of all professionals with id smaller than 15?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.professional_id FROM Treatments AS T1 WHERE T1.cost_of_treatment = 429     INTERSECT SELECT T2.professional_id FROM Treatments AS T2 WHERE T2.cost_of_treatment = 656",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the professional id of the therapists that offer both the treatment with cost 429 and the treatment with cost 656?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_type FROM Charges AS T1 WHERE T1.charge_amount = 98     INTERSECT SELECT T2.charge_type FROM Charges AS T2 WHERE T2.charge_amount = 98",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the different charge types that have a charge amount of 98?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.breed_code FROM Breeds AS T1 WHERE T1.breed_name = \"Eskimo\"     INTERSECT SELECT T2.breed_code FROM Breeds AS T2 WHERE T2.breed_name = \"Eskimo\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the breed codes of dogs that are both Eskimo and Husky.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.charge_id FROM Charges AS T1 WHERE T1.charge_amount = 98     INTERSECT SELECT T2.charge_id FROM Charges AS T2 WHERE T2.charge_amount = 322",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the charge ids that have both 98 and 322 as charge amount.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.size_description FROM Sizes AS T1 WHERE T1.size_code = \"SML\"     INTERSECT SELECT T2.size_description FROM Sizes AS T2 WHERE T2.size_code = \"LGE\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What is the description of the size \"SML\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.street FROM Owners AS T1 WHERE T1.owner_id = 13     INTERSECT SELECT T2.street FROM Owners AS T2 WHERE T2.owner_id = 5",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the streets shared by the owner with id 13 and the owner with id 5?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.size_code FROM Sizes AS T1 WHERE T1.size_description = \"Large\"     INTERSECT SELECT T2.size_code FROM Sizes AS T2 WHERE T2.size_description = \"Large\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the size codes of all the shoes that are both \"Large\" and \"Medium\".",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.size_code FROM Sizes AS T1 WHERE T1.size_description = \"Small\"     INTERSECT SELECT T2.size_code FROM Sizes AS T2 WHERE T2.size_description = \"Large\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the size codes of the shoes that are both in the \"Small\" category and in the \"Large\" category?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.date_of_treatment FROM Treatments AS T1 WHERE T1.dog_id = 14     INTERSECT SELECT T2.date_of_treatment FROM Treatments AS T2 WHERE T2.dog_id = 4",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the dates of treatments for the dog with id 14 and the dog with id 4?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.treatment_id) FROM Treatments AS T1 WHERE T1.dog_id = 7",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of treatments for the dog with id 7?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.owner_id) FROM Owners AS T1 WHERE T1.street = \"59509 Mellie Mountain\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average owner id of the owners whose street is 59509 Mellie Mountain?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.owner_id) FROM Dogs AS T1 WHERE T1.size_code = \"MED\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average owner id of dogs with size code \"MED\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.charge_amount) FROM Charges AS T1 WHERE T1.charge_id = 2",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average charge amount for the charge with id 2?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.professional_id) FROM Professionals AS T1 WHERE T1.state = \"NewMexico\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of professionals in New Mexico?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.owner_id) FROM Owners AS T1 WHERE T1.home_phone = \"066.264.7885\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average owner id that has the home phone number 066.264.7885?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.owner_id) FROM Owners AS T1 WHERE T1.zip_code = \"35747\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of owners in the zip code 35747?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.dog_id) FROM Dogs AS T1 WHERE T1.breed_code = \"HUS\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average id of dogs that have breed code \"HUS\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT avg( T1.dog_id) FROM Dogs AS T1 WHERE T1.breed_code = \"ESK\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average id of dogs that have the breed code \"ESK\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_type_description FROM Treatment_Types AS T1        EXCEPT SELECT T2.treatment_type_description FROM Treatment_Types AS T2 WHERE T2.treatment_type_code = \"WALK\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the descriptions of the treatment types that do not have the treatment type code \"WALK\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.zip_code FROM Professionals AS T1        EXCEPT SELECT T2.zip_code FROM Professionals AS T2 WHERE T2.email_address = \"lourdes.lowe@example.net\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the zip codes of all professionals except the one with the email address lourdes.lowe@example.net?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.size_description FROM Sizes AS T1        EXCEPT SELECT T2.size_description FROM Sizes AS T2 WHERE T2.size_code = \"MED\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the size descriptions of the sizes that do not have the code \"MED\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_type_code FROM Treatment_Types AS T1        EXCEPT SELECT T2.treatment_type_code FROM Treatment_Types AS T2 WHERE T2.treatment_type_description = \"Take for a Walk\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the codes of the treatment types that do not have the description \"Take for a Walk\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.breed_code FROM Breeds AS T1        EXCEPT SELECT T2.breed_code FROM Breeds AS T2 WHERE T2.breed_name = \"Bulldog\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of breeds that are not called \"Bulldog\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.treatment_type_description FROM Treatment_Types AS T1        EXCEPT SELECT T2.treatment_type_description FROM Treatment_Types AS T2 WHERE T2.treatment_type_code = \"VAC\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the descriptions of treatment types that do not involve the letter 'V'?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.size_description FROM Sizes AS T1        EXCEPT SELECT T2.size_description FROM Sizes AS T2 WHERE T2.size_code = \"SML\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the size descriptions of the sizes that are not \"SML\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.home_phone FROM Professionals AS T1        EXCEPT SELECT T2.home_phone FROM Professionals AS T2 WHERE T2.state = \"SouthCarolina\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the home phone number of professionals who do not live in South Carolina.",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.professional_id FROM Professionals AS T1        EXCEPT SELECT T2.professional_id FROM Professionals AS T2 WHERE T2.last_name = \"Kshlerin\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the professional ids of all the professionals whose last name is not \"Kshlerin\"?",
    "db_id": "dog_kennels"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1 WHERE T1.ID = 1934",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the grade of the high schooler with ID 1934?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id FROM Likes AS T1 WHERE T1.student_id = 1501",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the likes of the student with id 1501?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.grade = 10",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the ids of friends of high schoolers in grade 10.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = \"John\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of likes that are related to the high schooler whose name is John.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.ID = 1782",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the likes of the high schooler with ID 1782?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = \"Tiffany\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of likes that are related to the high schooler whose name is Tiffany.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id, count(*) FROM Friend AS T1  GROUP BY T1.student_id",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many friends does each student have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id, count(*) FROM Likes AS T1  GROUP BY T1.liked_id",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all liked ids and the number of likes for each id.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID, count(*) FROM Highschooler AS T1  GROUP BY T1.ID",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the id and the number of high schoolers for each high schooler id.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade, count(*) FROM Highschooler AS T1  GROUP BY T1.grade",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all grade and the number of high schoolers in each grade.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name, count(*) FROM Highschooler AS T1  GROUP BY T1.name",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the names of high schoolers and the number of students they have.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name, count(*) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id  GROUP BY T1.name",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the names of high schoolers and the number of likes they have.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade, count(*) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id  GROUP BY T1.grade",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each grade, what are the number of students that like something?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id, count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID  GROUP BY T1.student_id",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each student id, what are the number of likes associated with different high schoolers?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id, count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID  GROUP BY T1.liked_id",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each liked id, what is the number of high schoolers who like that?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id, count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID  GROUP BY T1.friend_id",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many high schoolers are there for each friend?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID, count(*) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id  GROUP BY T1.ID",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many high schoolers like each item?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id, count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID  GROUP BY T1.student_id",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many high schoolers have each friend been assigned?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID, count(*) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id  GROUP BY T1.ID",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many high schoolers have each friend?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT count(*) FROM Friend AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many friends does each person have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT count(*) FROM Highschooler AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many high schoolers are there?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT count(*) FROM Likes AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many students like at least one movie?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id, T1.liked_id FROM Likes AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the student ids and ids of the things liked by each student?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID, T1.grade FROM Highschooler AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the ids and grades of all high schoolers?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id, T1.student_id FROM Likes AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the id and student id of the likes?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id, T1.friend_id FROM Friend AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the student ids and friend ids of all friends?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID, T1.name FROM Highschooler AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the id and name of all high schoolers?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID, T2.liked_id FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the id and liked id of all high school students?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name, T2.student_id FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the names of high schoolers and which student ID do they like?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id, T2.ID FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the id and name of friends who are high schoolers?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id, T2.ID FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the id and name of friends who are high schoolers?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name, T1.grade FROM Highschooler AS T1 WHERE T1.ID = 1641",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the name and grade of the high schooler with ID 1641?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade, T1.name FROM Highschooler AS T1 WHERE T1.ID = 1689",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the grade and name of the high schooler with ID 1689?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id FROM Likes AS T1  GROUP BY T1.liked_id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the id of the liked item that was liked the most.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1  GROUP BY T1.grade  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the highest grade in high school?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name FROM Highschooler AS T1  GROUP BY T1.name  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the name of the high schooler who was admitted to the most colleges?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT count(*) FROM Friend AS T1 WHERE T1.student_id = 1689",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many friends does the student with id 1689 have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT count(*) FROM Likes AS T1 WHERE T1.liked_id = 1934",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many people like the movie with id 1934?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT count(*) FROM Likes AS T1 WHERE T1.student_id = 1709",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many likes does the student with id 1709 have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT count(*) FROM Friend AS T1 WHERE T1.student_id = 1661",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many friends does the student with id 1661 have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT count(*) FROM Likes AS T1 WHERE T1.liked_id = 1501",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many people like the movie with id 1501?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT count(*) FROM Highschooler AS T1 WHERE T1.name = \"Logan\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many high schoolers are named Logan?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1    ORDER BY T1.liked_id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the student who liked the most items?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id FROM Friend AS T1    ORDER BY T1.student_id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the friend with the largest student id?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Friend AS T1    ORDER BY T1.friend_id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the friend with the highest friend id?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1    ORDER BY T1.ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the highest grade a high schooler can get?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id FROM Likes AS T1    ORDER BY T1.student_id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the student who likes the most songs?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name FROM Highschooler AS T1    ORDER BY T1.grade DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the name of the high school student with the highest grade?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id    ORDER BY T2.liked_id DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the highest grade of the high schooler that likes the most movies?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID    ORDER BY T2.grade DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the friend of the highest-graded high schooler?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID    ORDER BY T2.ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the high schooler who has the most liked things?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID    ORDER BY T2.grade DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the friend of the highest-graded high schooler?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID    ORDER BY T2.ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the friend of the highest ranked high schooler?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id    ORDER BY T2.friend_id DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the grade of the high schooler who has the greatest friend id?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID    ORDER BY T2.ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the high schooler who has the most likes?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id    ORDER BY T2.liked_id ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the highest grade of the high schooler that likes the id with the smallest value?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID    ORDER BY T2.grade ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the friend of the highest scoring high schooler?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID    ORDER BY T2.ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the high schooler who likes the most?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id, T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID    ORDER BY T2.ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id and friend id of the high schooler with the highest id?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id, T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID    ORDER BY T2.grade DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of and what is the name of the best friend of the highest-graded high school student?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id, T1.liked_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID    ORDER BY T2.grade DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id and liked id of the high schooler with the highest grade?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.name) FROM Highschooler AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct high schoolers are there?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.ID) FROM Highschooler AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many high schoolers are there?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.liked_id) FROM Likes AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct users have liked something?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.friend_id) FROM Friend AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many friends does each friend have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT avg( T1.student_id) FROM Friend AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average student id of all friends?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT avg( T1.student_id) FROM Likes AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average number of likes for each student?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id FROM Friend AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the friend ids?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the student ids that like something?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name FROM Highschooler AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the names of high schoolers?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id FROM Likes AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the ids of the things that are liked?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT T1.grade FROM Highschooler AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct grades of the high schoolers?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT T1.ID FROM Highschooler AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct ids of high schoolers?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT T1.friend_id FROM Friend AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct friend ids?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1     ORDER BY T1.ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the grade of high schoolers in ascending order of their IDs.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name FROM Highschooler AS T1     ORDER BY T1.grade ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of high schoolers in ascending order of grade.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Friend AS T1     ORDER BY T1.friend_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the student id of friends in ascending order of friend id.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1     ORDER BY T1.liked_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the student ids that have liked an item in ascending order of liked ids.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id FROM Friend AS T1     ORDER BY T1.student_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the friend ids in ascending order of student ids.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id FROM Likes AS T1     ORDER BY T1.student_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the ids of liked songs in ascending order of student id.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id FROM Friend AS T1     ORDER BY T1.student_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the friend ids in descending order of student id.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID FROM Highschooler AS T1     ORDER BY T1.grade DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the id of high schoolers in descending order of grade.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name FROM Highschooler AS T1     ORDER BY T1.grade DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of high schoolers in descending order of grade.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1     ORDER BY T1.ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the highest grade held by high schoolers in descending order of their IDs.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name FROM Highschooler AS T1     ORDER BY T1.ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of high schoolers in descending order of their IDs.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id FROM Likes AS T1     ORDER BY T1.student_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the ids of liked papers in descending order of student id.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name, T1.ID FROM Highschooler AS T1     ORDER BY T1.ID ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the names and IDs of high schoolers in ascending order of their IDs.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id, T1.student_id FROM Friend AS T1     ORDER BY T1.student_id ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the friend id and student id of all friends in ascending order of student id.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id, T1.liked_id FROM Likes AS T1     ORDER BY T1.liked_id ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List all student ids and ids of liked items for all students in ascending order.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade, T1.name FROM Highschooler AS T1     ORDER BY T1.name ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the grade and name of high schoolers in ascending order of name.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name, T1.grade FROM Highschooler AS T1     ORDER BY T1.grade ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the names and grades of high schoolers in ascending order of grade.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id, T1.friend_id FROM Friend AS T1     ORDER BY T1.friend_id ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the student id and friend id of all friends in ascending order of friend id.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID JOIN Friend AS T3 ON T2.ID = T3.friend_id WHERE T2.name = \"John\" and T3.friend_id = 1782",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the likes of the high schooler named John and has the friend with the id 1782?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID JOIN Friend AS T3 ON T2.ID = T3.friend_id WHERE T2.ID = 1689 and T3.friend_id = 1782",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the id of the likes of the high schooler with id 1689 and the friend with id 1782?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id JOIN Friend AS T3 ON T1.ID = T3.friend_id WHERE T2.student_id = 1247 and T3.friend_id = 1782",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the high school grades of the student with id 1247 who has the friend with id 1782?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID JOIN Likes AS T3 ON T2.ID = T3.student_id WHERE T2.grade = 12 and T3.student_id = 1025",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the friend ids of high schoolers who are in grade 12 and like student with id 1025?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID JOIN Likes AS T3 ON T2.ID = T3.student_id WHERE T2.name = \"Cassandra\" and T3.liked_id = 1247",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the friend id of the high schooler named Cassandra who likes id 1247.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.grade = 12 or T2.grade = 11",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the student ids of the high schoolers who are in grade 12 or 11?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = \"Cassandra\" or T2.name = \"Tiffany\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the id of the likes that are related to the high schooler whose name is Cassandra or Tiffany.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.grade = 12 or T2.grade = 12",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the ids of friends of high schoolers in grade 12 or grade 12?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T2.friend_id = 1661 or T2.friend_id = 1782",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the names of high schoolers that have a friend with the id 1661 or 1782?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T2.friend_id = 1934 or T2.friend_id = 1689",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the grades of the high schoolers who have friends with id 1934 or 1689?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = \"Haley\" or T2.name = \"Kyle\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the id of likes that are related to a high schooler whose name is either Haley or Kyle.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1 WHERE T1.name = \"Jordan\" and T1.ID = 1316",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the grades of the high schooler named Jordan with ID 1316?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID FROM Highschooler AS T1 WHERE T1.name = \"Cassandra\" and T1.grade = 12",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the id of the high schooler named Cassandra and in grade 12?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID FROM Highschooler AS T1 WHERE T1.name = \"Gabriel\" and T1.grade = 9",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the id of the high schooler with the name Gabriel and grade 9?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1 WHERE T1.ID = 1911 and T1.name = \"Andrew\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the grade of the high schooler with ID 1911 named Andrew?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID FROM Highschooler AS T1 WHERE T1.name = \"Kyle\" and T1.grade = 11",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the id of the high schooler named Kyle and in grade 11?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1 WHERE T1.name = \"Logan\" and T1.ID = 1304",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the high school grades of the high schooler named Logan with the ID 1304?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.liked_id) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T1.student_id = 1709 and T2.grade = 9",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct likes does the high schooler with id 1709 and grade 9 have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.student_id) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T1.liked_id = 1247 and T2.grade = 11",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct likes does the high schooler with grade 11 have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.ID) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id WHERE T1.grade = 9 and T2.liked_id = 1101",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many high schoolers are in grade 9 and like ID 1101?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.liked_id) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T1.student_id = 1025 and T2.grade = 10",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct likes does the high schooler with id 1025 and grade 10 have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1 WHERE T1.name = \"Brittany\" or T1.ID = 1911",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the high school grades of the student named Brittany or with ID 1911?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID = 1304 or T1.grade = 12",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the name of the high schooler with ID 1304 or grade 12?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID FROM Highschooler AS T1 WHERE T1.name = \"Austin\" or T1.grade = 9",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the id of the high schooler named Austin or has grade 9.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID FROM Highschooler AS T1 WHERE T1.name = \"Gabriel\" or T1.grade = 10",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the id of the high schooler whose name is Gabriel or whose grade is 10.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID FROM Highschooler AS T1 WHERE T1.grade = 9 or T1.name = \"Gabriel\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the ids of high schoolers whose grade is 9 or whose name is Gabriel.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID FROM Highschooler AS T1 WHERE T1.name = \"Gabriel\" or T1.grade = 11",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the id of the high schooler whose name is \"Gabriel\" or whose grade is 11.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT count(*) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id WHERE T2.liked_id = 1689 and T2.student_id = 1025",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many high schoolers like the movie with id 1689 and student id 1025?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.grade = 10 and T2.name = \"Brittany\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many likes does the high schooler named Brittany have in grade 10?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT count(*) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T2.friend_id = 1689 and T2.student_id = 1661",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many high schoolers have the friend with the id 1689 and the student id 1661?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = \"Alexis\" and T2.ID = 1782",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many likes does the high schooler with the name Alexis and the ID 1782 have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.ID = 1501 and T2.grade = 9",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many friends does the high schooler with ID 1501 and grade 9 have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.grade = 12 and T2.ID = 1247",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many likes does the high schooler with grade 12 and ID 1247 have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.name = \"Andrew\" and T2.grade = 10",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many friends does the high schooler named Andrew in grade 10 have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.ID = 1934 and T2.name = \"John\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many likes does the high schooler with ID 1934 and name John have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1 WHERE T1.ID != 1709",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the high school grades of the students whose id are not 1709?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Friend AS T1 WHERE T1.friend_id != 1304",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the student ids of friends whose friend id is not 1304?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1 WHERE T1.liked_id != 1689",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the student ids that did not like the movie with id 1689?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1 WHERE T1.liked_id != 1934",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the student ids that did not like the movie with id 1934?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id FROM Friend AS T1 WHERE T1.student_id != 1381",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of friends of the student with id 1381?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.name != \"Haley\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of friends of high schoolers whose name is not Haley?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.ID != 1934",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of friends of the high schooler whose id is not 1934?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.ID != 1316",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the likes of the high schooler with ID that is not 1316?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T2.friend_id != 1316",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of high schoolers that do not have friend with id 1316?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT T1.grade FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T2.friend_id = 1316",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct grades of the high schoolers that have friend id 1316?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT T1.grade FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id WHERE T2.student_id = 1316",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct grades of the high schooler who has the student id 1316?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.grade = 12",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct friend ids of high schoolers who are in grade 12.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.ID) FROM Highschooler AS T1 WHERE T1.grade = 10",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many high schoolers are in grade 10?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.liked_id) FROM Likes AS T1 WHERE T1.student_id = 1934",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct likes does the student with id 1934 have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.ID) FROM Highschooler AS T1 WHERE T1.name = \"Tiffany\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct high schoolers have the name Tiffany?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.student_id) FROM Likes AS T1 WHERE T1.liked_id = 1934",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many students liked the movie with id 1934?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.liked_id) FROM Likes AS T1 WHERE T1.student_id = 1911",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many likes does the student with id 1911 have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.liked_id) FROM Likes AS T1 WHERE T1.student_id = 1709",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many likes does the student with id 1709 have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.grade) FROM Highschooler AS T1 WHERE T1.name = \"Brittany\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct grades did the high schooler named Brittany attend?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID FROM Highschooler AS T1 WHERE T1.grade > 12",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the ids of high schoolers with a grade higher than 12?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id FROM Likes AS T1 WHERE T1.student_id > 1782",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the ids of likes made by a student with an id smaller than 1782?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Friend AS T1 WHERE T1.friend_id > 1101",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the student ids of all friends with ids greater than 1101?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id FROM Likes AS T1 WHERE T1.student_id > 1911",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the ids of likes made by a student with an id smaller than 1911?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID FROM Highschooler AS T1 WHERE T1.grade > 9",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the ids of high schoolers with a grade higher than 9?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name, T2.liked_id, T3.friend_id FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id JOIN Friend AS T3 ON T1.ID = T3.friend_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the names of high schoolers, the id of things they like, and the ids of their friends?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID, T2.friend_id, T3.liked_id FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id JOIN Likes AS T3 ON T1.ID = T3.student_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the id, friend id, and liked id of each high schooler?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id, T2.name, T3.friend_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID JOIN Friend AS T3 ON T2.ID = T3.friend_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the id, name, and friend id of the likes of each high schooler?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID, T2.student_id, T3.friend_id FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id JOIN Friend AS T3 ON T1.ID = T3.friend_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the id, student id, and friend id of the high schoolers who like something?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id, T2.grade, T3.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID JOIN Likes AS T3 ON T2.ID = T3.student_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the id, grade, and student id of the friends of high schoolers?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id, T2.name, T3.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID JOIN Likes AS T3 ON T2.ID = T3.student_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the id, name and student id of the friends who like a student?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade, T2.friend_id, T3.liked_id FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id JOIN Likes AS T3 ON T1.ID = T3.student_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "For each high schooler, return the grade, id of the friend, and the id of the liked.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id     ORDER BY T2.student_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the names of high schoolers who like movies with higher ascending student ID.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID     ORDER BY T2.ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the id of high schoolers who like different kinds of music in ascending order of their id.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id     ORDER BY T2.friend_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the grade of high schoolers who have friends in ascending order of friend id.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID     ORDER BY T2.grade ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the student ids who like high schoolers with the highest grade.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id     ORDER BY T2.liked_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of high school students who like ids ascending?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Friend AS T1 WHERE T1.friend_id = 1316     INTERSECT SELECT T2.student_id FROM Friend AS T2 WHERE T2.friend_id = 1316",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the student ids that have both friends with student id 1316 and friends with student id 1316?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1 WHERE T1.liked_id = 1101     INTERSECT SELECT T2.student_id FROM Likes AS T2 WHERE T2.liked_id = 1689",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the student ids that both like student 1101 and student 1689?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID FROM Highschooler AS T1 WHERE T1.grade = 11     INTERSECT SELECT T2.ID FROM Highschooler AS T2 WHERE T2.grade = 9",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the id of high schoolers who are in grade 11 and grade 9.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id FROM Friend AS T1 WHERE T1.student_id = 1381     INTERSECT SELECT T2.friend_id FROM Friend AS T2 WHERE T2.student_id = 1101",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the friend ids that both the friend with student id 1381 and the friend with student id 1101 are friends with?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id FROM Friend AS T1 WHERE T1.student_id = 1689     INTERSECT SELECT T2.friend_id FROM Friend AS T2 WHERE T2.student_id = 1911",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the friend ids that both the friend with student id 1689 and the friend with student id 1911 have?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID = 1316     INTERSECT SELECT T2.name FROM Highschooler AS T2 WHERE T2.ID = 1501",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the names of the high schoolers that are both in 1501 and 1316?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Friend AS T1 WHERE T1.friend_id = 1101     INTERSECT SELECT T2.student_id FROM Friend AS T2 WHERE T2.friend_id = 1304",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the student ids that have both friend ids with value 1101 and friend ids with value 1304?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT avg( T1.friend_id) FROM Friend AS T1 WHERE T1.student_id = 1911",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of friends for the student with id 1911?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT avg( T1.student_id) FROM Friend AS T1 WHERE T1.friend_id = 1641",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average id of friends of the friend with id 1641?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT avg( T1.friend_id) FROM Friend AS T1 WHERE T1.student_id = 1468",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of friends for the student with id 1468?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT avg( T1.student_id) FROM Likes AS T1 WHERE T1.liked_id = 1468",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of likes for the student whose id is 1468?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT avg( T1.friend_id) FROM Friend AS T1 WHERE T1.student_id = 1501",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of friends for the student with id 1501?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT avg( T1.ID) FROM Highschooler AS T1 WHERE T1.name = \"Brittany\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average ID of high schoolers named Brittany?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT avg( T1.ID) FROM Highschooler AS T1 WHERE T1.grade = 11",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average ID of high schoolers who are in grade 11?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.grade = (SELECT max( T23.grade) FROM Highschooler AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the ids of friends of the highest-graded high schoolers.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.ID = (SELECT max( T23.ID) FROM Highschooler AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the id of the students who like the most?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.ID = (SELECT max( T23.ID) FROM Highschooler AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the id of the friend of the high schooler with the highest id.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T2.friend_id = (SELECT max( T23.friend_id) FROM Friend AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the id of the high schooler who has the most friends.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.grade = (SELECT max( T23.grade) FROM Highschooler AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the id of the student who is in the highest grade in any high school.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.grade = (SELECT max( T23.grade) FROM Highschooler AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the ids of friends of the highest-graded high schoolers.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.grade = (SELECT max( T23.grade) FROM Highschooler AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the id of the high schoolers who are in the highest grade.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id, T2.ID FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID JOIN Likes AS T3 ON T2.ID = T3.student_id WHERE T3.student_id = 1316 and T2.grade = 9",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the friend id and high schooler id of the friend who likes the student with id 1316 and grade 9?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id, T2.grade FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID JOIN Likes AS T3 ON T2.ID = T3.student_id WHERE T3.liked_id = 1304 and T2.ID = 1304",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the student id and grade of the friend who likes the movie with id 1304 and the high schooler who liked the movie?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id, T2.grade FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID JOIN Likes AS T3 ON T2.ID = T3.student_id WHERE T3.student_id = 1025 and T2.ID = 1304",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the id, and grade of the friends of the student with id 1025 who likes the high schooler with id 1304?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id, T2.grade FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID JOIN Friend AS T3 ON T2.ID = T3.friend_id WHERE T3.friend_id = 1661 and T2.ID = 1304",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the id, grade of the likes that the friend with id 1661 has, and the high schooler with id 1304 likes?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id, T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID JOIN Likes AS T3 ON T2.ID = T3.student_id WHERE T3.liked_id = 1101 and T2.ID = 1661",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the id and name of friends who like student with id 1101 and whose high schooler id is 1661?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.name, T2.student_id FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id JOIN Likes AS T3 ON T1.ID = T3.student_id WHERE T3.liked_id = 1468 and T2.friend_id = 1101",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the names of high schoolers who like 1468 and have the friend id of 1101?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T2.friend_id = 1381 GROUP BY T1.grade  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the grade of the high schooler who has the most friends who are in grade 13.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.grade = 11 GROUP BY T1.liked_id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the high schooler who likes the most number of things in grade 11.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.ID FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id WHERE T2.liked_id = 1101 GROUP BY T1.ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the high schooler who likes \"Harry Potter\" the most.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.grade FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id WHERE T2.liked_id = 1101 GROUP BY T1.grade  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the highest grade of the high schooler who likes ID 1101?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = \"Alexis\" GROUP BY T1.liked_id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the high schooler who likes the most movies.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.name = \"John\" GROUP BY T1.student_id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the friend who has the most friends who went to school with John.",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.friend_id FROM Friend AS T1        EXCEPT SELECT T2.friend_id FROM Friend AS T2 WHERE T2.student_id = 1501",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of friends of the student with id 1501?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Friend AS T1        EXCEPT SELECT T2.student_id FROM Friend AS T2 WHERE T2.friend_id = 1709",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of friends of the student with id 1709?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.student_id FROM Friend AS T1        EXCEPT SELECT T2.student_id FROM Friend AS T2 WHERE T2.friend_id = 1304",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of friends of the student whose id is 1304?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.liked_id FROM Likes AS T1        EXCEPT SELECT T2.liked_id FROM Likes AS T2 WHERE T2.student_id = 1641",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of likes that are not liked by student with id 1641?",
    "db_id": "network_1"
  },
  {
    "query": "SELECT T1.Museum_ID FROM museum AS T1 WHERE T1.Num_of_Staff = 62",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the id of the museum that has 62 staff members?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent FROM visit AS T1 WHERE T1.visitor_ID = \"5\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the total spent by the visitor with id 5.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Open_Year FROM museum AS T1 WHERE T1.Museum_ID = 8",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the opening year of the museum with id 8?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID FROM visit AS T1 WHERE T1.Num_of_Ticket = 20",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the museum ids that have been visited by people who bought 20 tickets?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.ID = 1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the total spent by the visitor with id 1?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Total_spent = 320.44",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ages of the visitors who made a total spend of 320.44?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Museum_ID = 4",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of customers who visited museum with id 4?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.visitor_ID = \"3\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the level of membership of the visitor with id 3?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.visitor_ID = \"6\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the name of the visitor with id 6?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Museum_ID = 5",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the total spent by visitors of museum with id 5?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Total_spent = 320.14",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of the customers who made a total spend of 320.14?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name, count(*) FROM museum AS T1  GROUP BY T1.Name",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the names of museums and the number of museums belonging to each museum.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.ID, count(*) FROM visitor AS T1  GROUP BY T1.ID",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many visitors does each customer have?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Staff, count(*) FROM museum AS T1  GROUP BY T1.Num_of_Staff",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the number of staff and the count of museums that have the same number of staff for each staff number.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID, count(*) FROM museum AS T1  GROUP BY T1.Museum_ID",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the id of museums and the number of museums that have each id.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.ID, count(*) FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID  GROUP BY T1.ID",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many times does each customer visit the park?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID, count(*) FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID  GROUP BY T1.Museum_ID",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the id of museums and the number of visits they have.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Ticket, count(*) FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID  GROUP BY T1.Num_of_Ticket",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the number of tickets for each visit and the number of customers who visit with that ticket number.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT count(*) FROM visitor AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many customers visited the park?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT count(*) FROM visit AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many visits are there?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT count(*) FROM museum AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many museums are there?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Level_of_membership, T1.ID FROM visitor AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the level of membership and id for all visitors?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Level_of_membership, T1.Name FROM visitor AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the levels of membership and names of the visitors?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.visitor_ID, T1.Num_of_Ticket FROM visit AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the visitor ids and number of tickets for each visit?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Level_of_membership, T1.Age FROM visitor AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all level of membership and ages of visitors.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Ticket, T1.Total_spent FROM visit AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the number of tickets and total spent for each visit?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name, T1.ID FROM visitor AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the names and ids of all visitors?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Ticket, T1.visitor_ID FROM visit AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the number of tickets and visitor ID for each visit?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Staff, T2.Total_spent FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show the number of staff and total spent for each museum.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID, T2.ID FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "For each visit, return the museum id and the id of the visitor.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Level_of_membership, T1.Age FROM visitor AS T1 WHERE T1.Name = \"Gonzalo Higua\u00edn \"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the level of membership and age of the visitor named Gonzalo Higua\u00edn?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Open_Year, T1.Num_of_Staff FROM museum AS T1 WHERE T1.Museum_ID = 1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the open year and the number of staff of the museum with id 1?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.ID, T1.Name FROM visitor AS T1 WHERE T1.Level_of_membership = 5",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the id and names of all visitors with level of membership 5?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID, T1.Total_spent FROM visit AS T1 WHERE T1.visitor_ID = \"5\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the museum id and total spent by the visitor with id 5.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name, T1.Level_of_membership FROM visitor AS T1 WHERE T1.Age = 56",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the names and level of membership of the 56-year-old visitors?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID, T1.Name FROM museum AS T1 WHERE T1.Open_Year = \"2010\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the id and name of the museum that was opened in year 2010?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Open_Year FROM museum AS T1  GROUP BY T1.Open_Year  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the year in which the most museums were opened.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.visitor_ID FROM visit AS T1  GROUP BY T1.visitor_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the id of the visitor who made the most visits?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.ID FROM visitor AS T1  GROUP BY T1.ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the id of the customer who has the most visitors.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Level_of_membership FROM visitor AS T1  GROUP BY T1.Level_of_membership  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the highest level of membership that many visitors have?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Staff FROM museum AS T1  GROUP BY T1.Num_of_Staff  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which museum has the most staff members?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Ticket FROM visit AS T1  GROUP BY T1.Num_of_Ticket  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the number of ticket of the visit that has the most number of tickets.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Age FROM visitor AS T1  GROUP BY T1.Age  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the oldest age of the visitors?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name FROM visitor AS T1  GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the name of the customer who has the most visitors?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT count(*) FROM museum AS T1 WHERE T1.Open_Year = \"2000\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many museums were opened in year 2000?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT count(*) FROM visit AS T1 WHERE T1.Total_spent = 320.44",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many visits have a total spent of 320.44?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT count(*) FROM visitor AS T1 WHERE T1.Level_of_membership = 6",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many customers have level of membership 6?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT count(*) FROM museum AS T1 WHERE T1.Num_of_Staff = 25",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many museums have 25 staff members?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT count(*) FROM visit AS T1 WHERE T1.Museum_ID = 1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many visits are related to museum with id 1?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT count(*) FROM visit AS T1 WHERE T1.Num_of_Ticket = 4",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many visits have 4 tickets?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT count(*) FROM museum AS T1 WHERE T1.Museum_ID = 2",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many museums have ID 2?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Open_Year FROM museum AS T1    ORDER BY T1.Num_of_Staff DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the open year of the museum with the most staff?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Open_Year FROM museum AS T1    ORDER BY T1.Museum_ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the opening year of the museum with the largest id?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.visitor_ID FROM visit AS T1    ORDER BY T1.Total_spent DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the visitor who spent the most money?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Ticket FROM visit AS T1    ORDER BY T1.Total_spent DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the number of ticket of the visit that spent the most money?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name FROM visitor AS T1    ORDER BY T1.Age DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the name of the oldest customer?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Level_of_membership FROM visitor AS T1    ORDER BY T1.Age DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the level of membership of the visitor who is the oldest?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID    ORDER BY T2.ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the total spent by the visitor with the largest ID?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID    ORDER BY T2.Level_of_membership DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the museum that the customer with the highest level of membership visited?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Ticket FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID    ORDER BY T2.ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the number of ticket of the visitor with the largest ID?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID    ORDER BY T2.Num_of_Ticket ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the customer who made the most visits?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Staff FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID    ORDER BY T2.Museum_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the number of staff at the museum with the highest id?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID    ORDER BY T2.Num_of_Ticket ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the museum that had the highest number of tickets?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID    ORDER BY T2.Museum_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the age of the visitor who made the most recent visit to museum number 100?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID    ORDER BY T2.Num_of_Staff ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Which museum has the most staff members?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID    ORDER BY T2.Num_of_Ticket ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Which museum has the most visitors?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID    ORDER BY T2.Num_of_Staff ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the total spent at the museum with the most staff?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID    ORDER BY T2.Total_spent ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the customer who spent the most money on visits?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Ticket, T1.visitor_ID FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID    ORDER BY T2.Museum_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the number of ticket and visitor id of the last visit?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Level_of_membership, T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID    ORDER BY T2.Museum_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the level of membership of the visitor who made the last visit?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID, T1.visitor_ID FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID    ORDER BY T2.Age DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the museum that the oldest visitor visited?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name, T1.Open_Year FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID    ORDER BY T2.Total_spent DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name and open year of the museum that had the highest total spending?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Open_Year) FROM museum AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different years did museums open?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT avg( T1.Total_spent) FROM visit AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average total spent across all visits?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT avg( T1.Num_of_Staff) FROM museum AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average number of staff in museums?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT avg( T1.Num_of_Ticket) FROM visit AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average number of tickets for all visits?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT avg( T1.Age) FROM visitor AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average age of the visitors?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT avg( T1.Museum_ID) FROM museum AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average museum ID?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT avg( T1.Museum_ID) FROM visit AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average museum id across all visits?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID FROM visit AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the museum ids that have visits?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Age FROM visitor AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the ages of visitors?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name FROM museum AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the names of museums?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT DISTINCT T1.Museum_ID FROM visit AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct museum ids that have been visited?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT DISTINCT T1.Total_spent FROM visit AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct total spent values for all visits?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT DISTINCT T1.visitor_ID FROM visit AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct visitor ids that made visits?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT DISTINCT T1.Num_of_Staff FROM museum AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Show the distinct number of staff for each museum.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT DISTINCT T1.Name FROM visitor AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the names of all visitors?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT DISTINCT T1.Level_of_membership FROM visitor AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Show all distinct levels of membership.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Age FROM visitor AS T1     ORDER BY T1.ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the ages of visitors in ascending order of their IDs?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID FROM museum AS T1     ORDER BY T1.Num_of_Staff ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the id of museums in ascending order of the number of staff.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Age FROM visitor AS T1     ORDER BY T1.Level_of_membership ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the ages of visitors, ordered by level of membership ascending?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name FROM visitor AS T1     ORDER BY T1.Level_of_membership ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of visitors in ascending order of level of membership.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Open_Year FROM museum AS T1     ORDER BY T1.Museum_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the opening years of museums in ascending order of museum ID.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name FROM visitor AS T1     ORDER BY T1.ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of visitors in descending order of customer ID.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name FROM visitor AS T1     ORDER BY T1.Age DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of visitors in descending order of age.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Open_Year FROM museum AS T1     ORDER BY T1.Num_of_Staff DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the opening years of museums in descending order of the number of staff.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.ID FROM visitor AS T1     ORDER BY T1.Level_of_membership DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the id of visitors in descending order of level of membership.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent FROM visit AS T1     ORDER BY T1.Num_of_Ticket DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the total spent of visits in descending order of the number of tickets.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID FROM visit AS T1     ORDER BY T1.Total_spent DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the museum ID for all visits in descending order of total spent.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.visitor_ID FROM visit AS T1     ORDER BY T1.Total_spent DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the visitor IDs of all visits in descending order of total spent.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Level_of_membership, T1.ID FROM visitor AS T1     ORDER BY T1.ID ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the level of membership and id of the visitors?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.ID, T1.Level_of_membership FROM visitor AS T1     ORDER BY T1.Level_of_membership ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the IDs and levels of membership of all visitors in ascending order of level of membership.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Open_Year, T1.Num_of_Staff FROM museum AS T1     ORDER BY T1.Num_of_Staff ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the open year and the number of staff of museums in ascending order of the number of staff.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID, T1.Open_Year FROM museum AS T1     ORDER BY T1.Open_Year ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the museum ID and open year for all museums in ascending order of open year.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name, T1.Num_of_Staff FROM museum AS T1     ORDER BY T1.Num_of_Staff ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the names and number of staff of museums in ascending order of number of staff.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Age, T1.ID FROM visitor AS T1     ORDER BY T1.ID ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the ages of visitors in ascending order of their IDs?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Level_of_membership, T1.Age FROM visitor AS T1     ORDER BY T1.Age ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the level of membership and age of visitors in ascending order of age.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T2.Museum_ID = 8 and T3.Open_Year = \"2000\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the names of customers who visited museum with id 8 and opened in year 2000?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T2.Total_spent = 89.98 and T3.Open_Year = \"2010\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the ids of the customers who visited museums that were opened in 2010 and spent a total of 89.98 dollars?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T1.visitor_ID = T3.ID WHERE T2.Num_of_Staff = 62 and T3.Age = 28",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What is the total spent by the visitor who is 28 years old and visited the museum that has 62 staff members?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Staff FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T2.visitor_ID = T3.ID WHERE T2.Museum_ID = 8 and T3.ID = 5",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What is the number of staff at the museum with id 8 that a visitor with id 5 visited?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Museum_ID = 2 or T2.Museum_ID = 1",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the levels of membership of the visitors who visited museum with id 1 or 2?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.visitor_ID = \"6\" or T2.visitor_ID = \"3\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the names of visitors with id 6 or 3?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Num_of_Ticket = 3 or T2.Num_of_Ticket = 24",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the id of museums that have had visits with 3 or 24 tickets?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Open_Year FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Num_of_Ticket = 10 or T2.Num_of_Ticket = 20",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the open years of museums that had at least 10 tickets or at least 20 tickets?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Age = 28 or T2.Age = 35",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What is the total spent by visitors whose age is 28 or 35?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Open_Year FROM museum AS T1 WHERE T1.Name = \"Central City District Residential Museum\" and T1.Num_of_Staff = 18",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the open years of the museum named Central City District Residential Museum and has 18 staff members?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID FROM visit AS T1 WHERE T1.Total_spent = 209.98 and T1.Num_of_Ticket = 2",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the museum ids that have a total spent of 209.98 and issued 2 tickets?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.ID FROM visitor AS T1 WHERE T1.Age = 25 and T1.Name = \"Guti Midfielder\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ids of all visitors whose age is 25 and whose name is \"Guti Midfielder\"?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Ticket FROM visit AS T1 WHERE T1.Total_spent = 20.44 and T1.Museum_ID = 4",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the numbers of tickets of the visits that spent 20.44 dollars and visited museum ID 4?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID FROM museum AS T1 WHERE T1.Open_Year = \"2011\" and T1.Num_of_Staff = 12",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the id of the museum that was opened in 2011 and has 12 staff members?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Ticket FROM visit AS T1 WHERE T1.Total_spent = 20.44 and T1.visitor_ID = \"3\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the number of ticket for the visitor with total spent 20.44 and id \"3\".",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name FROM visitor AS T1 WHERE T1.Age = 35 and T1.ID = 5",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the name of the visitor who is 35 years old and has the ID number 5?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Level_of_membership) FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T1.Age = 56 and T2.Museum_ID = 1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct levels of membership did the 56-year-old visitor have who visited museum 1?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Num_of_Ticket) FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T1.Total_spent = 320.14 and T2.Num_of_Staff = 16",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct museums have at least one visit where the total spent is 320.14 and the number of staff is 16?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Age) FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T1.ID = 4 and T2.Museum_ID = 2",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct ages did the visitor with id 4 visit museum 2?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Open_Year FROM museum AS T1 WHERE T1.Museum_ID = 5 or T1.Name = \"Capital Plaza Museum\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the open years of the museums with id 5 or named \"Capital Plaza Museum\"?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Open_Year FROM museum AS T1 WHERE T1.Name = \"Willow Grande Museum\" or T1.Num_of_Staff = 12",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the open years of the museum with the name \"Willow Grande Museum\" or with the number of staff 12?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID FROM visit AS T1 WHERE T1.Num_of_Ticket = 2 or T1.visitor_ID = \"3\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the museum ids that have at least one visitor with the number of ticket 2 or \"3\"?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Open_Year FROM museum AS T1 WHERE T1.Museum_ID = 1 or T1.Num_of_Staff = 25",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the open years of the museum with id 1 or with 25 staff members?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.visitor_ID FROM visit AS T1 WHERE T1.Num_of_Ticket = 3 or T1.Total_spent = 19.98",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ids of visitors who have visited a place with ticket number 3 or spent 19.98?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT count(*) FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Total_spent = 209.98 and T2.Num_of_Ticket = 3",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many museums have a total spending of 209.98 and issued 3 tickets have had visits?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT count(*) FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.ID = 1 and T2.Name = \"Gonzalo Higua\u00edn \"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many visits does the visitor with the ID 1 and the name \"Gonzalo Higua\u00edn \" have?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT count(*) FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Num_of_Ticket = 3 and T2.Total_spent = 320.14",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many customers visit the theater with the ticket number 3 and spend 320.14?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent FROM visit AS T1 WHERE T1.Num_of_Ticket != 24",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the total spent for all visits that do not have 24 tickets?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent FROM visit AS T1 WHERE T1.Num_of_Ticket != 10",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the total spent on visits that have no ticket number 10?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name FROM museum AS T1 WHERE T1.Museum_ID != 7",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of museums that do not have the museum with ID 7?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.visitor_ID FROM visit AS T1 WHERE T1.Total_spent != 19.98",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of visitors who did not spend 19.98 dollars?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Level_of_membership FROM visitor AS T1 WHERE T1.Name != \"Arjen Robben\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the levels of membership for all the visitors whose names are not \"Arjen Robben\"?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name FROM visitor AS T1 WHERE T1.Level_of_membership != 1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of customers with level of membership != 1?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent FROM visit AS T1 WHERE T1.visitor_ID != \"6\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the total spent by the visitor with id \"6\"?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.visitor_ID FROM visit AS T1 WHERE T1.Museum_ID != 2",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of visitors who did not visit museum with id 2?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Num_of_Ticket != 24",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the levels of membership of the customers who visited the zoo less than 24 times?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Num_of_Ticket != 20",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of customers who visited fewer than 20 movies?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.visitor_ID FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Name != \"Guti Midfielder\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of visits made by a visitor whose name is not \"Guti Midfielder\"?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Museum_ID != 2",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of customers who did not visit museum with id 2?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.visitor_ID != \"5\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of museums that did not have the visitor with id \"5\"?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT DISTINCT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.visitor_ID = \"3\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of all the visitors with id \"3\"?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT DISTINCT T1.Total_spent FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Name = \"Willow Grande Museum\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct total spent in all visits to the museum with name \"Willow Grande Museum\".",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT DISTINCT T1.visitor_ID FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Name = \"Rafael van der Vaart\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct visitor ids that have the visitor with the name \"Rafael van der Vaart\" visited.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Open_Year) FROM museum AS T1 WHERE T1.Name = \"ZirMed Gateway Museum\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many years did the museum ZirMed Gateway Museum open?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Num_of_Ticket) FROM visit AS T1 WHERE T1.Total_spent = 209.98",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct visits have the total spent of 209.98?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Age) FROM visitor AS T1 WHERE T1.ID = 3",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct ages are there for the visitor with id 3?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.visitor_ID) FROM visit AS T1 WHERE T1.Total_spent = 209.98",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct visitors have made a total spend of 209.98?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent FROM visit AS T1 WHERE T1.Num_of_Ticket > 2",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What is the total spent on visits with more than 2 tickets?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Ticket FROM visit AS T1 WHERE T1.Museum_ID > 1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the numbers of tickets for museums with an ID greater than 1?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Staff FROM museum AS T1 WHERE T1.Museum_ID > 5",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the numbers of staff for museums with an ID greater than 5?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Staff FROM museum AS T1 WHERE T1.Museum_ID > 8",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the numbers of staff for museums with an ID greater than 8?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Ticket FROM visit AS T1 WHERE T1.Museum_ID > 8",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the numbers of tickets of museums that have an ID greater than 8?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.visitor_ID, T2.Num_of_Staff, T3.Level_of_membership FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T1.visitor_ID = T3.ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "For each visit, show the id of the visitor, the number of staff at the museum, and the level of membership of the customer.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.ID, T2.Museum_ID, T3.Num_of_Staff FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the id, id of museum, and number of staff of the museums that have visited by the visitor with the id 100?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID     ORDER BY T2.Museum_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the total spent at each museum?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID     ORDER BY T2.Museum_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the IDs of the customers who visited the museums in ascending order of museum ID?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Open_Year FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID     ORDER BY T2.Num_of_Ticket ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Show the open years of museums that have the highest number of tickets visited.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Ticket FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID     ORDER BY T2.Museum_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the number of tickets of museums in ascending order of museum ID.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID     ORDER BY T2.Total_spent ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of museums in ascending order of the total spent?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Ticket FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID     ORDER BY T2.Age ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the numbers of tickets for the visitors, ordered by their ages ascending?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID     ORDER BY T2.Num_of_Ticket ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the museum IDs that have the greatest number of tickets.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Ticket FROM visit AS T1 WHERE T1.Total_spent = 320.44     INTERSECT SELECT T2.Num_of_Ticket FROM visit AS T2 WHERE T2.Total_spent = 320.44",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the number of tickets that were used by visitors who spent 320.44 dollars on a single visit.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Age FROM visitor AS T1 WHERE T1.Level_of_membership = 5     INTERSECT SELECT T2.Age FROM visitor AS T2 WHERE T2.Level_of_membership = 8",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the ages of visitors who have level of membership 5 and 8?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Open_Year FROM museum AS T1 WHERE T1.Museum_ID = 6     INTERSECT SELECT T2.Open_Year FROM museum AS T2 WHERE T2.Museum_ID = 4",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Show the years in which both museum 6 and museum 4 are open.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Level_of_membership FROM visitor AS T1 WHERE T1.ID = 6     INTERSECT SELECT T2.Level_of_membership FROM visitor AS T2 WHERE T2.ID = 3",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What is the level of membership of the customer with id 6?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Ticket FROM visit AS T1 WHERE T1.Museum_ID = 2     INTERSECT SELECT T2.Num_of_Ticket FROM visit AS T2 WHERE T2.Museum_ID = 8",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the number of tickets bought by visitors who went to museum 2 and museum 8.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Age FROM visitor AS T1 WHERE T1.Level_of_membership = 8     INTERSECT SELECT T2.Age FROM visitor AS T2 WHERE T2.Level_of_membership = 2",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the ages of visitors who have level of membership 8 and visitors who have level of membership 2?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT avg( T1.Num_of_Staff) FROM museum AS T1 WHERE T1.Name = \"Place Tower Museum\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of staff for the museum named Place Tower Museum?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT avg( T1.Museum_ID) FROM visit AS T1 WHERE T1.Total_spent = 89.98",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average museum id of the visits that have total spent 89.98?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT avg( T1.Num_of_Ticket) FROM visit AS T1 WHERE T1.Museum_ID = 8",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of tickets of the museums with id 8?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT avg( T1.Num_of_Staff) FROM museum AS T1 WHERE T1.Name = \"Plaza Museum\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of staff for the museum named Plaza Museum?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT avg( T1.Level_of_membership) FROM visitor AS T1 WHERE T1.ID = 1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average level of membership of the visitor with ID 1?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT avg( T1.Age) FROM visitor AS T1 WHERE T1.Level_of_membership = 2",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average age of visitors with level of membership 2?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT avg( T1.Museum_ID) FROM museum AS T1 WHERE T1.Name = \"Jefferson Development Museum\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of visitors for the museum with the name \"Jefferson Development Museum\"?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Num_of_Ticket = (SELECT max( T23.Num_of_Ticket) FROM visit AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the ages of the visitors who took the most number of tickets?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Num_of_Ticket = (SELECT max( T23.Num_of_Ticket) FROM visit AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of museums that have received the most tickets?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Museum_ID = (SELECT max( T23.Museum_ID) FROM visit AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of museums that have the most visits?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Age = (SELECT max( T23.Age) FROM visitor AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the total spent by the oldest visitor?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Staff FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Num_of_Ticket = (SELECT max( T23.Num_of_Ticket) FROM visit AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the number of staff of the museum that has the maximum number of tickets.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Museum_ID = (SELECT max( T23.Museum_ID) FROM museum AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the total spent by people who visited the museum with the largest number of museums?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent, T2.Name FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T1.visitor_ID = T3.ID WHERE T3.ID = 6 and T2.Open_Year = \"2009\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the total spent and name of the museum that the visitor with id 6 visited and whose open year is 2009?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Num_of_Staff, T2.Total_spent FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T2.visitor_ID = T3.ID WHERE T3.Name = \"Fernando Gago\" and T2.Num_of_Ticket = 24",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the number of staff and the total spent by the museum whose visitor named \"Fernando Gago\" bought 24 tickets.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.ID, T2.Num_of_Ticket FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T3.Open_Year = \"2010\" and T2.Total_spent = 320.44",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the id, and the number of ticket of the visitors who visited a museum that was opened in year 2010 and spent total amount of money equal to 320.44?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Age, T2.Total_spent FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T3.Num_of_Staff = 25 and T2.visitor_ID = \"3\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the age and total spent by the visitor with id \"3\" at museums with 25 staff members?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent, T2.Open_Year FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T1.visitor_ID = T3.ID WHERE T3.ID = 6 and T2.Name = \"Place Tower Museum\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the total spent and open year of the museum where the visitor with ID 6 visited and the museum name is \"Place Tower Museum\"?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Open_Year, T2.visitor_ID FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T2.visitor_ID = T3.ID WHERE T3.Name = \"Guti Midfielder\" and T2.Total_spent = 320.44",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the open years and the IDs of the museums that the customer named Guti Midfielder visited and the total spent by him was 320.44?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.ID FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Num_of_Ticket = 4 GROUP BY T1.ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the customer who made the most visits with a ticket number of 4.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Museum_ID = 5 GROUP BY T1.Total_spent  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the total spent by the last visitor of museum with id 5?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Total_spent FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Age = 28 GROUP BY T1.Total_spent  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the total spent by the 28-year-old customer on his last visit.",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID FROM museum AS T1        EXCEPT SELECT T2.Museum_ID FROM museum AS T2 WHERE T2.Open_Year = \"2010\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of museums that were not open in year 2010?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID FROM museum AS T1        EXCEPT SELECT T2.Museum_ID FROM museum AS T2 WHERE T2.Open_Year = \"2008\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of museums that did not open in year 2008?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID FROM visit AS T1        EXCEPT SELECT T2.Museum_ID FROM visit AS T2 WHERE T2.Num_of_Ticket = 4",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the id of museums that no one visited with 4 tickets?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.Museum_ID FROM visit AS T1        EXCEPT SELECT T2.Museum_ID FROM visit AS T2 WHERE T2.Total_spent = 19.98",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of museums that no visitor spent 19.98 on?",
    "db_id": "museum_visit"
  },
  {
    "query": "SELECT T1.shp_feature_2 FROM Properties AS T1 WHERE T1.date_sold = \"2001-11-09 04:37:33\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the shape feature of the property that was sold on 2001-11-09 04:37:33.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.feature_name = \"BurglarAlarm\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of the other property features that have the feature named \"Burglar Alarm\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id WHERE T2.apt_feature_1 = \"enim\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of the other property features which have the property with apt feature 1 as \"enim\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_description FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.agreed_selling_price = 2574",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the property type descriptions of the properties with the agreed selling price of 2574?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_description FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.feature_id = 4",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the descriptions of the features of the property with feature id 4?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_id FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id WHERE T2.property_feature_description = \"cumque\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of properties that have the feature described as \"cumque\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.feature_name = \"Pool\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the descriptions of the other property features that are related to the feature named Pool?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_name = \"BurglarAlarm\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the reference feature type codes that have the feature named \"Burglar Alarm\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_id, count(*) FROM Other_Property_Features AS T1  GROUP BY T1.property_id",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the id of each property and the number of features it has.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_description, count(*) FROM Other_Available_Features AS T1  GROUP BY T1.feature_description",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the description of each feature and the number of available features that have that feature description.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.apt_feature_2, count(*) FROM Properties AS T1  GROUP BY T1.apt_feature_2",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the different features of apartments and the number of apartments with each feature.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_name, count(*) FROM Ref_Feature_Types AS T1  GROUP BY T1.feature_type_name",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the names of feature types and the number of reference features of each feature type.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_description, count(*) FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code  GROUP BY T1.property_type_description",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "What are the descriptions of the property types and the number of properties with each type?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code, count(*) FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code  GROUP BY T1.feature_type_code",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "What are the code of feature types and the number of features of each type?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.hse_feature_3, count(*) FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id  GROUP BY T1.hse_feature_3",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each house feature, show the number of other property features it has.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_id, count(*) FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id  GROUP BY T1.feature_id",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many features are available on each property?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code, count(*) FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code  GROUP BY T1.feature_type_code",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "What are the feature type codes of the other available features, and how many other available features have each feature type?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.agreed_selling_price, count(*) FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code  GROUP BY T1.agreed_selling_price",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each agreed selling price, what are the corresponding property types?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_name, count(*) FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code  GROUP BY T1.feature_type_name",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the name of feature types and the number of features of each type.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT count(*) FROM Other_Property_Features AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many property features are there in total?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT count(*) FROM Properties AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many properties are there?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT count(*) FROM Ref_Property_Types AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many property types are there?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT count(*) FROM Ref_Feature_Types AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many different feature types are there?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT count(*) FROM Other_Available_Features AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many features are available other than the ones listed?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_address, T1.apt_feature_3 FROM Properties AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the property address and the feature 3 of the properties?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_feature_description, T1.property_id FROM Other_Property_Features AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the descriptions and ids of other property features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_description, T1.feature_type_code FROM Other_Available_Features AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the feature description and type code for other available features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_name, T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the names of properties and their types?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_description, T2.oth_feature_2 FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the descriptions of the property types and the other features of the properties?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_description, T2.feature_id FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the descriptions of features and their ids for the other available features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_code, T2.hse_feature_2 FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the property type codes and the features of the properties?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.oth_feature_3, T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the other features of the properties and what are their property type descriptions?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_name, T1.feature_id FROM Other_Available_Features AS T1 WHERE T1.feature_description = \"Swimming Pool.\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the names and ids of the features that have the description \"Swimming Pool\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.hse_feature_2, T1.property_address FROM Properties AS T1 WHERE T1.property_id = 1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the features of the property with id 1 and what is its address?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_code, T1.oth_feature_3 FROM Properties AS T1 WHERE T1.property_name = \"riverside\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the property type code and other feature 3 of the property named \"riverside\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_name, T1.feature_id FROM Other_Available_Features AS T1 WHERE T1.feature_description = \"Burglar Alarm\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the names and ids of other available features that have the description \"Burglar Alarm\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_id, T1.property_id FROM Other_Property_Features AS T1 WHERE T1.property_feature_description = \"doloribus\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the feature ids and property ids of the properties with the feature description \"doloribus\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_name, T1.feature_description FROM Other_Available_Features AS T1 WHERE T1.feature_id = 3",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the name and description of the feature with id 3?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_description, T1.feature_type_code FROM Other_Available_Features AS T1 WHERE T1.feature_id = 3",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the description and type of the feature with id 3?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_feature_description, T1.property_id FROM Other_Property_Features AS T1 WHERE T1.feature_id = 3",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the description and id of the property with feature id 3?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1  GROUP BY T1.feature_name  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the name of the feature that has the most number of available products?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1  GROUP BY T1.feature_type_name  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the name of the feature type with the most number of references?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code FROM Ref_Feature_Types AS T1  GROUP BY T1.feature_type_code  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the code of the most frequently appearing feature type?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code FROM Other_Available_Features AS T1  GROUP BY T1.feature_type_code  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the most common feature type?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_description FROM Ref_Property_Types AS T1  GROUP BY T1.property_type_description  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the description of the most common property type?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT count(*) FROM Ref_Property_Types AS T1 WHERE T1.property_type_description = \"Field, Meadow.\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many properties with property type description \"Field, Meadow\" are there?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT count(*) FROM Other_Available_Features AS T1 WHERE T1.feature_name = \"Pool\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many available features have the feature name Pool?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT count(*) FROM Ref_Feature_Types AS T1 WHERE T1.feature_type_code = \"Amenity\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many papers have the feature type Amenity?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT count(*) FROM Ref_Property_Types AS T1 WHERE T1.property_type_code = \"House\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many properties with property type code \"House\" are there?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT count(*) FROM Ref_Property_Types AS T1 WHERE T1.property_type_code = \"Apartment\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many properties with property type code \"Apartment\" are there?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT count(*) FROM Ref_Property_Types AS T1 WHERE T1.property_type_code = \"Shop\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many properties with property type code \"Shop\" are there?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1    ORDER BY T1.property_id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the description of the first property feature?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_address FROM Properties AS T1    ORDER BY T1.agreed_selling_price DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the address of the property with the highest selling price?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_description FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code    ORDER BY T2.date_sold DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the description of the property type with the most recent sale date?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_description FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code    ORDER BY T2.vendor_requested_price DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the description of the property type with the highest requested price?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id    ORDER BY T2.feature_id DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the property with the highest feature?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id    ORDER BY T2.feature_id ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the first feature of the other property features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code    ORDER BY T2.date_on_market ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the code of the property type of the property that was on the market the longest?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_name, T1.feature_description FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id    ORDER BY T2.property_id DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name and description of the first available feature for a property?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_description, T1.feature_id FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id    ORDER BY T2.property_id DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the feature description and id of the first available feature for a property?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.shp_feature_2, T1.hse_feature_2 FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id    ORDER BY T2.property_id DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the shape feature and house feature of the property with the greatest property id?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_description, T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code    ORDER BY T2.vendor_requested_price DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the property type description and code of the property with the highest vendor requested price?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_id, T1.feature_id FROM Other_Property_Features AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id    ORDER BY T2.room_count DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id and feature id of the property with the highest room count?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.feature_id) FROM Other_Property_Features AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct features are there in other properties?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.property_id) FROM Other_Property_Features AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct properties are listed?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.hse_feature_1) FROM Properties AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different features are there in total?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.feature_type_code) FROM Ref_Feature_Types AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct feature types are there?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.feature_description) FROM Other_Available_Features AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct feature descriptions are available?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT avg( T1.vendor_requested_price) FROM Properties AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average vendor requested price for all properties?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT avg( T1.property_id) FROM Properties AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average property id?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT avg( T1.feature_id) FROM Other_Available_Features AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average feature id of other available features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT avg( T1.room_count) FROM Properties AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average room count for all properties?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT avg( T1.feature_id) FROM Other_Property_Features AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average feature id of other property features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_id FROM Other_Property_Features AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the feature ids of other property features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.agreed_selling_price FROM Properties AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Show the agreed selling price of properties.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_description FROM Ref_Property_Types AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the property type descriptions of reference properties?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_code FROM Ref_Property_Types AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the property types of reference properties?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the descriptions of the other property features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.shp_feature_1 FROM Properties AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the first features of properties?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_description FROM Other_Available_Features AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the feature descriptions of other available features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code FROM Ref_Feature_Types AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the feature type codes of the reference features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT T1.property_id FROM Other_Property_Features AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct property ids of other property features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT T1.feature_type_code FROM Ref_Feature_Types AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct feature type codes of reference features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT T1.feature_type_name FROM Ref_Feature_Types AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct feature type names of reference features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT T1.date_on_market FROM Properties AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "When are the different properties on the market?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT T1.property_type_code FROM Ref_Property_Types AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct property types?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1     ORDER BY T1.property_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the descriptions of the other property features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_description FROM Other_Available_Features AS T1     ORDER BY T1.feature_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the feature descriptions of other available features in ascending order of feature id.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.buyer_offered_price FROM Properties AS T1     ORDER BY T1.date_sold ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the offered prices of properties sorted by the dates they were sold in ascending order.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.oth_feature_1 FROM Properties AS T1     ORDER BY T1.buyer_offered_price ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the other features of properties in ascending order of buyer offered price.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1     ORDER BY T1.feature_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the property ids of all other property features in ascending order of feature id.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.vendor_requested_price FROM Properties AS T1     ORDER BY T1.property_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the vendor requested prices of properties?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.vendor_requested_price FROM Properties AS T1     ORDER BY T1.buyer_offered_price DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the vendor requested prices of properties in descending order.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_id FROM Other_Property_Features AS T1     ORDER BY T1.property_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the feature ids of other property features in descending order of property id.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.fld_feature_1 FROM Properties AS T1     ORDER BY T1.buyer_offered_price DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the feature of properties in descending order of buyer offered price.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1     ORDER BY T1.feature_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the property ids of all other property features in descending order of feature id.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1     ORDER BY T1.property_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the description of property features of other properties in descending order of property id.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.vendor_requested_price FROM Properties AS T1     ORDER BY T1.date_on_market DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the requested prices of properties sorted by the date on market in descending order.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1     ORDER BY T1.feature_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the description of property features in descending order of feature id.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_code, T1.property_type_description FROM Ref_Property_Types AS T1     ORDER BY T1.property_type_description ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the property type codes and descriptions for all reference properties.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_feature_description, T1.feature_id FROM Other_Property_Features AS T1     ORDER BY T1.feature_id ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the description and id of all other property features.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.agreed_selling_price, T1.hse_feature_2 FROM Properties AS T1     ORDER BY T1.hse_feature_2 ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the agreed selling prices and the features of the houses in ascending order of the feature.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.hse_feature_2 FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id JOIN Ref_Property_Types AS T3 ON T1.property_type_code = T3.property_type_code WHERE T2.feature_id = 4 and T3.property_type_code = \"House\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the features of the properties that have the property type \"House\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code JOIN Other_Property_Features AS T3 ON T1.feature_id = T3.feature_id WHERE T2.feature_type_name = \"Securiyt, eg Burglar Alarm.\" and T3.property_feature_description = \"corrupti\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the feature type codes of the other property features which have the feature type \"Securiyt, eg Burglar Alarm\" and the property feature description \"corrupti\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id JOIN Ref_Feature_Types AS T3 ON T2.feature_type_code = T3.feature_type_code WHERE T2.feature_type_code = \"Amenity\" and T3.feature_type_name = \"Amenity, eg Pool.\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the ids of the features of properties that have the feature type \"Amenity, eg Pool.\" in the reference feature type \"Amenity\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code JOIN Other_Property_Features AS T3 ON T2.feature_id = T3.feature_id WHERE T2.feature_description = \"Burglar Alarm\" and T3.property_id = 6",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the names of the feature types that can be used as reference features for the property with the property id of 6?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.buyer_offered_price FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id JOIN Other_Available_Features AS T3 ON T2.feature_id = T3.feature_id WHERE T2.property_id = 1 and T3.feature_description = \"Burglar Alarm\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What is the buyer offered price of the property with property id 1 and the feature description \"Burglar Alarm\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id JOIN Ref_Feature_Types AS T3 ON T1.feature_type_code = T3.feature_type_code WHERE T2.property_feature_description = \"et\" and T3.feature_type_name = \"Amenity, eg Pool.\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the feature type codes of the features which have the property feature description \"et\" and the feature type name \"Amenity, eg Pool.\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.agreed_selling_price = 21769471.8328 or T2.agreed_selling_price = 21769471.8328",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the property type codes of the properties with the agreed selling price of 21769471.8328?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.feature_description = \"Swimming Pool.\" or T2.feature_description = \"Swimming Pool.\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the ids of the properties that have the feature description \"Swimming Pool\" or \"Swimming Pool\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_description = \"Swimming Pool.\" or T2.feature_description = \"Air Conditioning.\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the names of the feature types that have the description \"Swimming Pool.\" or \"Air Conditioning.\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_id FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.feature_name = \"Pool\" or T2.feature_name = \"BurglarAlarm\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the ids of the features of the properties that have the feature name \"Pool\" or \"Burglar Alarm\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.shp_feature_1 FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.property_type_code = \"Field\" or T2.property_type_code = \"Field\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the shape features of the properties that have the property type \"Field\" or \"Field\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_address FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id WHERE T2.property_feature_description = \"vitae\" or T2.property_feature_description = \"vitae\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the address of the properties that have the property feature description \"vitae\" or \"vitae\".",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1 WHERE T1.property_id = 14 and T1.feature_id = 4",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the description of the feature at the property with id 14?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1 WHERE T1.feature_description = \"Swimming Pool.\" and T1.feature_id = 3",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the name of the feature described as \"Swimming Pool.\" and whose id is 3?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_id FROM Other_Available_Features AS T1 WHERE T1.feature_type_code = \"Security\" and T1.feature_name = \"AirCon\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ids of other available features whose feature type code is \"Security\" and feature name is \"AirCon\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_description FROM Other_Available_Features AS T1 WHERE T1.feature_type_code = \"Security\" and T1.feature_id = 3",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the description of the feature with type code \"Security\" and id 3?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1 WHERE T1.feature_type_code = \"Security\" and T1.feature_description = \"Swimming Pool.\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the names of other available features whose type code is \"Security\" and whose feature description is \"Swimming Pool\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1 WHERE T1.feature_id = 4 and T1.property_id = 14",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the description of the feature with id 4 on the property with id 14?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.feature_description) FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T1.feature_name = \"Pool\" and T2.property_feature_description = \"ad\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct feature descriptions are associated with the property feature \"ad\" for the feature \"Pool\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.property_address) FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code WHERE T1.property_name = \"riverside\" and T2.property_type_code = \"Field\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct property addresses are associated with the property with name \"riverside\" and the property type code \"Field\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.feature_type_code) FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_type_name = \"Securiyt, eg Burglar Alarm.\" and T2.feature_name = \"Pool\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct features are available for the feature type \"Securiyt, eg Burglar Alarm.\" that have the feature name \"Pool\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.feature_type_name) FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_type_code = \"Security\" and T2.feature_id = 2",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct features are available for the feature type \"Security\" in the database?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_id FROM Other_Property_Features AS T1 WHERE T1.property_feature_description = \"quo\" or T1.property_id = 9",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the feature ids of the properties with the description \"quo\" or property id 9?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_description FROM Other_Available_Features AS T1 WHERE T1.feature_name = \"AirCon\" or T1.feature_type_code = \"Amenity\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the descriptions of the features called \"AirCon\" or with type code \"Amenity\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code FROM Other_Available_Features AS T1 WHERE T1.feature_description = \"Air Conditioning.\" or T1.feature_id = 3",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the feature type codes of the available features with the description \"Air Conditioning\" or with the id 3?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1 WHERE T1.property_id = 7 or T1.feature_id = 2",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the descriptions of the features of the property with id 7 or feature id 2?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_description FROM Other_Available_Features AS T1 WHERE T1.feature_type_code = \"Amenity\" or T1.feature_id = 4",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the descriptions of the features with type code \"Amenity\" or id 4?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1 WHERE T1.feature_id = 3 or T1.feature_type_code = \"Amenity\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the names of features that have an id of 3 or a type code of \"Amenity\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT count(*) FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.apt_feature_1 = \"quos\" and T2.apt_feature_2 = \"aut\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many properties have the feature \"quos\" and \"aut\" in the apt feature 1?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT count(*) FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_type_code = \"Security\" and T2.feature_type_name = \"Securiyt, eg Burglar Alarm.\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many features of type Security are available in total?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT count(*) FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id WHERE T2.property_feature_description = \"earum\" and T2.feature_id = 2",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many properties have the feature description \"earum\" and feature id 2?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT count(*) FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.property_type_description = \"Apartment, Flat, Condo, etc.\" and T2.property_type_code = \"House\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many properties have the property type description \"Apartment, Flat, Condo, etc.\" and the property type code \"House\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1 WHERE T1.feature_id != 4",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the descriptions of the features of the properties that have feature id different from 4?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.shp_feature_2 FROM Properties AS T1 WHERE T1.property_address != \"107 Roob Courts\nErdmanburgh, IA 42926-0873\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the shape features of properties whose property address is not \"107 Roob Courts Erdmanburgh, IA 42926-0873\".",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code FROM Ref_Feature_Types AS T1 WHERE T1.feature_type_name != \"Securiyt, eg Burglar Alarm.\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the feature type codes of reference features whose feature type names are not \"Securiyt, eg Burglar Alarm\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1 WHERE T1.feature_id != 2",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the descriptions of the features of the properties that have an feature id different from 2?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_id FROM Other_Property_Features AS T1 WHERE T1.property_feature_description != \"dolorem\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of the features of properties that are not described as \"dolorem\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.vendor_requested_price != 150045.7568",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the property type codes of the properties whose vendor requested price is not 150045.7568?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.feature_id != 3",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of the properties that do not have the feature 3?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_id FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.property_type_description != \"Apartment, Flat, Condo, etc.\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of properties that have property types that are not \"Apartment, Flat, Condo, etc.\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_id FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_type_code != \"Security\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of the features that are available in products that do not have the Security feature type?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.fld_feature_1 FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.property_type_description != \"Apartment, Flat, Condo, etc.\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the first features of properties that have property types that are not \"Apartment, Flat, Condo, etc.\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.fld_feature_1 FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.property_type_code != \"Apartment\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the features of the properties that have property type code that is not \"Apartment\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT T1.feature_type_code FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_id = 4",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct feature type codes of the reference features that have the feature id 4?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT T1.agreed_selling_price FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id WHERE T2.property_id = 6",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the distinct agreed selling price of the property with id 6?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT T1.date_on_market FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.property_type_code = \"Field\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct dates on market for the properties with Field as their property type?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT T1.feature_name FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T2.property_feature_description = \"corrupti\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct feature names of other available features that are related to the property feature with description \"corrupti\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.feature_id) FROM Other_Property_Features AS T1 WHERE T1.property_feature_description = \"earum\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct features are described by the property \"earum\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.feature_type_name) FROM Ref_Feature_Types AS T1 WHERE T1.feature_type_code = \"Security\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct features of type Security are there in the reference feature type?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.property_type_code) FROM Ref_Property_Types AS T1 WHERE T1.property_type_description = \"Field, Meadow.\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct property types are described as \"Field, Meadow\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.property_name) FROM Properties AS T1 WHERE T1.apt_feature_2 = \"aut\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct properties have the feature \"aut\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.property_type_description) FROM Ref_Property_Types AS T1 WHERE T1.property_type_code = \"Shop\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct property types are associated with the property type code \"Shop\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.property_id) FROM Other_Property_Features AS T1 WHERE T1.property_feature_description = \"hic\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct other property features have the property feature description 'hic'?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.feature_id) FROM Other_Available_Features AS T1 WHERE T1.feature_name = \"Pool\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct features are available for the product with feature name Pool?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_id FROM Other_Property_Features AS T1 WHERE T1.property_id > 4",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the feature ids of other properties with an id greater than 4?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_id FROM Other_Property_Features AS T1 WHERE T1.property_id > 9",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the feature ids of other properties with property id greater than 9?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1 WHERE T1.feature_id > 4",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the ids of properties with features greater than 4?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.apt_feature_1 FROM Properties AS T1 WHERE T1.vendor_requested_price > 6713620.9",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the features of the properties that have vendor requested prices higher than 6713620.9?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1 WHERE T1.feature_id > 2",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the descriptions of the features of the properties with ids greater than 2?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_id, T2.property_id, T3.fld_feature_2 FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id JOIN Properties AS T3 ON T2.property_id = T3.property_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the feature ids, property ids and field names of the features that are available in other products but not in the product with property id \"12\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.vendor_requested_price, T2.feature_id, T3.feature_description FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id JOIN Other_Available_Features AS T3 ON T2.feature_id = T3.feature_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the requested prices of the properties, and what are the ids and descriptions of the features on the properties?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_code, T2.buyer_offered_price, T3.feature_id FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code JOIN Other_Property_Features AS T3 ON T2.property_id = T3.property_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the code for the property type, the offered price and the feature id of the properties that have the property type code 'R1'?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code, T2.feature_description, T3.property_feature_description FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code JOIN Other_Property_Features AS T3 ON T2.feature_id = T3.feature_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the code, description, and description of the features of the reference feature types, and what are the properties of the features of the other available features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_name, T2.feature_id, T3.property_feature_description FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code JOIN Other_Property_Features AS T3 ON T2.feature_id = T3.feature_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the names of the feature types, their ids, and the descriptions of the properties of the features that are available but not referenced?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_code, T2.hse_feature_1, T3.property_feature_description FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code JOIN Other_Property_Features AS T3 ON T2.property_id = T3.property_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the code, hse feature 1, and description of the property types, and the properties and other property features they refer to?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.date_sold FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id     ORDER BY T2.feature_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Show the dates when properties are sold, ordered by the feature id of other property features.",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code     ORDER BY T2.feature_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the code of the feature types that are available in other available features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_id = T2.feature_id     ORDER BY T2.feature_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the ids of the other property features, and what are the features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_description FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code     ORDER BY T2.room_count ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the descriptions of the property types?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code     ORDER BY T2.feature_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of the feature types that are available in other available features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code     ORDER BY T2.property_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the different property types for the properties with ascending property id?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.shp_feature_3 FROM Properties AS T1 WHERE T1.agreed_selling_price = 4514.807     INTERSECT SELECT T2.shp_feature_3 FROM Properties AS T2 WHERE T2.agreed_selling_price = 21769471.8328",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the properties that have both an agreed selling price of 4514.807 and an agreed selling price of at least 21769471.8328?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code FROM Other_Available_Features AS T1 WHERE T1.feature_description = \"Air Conditioning.\"     INTERSECT SELECT T2.feature_type_code FROM Other_Available_Features AS T2 WHERE T2.feature_description = \"Burglar Alarm\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the feature type codes of the features that are both available and have the description \"Air Conditioning\" and the features that are available and have the description \"Burglar Alarm\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1 WHERE T1.feature_id = 3     INTERSECT SELECT T2.feature_name FROM Other_Available_Features AS T2 WHERE T2.feature_id = 3",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the names of features that are available both on iPhone 3 and on other available phones?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_description FROM Ref_Property_Types AS T1 WHERE T1.property_type_code = \"Other\"     INTERSECT SELECT T2.property_type_description FROM Ref_Property_Types AS T2 WHERE T2.property_type_code = \"Other\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the descriptions of the property types that have both \"Other\" and \"Other\" as their property type codes?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code FROM Ref_Feature_Types AS T1 WHERE T1.feature_type_name = \"Amenity, eg Pool.\"     INTERSECT SELECT T2.feature_type_code FROM Ref_Feature_Types AS T2 WHERE T2.feature_type_name = \"Securiyt, eg Burglar Alarm.\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the feature type codes of amenity and security feature types that have been used in reference features?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT avg( T1.feature_id) FROM Other_Property_Features AS T1 WHERE T1.property_id = 7",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average feature id of the other properties with property id 7?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT avg( T1.feature_id) FROM Other_Property_Features AS T1 WHERE T1.property_id = 1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average feature id of the other properties of the property with id 1?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT avg( T1.feature_id) FROM Other_Available_Features AS T1 WHERE T1.feature_description = \"Swimming Pool.\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average feature id of other available features that have the description \"Swimming Pool\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.buyer_offered_price = (SELECT max( T23.buyer_offered_price) FROM Properties AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the property type codes of the properties with the highest buyer offered price?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_description FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.buyer_offered_price = (SELECT max( T23.buyer_offered_price) FROM Properties AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the property type descriptions of the properties with the highest buyer offered price?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id WHERE T2.room_count = (SELECT max( T23.room_count) FROM Properties AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the descriptions of the other property features of the property with the maximum room count?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_description FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.vendor_requested_price = (SELECT max( T23.vendor_requested_price) FROM Properties AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the property type descriptions of the properties with the highest vendor requested price?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_id, T2.feature_type_code FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code JOIN Other_Property_Features AS T3 ON T1.feature_id = T3.feature_id WHERE T3.property_id = 7 and T2.feature_type_name = \"Amenity, eg Pool.\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the ids, and the code of the feature type of the property with id 7 that has the feature of \"Amenity, eg Pool.\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code, T2.feature_id FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code JOIN Other_Property_Features AS T3 ON T2.feature_id = T3.feature_id WHERE T3.property_id = 9 and T2.feature_description = \"Swimming Pool.\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the code and id of the feature type of the property with property id 9 and the feature description \"Swimming Pool\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_name, T2.feature_type_code FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code JOIN Other_Property_Features AS T3 ON T2.feature_id = T3.feature_id WHERE T3.property_feature_description = \"ad\" and T2.feature_id = 4",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the names and codes of the feature types of the property features that have the description \"ad\" and the feature id 4?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_id, T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code JOIN Other_Property_Features AS T3 ON T1.feature_id = T3.feature_id WHERE T3.property_feature_description = \"earum\" and T2.feature_type_code = \"Amenity\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the feature ids and the feature type names of the amenities that can be used as properties?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_id FROM Other_Property_Features AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id WHERE T2.apt_feature_2 = \"et\" GROUP BY T1.property_id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the property which has the most number of features of \"et\".",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.other_property_details FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id WHERE T2.property_feature_description = \"vitae\" GROUP BY T1.other_property_details  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the other property detail of the property that has the property feature description \"vitae\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_type_name = \"Securiyt, eg Burglar Alarm.\" GROUP BY T1.feature_type_code  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the code of the feature type that has the most other available features with the feature type \"Securiyt, eg Burglar Alarm.\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_description = \"Swimming Pool.\" GROUP BY T1.feature_type_code  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the code of the feature type that has the most number of other available features with description \"Swimming Pool\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_id FROM Other_Available_Features AS T1        EXCEPT SELECT T2.feature_id FROM Other_Available_Features AS T2 WHERE T2.feature_type_code = \"Security\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of the features that are available but do not have the Security feature type?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.shp_feature_3 FROM Properties AS T1        EXCEPT SELECT T2.shp_feature_3 FROM Properties AS T2 WHERE T2.date_sold = \"2001-11-09 04:37:33\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the properties that have not been sold on November 9, 2001?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_feature_description FROM Other_Property_Features AS T1        EXCEPT SELECT T2.property_feature_description FROM Other_Property_Features AS T2 WHERE T2.feature_id = 2",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the descriptions of the other property features that do not have the feature with id 2?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_description FROM Other_Available_Features AS T1        EXCEPT SELECT T2.feature_description FROM Other_Available_Features AS T2 WHERE T2.feature_type_code = \"Amenity\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the feature descriptions of the features that are available but do not have the type code \"Amenity\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.feature_type_code FROM Ref_Feature_Types AS T1        EXCEPT SELECT T2.feature_type_code FROM Ref_Feature_Types AS T2 WHERE T2.feature_type_name = \"Securiyt, eg Burglar Alarm.\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the feature type codes of the reference features that do not have the feature type \"Securiyt, eg Burglar Alarm.\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_code FROM Ref_Property_Types AS T1        EXCEPT SELECT T2.property_type_code FROM Ref_Property_Types AS T2 WHERE T2.property_type_description = \"Other, to be determined.\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the property type codes of the reference properties that do not have a property type description of \"Other, to be determined\"?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.property_type_description FROM Ref_Property_Types AS T1        EXCEPT SELECT T2.property_type_description FROM Ref_Property_Types AS T2 WHERE T2.property_type_code = \"Field\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the descriptions of property types that have no properties of type Field?",
    "db_id": "real_estate_properties"
  },
  {
    "query": "SELECT T1.StuID FROM Student AS T1 WHERE T1.city_code = \"LON\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the student id for all the students living in the city with code \"LON\".",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Advisor FROM Student AS T1 WHERE T1.Fname = \"Jun\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the advisor of the student whose first name is Jun.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Age FROM Student AS T1 WHERE T1.StuID = 1008",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the age of the student with stu id 1008?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID = 1001",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the age of the student who has the pet with Stu ID 1001?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.weight FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.PetID = 2001",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the weight of the pet with ID 2001?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.StuID = 1001",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of pets that are owned by student with id 1001?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.pet_age = 3",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the student IDs who have a pet aged 3?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.pet_age, count(*) FROM Pets AS T1  GROUP BY T1.pet_age",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all ages of pets and the number of pets in each age.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Sex, count(*) FROM Student AS T1  GROUP BY T1.Sex",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the sex of students and the number of students in each sex.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Advisor, count(*) FROM Student AS T1  GROUP BY T1.Advisor",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all advisors and the number of students each advisor has.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Major, count(*) FROM Student AS T1  GROUP BY T1.Major",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all majors and the number of students who have that major.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.weight, count(*) FROM Pets AS T1  GROUP BY T1.weight",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the weight of pets and the number of pets in each weight range.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetType, count(*) FROM Pets AS T1  GROUP BY T1.PetType",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all pet types and the number of pets belonging to each type.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID, count(*) FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID  GROUP BY T1.PetID",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many pets does each has pet have?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.pet_age, count(*) FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID  GROUP BY T1.pet_age",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each age, find the number of pets that have a pet.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Advisor, count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.Advisor",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each advisor, show the number of students that have pets under that advisor.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetType, count(*) FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID  GROUP BY T1.PetType",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show different pet types and the number of pets that have that type.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Sex, T1.Advisor FROM Student AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the sex and advisor of each student?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.pet_age, T1.weight FROM Pets AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the ages and weights of all pets?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.weight, T1.pet_age FROM Pets AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the weights and pet ages of all pets?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID, T1.StuID FROM Has_Pet AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the id and student id of pets?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.city_code, T1.Age FROM Student AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the city codes and ages of all students?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID, T2.StuID FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the id and student id of pets that have pets?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Sex, T2.PetID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the sexes and pet ids of the students?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID, T2.Advisor FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the pet id and advisor of each student?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Age, T2.StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the ages of students who have pets?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Major, T2.StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the majors and ids of students who have pets?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Sex, T1.StuID FROM Student AS T1 WHERE T1.LName = \"Smith\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the sex and student ID of all students whose last name is Smith.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Sex, T1.Age FROM Student AS T1 WHERE T1.Fname = \"Jun\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the sex and age of the student whose first name is Jun.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetType, T1.pet_age FROM Pets AS T1 WHERE T1.weight = 12.0",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the types and ages of pets that weigh 12.0?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID, T1.weight FROM Pets AS T1 WHERE T1.pet_age = 3",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the id and weight of the pets that are aged 3?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Sex, T1.Fname FROM Student AS T1 WHERE T1.LName = \"Rugh\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the sex and first name of the student whose last name is Rugh.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.weight, T1.PetID FROM Pets AS T1 WHERE T1.pet_age = 1",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the weight of the oldest pet?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetType, T1.PetID FROM Pets AS T1 WHERE T1.weight = 12.0",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the types and ids of pets that weigh 12.0?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Has_Pet AS T1  GROUP BY T1.PetID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which pet has the most number of owners?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.pet_age FROM Pets AS T1  GROUP BY T1.pet_age  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the oldest age of pets?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Advisor FROM Student AS T1  GROUP BY T1.Advisor  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the advisor who is associated with the most students.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Age FROM Student AS T1  GROUP BY T1.Age  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the oldest age of a student?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Pets AS T1  GROUP BY T1.PetID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the id of the pet with the most number of owners.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT count(*) FROM Student AS T1 WHERE T1.Sex = \"F\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many female students are there?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT count(*) FROM Student AS T1 WHERE T1.Major = 600",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many students have major 600?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Student AS T1    ORDER BY T1.Age DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the oldest student?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.pet_age FROM Pets AS T1    ORDER BY T1.PetID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the oldest pet age?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Pets AS T1    ORDER BY T1.pet_age DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the oldest pet?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID    ORDER BY T2.PetID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the first name of the student who has the pet with the highest ID?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID    ORDER BY T2.weight DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the heaviest pet?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.pet_age FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID    ORDER BY T2.PetID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the oldest pet in the database?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.pet_age FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID    ORDER BY T2.StuID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the oldest pet in the school?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID    ORDER BY T2.Advisor DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the student ID of the student who has the pet with the highest advisor rank.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID    ORDER BY T2.StuID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the pet with the highest student id?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.weight FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID    ORDER BY T2.StuID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the weight of the pet belonging to the student with the id 100?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID    ORDER BY T2.PetID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the student who has the pet with the highest id?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.city_code FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID    ORDER BY T2.StuID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the code of the city where the student with the lowest StuID has a pet?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.weight, T1.PetID FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID    ORDER BY T2.StuID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the weight of the pet with the stuid ID of the last student?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetType, T1.weight FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID    ORDER BY T2.PetID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the type and weight of the pet with the highest id?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.city_code, T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID    ORDER BY T2.StuID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the city code and last name of the student who has the oldest pet?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.city_code, T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID    ORDER BY T2.StuID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the code of the city where the oldest student has a pet?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetType, T1.PetID FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID    ORDER BY T2.StuID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the type and id of the pet that is owned by the student with the highest id?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID, T1.PetType FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID    ORDER BY T2.StuID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id and type of the pet belonging to the student with the highest id?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.StuID) FROM Has_Pet AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many students have a pet?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.PetID) FROM Has_Pet AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct pets do people have?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.weight) FROM Pets AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct weights of pets are there?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT avg( T1.Major) FROM Student AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average major of all students?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT avg( T1.StuID) FROM Has_Pet AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average number of pets that students have?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT avg( T1.pet_age) FROM Pets AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average age of the pets?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT avg( T1.StuID) FROM Student AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average student ID?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT avg( T1.PetID) FROM Has_Pet AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average number of pets that people have?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT avg( T1.PetID) FROM Pets AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average pet id?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Has_Pet AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the student ids who have a pet?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Advisor FROM Student AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the advisors of all students?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Sex FROM Student AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the sexes of all students?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.pet_age FROM Pets AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the ages of pets?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.weight FROM Pets AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the weights of pets?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Age FROM Student AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the ages of all students?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Has_Pet AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the ids of pets owned by people?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Major FROM Student AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the majors of all students?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT T1.Age FROM Student AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct ages of all students?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT T1.Fname FROM Student AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the different first names of students?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT T1.Major FROM Student AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct majors of all students?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.weight FROM Pets AS T1     ORDER BY T1.PetID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the weights of pets in ascending order of pet ID.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Pets AS T1     ORDER BY T1.weight ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the id of pets in ascending order of weight.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Fname FROM Student AS T1     ORDER BY T1.StuID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the first names of students in ascending order of student ID?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Has_Pet AS T1     ORDER BY T1.PetID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the student ID for each pet in ascending order of pet ID.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Has_Pet AS T1     ORDER BY T1.StuID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the ids of pets in ascending order of student id.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetType FROM Pets AS T1     ORDER BY T1.pet_age ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the types of pets in ascending order of pet age.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Has_Pet AS T1     ORDER BY T1.PetID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the student IDs who have pets in descending order of pet IDs.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Pets AS T1     ORDER BY T1.weight DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the id of pets in descending order of weight.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Age FROM Student AS T1     ORDER BY T1.StuID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the ages of students in descending order of student ID?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.pet_age FROM Pets AS T1     ORDER BY T1.PetID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the ages of pets in descending order of pet ID.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Advisor FROM Student AS T1     ORDER BY T1.Age DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the advisors of students in descending order of student age.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Pets AS T1     ORDER BY T1.pet_age DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the id of pets in descending order of pet age.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetType FROM Pets AS T1     ORDER BY T1.weight DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the types of pets in descending order of weight.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Fname, T1.StuID FROM Student AS T1     ORDER BY T1.StuID ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the first names and student IDs of all students?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Advisor, T1.LName FROM Student AS T1     ORDER BY T1.LName ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the advisor and last name of students in ascending order of last name.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetType, T1.weight FROM Pets AS T1     ORDER BY T1.weight ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the types of pets and their weights in ascending order.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Advisor, T1.city_code FROM Student AS T1     ORDER BY T1.city_code ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the advisor and city code of all students in ascending order of city code.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.pet_age, T1.weight FROM Pets AS T1     ORDER BY T1.weight ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the age and weight of pets in ascending order of weight.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Advisor FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T2.StuID = 1002 and T3.weight = 9.3",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What is the advisor of the student whose pet has the weight of 9.3?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T2.PetID = 2001 and T3.PetType = \"cat\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the ages of the students who have the pet with id 2001 and whose pet type is \"cat\"?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.weight FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T2.PetID = 2002 and T3.StuID = 1012",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What is the weight of the pet with id 2002 owned by the student with id 1012?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Advisor FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T2.PetID = 2002 and T3.pet_age = 3",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Who is the advisor of the student who has the pet aged 3?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.pet_age FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T2.StuID = 1002 and T3.LName = \"Rugh\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the ages of the pets belonging to the student with the name \"Rugh\" and whose id is 1002?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetType FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T2.StuID = 1001 and T3.Major = 520",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the types of pets owned by the student with ID 1001 and major 520?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID = 2002 or T2.PetID = 2001",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the student idenities who have either pet 2002 or 2001?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.StuID = 1002 or T2.StuID = 1001",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the id of pets that are owned by student with id 1002 or 1001?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.city_code = \"PHL\" or T2.city_code = \"DAL\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the student id for those who have pet and live in Philadelphia or Dallas.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.weight = 13.4 or T2.weight = 9.3",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the ids of the pets whose weight is 13.4 or 9.3?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Advisor FROM Student AS T1 WHERE T1.Sex = \"F\" and T1.StuID = 1015",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the advisor of the student with sex \"F\" and stu id 1015?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.weight FROM Pets AS T1 WHERE T1.PetType = \"cat\" and T1.PetID = 2002",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the weight of the pet with type \"cat\" and id 2002?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetType FROM Pets AS T1 WHERE T1.weight = 13.4 and T1.pet_age = 1",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the types of pets that weigh 13.4 and are 1 year old?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Major FROM Student AS T1 WHERE T1.StuID = 1017 and T1.Sex = \"M\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the major of the student with stu id 1017 and sex \"M\"?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Pets AS T1 WHERE T1.PetType = \"cat\" and T1.pet_age = 2",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the id of the pets whose type is \"cat\" and age is 2?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.pet_age) FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T1.PetID = 2001 and T2.StuID = 1002",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct ages does the pet with ID 2001 have?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.weight) FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T1.pet_age = 3 and T2.StuID = 1002",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct weights of pets does student 1002 have at the age of 3?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.PetType) FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T1.pet_age = 1 and T2.PetID = 2002",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct kinds of pets does the pet that is 1 years old have?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.city_code) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.LName = \"Lee\" and T2.StuID = 1001",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct cities do students with the last name Lee and whose pet has the ID 1001 live in?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.StuID) FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.PetID = 2003 and T2.Fname = \"Tracy\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct students have the pet with id 2003 and whose first name is Tracy?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Sex) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.StuID = 1035 and T2.PetID = 2002",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct students have the pet with id 2002?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.StuID) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.Fname = \"David\" and T2.PetID = 2002",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct students have the pet with the id 2002?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.PetID) FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.StuID = 1002 and T2.city_code = \"ROC\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct pets does the student with stuid 1002 and city code \"ROC\" have?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Major FROM Student AS T1 WHERE T1.Age = 20 or T1.Fname = \"Michael\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the majors of students aged 20 or whose first name is \"Michael\"?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Fname FROM Student AS T1 WHERE T1.StuID = 1021 or T1.Sex = \"F\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the first name of the student with stu id 1021 or sex F.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Pets AS T1 WHERE T1.PetType = \"dog\" or T1.pet_age = 2",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the ids of the pets that are type \"dog\" or have age 2.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.weight FROM Pets AS T1 WHERE T1.PetID = 2002 or T1.PetType = \"dog\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the weight of the pet with ID 2002 or of type \"dog\"?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.pet_age FROM Pets AS T1 WHERE T1.PetType = \"dog\" or T1.PetID = 2002",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ages of the dogs or the pet with ID 2002?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID = 1001 and T2.PetID = 2002",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many students have the pet with id 1001 and what is its id?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT count(*) FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.PetID = 2001 and T2.PetType = \"dog\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many students have a pet with type \"dog\"?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT count(*) FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.pet_age = 2 and T2.PetID = 2002",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many pets have an age of 2 and belong to pet with id 2002?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID = 2002 and T2.StuID = 1002",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many students have a pet with an id of 2002 and are 1002?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT count(*) FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.LName = \"Tai\" and T2.Age = 26",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many pets does the student whose last name is Tai and whose age is 26 have?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT count(*) FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.PetID = 2001 and T2.StuID = 1001",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many pets does student 1001 have?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID = 2001 and T2.StuID = 1002",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many students have a pet with an id of 2001 and are 1002?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT count(*) FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.PetType = \"cat\" and T2.PetID = 2001",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many students have a pet with type \"cat\" and id 2001?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT count(*) FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.weight = 12.0 and T2.PetID = 2001",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many students have a pet whose weight is 12.0 and whose pet id is 2001?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID = 1002 and T2.PetID = 2003",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many students have pet with id 2003?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 WHERE T1.PetID != 2001",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the student ids of those who do not have the pet with id 2001?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Has_Pet AS T1 WHERE T1.StuID != 1001",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the pets owned by the student with id 1001?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 WHERE T1.PetID != 2003",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the student ids of those who do not have the pet with id 2003?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Pets AS T1 WHERE T1.weight != 9.3",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the id of pets whose weight is not 9.3?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Student AS T1 WHERE T1.city_code != \"NYC\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the student id for all students who do not live in NYC.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Advisor != 7792",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the student ids who have pets and whose advisor is not 7792?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.StuID != 1002",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of pets that do not belong to student with id 1002?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID != 1002",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the first names of students who do not have the pet with ID 1002?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetType FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.StuID != 1002",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the types of pets belonging to students other than the one with ID 1002?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.pet_age FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.StuID != 1002",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ages of the pets belonging to a student whose ID is not 1002?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT T1.pet_age FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.PetID = 2003",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct ages of the pet with id 2003?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT T1.PetID FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Sex = \"F\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct pet ids of the students with sex \"F\"?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT T1.Advisor FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID = 1002",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct advisors of the student with ID 1002?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID = 1001",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct last names of the students who have pet with stuid 1001?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT T1.StuID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.PetID = 2003",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct student ids who have the pet with id 2003.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.weight) FROM Pets AS T1 WHERE T1.PetType = \"cat\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct weights do cats have?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Advisor) FROM Student AS T1 WHERE T1.Major = 540",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many students are advised by the same advisor with major 540?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.PetID) FROM Has_Pet AS T1 WHERE T1.StuID = 1001",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct pets does the student with id 1001 have?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.StuID) FROM Has_Pet AS T1 WHERE T1.PetID = 2001",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many students have the pet with id 2001?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.PetType) FROM Pets AS T1 WHERE T1.weight = 13.4",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct pets have the weight of 13.4?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.PetID) FROM Pets AS T1 WHERE T1.pet_age = 1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct pets have age 1?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetType FROM Pets AS T1 WHERE T1.PetID > 2003",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the types of pets with id greater than 2003?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.LName FROM Student AS T1 WHERE T1.Advisor > 7134",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the last names of all students with advisors higher than 7134?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Has_Pet AS T1 WHERE T1.StuID > 1002",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the pet ids of students with id greater than 1002?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Has_Pet AS T1 WHERE T1.StuID > 1001",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the pet ids of students whose id are greater than 1001?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Pets AS T1 WHERE T1.weight > 12.0",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the ids of pets that weigh more than 12?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID, T2.PetType, T3.LName FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID JOIN Student AS T3 ON T1.StuID = T3.StuID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the id, type and last name of the pet of each student?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Advisor, T2.PetID, T3.pet_age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the advisor, id, and age of pet of each student?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.weight, T2.PetID, T3.Fname FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID JOIN Student AS T3 ON T2.StuID = T3.StuID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the weights of the pets, and what are the ids and first names of the students who have those pets?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID, T2.Advisor, T3.pet_age FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T1.PetID = T3.PetID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Show the advisor of each student who has a pet, and the age of the pet.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID, T2.Age, T3.weight FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T1.PetID = T3.PetID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the student id, age and pet weight for each student who has a pet?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID     ORDER BY T2.StuID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the id of pets that are owned by students in ascending order of student id.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID     ORDER BY T2.weight ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the id of pets owned by each has pet in ascending order of weight.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID     ORDER BY T2.StuID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the ages of students who have pets, ordered by student ID?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID     ORDER BY T2.PetID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the student IDs who have pets in ascending order of pet IDs.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetType FROM Pets AS T1 WHERE T1.PetID = 2003     INTERSECT SELECT T2.PetType FROM Pets AS T2 WHERE T2.PetID = 2003",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the types of pets that have both 2003 and 2004?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 WHERE T1.PetID = 2002     INTERSECT SELECT T2.StuID FROM Has_Pet AS T2 WHERE T2.PetID = 2001",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the student ids who have both pet 2001 and pet 2002.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Pets AS T1 WHERE T1.PetType = \"dog\"     INTERSECT SELECT T2.PetID FROM Pets AS T2 WHERE T2.PetType = \"dog\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the id of pets that have both dog and cat.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Sex FROM Student AS T1 WHERE T1.StuID = 1002     INTERSECT SELECT T2.Sex FROM Student AS T2 WHERE T2.StuID = 1011",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the sex of the student with stu id 1002 and 1011?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT avg( T1.StuID) FROM Has_Pet AS T1 WHERE T1.PetID = 2003",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of pets for students whose pet id is 2003?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT avg( T1.PetID) FROM Has_Pet AS T1 WHERE T1.StuID = 1001",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of pets for the student with ID 1001?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT avg( T1.Advisor) FROM Student AS T1 WHERE T1.StuID = 1016",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average advisor of the student with stu id 1016?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT avg( T1.weight) FROM Pets AS T1 WHERE T1.PetType = \"cat\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average weight of cats?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT avg( T1.StuID) FROM Has_Pet AS T1 WHERE T1.PetID = 2001",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of pets for the student with ID 2001?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Advisor FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID = (SELECT max( T23.StuID) FROM Has_Pet AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the advisor of the student whose pet has the maximum stuid in the Has_Pet relation.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age = (SELECT max( T23.Age) FROM Student AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the student id of the student who is the oldest?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetType FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.PetID = (SELECT max( T23.PetID) FROM Has_Pet AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the types of the pets with the largest id?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.weight FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.PetID = (SELECT max( T23.PetID) FROM Has_Pet AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the weight of the pet with the maximum id among all the pets?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.pet_age FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.StuID = (SELECT max( T23.StuID) FROM Has_Pet AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the ages of the pets belonging to the student with the highest id?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.weight = (SELECT max( T23.weight) FROM Pets AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the ids of the pets that have the heaviest weight?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.weight = (SELECT max( T23.weight) FROM Pets AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the student id who has pet with the maximum weight.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID, T2.Fname FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.weight = 9.3 and T2.Sex = \"F\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the student id and first name of the student who owns the pet whose weight is 9.3 and whose sex is \"F\".",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Sex, T2.PetID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.weight = 9.3 and T2.StuID = 1001",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the sex and pet id of the student whose pet has weight 9.3 and whose stu id is 1001?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID, T2.weight FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.StuID = 1029 and T2.PetType = \"cat\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the weight of the pet owned by the student with stuid 1029 which has a pet with type \"cat\".",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetType, T2.PetID FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T3.LName = \"Prater\" and T2.StuID = 1001",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the pet types and ids of the pets belonging to a student whose last name is Prater and whose id in the student table is 1001?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Advisor, T2.StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.weight = 12.0 and T2.PetID = 2002",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the advisor and student id of the student who has the pet whose weight is 12.0 and whose pet id is 2002?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Advisor, T2.PetID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = \"dog\" and T2.StuID = 1001",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the advisor and pet ID of the pet of student 1001 who has a pet of type dog?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetType FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID WHERE T2.StuID = 1001 GROUP BY T1.PetType  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the most common pet type owned by student with id 1001?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID = 2002 GROUP BY T1.Fname  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the first name of the student who has the most pets?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Age FROM Student AS T1        EXCEPT SELECT T2.Age FROM Student AS T2 WHERE T2.Sex = \"M\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ages of all the female students?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Fname FROM Student AS T1        EXCEPT SELECT T2.Fname FROM Student AS T2 WHERE T2.city_code = \"CHI\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the first names of all the students who do not live in Chicago?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Student AS T1        EXCEPT SELECT T2.StuID FROM Student AS T2 WHERE T2.LName = \"Adams\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the student id for all students except for the student with last name \"Adams\".",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.PetID FROM Has_Pet AS T1        EXCEPT SELECT T2.PetID FROM Has_Pet AS T2 WHERE T2.StuID = 1002",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the ids of pets that do not belong to student with id 1002.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Has_Pet AS T1        EXCEPT SELECT T2.StuID FROM Has_Pet AS T2 WHERE T2.PetID = 2003",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the student ids who do not have the pet with id 2003.",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.StuID FROM Student AS T1        EXCEPT SELECT T2.StuID FROM Student AS T2 WHERE T2.Age = 16",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the student ids who are 16 years old and are not listed as students?",
    "db_id": "pets_1"
  },
  {
    "query": "SELECT T1.Name FROM conductor AS T1 WHERE T1.Age = 41",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the name of the conductor who is 41 years old?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Major_Record_Format FROM orchestra AS T1 WHERE T1.Orchestra_ID = 6",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the major record formats of the orchestra with id 6?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Record_Company FROM orchestra AS T1 WHERE T1.Orchestra = \"Kirov Orchestra\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the record company of the orchestra called Kirov Orchestra.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Year_of_Founded FROM orchestra AS T1 WHERE T1.Record_Company = \"EMI\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the year of founded for orchestras whose record company is \"EMI\".",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Nationality FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Record_Company = \"Decca Records\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the nationalities of conductors who work with orchestras whose record company is \"Decca Records\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Orchestra FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID = 5",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the name of the orchestra that performed the performance with id 5?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Orchestra_ID, count(*) FROM orchestra AS T1  GROUP BY T1.Orchestra_ID",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many orchestras are there?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Result, count(*) FROM show AS T1  GROUP BY T1.Result",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the result of each show and the number of shows with that result.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Year_of_Work, count(*) FROM conductor AS T1  GROUP BY T1.Year_of_Work",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all years of work and the number of conductors in each year.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID, count(*) FROM show AS T1  GROUP BY T1.Performance_ID",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show me the performance id and the number of shows for each performance id.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Type, count(*) FROM performance AS T1  GROUP BY T1.Type",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show different types of performances and the number of performances of each type.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.If_first_show, count(*) FROM show AS T1  GROUP BY T1.If_first_show",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show me the if first shows and the number of shows with each value.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Name, count(*) FROM conductor AS T1  GROUP BY T1.Name",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the names of conductors and the number of instruments they conduct.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Orchestra_ID, count(*) FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Orchestra_ID",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many conductors are there in each orchestra?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID, count(*) FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Conductor_ID",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the id of conductors and the number of orchestras they are in charge of.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID, count(*) FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID  GROUP BY T1.Performance_ID",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show each performance id and the number of shows it is on.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT count(*) FROM show AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many shows exist?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT count(*) FROM performance AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many performances are there?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT count(*) FROM orchestra AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many orchestras are there?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Show_ID, T1.Performance_ID FROM show AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the show ID and performance ID of all shows?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Type, T1.Share FROM performance AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all types and shares of performances.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Result, T1.If_first_show FROM show AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show the result and if first show for all shows.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.If_first_show, T1.Performance_ID FROM show AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show me the first show and its performance id.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID, T1.Orchestra_ID FROM performance AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all performance ids and their orchestra ids.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Date, T2.Major_Record_Format FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show the dates and major record formats of performances.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Major_Record_Format, T2.Name FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show all major record formats and the names of conductors.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID, T2.Major_Record_Format FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show the conductor id and major record format of each orchestra.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.If_first_show, T2.Orchestra_ID FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show me the first show and the orchestra id.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Major_Record_Format, T2.Orchestra_ID FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the major record formats of orchestras that performed the performance?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID, T1.Year_of_Founded FROM orchestra AS T1 WHERE T1.Orchestra = \"Montreal Symphony Orchestra\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the conductor id and the year of founded of the orchestra with orchestra name \"Montreal Symphony Orchestra\".",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Attendance, T1.Show_ID FROM show AS T1 WHERE T1.If_first_show = \"St. Mirren Park\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the attendance and show ID of the first show held at St. Mirren Park?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID, T1.Name FROM conductor AS T1 WHERE T1.Nationality = \"USA\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the conductor id and name for musicians whose nationality is \"USA\".",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Orchestra, T1.Orchestra_ID FROM orchestra AS T1 WHERE T1.Record_Company = \"Philips\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the orchestra names and ids for record companies Philips.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Result, T1.If_first_show FROM show AS T1 WHERE T1.Performance_ID = 4",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the result and if first show of performance with id 4?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID FROM show AS T1  GROUP BY T1.Performance_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the performance id which has the most number of shows.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID FROM performance AS T1  GROUP BY T1.Performance_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the id of performance with the most number of performances.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Orchestra_ID FROM orchestra AS T1  GROUP BY T1.Orchestra_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which orchestra has the most musicians?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Date FROM performance AS T1  GROUP BY T1.Date  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the date with the most performances?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Orchestra_ID FROM performance AS T1  GROUP BY T1.Orchestra_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which orchestra performed the most performances?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID FROM conductor AS T1  GROUP BY T1.Conductor_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the id of the conductor with the largest number of conducted performances.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT count(*) FROM orchestra AS T1 WHERE T1.Record_Company = \"RCA\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many orchestras have record company RCA?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT count(*) FROM conductor AS T1 WHERE T1.Year_of_Work = 10",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many conductors worked in year 10?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT count(*) FROM performance AS T1 WHERE T1.Date = \"17 June\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many performances happened on 17 June?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT count(*) FROM show AS T1 WHERE T1.If_first_show = \"Hampden Park\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many shows have the first show Hampden Park?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT count(*) FROM orchestra AS T1 WHERE T1.Year_of_Founded = 2007.0",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many orchestras were founded in year 2007?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT count(*) FROM orchestra AS T1 WHERE T1.Conductor_ID = 8",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many orchestras have conductor with id 8?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT count(*) FROM conductor AS T1 WHERE T1.Name = \"Robert Craft\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many conductors are named Robert Craft?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID FROM orchestra AS T1    ORDER BY T1.Year_of_Founded DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the conductor of the oldest orchestra?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.If_first_show FROM show AS T1    ORDER BY T1.Performance_ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the first show id?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Show_ID FROM show AS T1    ORDER BY T1.Performance_ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the show with the highest performance?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Orchestra FROM orchestra AS T1    ORDER BY T1.Year_of_Founded DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the name of the oldest orchestra?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Nationality FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID    ORDER BY T2.Year_of_Founded DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the nationality of the conductor with the oldest orchestra?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID    ORDER BY T2.Show_ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the most recent performance?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Record_Company FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID    ORDER BY T2.Conductor_ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the record company of the orchestra with the highest conductor id?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID    ORDER BY T2.Orchestra_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the conductor id of the orchestra that performed the first performance.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Orchestra FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID    ORDER BY T2.Conductor_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the orchestra that has the conductor with the highest conductor ID?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID, T1.Share FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID    ORDER BY T2.Show_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the performance with the highest share?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Show_ID, T1.If_first_show FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID    ORDER BY T2.Performance_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the first performance?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Type, T1.Weekly_rank FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID    ORDER BY T2.Attendance DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the type and weekly rank of the performance with the highest attendance?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Result, T1.Show_ID FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID    ORDER BY T2.Performance_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the result of the performance with the lowest performance id?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Year_of_Founded, T1.Record_Company FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID    ORDER BY T2.Orchestra_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the year of foundation and record company of the orchestra that performed the most recent performance?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Share, T1.Orchestra_ID FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID    ORDER BY T2.Conductor_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the share and id of the performance conducted by the conductor with the highest id?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Date, T1.Type FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID    ORDER BY T2.Orchestra_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the date and type of the performance with the highest orchestra id?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Orchestra_ID) FROM orchestra AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different orchestras are there?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Orchestra) FROM orchestra AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different orchestras are there?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Share) FROM performance AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct performances exist?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Nationality) FROM conductor AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different nationalities are there among conductors?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT avg( T1.Orchestra_ID) FROM performance AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average orchestra id across all performances?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT avg( T1.Year_of_Founded) FROM orchestra AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average year of foundation for orchestras?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT avg( T1.Attendance) FROM show AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average attendance of shows?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT avg( T1.Performance_ID) FROM performance AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average performance ID?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT avg( T1.Conductor_ID) FROM orchestra AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average conductor id across orchestras?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT avg( T1.Show_ID) FROM show AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average show id?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Nationality FROM conductor AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the nationalities of conductors?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID FROM conductor AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the conductor ids?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Orchestra_ID FROM performance AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the orchestra ids of performances?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID FROM performance AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the performance ids?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Year_of_Work FROM conductor AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Show the year of work for conductors.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.If_first_show FROM show AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Show me the first show.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT T1.Date FROM performance AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "When are the performances held?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT T1.Age FROM conductor AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct ages of conductors?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT T1.Show_ID FROM show AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct show ids?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT T1.Performance_ID FROM performance AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct performance ids?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT T1.Attendance FROM show AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct attendances of shows?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Major_Record_Format FROM orchestra AS T1     ORDER BY T1.Year_of_Founded ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the major record format of orchestras in ascending order of year of founded.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Nationality FROM conductor AS T1     ORDER BY T1.Conductor_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the nationalities of conductors in ascending order of conductor ID.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Attendance FROM show AS T1     ORDER BY T1.Performance_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the attendance of shows in ascending order of performance id.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID FROM show AS T1     ORDER BY T1.Attendance ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the performance IDs in ascending order of attendance.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Result FROM show AS T1     ORDER BY T1.Show_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the results of shows in ascending order of show id.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Name FROM conductor AS T1     ORDER BY T1.Year_of_Work ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of conductors in ascending order of year of work.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Orchestra_ID FROM performance AS T1     ORDER BY T1.Performance_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the orchestra ids of performances in descending order of performance id.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID FROM show AS T1     ORDER BY T1.Attendance DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the performance ids in descending order of attendance.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.If_first_show FROM show AS T1     ORDER BY T1.Attendance DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the information of the shows in descending order of attendance.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Nationality FROM conductor AS T1     ORDER BY T1.Conductor_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the nationalities of conductors in descending order of conductor ID.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID FROM conductor AS T1     ORDER BY T1.Year_of_Work DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the conductor id for each conductor with their year of work in descending order.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Age FROM conductor AS T1     ORDER BY T1.Conductor_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the ages of conductors in descending order of conductor ID.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Result FROM show AS T1     ORDER BY T1.Show_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the result of each show in descending order of show id.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Year_of_Work, T1.Nationality FROM conductor AS T1     ORDER BY T1.Nationality ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the years of work and nationalities of conductors in ascending order of conductor nationality.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID, T1.Attendance FROM show AS T1     ORDER BY T1.Attendance ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the performance ID and attendance of all shows in ascending order of attendance.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Year_of_Founded, T1.Conductor_ID FROM orchestra AS T1     ORDER BY T1.Conductor_ID ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the year of founded and the id of conductor of orchestras in ascending order of conductor id.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID, T1.Age FROM conductor AS T1     ORDER BY T1.Age ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the conductor IDs and ages in ascending order of age.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID, T1.Share FROM performance AS T1     ORDER BY T1.Share ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the performance ids and shares of performances in ascending order of share.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Record_Company, T1.Orchestra_ID FROM orchestra AS T1     ORDER BY T1.Orchestra_ID ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the record companies and ids of orchestras in ascending order of orchestra id.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Attendance FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID JOIN orchestra AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID WHERE T2.Performance_ID = 6 and T3.Year_of_Founded = 2007.0",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the attendance of the performance with performance id 6 and the orchestra founded in 2007?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Year_of_Work FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID WHERE T2.Record_Company = \"Mercury Records\" and T3.Orchestra_ID = 4",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the years of work of the conductors who worked with orchestras from record company \"Mercury Records\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Orchestra FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID JOIN conductor AS T3 ON T1.Conductor_ID = T3.Conductor_ID WHERE T2.Orchestra_ID = 4 and T3.Nationality = \"UK\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the orchestras, their conductors, and performances that have the orchestra with id 4 and the conductor with nationality \"UK\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID JOIN show AS T3 ON T2.Performance_ID = T3.Performance_ID WHERE T2.Performance_ID = 2 and T3.Result = \"F\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the id of the conductor of the orchestra that performed the performance with result \"F\" in the show with performance id 2.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Result FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID JOIN orchestra AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID WHERE T2.Type = \"Auditions 1\" and T3.Orchestra_ID = 1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the results of the performances with the type \"Auditions 1\" and orchestra id 1?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Share FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID JOIN orchestra AS T3 ON T1.Orchestra_ID = T3.Orchestra_ID WHERE T2.Attendance = 1925.0 and T3.Orchestra_ID = 6",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the shares of performances that have an attendance of 1925 and orchestra id 6?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Major_Record_Format FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Conductor_ID = 8 or T2.Conductor_ID = 8",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the major record formats of orchestras that have conductor with id 8 or 8?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Attendance FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Weekly_rank = \"TBC\" or T2.Weekly_rank = \"2\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the attendance of shows with performance rank of TBC or 2?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Attendance FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Date = \"11 June\" or T2.Date = \"17 June\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the attendances of the shows on 11 June or 17 June?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.If_first_show FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Performance_ID = 8 or T2.Performance_ID = 3",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the names of shows that have performance 8 or performance 3?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Result FROM show AS T1 WHERE T1.Show_ID = 1 and T1.If_first_show = \"Glebe Park\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the result of the show with id 1 and the condition \"If first show\" is \"Glebe Park\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Attendance FROM show AS T1 WHERE T1.Performance_ID = 1 and T1.Result = \"F\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Show 1 had a performance with result \"F\". Return its attendance.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Year_of_Founded FROM orchestra AS T1 WHERE T1.Conductor_ID = 11 and T1.Orchestra = \"San Francisco Symphony Orchestra\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the years of foundation for the orchestra with conductor id 11 and orchestra \"San Francisco Symphony Orchestra\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Age = 41 and T2.Orchestra_ID = 12",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many conductors are there who are 41 years old and conduct orchestra 12?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Major_Record_Format) FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Orchestra_ID = 10 and T2.Age = 41",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct major record formats does the orchestra with id 10 and conductor aged 41 have?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Year_of_Work = 6 and T2.Orchestra_ID = 9",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many conductors worked with orchestra 9 in year 6?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Result) FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T1.If_first_show = \"Glebe Park\" and T2.Weekly_rank = \"15\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct results were there for the performance at Glebe Park with rank 15?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Type) FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T1.Weekly_rank = \"9\" and T2.Record_Company = \"Koch Records / Naxos Records\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct performances are associated with the record company \"Koch Records / Naxos Records\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Year_of_Work) FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Conductor_ID = 5 and T2.Major_Record_Format = \"DVD\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct years of work are associated with conductor with id 5 and orchestra with major record format \"DVD\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Show_ID FROM show AS T1 WHERE T1.Result = \"F\" or T1.If_first_show = \"Glebe Park\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Show the ids of shows that have result \"F\" or are the first show at Glebe Park.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID FROM show AS T1 WHERE T1.Result = \"T\" or T1.Show_ID = 2",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the performance ids of the shows with result \"T\" or show id 2?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Attendance FROM show AS T1 WHERE T1.Show_ID = 1 or T1.If_first_show = \"Glebe Park\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the attendance of the show with show id 1 or the first show is \"Glebe Park\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID FROM orchestra AS T1 WHERE T1.Orchestra = \"Royal Danish Orchestra\" or T1.Major_Record_Format = \"DVD\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the conductor id of the orchestra with the name \"Royal Danish Orchestra\" or whose major record format is \"DVD\".",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT count(*) FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Record_Company = \"Philips Classics Records\" and T2.Year_of_Founded = 2004.0",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many conductors work with orchestras from Philips Classics Records and were founded in 2004?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT count(*) FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Type = \"Live final results\" and T2.Share = \"44.7%\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many orchestras gave a performance with the type \"Live final results\" and share 44.7%?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT count(*) FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Share = \"29.4%\" and T2.Date = \"12 June\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many shows have performance share of 29.4% and happened on 12 June?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT count(*) FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Record_Company = \"Deutsche Grammophon\" and T2.Year_of_Founded = 2007.0",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many conductors work for the record company Deutsche Grammophon and whose orchestra was founded in 2007?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID FROM conductor AS T1 WHERE T1.Name != \"Paul Jorgensen\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the conductor ids for conductors whose names are not \"Paul Jorgensen\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Age FROM conductor AS T1 WHERE T1.Conductor_ID != 2",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the age of the conductor with id not equal to 2?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Major_Record_Format FROM orchestra AS T1 WHERE T1.Orchestra != \"Kirov Orchestra\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the major record formats of orchestras whose orchestra is not \"Kirov Orchestra\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Weekly_rank FROM performance AS T1 WHERE T1.Share != \"43.7%\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the weekly ranks of performances whose share is not \"43.7\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Orchestra FROM orchestra AS T1 WHERE T1.Conductor_ID != 10",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What orchestra does not have the conductor with id 10?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID FROM show AS T1 WHERE T1.Show_ID != 1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the performance ids of shows that are not performance 1?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID FROM conductor AS T1 WHERE T1.Name != \"Seiji Ozawa\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the conductor ids of conductors whose names are not \"Seiji Ozawa\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Show_ID FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Date != \"16 June\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the show ids for performances that are not on June 16?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Year_of_Work FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Record_Company != \"Deutsche Grammophon\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the years of work of conductors who do not work for the record company \"Deutsche Grammophon\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Record_Company FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Conductor_ID != 5",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the record companies of orchestras whose conductor ID is not 5?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT T1.Major_Record_Format FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Share = \"44.7%\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct major record formats of orchestras that performed a performance with share 44.7%?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT T1.Weekly_rank FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Record_Company = \"EMI\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct weekly ranks of performances that involve orchestras from record company EMI.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT T1.Attendance FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Weekly_rank = \"13\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct attendances of the shows with performance weekly rank 13?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT T1.Nationality FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Orchestra = \"Montreal Symphony Orchestra\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct nationalities of conductors who have worked with the orchestra \"Montreal Symphony Orchestra\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT T1.Type FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Performance_ID = 3",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct performance types of the performance with performance id 3?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT T1.Result FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Type = \"Auditions 5\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct results of the performances of type \"Auditions 5\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT T1.Share FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Attendance = 1026.0",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct shares of performances with an attendance of 1026.0?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Result) FROM show AS T1 WHERE T1.If_first_show = \"Hampden Park\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct results were produced at \"Hampden Park\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Orchestra_ID) FROM orchestra AS T1 WHERE T1.Major_Record_Format = \"CD\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many orchestras have major record format CD?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Performance_ID) FROM show AS T1 WHERE T1.Attendance = 1026.0",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the number of distinct performances that have an attendance of 1026.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Weekly_rank) FROM performance AS T1 WHERE T1.Performance_ID = 10",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the distinct rank of the performance with id 10?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Orchestra_ID) FROM orchestra AS T1 WHERE T1.Orchestra = \"Royal Danish Orchestra\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct orchestras belong to the orchestra with Orchestras ID \"Royal Danish Orchestra\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Conductor_ID) FROM orchestra AS T1 WHERE T1.Orchestra_ID = 12",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many conductors are there for the orchestra with id 12?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Attendance FROM show AS T1 WHERE T1.Performance_ID > 1",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the attendance of shows with performance id greater than 1?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Result FROM show AS T1 WHERE T1.Performance_ID > 5",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the results of the shows with performance id greater than 5?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Name FROM conductor AS T1 WHERE T1.Year_of_Work > 11",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of conductors who started working after year 11?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Result FROM show AS T1 WHERE T1.Performance_ID > 2",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the results of the shows with performance id greater than 2?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.If_first_show FROM show AS T1 WHERE T1.Attendance > 695.0",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of shows that have an attendance greater than 695?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Nationality FROM conductor AS T1 WHERE T1.Year_of_Work > 21",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the nationalities of conductors who have worked after year 21?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID, T2.Share, T3.Orchestra_ID FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID JOIN orchestra AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Show me the performance id, share, and orchestra id for each show.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID, T2.Name, T3.Performance_ID FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T1.Orchestra_ID = T3.Orchestra_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the id, name and performance id of conductors, together with the orchestras they are conducting?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Name, T2.Orchestra_ID, T3.Weekly_rank FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Show the names of conductors, orchestra ids, and weekly ranks of performances.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Result, T2.Type, T3.Orchestra FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID JOIN orchestra AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Show me the result, performance type and orchestra for each show.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID     ORDER BY T2.Year_of_Founded ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the names of conductors, ordered by the year of founded of orchestras ascending.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID     ORDER BY T2.Year_of_Work ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the IDs of conductors who worked in orchestras in ascending order of year.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.If_first_show FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID     ORDER BY T2.Orchestra_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Show the first show for each performance.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID     ORDER BY T2.Year_of_Founded ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the conductor id for orchestras in ascending order of year of founded.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID     ORDER BY T2.Orchestra_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the names of conductors, ordered by orchestra ID ascending.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Orchestra FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID     ORDER BY T2.Year_of_Work ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the orchestras and their conductors, and sort the conductors by the ascending year of work.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Result FROM show AS T1 WHERE T1.Show_ID = 4     INTERSECT SELECT T2.Result FROM show AS T2 WHERE T2.Show_ID = 1",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Show the result of the show with id 4 and the show with id 1.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Record_Company FROM orchestra AS T1 WHERE T1.Conductor_ID = 9     INTERSECT SELECT T2.Record_Company FROM orchestra AS T2 WHERE T2.Conductor_ID = 12",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the record companies that both the conductor with ID 9 and the conductor with ID 12 work with?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Year_of_Founded FROM orchestra AS T1 WHERE T1.Conductor_ID = 10     INTERSECT SELECT T2.Year_of_Founded FROM orchestra AS T2 WHERE T2.Conductor_ID = 2",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the years of foundation for orchestras with conductor id 10 and 2.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Attendance FROM show AS T1 WHERE T1.If_first_show = \"Hampden Park\"     INTERSECT SELECT T2.Attendance FROM show AS T2 WHERE T2.If_first_show = \"Glebe Park\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Show the attendance of shows that have both their first show in Hampden Park and their last show in Glebe Park.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID FROM conductor AS T1 WHERE T1.Nationality = \"USA\"     INTERSECT SELECT T2.Conductor_ID FROM conductor AS T2 WHERE T2.Nationality = \"USA\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the conductor ids who have both nationality \"USA\" and \"Other\".",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Name FROM conductor AS T1 WHERE T1.Conductor_ID = 2     INTERSECT SELECT T2.Name FROM conductor AS T2 WHERE T2.Conductor_ID = 11",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What is the name of the conductor who works with both conductor with id 2 and conductor with id 11?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Year_of_Work FROM conductor AS T1 WHERE T1.Name = \"Antal Dor\u00e1ti\"     INTERSECT SELECT T2.Year_of_Work FROM conductor AS T2 WHERE T2.Name = \"Robert Craft\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the years of work of both Antal Dor\u00e1ti and Robert Craft.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT avg( T1.Attendance) FROM show AS T1 WHERE T1.If_first_show = \"Fir Park\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average attendance of shows that are first shows at Fir Park?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT avg( T1.Orchestra_ID) FROM performance AS T1 WHERE T1.Type = \"Auditions 4\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average orchestra id of performances with type \"Auditions 4\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT avg( T1.Year_of_Work) FROM conductor AS T1 WHERE T1.Conductor_ID = 2",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average year of work of the conductor with id 2?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT avg( T1.Show_ID) FROM show AS T1 WHERE T1.Attendance = 1026.0",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average show id that has an attendance of 1026?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT avg( T1.Year_of_Work) FROM conductor AS T1 WHERE T1.Age = 50",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average year of work for conductors who are 50 years old?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT avg( T1.Orchestra_ID) FROM performance AS T1 WHERE T1.Type = \"Semi-final 1\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average orchestra id of performances with type \"Semi-final 1\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded = (SELECT max( T23.Year_of_Founded) FROM orchestra AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the id of the conductor who worked with the orchestra that was founded in the year with the maximum value in the record.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Show_ID FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Orchestra_ID = (SELECT max( T23.Orchestra_ID) FROM performance AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the id of shows that have the maximum orchestra id among all performances?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Orchestra_ID = (SELECT max( T23.Orchestra_ID) FROM orchestra AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the conductor who worked with the most orchestras?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.If_first_show FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Orchestra_ID = (SELECT max( T23.Orchestra_ID) FROM performance AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of the shows that have the maximum orchestra id among all performances?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Orchestra_ID FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Age = (SELECT max( T23.Age) FROM conductor AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the id of orchestras with the oldest conductors?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.If_first_show, T2.Weekly_rank FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID JOIN orchestra AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID WHERE T3.Record_Company = \"Philips Classics Records\" and T2.Type = \"Live final\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Show me the first show and weekly rank of performances from orchestras of record company Philips Classics Records that are of type Live final.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID, T2.Result FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID JOIN orchestra AS T3 ON T1.Orchestra_ID = T3.Orchestra_ID WHERE T3.Record_Company = \"Columbia Masterworks\" and T2.Show_ID = 5",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the id, and result of the performances that involve orchestras from the record company \"Columbia Masterworks\" and the show with id 5?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Show_ID, T2.Type FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID JOIN orchestra AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID WHERE T3.Major_Record_Format = \"DVD\" and T2.Date = \"9 June\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the id, and type of shows that have an orchestra with major record format as DVD and performed on 9 June?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Weekly_rank, T2.Record_Company FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID JOIN conductor AS T3 ON T2.Conductor_ID = T3.Conductor_ID WHERE T3.Age = 40 and T2.Year_of_Founded = 2002.0",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the weekly ranks and record companies of performances conducted by a conductor aged 40 and conducted by an orchestra founded in 2002?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Show_ID, T2.Orchestra_ID FROM show AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID JOIN orchestra AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID WHERE T3.Major_Record_Format = \"CD\" and T2.Share = \"44.7%\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the show id and orchestra id of the shows that have an orchestra major record format of CD and the performance share is 44.7%?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Attendance = 1925.0 GROUP BY T1.Performance_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the performance id of the show that had the most attendees in 1925.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Weekly_rank FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Show_ID = 5 GROUP BY T1.Weekly_rank  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the weekly rank of the performance with the show id 5?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Orchestra FROM orchestra AS T1        EXCEPT SELECT T2.Orchestra FROM orchestra AS T2 WHERE T2.Conductor_ID = 12",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the orchestras that do not have conductor with id 12.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Conductor_ID FROM orchestra AS T1        EXCEPT SELECT T2.Conductor_ID FROM orchestra AS T2 WHERE T2.Orchestra_ID = 2",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the conductor ids of orchestras that do not have conductor with id 2?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Date FROM performance AS T1        EXCEPT SELECT T2.Date FROM performance AS T2 WHERE T2.Type = \"Live final\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the dates of performances that are not live finals?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Performance_ID FROM show AS T1        EXCEPT SELECT T2.Performance_ID FROM show AS T2 WHERE T2.Show_ID = 4",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of performances that are not on show 4?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Result FROM show AS T1        EXCEPT SELECT T2.Result FROM show AS T2 WHERE T2.Attendance = 1925.0",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Show the results that do not have the attendance of 1925.",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.Date FROM performance AS T1        EXCEPT SELECT T2.Date FROM performance AS T2 WHERE T2.Weekly_rank = \"8\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the dates of performances that do not have a weekly rank of \"8\"?",
    "db_id": "orchestra"
  },
  {
    "query": "SELECT T1.18_49_Rating_Share FROM TV_series AS T1 WHERE T1.id = 10.0",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the 18 to 49 rating share of the TV series with id 10?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Rating FROM TV_series AS T1 WHERE T1.Share = 5.0",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the rating of the TV series with share 5.0?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Viewers_m FROM TV_series AS T1 WHERE T1.Episode = \"The Year of the Rabbit\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the viewership of the episode \"The Year of the Rabbit\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Production_code FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Pay_per_view_PPV = \"no\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the production codes of cartoons that do not require pay per view?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Channel FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Language = \"Italian\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of TV series that are broadcasted on channel with language \"Italian\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Episode FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Country = \"United Kingdom\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the episode of the series that are broadcasted on a channel in United Kingdom?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.18_49_Rating_Share FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Country = \"United Kingdom\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the 18 to 49 rating share of the TV series that are broadcasted on a channel in United Kingdom?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Channel FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Pixel_aspect_ratio_PAR = \"4:3\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the channels of the TV series that have pixel aspect ratio \"4:3\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Original_air_date = \"February6,2009\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of cartoons that aired on a certain TV channel on February 6, 2009?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.id FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Hight_definition_TV = \"no\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of cartoons that are broadcasted on TV channels with \"no\" definition?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Rating, count(*) FROM TV_series AS T1  GROUP BY T1.Rating",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the rating and the number of series for each rating.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.id, count(*) FROM Cartoon AS T1  GROUP BY T1.id",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many cartoons have each id?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Package_Option, count(*) FROM TV_Channel AS T1  GROUP BY T1.Package_Option",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all package options and the number of channels that have each option.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Share, count(*) FROM TV_series AS T1  GROUP BY T1.Share",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show share of each TV series and the number of series in that share.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Content, count(*) FROM TV_Channel AS T1  GROUP BY T1.Content",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all content and the number of channels for each content.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Country, count(*) FROM TV_Channel AS T1  GROUP BY T1.Country",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all countries and the number of TV channels in each country.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Original_air_date, count(*) FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id  GROUP BY T1.Original_air_date",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each cartoon, show the original air date and the number of channels that aired it.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Written_by, count(*) FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id  GROUP BY T1.Written_by",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each cartoon, show the author and the number of channels that the cartoon is on.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Viewers_m, count(*) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id  GROUP BY T1.Viewers_m",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each TV series, show the viewers count and the TV series name.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Directed_by, count(*) FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id  GROUP BY T1.Directed_by",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each director, show the number of cartoons he or she directed.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Channel, count(*) FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id  GROUP BY T1.Channel",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each channel, show the number of cartoons on that channel.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Pay_per_view_PPV, count(*) FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel  GROUP BY T1.Pay_per_view_PPV",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each TV channel, show the pay per view price and the number of cartoons on that channel with that price.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Content, count(*) FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel  GROUP BY T1.Content",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each channel, show the content and the number of cartoons.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Weekly_Rank, count(*) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id  GROUP BY T1.Weekly_Rank",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the weekly rank and the number of TV series for each rank.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Pixel_aspect_ratio_PAR, count(*) FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel  GROUP BY T1.Pixel_aspect_ratio_PAR",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each pixel aspect ratio, what are the number of cartoons on that channel?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT count(*) FROM TV_Channel AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many channels are there?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Language, T1.id FROM TV_Channel AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the languages and ids of all channels?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Pixel_aspect_ratio_PAR, T1.Language FROM TV_Channel AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the pixel aspect ratio and language of each channel?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Hight_definition_TV, T1.Country FROM TV_Channel AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the high definition TV channels and countries?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.18_49_Rating_Share, T1.Weekly_Rank FROM TV_series AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show the 18 to 49 rating share and weekly rank of each TV series.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Rating, T1.id FROM TV_series AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the ratings of the series and what are their ids?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Share, T2.Pay_per_view_PPV FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "For each TV series, show its share and the channel's pay per view price.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Production_code, T2.Hight_definition_TV FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the code and hight definition of the TV channel for each cartoon?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Language, T2.id FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the languages of cartoons and which channel broadcast them?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.18_49_Rating_Share, T2.Pixel_aspect_ratio_PAR FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show the 18-49 rating share and pixel aspect ratio for each TV series and channel.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Channel, T2.Hight_definition_TV FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the channels and the definition of TVs that cartoons are on?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Rating, T2.id FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "For each TV series, return its rating and the id of the channel.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Air_Date, T2.Country FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show the air dates and countries of the series.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.18_49_Rating_Share, T2.Language FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the 18 to 49 rating share and language of each TV series and channel?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.id, T1.Production_code FROM Cartoon AS T1 WHERE T1.Directed_by = \"Ben Jones\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the id and production code of cartoons directed by \"Ben Jones\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Production_code, T1.Directed_by FROM Cartoon AS T1 WHERE T1.Written_by = \"J. M. DeMatteis\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the production codes and directors of cartoons written by J. M. DeMatteis?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Title, T1.Directed_by FROM Cartoon AS T1 WHERE T1.id = 9.0",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the title and director of the cartoon with id 9.0?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Title, T1.Channel FROM Cartoon AS T1 WHERE T1.Original_air_date = \"January2,2009\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the titles and channels of cartoons that originally aired on January 2, 2009?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Share, T1.Episode FROM TV_series AS T1 WHERE T1.Air_Date = \"December 17, 2007\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the share and episode number of the TV series that aired on December 17, 2007?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Pay_per_view_PPV FROM TV_Channel AS T1  GROUP BY T1.Pay_per_view_PPV  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which channel has the most pay per view events?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Channel FROM TV_series AS T1  GROUP BY T1.Channel  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which channel has the most series?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Directed_by FROM Cartoon AS T1  GROUP BY T1.Directed_by  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the director of the cartoon that has the most number of cartoon listed.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Rating FROM TV_series AS T1  GROUP BY T1.Rating  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the rating of the TV series that has the most number of episodes.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT count(*) FROM Cartoon AS T1 WHERE T1.id = 8.0",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many cartoons have id 8?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT count(*) FROM Cartoon AS T1 WHERE T1.Directed_by = \"Ben Jones\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many cartoons are directed by Ben Jones?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT count(*) FROM Cartoon AS T1 WHERE T1.Title = \"Enter the Outsiders!\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many cartoons have the title \"Enter the Outsiders!\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT count(*) FROM TV_Channel AS T1 WHERE T1.Content = \"music\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many channels have content \"music\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT count(*) FROM TV_series AS T1 WHERE T1.Share = 6.0",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many TV series have share 6.0?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.18_49_Rating_Share FROM TV_series AS T1    ORDER BY T1.Share DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the 18 to 49 rating share of the TV series with the highest share?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Original_air_date FROM Cartoon AS T1    ORDER BY T1.id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the original air date of the cartoon with the largest id?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Channel FROM TV_series AS T1    ORDER BY T1.Share DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the channel of the TV series with the highest share?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Package_Option FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Share DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the package option of the channel that has the highest share?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel    ORDER BY T2.Production_code DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the series with the largest production code?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Share DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the series with the highest share?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Pixel_aspect_ratio_PAR FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Weekly_Rank DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the pixel aspect ratio of the channel that has the highest weekly rank?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel    ORDER BY T2.id DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the country of the channel that has the most cartoons?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Content FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Share ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the content of the TV series with the highest share?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Pixel_aspect_ratio_PAR FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Weekly_Rank ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the pixel aspect ratio of the channel that has the highest weekly rank?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Package_Option FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Share ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the package option of the channel that has the highest share of the TV series?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Country FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.id ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the country of the channel that has the lowest id?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Hight_definition_TV FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Share ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the highest definition TV channel that the series with the highest share is on?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel    ORDER BY T2.id ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the country of the channel that broadcasts the cartoon with the id of 1?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Pixel_aspect_ratio_PAR FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel    ORDER BY T2.id ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the pixel aspect ratio of the channel that broadcasts the cartoon with the id of 1?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel    ORDER BY T2.Production_code ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the series with the smallest production code?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Content, T1.id FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel    ORDER BY T2.Production_code DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the content and id of the channel that produced the cartoon with the greatest production code?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.series_name, T1.id FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Share DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the series with the highest share and what is its channel id?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.series_name, T1.Hight_definition_TV FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Weekly_Rank DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the series with the highest weekly rank and what channel does it belong to?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Package_Option, T1.Country FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel    ORDER BY T2.Share DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the package option and country of the channel that has the highest share?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Episode) FROM TV_series AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct episodes are in the TV series.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.id) FROM TV_Channel AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct TV channels are there?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Country) FROM TV_Channel AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many countries have at least one TV channel?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Content) FROM TV_Channel AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct contents are there in total?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.series_name) FROM TV_Channel AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct series are broadcasted on each TV channel?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT avg( T1.id) FROM Cartoon AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average id of cartoons?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT avg( T1.Share) FROM TV_series AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average share of TV series?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Share FROM TV_series AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the shares of the TV series?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Production_code FROM Cartoon AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the production codes of cartoons?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Content FROM TV_Channel AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the contents of TV channels?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Written_by FROM Cartoon AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the writers of cartoons?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Channel FROM Cartoon AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the channels of the cartoons?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Original_air_date FROM Cartoon AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the original air dates of cartoons?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT T1.Package_Option FROM TV_Channel AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct package options for all channels?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT T1.Channel FROM Cartoon AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct channels that have cartoons?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT T1.Share FROM TV_series AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct shares of the TV series?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT T1.18_49_Rating_Share FROM TV_series AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct 18-49 rating shares of the TV series?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.id FROM Cartoon AS T1     ORDER BY T1.Production_code ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the id of cartoons in ascending order of production code.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Episode FROM TV_series AS T1     ORDER BY T1.Weekly_Rank ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the episode of each TV series in ascending order of weekly rank.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Production_code FROM Cartoon AS T1     ORDER BY T1.id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the production codes of cartoons in ascending order of id.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Written_by FROM Cartoon AS T1     ORDER BY T1.Production_code ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the writers of cartoons in ascending order of their production codes.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.id FROM TV_series AS T1     ORDER BY T1.Weekly_Rank DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the id of series in descending order of weekly rank.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Air_Date FROM TV_series AS T1     ORDER BY T1.id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the air dates of TV series in descending order by id.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Share FROM TV_series AS T1     ORDER BY T1.Weekly_Rank DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the share of TV series in descending order of weekly rank.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Hight_definition_TV, T1.Content FROM TV_Channel AS T1     ORDER BY T1.Content ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the high definition TV channels and their contents.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Share, T1.Viewers_m FROM TV_series AS T1     ORDER BY T1.Viewers_m ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the share and number of viewers of TV series in ascending order of the number of viewers.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Package_Option, T1.series_name FROM TV_Channel AS T1     ORDER BY T1.series_name ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List all package options and series names of all channels in ascending order of series name.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Title, T1.Production_code FROM Cartoon AS T1     ORDER BY T1.Production_code ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the titles and production codes of cartoons in ascending order of production code.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Title, T1.Directed_by FROM Cartoon AS T1     ORDER BY T1.Directed_by ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the titles and directors of cartoons in ascending order of directors.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Channel, T1.Episode FROM TV_series AS T1     ORDER BY T1.Episode ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the channel and episode of each TV series in ascending order of episode.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Written_by FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN TV_series AS T3 ON T2.id = T3.Channel WHERE T2.Package_Option = \"Sky Famiglia + Sky HD\" and T3.Episode = \"Winterland\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the written by for the cartoon which is on the channel which has the package option \"Sky Famiglia + Sky HD\" and the episode is \"Winterland\".",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Channel FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN TV_series AS T3 ON T2.id = T3.Channel WHERE T2.Content = \"music\" and T3.id = 3.0",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the channels for the cartoon series with id 3.0 that is on the channel with content \"music\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel JOIN Cartoon AS T3 ON T1.id = T3.Channel WHERE T2.Viewers_m = \"4.24\" and T3.Original_air_date = \"December12,2008\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the names of TV series and cartoons that had the average viewers rating of 4.24 and aired on December 12, 2008?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.18_49_Rating_Share FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN Cartoon AS T3 ON T2.id = T3.Channel WHERE T2.Pay_per_view_PPV = \"no\" and T3.Production_code = 111.0",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What is the 18 to 49 rating share of the TV series that have the production code 111.0 and are not on pay per view?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN TV_series AS T3 ON T2.id = T3.Channel WHERE T2.Pixel_aspect_ratio_PAR = \"4:3\" and T3.Viewers_m = \"8.23\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the titles of cartoons that are broadcasted on a pixel aspect ratio of \"4:3\" TV channel and have a viewers rating of \"8.23\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Channel FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = \"Sky Radio\" or T2.series_name = \"MTV Classic\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the channels that show cartoons with \"Sky Radio\" or \"MTV Classic\" in the series name?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Hight_definition_TV FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Weekly_Rank = 80.0 or T2.Weekly_Rank = 71.0",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the high definition TV channels that have the weekly rank 80.0 or 71.0?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Pay_per_view_PPV = \"no\" or T2.Pay_per_view_PPV = \"no\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the titles of cartoons that are not on any pay per view channel or any pay per view channel with pay per view fee of \"no\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Pay_per_view_PPV FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = \"Matt Wayne\" or T2.Written_by = \"Steven Melching\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the pay per view prices for the cartoons written by Matt Wayne or Steven Melching?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Production_code FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Hight_definition_TV = \"yes\" or T2.Hight_definition_TV = \"yes\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the production codes of cartoons that are broadcasted on a high definition TV channel or a high definition TV channel?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Channel FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Package_Option = \"Option\" or T2.Package_Option = \"Sky Famiglia\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the channels of the cartoons that have the package option \"Option\" or \"Sky Famiglia\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Pay_per_view_PPV FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"Deep Cover for Batman!\" or T2.Title = \"Evil Under the Sea!\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the pay per view prices for the channels that show \"Deep Cover for Batman!\" or \"Evil Under the Sea!\" cartoons?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Production_code FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Package_Option = \"Option\" or T2.Package_Option = \"Sky Famiglia\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the production codes of cartoons that are on a channel with the package option \"Option\" or \"Sky Famiglia\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Package_Option FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Air_Date = \"October 1, 2007\" or T2.Air_Date = \"December 10, 2007\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the package options of the channels that broadcasted the series with air date \"October 1, 2007\" or \"December 10, 2007\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Directed_by FROM Cartoon AS T1 WHERE T1.id = 8.0 and T1.Title = \"Invasion of the Secret Santas!\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Who directed the cartoon with id 8 and title \"Invasion of the Secret Santas\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Weekly_Rank FROM TV_series AS T1 WHERE T1.Rating = \"3.8\" and T1.id = 11.0",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the weekly rank of the series with id 11?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Share FROM TV_series AS T1 WHERE T1.Viewers_m = \"4.24\" and T1.Episode = \"Blowback\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the share of the TV series with the average viewership of 4.24 and the episode \"Blowback\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Share FROM TV_series AS T1 WHERE T1.Rating = \"3.4\" and T1.Channel = \"713\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the share of the TV series with rating 3.4 and channel 713?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Share) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Channel = \"719\" and T2.Content = \"music\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "Find the distinct number of shares of TV series on channel with id 719 and content \"music\".",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Rating) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Share = 6.0 and T2.Hight_definition_TV = \"yes\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct TV series have a share of 6.0 and are broadcasted in high definition?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Episode) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Viewers_m = \"6.94\" and T2.Package_Option = \"no ( FTV )\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct episodes exist for the TV series with the average viewership of 6.94 and the channel that has the package option of \"no ( FTV )\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Channel) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Share = 5.0 and T2.Pay_per_view_PPV = \"no\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct channels have TV series with share of 5 and are not on pay per view?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.id) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Air_Date = \"November 5, 2007\" and T2.Package_Option = \"no ( FTV )\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct TV series aired on a channel with the package option \"no ( FTV )\" on November 5, 2007?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Pay_per_view_PPV) FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.id = \"728\" and T2.Production_code = 112.0",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct pay per view products are associated with the TV channel with id 728 and the cartoon with production code 112.0?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Channel) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Viewers_m = \"6.05\" and T2.Pay_per_view_PPV = \"no\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct channels have a TV series with viewers rating of 6.05 and pay per view \"no\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Title) FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Original_air_date = \"January16,2009\" and T2.Pixel_aspect_ratio_PAR = \"4:3\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct cartoons were broadcasted on a pixel aspect ratio of 4:3 on January 16, 2009?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.id FROM TV_series AS T1 WHERE T1.Share = 9.0 or T1.Air_Date = \"December 17, 2007\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ids of TV series with share 9.0 or aired on December 17, 2007?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Original_air_date FROM Cartoon AS T1 WHERE T1.Directed_by = \"Brandon Vietti\" or T1.Title = \"Enter the Outsiders!\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the original air dates of cartoons directed by \"Brandon Vietti\" or have \"Enter the Outsiders!\" in the title?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Channel FROM TV_series AS T1 WHERE T1.Episode = \"The Hanged Man\" or T1.Viewers_m = \"5.13\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the channels of TV series that have an episode called \"The Hanged Man\" or have viewers rating of 5.13?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT count(*) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Pixel_aspect_ratio_PAR = \"4:3\" and T2.Content = \"music\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many TV series have the pixel aspect ratio \"4:3\" and content \"music\" are on channel with pixel aspect ratio \"4:3\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT count(*) FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = \"Michael Jelenic\" and T2.Title = \"Deep Cover for Batman!\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many channels broadcast the cartoon written by Michael Jelenic and titled \"Deep Cover for Batman!\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT count(*) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Hight_definition_TV = \"yes\" and T2.Pay_per_view_PPV = \"no\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many TV series are available in high definition on a channel that does not charge for pay per view?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT count(*) FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = \"MTV Music\" and T2.Package_Option = \"Sky Famiglia\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many cartoons are on MTV Music channel in the Sky Famiglia package?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT count(*) FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Pay_per_view_PPV = \"no\" and T2.Pixel_aspect_ratio_PAR = \"4:3 / 16:9\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many cartoons are there in TV channels that do not have pay-per-view and have pixel aspect ratio \"4:3 / 16:9\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT count(*) FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"Terror on Dinosaur Island!\" and T2.Production_code = 102.0",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many channels broadcast the cartoon with the title \"Terror on Dinosaur Island!\" and production code 102.0?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Channel FROM TV_series AS T1 WHERE T1.Rating != \"5.3\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the channels of TV series that have rating different from \"5.3\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Original_air_date FROM Cartoon AS T1 WHERE T1.Written_by != \"James Krieg\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the original air dates of cartoons whose written by is not \"James Krieg\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Episode FROM TV_series AS T1 WHERE T1.id != 1.0",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the episode names of the series with id != 1.0?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Hight_definition_TV FROM TV_Channel AS T1 WHERE T1.Country != \"United Kingdom\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the high definition TV channels that are not from the country United Kingdom?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Channel FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Language != \"English\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the channels for cartoons that are not in English?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Hight_definition_TV FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Rating != \"4.3\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the high definition TV channels that have a TV series with a rating below \"4.3\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Language FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Viewers_m != \"9.16\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the languages of channels that do not have a series with viewers rating below 9.16?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Episode FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Country != \"Italy\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the episode of the series that are broadcasted on a channel whose country is not \"Italy\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Original_air_date FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name != \"Music Box Italia\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the original air dates of cartoons whose channel series name is not \"Music Box Italia\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Content FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Air_Date != \"September 24, 2007\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the content of the TV channels that aired the series with air date \"September 24, 2007\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Share FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Pixel_aspect_ratio_PAR != \"4:3\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the shares of the TV series that have a pixel aspect ratio ratio different from \"4:3\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Content FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Weekly_Rank != 61.0",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of TV channels that have the TV series with weekly rank not equal to 61.0?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT T1.Air_Date FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Hight_definition_TV = \"yes\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct air dates of TV series that are broadcasted on TV channels with \"high definition TV\" enabled?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT T1.Air_Date FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Pixel_aspect_ratio_PAR = \"4:3\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Return the distinct air dates of TV series that have pixel aspect ratio \"4:3\".",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT T1.id FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Package_Option = \"Sky Famiglia + Sky HD\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct ids of cartoons that are on channel with package option \"Sky Famiglia + Sky HD\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT T1.Hight_definition_TV FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Air_Date = \"November 26, 2007\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct high definition TV channels that aired the TV series with the air date \"November 26, 2007\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT T1.id FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Country = \"United Kingdom\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct ids of cartoons that are on a TV channel in the country United Kingdom?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT T1.Production_code FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Language = \"English\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct production codes of cartoons that are on a channel with language \"English\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Pixel_aspect_ratio_PAR) FROM TV_Channel AS T1 WHERE T1.Content = \"music\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct pixel aspect ratios are used for showing music channels?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Pay_per_view_PPV) FROM TV_Channel AS T1 WHERE T1.series_name = \"Hip Hop TV\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct pay per views are offered by the channel that broadcasts the series Hip Hop TV?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.id) FROM Cartoon AS T1 WHERE T1.Production_code = 103.0",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct cartoons have the production code 103.0?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Original_air_date) FROM Cartoon AS T1 WHERE T1.Directed_by = \"Brandon Vietti\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct cartoons were directed by Brandon Vietti?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Hight_definition_TV) FROM TV_Channel AS T1 WHERE T1.id = \"709\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct high definition TV channels are there with the id 709?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Title) FROM Cartoon AS T1 WHERE T1.Written_by = \"Adam Beechen\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct cartoons were written by Adam Beechen?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.id FROM TV_series AS T1 WHERE T1.Weekly_Rank > 65.0",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the id of TV series with weekly rank larger than 65.0?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Episode FROM TV_series AS T1 WHERE T1.id > 7.0",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the episode numbers of TV series with rating higher than 7.0?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Weekly_Rank FROM TV_series AS T1 WHERE T1.id > 9.0",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the weekly ranks of TV series with id greater than 9.0?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Viewers_m FROM TV_series AS T1 WHERE T1.Share > 6.0",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of TV series with share greater than 6 that have more than 300 thousand viewers?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Channel, T2.Country, T3.Production_code FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN Cartoon AS T3 ON T2.id = T3.Channel",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the channels, countries, and production codes of the cartoons that are on TV?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Pixel_aspect_ratio_PAR, T2.Title, T3.id FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel JOIN TV_series AS T3 ON T1.id = T3.Channel",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the pixel aspect ratio, title, and id of the cartoons that are on each channel?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Pay_per_view_PPV FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel     ORDER BY T2.id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "For each TV channel, return the pay per view price of each TV series.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Package_Option FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel     ORDER BY T2.id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the package options for the channels that broadcast cartoons?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Package_Option FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel     ORDER BY T2.Production_code ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List all package options of channels that broadcast cartoons, ordered by the production code ascending.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel     ORDER BY T2.Share ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the names of series in ascending order of share.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Production_code FROM Cartoon AS T1 WHERE T1.Channel = \"701\"     INTERSECT SELECT T2.Production_code FROM Cartoon AS T2 WHERE T2.Channel = \"705\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the codes of cartoons that are broadcasted on channel 701 and channel 705?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Written_by FROM Cartoon AS T1 WHERE T1.Directed_by = \"Ben Jones\"     INTERSECT SELECT T2.Written_by FROM Cartoon AS T2 WHERE T2.Directed_by = \"Brandon Vietti\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the names of cartoons that are both directed by \"Ben Jones\" and written by someone else?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Air_Date FROM TV_series AS T1 WHERE T1.id = 11.0     INTERSECT SELECT T2.Air_Date FROM TV_series AS T2 WHERE T2.id = 7.0",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the air dates of the series with id 11 and the series with id 7?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Pixel_aspect_ratio_PAR FROM TV_Channel AS T1 WHERE T1.id = \"708\"     INTERSECT SELECT T2.Pixel_aspect_ratio_PAR FROM TV_Channel AS T2 WHERE T2.id = \"706\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What is the pixel aspect ratio of the channel with id 708, and what is the pixel aspect ratio of the channel with id 706?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT avg( T1.Share) FROM TV_series AS T1 WHERE T1.id = 4.0",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average share of the TV series with id 4.0?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT avg( T1.Production_code) FROM Cartoon AS T1 WHERE T1.Original_air_date = \"February20,2009\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average production code of the cartoons that aired on February 20, 2009?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT avg( T1.Weekly_Rank) FROM TV_series AS T1 WHERE T1.Air_Date = \"October 1, 2007\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average weekly rank of TV series that aired on October 1, 2007?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT avg( T1.id) FROM TV_series AS T1 WHERE T1.Share = 6.0",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average id of TV series with share 6.0?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT avg( T1.id) FROM Cartoon AS T1 WHERE T1.Production_code = 101.0",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average id of cartoons with production code 101.0?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT avg( T1.id) FROM Cartoon AS T1 WHERE T1.Written_by = \"Matt Wayne\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average id of cartoons written by Matt Wayne?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Content FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.id = (SELECT max( T23.id) FROM Cartoon AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the content of the channel that shows the most popular cartoon?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Package_Option FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Weekly_Rank = (SELECT max( T23.Weekly_Rank) FROM TV_series AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the package option for the channel that has the series with the highest weekly rank.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Language FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.id = (SELECT max( T23.id) FROM Cartoon AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the language of the channel that broadcasts the cartoon with the highest id?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Package_Option FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.id = (SELECT max( T23.id) FROM TV_series AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the package options for the channel that hosts the series with the highest id?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Pay_per_view_PPV FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.id = (SELECT max( T23.id) FROM TV_series AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the pay per view price for the channel that shows the maximum number of TV series?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Channel, T2.Pixel_aspect_ratio_PAR FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN TV_series AS T3 ON T2.id = T3.Channel WHERE T3.id = 10.0 and T2.Pay_per_view_PPV = \"no\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the channel and pixel aspect ratio of the cartoon that belongs to the TV series with id 10 and does not have pay per view?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Directed_by, T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN TV_series AS T3 ON T2.id = T3.Channel WHERE T3.Viewers_m = \"5.13\" and T2.Hight_definition_TV = \"yes\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the directed by and series name of cartoons with the average viewers rating of 5.13 and broadcasted on high definition TV channels?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.series_name, T2.Production_code FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel JOIN TV_series AS T3 ON T1.id = T3.Channel WHERE T3.Share = 6.0 and T2.Title = \"Enter the Outsiders!\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the name of the TV channel and the production code of the cartoon for the TV series with share of 6.0 that has the title \"Enter the Outsiders!\"",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Original_air_date, T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN TV_series AS T3 ON T2.id = T3.Channel WHERE T3.Channel = \"708\" and T2.Hight_definition_TV = \"yes\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the original air dates of cartoons that are aired on channel 708 and have \"yes\" for high definition TV?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Original_air_date FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Hight_definition_TV = \"no\" GROUP BY T1.Original_air_date  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the first airing date of the cartoon with the most number of broadcasts on a TV channel with the definition of TV as \"no\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.id FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Rating = \"3.7\" GROUP BY T1.id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the channel that has the most TV series with rating of 3.7.",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Pixel_aspect_ratio_PAR FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Viewers_m = \"5.13\" GROUP BY T1.Pixel_aspect_ratio_PAR  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the pixel aspect ratio of the channel that has the series with the viewers number m of \"5.13\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.id FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Pixel_aspect_ratio_PAR = \"4:3\" GROUP BY T1.id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the cartoon that is broadcasted on the channel with pixel aspect ratio \"4:3\".",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Viewers_m FROM TV_series AS T1        EXCEPT SELECT T2.Viewers_m FROM TV_series AS T2 WHERE T2.id = 11.0",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the viewership of the series that do not have the series with id 11?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.id FROM Cartoon AS T1        EXCEPT SELECT T2.id FROM Cartoon AS T2 WHERE T2.Written_by = \"Todd Casey\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of cartoons that do not have \"Todd Casey\" as the writer?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Production_code FROM Cartoon AS T1        EXCEPT SELECT T2.Production_code FROM Cartoon AS T2 WHERE T2.Directed_by = \"Michael Chang\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the production codes of cartoons that have not been directed by \"Michael Chang\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Channel FROM Cartoon AS T1        EXCEPT SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Production_code = 112.0",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the channels that do not have any cartoon with production code 112.0?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.Language FROM TV_Channel AS T1        EXCEPT SELECT T2.Language FROM TV_Channel AS T2 WHERE T2.Package_Option = \"Sky Famiglia + Sky HD\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the languages of channels that are not in the package option \"Sky Famiglia + Sky HD\"?",
    "db_id": "tvshow"
  },
  {
    "query": "SELECT T1.state FROM VOTES AS T1 WHERE T1.vote_id = 2",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What state did vote id 2 record?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1 WHERE T1.contestant_name = \"Loraine NygrenTania Mattioli\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the contestant numbers of the contestants with the name \"Loraine Nygren\" and \"Tania Mattioli\"?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 WHERE T1.state = \"MO\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the area codes of states where the area code is \"MO\".",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 WHERE T1.area_code = 954",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the states of area codes 954?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 WHERE T1.contestant_number = 5",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the name of the contestant with number 5?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state WHERE T2.state = \"SD\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the contestant numbers of all the votes made in the state SD.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.vote_id = 2",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the states of the area codes that voted for candidate with vote id 2?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.phone_number = 5112677315",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of contestants who voted by phone number 5112677315?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = \"Tabatha Gehling\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the votes for the contestant named Tabatha Gehling?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.state = \"CA\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the area codes of states where the votes were made in CA.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.contestant_number = 5",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the area code of the state that the contestant with number 5 is from?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state, count(*) FROM AREA_CODE_STATE AS T1  GROUP BY T1.state",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all states and the number of area codes assigned to each state.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id, count(*) FROM VOTES AS T1  GROUP BY T1.vote_id",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all vote ids and the number of votes that each vote id has.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state, count(*) FROM VOTES AS T1  GROUP BY T1.state",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all states and the number of votes from that state.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name, count(*) FROM CONTESTANTS AS T1  GROUP BY T1.contestant_name",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the names of contestants and the number of entries they have.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.created, count(*) FROM VOTES AS T1  GROUP BY T1.created",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the votes creation dates and the number of votes on each date.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state, count(*) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T1.state",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the states and the number of contestants from each state.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id, count(*) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T1.vote_id",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each vote id, what are the number of contestants that received that vote?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.phone_number, count(*) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T1.phone_number",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each phone number, show the number of votes associated with the contestant.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state, count(*) FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state  GROUP BY T1.state",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show all states and the number of votes from each state.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id, count(*) FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state  GROUP BY T1.vote_id",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many votes did each candidate get in each state?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT count(*) FROM AREA_CODE_STATE AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many area codes exist in each state?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT count(*) FROM VOTES AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many votes are there?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.created, T1.vote_id FROM VOTES AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the creation and vote id of all votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state, T1.vote_id FROM VOTES AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all state names and vote ids.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state, T1.area_code FROM AREA_CODE_STATE AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the states and area codes of area codes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the contestant numbers and names of all contestants?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id, T1.contestant_number FROM VOTES AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the id and number of contestant of votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.created, T2.contestant_name FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show the created dates and names of contestants for all votes.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number, T2.vote_id FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the contestant numbers and the ids of the votes for each contestant?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.area_code, T2.created FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show all area codes and their states along with the votes they have.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name, T2.contestant_number FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the names and numbers of contestants on votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id, T2.contestant_number FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the id and number of contestants for votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id, T1.phone_number FROM VOTES AS T1 WHERE T1.created = \"2018-03-09 19:03:36\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the ids and phone numbers of the votes created on March 9, 2018 at 7:03pm?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id, T1.contestant_number FROM VOTES AS T1 WHERE T1.phone_number = 6209222712",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the id and contestant number of votes whose phone number is 6209222712.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state, T1.contestant_number FROM VOTES AS T1 WHERE T1.created = \"2018-03-09 19:03:36\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the states and contestant numbers of votes created on March 9, 2018 at 7:03pm?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1  GROUP BY T1.state  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the name of the state with the most area codes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1  GROUP BY T1.contestant_number  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the number of the contestant who has been in the most contests?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM VOTES AS T1  GROUP BY T1.contestant_number  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the number of votes received by the contestant with the most votes.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM VOTES AS T1  GROUP BY T1.state  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which state has the most votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.phone_number FROM VOTES AS T1  GROUP BY T1.phone_number  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the phone number of the person who has the most votes.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT count(*) FROM VOTES AS T1 WHERE T1.state = \"CA\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "Find the number of votes that are from the state CA.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT count(*) FROM AREA_CODE_STATE AS T1 WHERE T1.state = \"NJ\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many area codes exist in the state NJ?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT count(*) FROM AREA_CODE_STATE AS T1 WHERE T1.area_code = 380",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many states have area code 380?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT count(*) FROM AREA_CODE_STATE AS T1 WHERE T1.state = \"NY\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many area codes exist in the state of NY?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT count(*) FROM VOTES AS T1 WHERE T1.state = \"NY\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many votes were cast in the state of NY?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id FROM VOTES AS T1    ORDER BY T1.phone_number DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the phone with the greatest number of votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1    ORDER BY T1.area_code DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the name of the state with the largest area code?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1    ORDER BY T1.contestant_number DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the name of the contestant with the highest number?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id FROM VOTES AS T1    ORDER BY T1.contestant_number DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the contestant with the highest number of votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.created FROM VOTES AS T1    ORDER BY T1.phone_number DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the creation date of the vote with the greatest phone number?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number    ORDER BY T2.vote_id DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the contestant number of the contestant who received the highest number of votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state    ORDER BY T2.vote_id DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the state with the highest number of votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state    ORDER BY T2.contestant_number ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the area code of the state that has the contestant with the smallest number?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number    ORDER BY T2.created ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the contestant who received the first vote?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number    ORDER BY T2.contestant_number ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the contestant with the lowest number?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state    ORDER BY T2.vote_id ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the state with the highest number of votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number    ORDER BY T2.created ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the contestant number of the contestant who created the most votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state, T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state    ORDER BY T2.vote_id DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the area code and state of the state that has the highest number of votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name, T1.contestant_number FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number    ORDER BY T2.created DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name and number of the contestant who received the highest number of votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number, T1.created FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state    ORDER BY T2.area_code DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the contestant number and when was the vote created for the contestant who lives in the area with the code \"720\"?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.area_code, T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state    ORDER BY T2.phone_number DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the area code and state of the phone number with the most votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.phone_number, T1.created FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state    ORDER BY T2.area_code DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the phone number of the state with the area code that has the highest area code.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.phone_number, T1.state FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number    ORDER BY T2.contestant_number DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the phone number of the contestant who has the highest number of votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.area_code, T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state    ORDER BY T2.created DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the area code and state of the election that was created last?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.phone_number) FROM VOTES AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct phone numbers are in the votes record?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.area_code) FROM AREA_CODE_STATE AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct area codes are used in states?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.state) FROM AREA_CODE_STATE AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct states are there in the US?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.contestant_number) FROM VOTES AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many contestants have been voted on distinctively?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.state) FROM VOTES AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different states have been voted on?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.vote_id) FROM VOTES AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different votes were made?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT avg( T1.phone_number) FROM VOTES AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average phone number of the voters?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT avg( T1.area_code) FROM AREA_CODE_STATE AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average area code of states?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.phone_number FROM VOTES AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the phone numbers of the voters?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the contestant numbers of all contestants?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM VOTES AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Show all states that have votes.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the states of area codes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the names of all contestants?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM VOTES AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the contestant numbers of votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT T1.contestant_number FROM VOTES AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct contestant numbers that have votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT T1.area_code FROM AREA_CODE_STATE AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct area codes of states?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT T1.phone_number FROM VOTES AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct phone numbers of voters?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT T1.created FROM VOTES AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct creation dates of votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1     ORDER BY T1.area_code ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List all states in alphabetical order by area code.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM VOTES AS T1     ORDER BY T1.created ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the states of votes in ascending order of creation date.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM VOTES AS T1     ORDER BY T1.vote_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the contestant numbers of votes in ascending order of vote id.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.created FROM VOTES AS T1     ORDER BY T1.vote_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the creation dates of votes in ascending order of vote id.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id FROM VOTES AS T1     ORDER BY T1.contestant_number ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the vote ids in ascending order of contestant number.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM VOTES AS T1     ORDER BY T1.vote_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the contestant numbers of votes in descending order of vote id.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM VOTES AS T1     ORDER BY T1.vote_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the states of votes in descending order of vote id.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id FROM VOTES AS T1     ORDER BY T1.phone_number DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the vote ids in descending order of phone number.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.phone_number FROM VOTES AS T1     ORDER BY T1.created DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the phone numbers of votes in descending order of creation date.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id FROM VOTES AS T1     ORDER BY T1.contestant_number DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the vote ids in descending order of the contestant number.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1     ORDER BY T1.area_code DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List all states in descending order of area code.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM VOTES AS T1     ORDER BY T1.phone_number DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the states of votes in descending order of phone number.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state, T1.area_code FROM AREA_CODE_STATE AS T1     ORDER BY T1.area_code ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the states and area codes of the area codes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name, T1.contestant_number FROM CONTESTANTS AS T1     ORDER BY T1.contestant_number ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the name and number of contestants in ascending order of their number.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number, T1.vote_id FROM VOTES AS T1     ORDER BY T1.vote_id ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the contestant number and vote id of all votes in ascending order of vote id.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.created, T1.state FROM VOTES AS T1     ORDER BY T1.state ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the created votes in ascending order of state.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.phone_number, T1.state FROM VOTES AS T1     ORDER BY T1.state ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the phone number and state of votes in ascending order of state.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.phone_number, T1.vote_id FROM VOTES AS T1     ORDER BY T1.vote_id ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the phone numbers and ids of votes in ascending order of vote ids.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.created, T1.contestant_number FROM VOTES AS T1     ORDER BY T1.contestant_number ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the created and contestant number of votes in ascending order of contestant number.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T2.state = T3.state WHERE T2.phone_number = 7148407040 and T3.state = \"CA\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the name of the contestant who voted with phone number 7148407040 and whose state is \"CA\".",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state JOIN CONTESTANTS AS T3 ON T2.contestant_number = T3.contestant_number WHERE T2.vote_id = 1 and T3.contestant_number = 2",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What is the area code and state of the contestant with contestant number 2 who received the first vote?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.phone_number = 6209222712 or T2.phone_number = 7148407040",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the contestant numbers of the contestants who voted with the phone number 6209222712 or 7148407040?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state WHERE T2.area_code = 940 or T2.area_code = 727",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the id of votes in area code 940 or 727?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.phone_number = 6209222712 or T2.phone_number = 7182887233",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the area codes and states of the states whose phone number is 6209222712 or 7182887233.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.contestant_number = 5 or T2.contestant_number = 3",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the states of area codes that have produced contestant number 5 or 3 in any contest?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM VOTES AS T1 WHERE T1.created = \"2018-03-09 19:03:36\" and T1.phone_number = 6209222712",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the votes from the state with the phone number 6209222712 created on March 9, 2018?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id FROM VOTES AS T1 WHERE T1.contestant_number = 5 and T1.phone_number = 7148407040",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ids of votes for the contestant with number 5 and phone number 7148407040?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM VOTES AS T1 WHERE T1.vote_id = 2 and T1.state = \"NJ\n\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the contestant number of the vote that was casted in the state of NJ?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM VOTES AS T1 WHERE T1.vote_id = 5 and T1.state = \"NJ\n\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the contestant number of the vote that was casted in the state of NJ?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM VOTES AS T1 WHERE T1.phone_number = 5112677315 and T1.state = \"NJ\n\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the number of votes cast by the contestant with phone number 5112677315 in the state of NJ.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.created FROM VOTES AS T1 WHERE T1.vote_id = 5 and T1.contestant_number = 5",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the creation date of the vote with id 5 and contestant number 5?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.phone_number FROM VOTES AS T1 WHERE T1.contestant_number = 2 and T1.created = \"2018-03-09 19:03:39\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the phone number of the contestant with id 2 who made the vote on March 9, 2018 at 7:03 pm?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.created) FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state WHERE T1.phone_number = 5112677315 and T2.area_code = 747",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct votes were made by the phone number 5112677315 in the area with area code 747?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.contestant_number) FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.contestant_name = \"Nita Coster\" and T2.vote_id = 3",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct votes did the contestant named Nita Coster receive for the vote with id 3?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.area_code) FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T1.state = \"NC\" and T2.vote_id = 1",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "Find the number of distinct area codes that belong to the state NC and casted vote id 1.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.contestant_number) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.created = \"2018-03-09 19:03:39\" and T2.contestant_name = \"Tabatha Gehling\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct votes were cast for the contestant Tabatha Gehling on or after March 9, 2018 at 7:03 pm?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.phone_number FROM VOTES AS T1 WHERE T1.created = \"2018-03-09 19:03:21\" or T1.vote_id = 1",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the phone numbers of the voters who made their votes on March 9, 2018, at 19:03, or whose vote id is 1.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM VOTES AS T1 WHERE T1.state = \"NJ\n\" or T1.vote_id = 2",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the contestant number of the person who voted for either candidate in NJ or casted vote id 2.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id FROM VOTES AS T1 WHERE T1.phone_number = 7148407040 or T1.created = \"2018-03-09 19:03:21\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ids of votes with the phone number 7148407040 or created on March 9, 2018 at 19:03:21?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.phone_number FROM VOTES AS T1 WHERE T1.created = \"2018-03-09 19:03:39\" or T1.contestant_number = 5",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the phone number of the contestant with number 5 in the vote created on March 9, 2018 at 7:03 pm.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM VOTES AS T1 WHERE T1.created = \"2018-03-09 19:03:36\" or T1.vote_id = 5",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the contestant numbers of the votes that were created on March 9, 2018 at 19:03, or have vote id 5?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT count(*) FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state WHERE T2.state = \"NE\" and T2.area_code = 678",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many votes were cast in state NE and area code 678?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT count(*) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_number = 4 and T2.contestant_name = \"Allie Rogalski\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many votes does the contestant with the number 4 and the name \"Allie Rogalski\" have?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT count(*) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_number = 8 and T2.contestant_name = \"Allie Rogalski\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many votes does the contestant with the number 8 and the name Allie Rogalski have?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT count(*) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = \"Kelly Clauss\" and T2.contestant_number = 6",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many votes does the contestant with the name Kelly Clauss have on the contest with number 6?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT count(*) FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.created = \"2018-03-09 19:03:39\" and T2.contestant_number = 5",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many votes does the contestant with the number 5 have, whose vote was created on March 9, 2018 at 7:03 pm?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT count(*) FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.phone_number = 7182887233 and T2.created = \"2018-03-09 19:03:40\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many contestants have the phone number 7182887233 and created the vote on the contest on March 9, 2018 at 7:03 pm?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id FROM VOTES AS T1 WHERE T1.state != \"NY\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Return the ids of all votes that have a state other than NY.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.phone_number FROM VOTES AS T1 WHERE T1.state != \"NJ\n\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the phone number of votes that are not from state NJ.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.created FROM VOTES AS T1 WHERE T1.state != \"CA\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the votes created in states other than CA.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id FROM VOTES AS T1 WHERE T1.contestant_number != 5",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of votes for contestants with number smaller than 5?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM VOTES AS T1 WHERE T1.state != \"CA\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the contestant numbers of votes that are not from the state \"CA\".",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 WHERE T1.contestant_number != 8",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of contestants whose number is not 8?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 WHERE T1.contestant_number != 3",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of contestants whose number is not 3?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 WHERE T1.area_code != 336",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the states with area code 336?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name != \"Kelly Clauss\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the states of the contestants whose name is not \"Kelly Clauss\"?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.created != \"2018-03-09 19:03:39\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the contestant numbers of contestants whose votes were not created on March 9, 2018 at 7:03 pm?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state WHERE T2.area_code != 408",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the contestant numbers of votes that were given in states whose area codes are not 408?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_number != 5",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of contestants who have not voted for contestant 5?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.created != \"2018-03-09 19:03:40\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of contestants who have votes whose creation date is not \"2018-03-09 19:03:40\"?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT T1.state FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_number = 8",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct states that the contestant with the number 8 has participated in?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.vote_id = 2",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct area codes of states where the vote id is 2.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.contestant_number = 5",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct states that have an area code with the contestant number 5?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT T1.contestant_number FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.created = \"2018-03-09 19:03:39\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct contestant numbers who made votes after March 9, 2018 at 7:03 pm.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT T1.vote_id FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = \"Loraine NygrenTania Mattioli\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct votes for the contestant with the name \"Loraine Nygren\" and \"Tania Mattioli\".",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.vote_id = 3",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct states that have the area code whose vote id is 3.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.area_code) FROM AREA_CODE_STATE AS T1 WHERE T1.state = \"WI\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct area codes are in WI?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.vote_id) FROM VOTES AS T1 WHERE T1.contestant_number = 5",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct votes do contestant number 5 have?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.contestant_name) FROM CONTESTANTS AS T1 WHERE T1.contestant_number = 3",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many contestants have the number 3?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.state) FROM AREA_CODE_STATE AS T1 WHERE T1.area_code = 808",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct states have area code 808?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.area_code) FROM AREA_CODE_STATE AS T1 WHERE T1.state = \"MA\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct area codes are in MA?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.state) FROM VOTES AS T1 WHERE T1.vote_id = 1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the number of different states that received only one vote.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id FROM VOTES AS T1 WHERE T1.contestant_number > 5",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the ids of votes cast by contestants with numbers bigger than 5?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 WHERE T1.area_code > 764",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of states that have area codes greater than 764?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 WHERE T1.contestant_number > 7",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of contestants with numbers larger than 7?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.phone_number FROM VOTES AS T1 WHERE T1.created > \"2018-03-09 19:03:40\"",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "Find the phone numbers of votes created after 2018-03-09 19:03:40.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM VOTES AS T1 WHERE T1.phone_number > 6209222712",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "Find the states of votes with phone number larger than 6209222712.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 WHERE T1.contestant_number > 5",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of contestants with numbers larger than 5?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.area_code, T2.contestant_number, T3.contestant_name FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state JOIN CONTESTANTS AS T3 ON T2.contestant_number = T3.contestant_number",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the area codes, contestant numbers, and names of the states that have voted?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number, T2.contestant_name, T3.state FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T1.state = T3.state",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the number, name, and state of residence of the contestants of the votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number, T2.created, T3.area_code FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T2.state = T3.state",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the contestant number, creation date, and area code of state for each contestant?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name, T2.created, T3.state FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T2.state = T3.state",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the names of the contestants, when were their votes created, and the states they live in?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number     ORDER BY T2.vote_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of contestants that received the highest number of votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.created FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state     ORDER BY T2.area_code ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "When were the votes created?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.vote_id FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state     ORDER BY T2.area_code ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the id of votes for different states?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state     ORDER BY T2.phone_number ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Show the states of phones with the largest number of votes.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 WHERE T1.contestant_number = 10     INTERSECT SELECT T2.contestant_name FROM CONTESTANTS AS T2 WHERE T2.contestant_number = 10",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What is the name of the contestant with number 10 in both set of contestants?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 WHERE T1.area_code = 267     INTERSECT SELECT T2.state FROM AREA_CODE_STATE AS T2 WHERE T2.area_code = 317",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the states with area codes 267 and 317?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.created FROM VOTES AS T1 WHERE T1.contestant_number = 2     INTERSECT SELECT T2.created FROM VOTES AS T2 WHERE T2.contestant_number = 3",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the votes that were created at the same time for contestant number 2 and 3.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.created FROM VOTES AS T1 WHERE T1.state = \"NY\"     INTERSECT SELECT T2.created FROM VOTES AS T2 WHERE T2.state = \"NY\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the votes that were created in both NY and NY.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 WHERE T1.contestant_number = 11     INTERSECT SELECT T2.contestant_name FROM CONTESTANTS AS T2 WHERE T2.contestant_number = 7",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What is the name of the contestant with number 11 in one contest and 7 in another?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 WHERE T1.contestant_number = 1     INTERSECT SELECT T2.contestant_name FROM CONTESTANTS AS T2 WHERE T2.contestant_number = 9",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What is the name of the contestant with number 1 in the intersection of the contestants with number 1 and the contestants with number 9?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT avg( T1.vote_id) FROM VOTES AS T1 WHERE T1.created = \"2018-03-09 19:03:39\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average vote id for the votes created on March 9, 2018 at 19:03:39?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT avg( T1.area_code) FROM AREA_CODE_STATE AS T1 WHERE T1.state = \"PA\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average area code for states in PA?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT avg( T1.vote_id) FROM VOTES AS T1 WHERE T1.state = \"NJ\n\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of votes given by voters from state NJ?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT avg( T1.contestant_number) FROM VOTES AS T1 WHERE T1.vote_id = 1",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of contestants for the vote with id 1?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT avg( T1.area_code) FROM AREA_CODE_STATE AS T1 WHERE T1.state = \"VT\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average area code for states in VT?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.created = (SELECT max( T23.created) FROM VOTES AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the names of contestants who have the maximum number of votes.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.vote_id = (SELECT max( T23.vote_id) FROM VOTES AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of contestants who received the highest number of votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_number = (SELECT max( T23.contestant_number) FROM VOTES AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the name of the contestant who received the most votes.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name, T2.vote_id FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T2.state = T3.state WHERE T3.area_code = 401 and T2.phone_number = 6209222712",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the names and id of contestants, whose phone number is 6209222712 and whose state is in area code 401?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.phone_number, T2.contestant_number FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T1.state = T3.state WHERE T3.area_code = 719 and T2.contestant_name = \"Jessie Eichman\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the phone number of the contestant named Jessie Eichman and who lives in the area with area code 719.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.created, T2.contestant_name FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T1.state = T3.state WHERE T3.area_code = 310 and T2.contestant_number = 4",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the votes created and the name of the contestant with the number 4 from the state with area code 310?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.phone_number = 7182887233 GROUP BY T1.state  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the state of the phone number 7182887233?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.state = \"NY\" GROUP BY T1.area_code  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the area code for the state that has the most votes?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.vote_id = 5 GROUP BY T1.area_code  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the area code of the state where the vote with id 5 was casted?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state WHERE T2.area_code = 806 GROUP BY T1.state  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the number of votes that were cast in the state with area code 806?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.phone_number = 5112677315 GROUP BY T1.contestant_number  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the number of the contestant who made the most votes with the phone number 5112677315?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.created = \"2018-03-09 19:03:36\" GROUP BY T1.contestant_name  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the name of the contestant who received the most votes after the voting was opened?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.contestant_number = 5 GROUP BY T1.state  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the state of the area code with the most votes for the contestant number 5?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1        EXCEPT SELECT T2.area_code FROM AREA_CODE_STATE AS T2 WHERE T2.state = \"MA\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the area codes that do not have any area codes in the state of MA?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1        EXCEPT SELECT T2.contestant_name FROM CONTESTANTS AS T2 WHERE T2.contestant_number = 1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of contestants who are not on any contest with contestant number 1?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1        EXCEPT SELECT T2.area_code FROM AREA_CODE_STATE AS T2 WHERE T2.state = \"AK\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the area codes that are not associated with the state \"AK\"?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_number FROM VOTES AS T1        EXCEPT SELECT T2.contestant_number FROM VOTES AS T2 WHERE T2.phone_number = 7182887233",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the contestant numbers who did not receive any vote with phone number 7182887233.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1        EXCEPT SELECT T2.contestant_name FROM CONTESTANTS AS T2 WHERE T2.contestant_number = 8",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of contestants who are not number 8?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.phone_number FROM VOTES AS T1        EXCEPT SELECT T2.phone_number FROM VOTES AS T2 WHERE T2.state = \"NJ\n\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the phone numbers of votes that are not from state NJ.",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1        EXCEPT SELECT T2.contestant_name FROM CONTESTANTS AS T2 WHERE T2.contestant_number = 9",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of contestants who are not number 9?",
    "db_id": "voter_1"
  },
  {
    "query": "SELECT T1.Capacity FROM stadium AS T1 WHERE T1.Location = \"Raith Rovers\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the capacity of the stadium located at Raith Rovers?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 WHERE T1.concert_ID = 3",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of singers in concert 3?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Name FROM stadium AS T1 WHERE T1.Average = 642",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of stadiums that have an average score of 642?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Theme FROM concert AS T1 WHERE T1.Stadium_ID = \"2\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the themes of concerts held in stadium with id 2?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID = \"6\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the name of the singer who was in the concert with singer with id \"6\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Song_release_year FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.concert_ID = 3",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the release years of the songs performed by the singers who were in concert 3?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Song_Name, count(*) FROM singer AS T1  GROUP BY T1.Song_Name",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all song names and the number of singers who singed that song.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Location, count(*) FROM stadium AS T1  GROUP BY T1.Location",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all locations and the number of stadiums in each location.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID, count(*) FROM singer_in_concert AS T1  GROUP BY T1.Singer_ID",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many singers are in each concert? Return the id and the number of singers.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Theme, count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.Theme",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the themes of concerts and the number of stadiums used for each theme.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Capacity, count(*) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.Capacity",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the capacity and the number of concerts held in different stadiums.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID, count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID  GROUP BY T1.Singer_ID",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many singers are in each concert? Return the id of the singer and the number of concerts he or she is in.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID, count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.concert_ID",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the id of each concert and the number of stadiums it uses.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT count(*) FROM singer_in_concert AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many singers are in concert?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT count(*) FROM stadium AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many stadiums exist?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Theme, T1.concert_ID FROM concert AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the themes of concerts and their corresponding ids?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Stadium_ID, T1.Average FROM stadium AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show the stadium ID and average rating for all stadiums.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Stadium_ID, T1.Highest FROM stadium AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show the stadium ID and its highest level.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID, T1.Singer_ID FROM singer_in_concert AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the concert IDs and singer ids of singers in concerts?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Capacity, T1.Average FROM stadium AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show the capacity and average of all stadiums.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID, T2.Year FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the id and year of the singer for each concert?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Age, T2.Singer_ID FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the ages of singers who are in concerts? Also return their ids.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Year, T2.concert_ID FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the years and ids of concerts with singers?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Highest, T2.Year FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show the highest stadium and the year for all the concerts.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Stadium_ID, T1.concert_ID FROM concert AS T1 WHERE T1.concert_Name = \"Week 2\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the stadium IDs and concert IDs of the concert with the name \"Week 2\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_Name, T1.Theme FROM concert AS T1 WHERE T1.Year = \"2014\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the names and themes of concerts held in 2014?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Location, T1.Highest FROM stadium AS T1 WHERE T1.Average = 552",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the location and highest level of the stadiums that have an average score of 552?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Average, T1.Highest FROM stadium AS T1 WHERE T1.Lowest = 1294",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the average and highest capacity for stadiums with the lowest capacity equal to 1294?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_Name FROM concert AS T1  GROUP BY T1.concert_Name  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the name of the concert that was attended by the most people?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1  GROUP BY T1.concert_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the id of the concert with the most singers.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT count(*) FROM concert AS T1 WHERE T1.concert_Name = \"Auditions\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many concerts have the name \"Auditions\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT count(*) FROM singer AS T1 WHERE T1.Name = \"Timbaland\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many singers have the name \"Timbaland\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT count(*) FROM singer AS T1 WHERE T1.Age = 25",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many singers are aged 25?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT count(*) FROM singer AS T1 WHERE T1.Song_Name = \"Sun\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many singers have the song named Sun?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT count(*) FROM singer AS T1 WHERE T1.Name = \"John Nizinik\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many singers have the name John Nizinik?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_Name FROM concert AS T1    ORDER BY T1.concert_ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the name of the most recent concert?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Country FROM singer AS T1    ORDER BY T1.Singer_ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the country of the singer with the largest ID?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Name FROM stadium AS T1    ORDER BY T1.Capacity DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the name of the stadium that has the maximum capacity?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Stadium_ID FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.concert_ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the stadium that held the concert with the largest id?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.concert_ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the singer who was in the concert with the highest ID?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Year FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.Stadium_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the year of the first stadium?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Age ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the id of the concert with the youngest singer.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Theme FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID    ORDER BY T2.concert_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the theme of the concert performed by the singer with the smallest concert ID?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.concert_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the singer who was in the concert with the highest ID?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Lowest FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.concert_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the lowest stadium ID that has held a concert?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Highest, T1.Average FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.concert_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the highest stadium and its average used for?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID, T1.Singer_ID FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.Age DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id and singer id of the oldest singer in a concert?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Age, T1.Is_male FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.concert_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the age and gender of the singer who was in the last concert?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Capacity, T1.Name FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID    ORDER BY T2.concert_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the capacity and name of the stadium that held the most concerts?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Name, T1.Country FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.concert_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name and country of the singer who was in the concert with the highest ID?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Song_release_year, T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID    ORDER BY T2.concert_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the year of release of the last concert of the singer with the id 1?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Singer_ID) FROM singer_in_concert AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different singers are in the concert?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Song_release_year) FROM singer AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different years did singers release songs in?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Stadium_ID) FROM concert AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different stadiums are used for the concerts?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.concert_ID) FROM concert AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different concerts are there?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.concert_Name) FROM concert AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different concerts are there?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM singer AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different singers are there?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Location) FROM stadium AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different locations are used by stadiums?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT avg( T1.concert_ID) FROM concert AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average concert ID?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT avg( T1.Stadium_ID) FROM stadium AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average stadium ID?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT avg( T1.Capacity) FROM stadium AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average capacity of the stadiums?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT avg( T1.concert_ID) FROM singer_in_concert AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average number of concerts per singer?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT avg( T1.Age) FROM singer AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average age of the singers?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT avg( T1.Average) FROM stadium AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average capacity of stadiums?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT avg( T1.Lowest) FROM stadium AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average lowest temperature of all stadiums?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Year FROM concert AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the years of concerts?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Song_Name FROM singer AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the names of singers?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_Name FROM concert AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the names of concerts?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Highest FROM stadium AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What is the highest elevation of a stadium?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Is_male FROM singer AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the singers' genders?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Location FROM stadium AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the locations of stadiums?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the concert ids of singers?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT T1.Singer_ID FROM singer_in_concert AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct singer ids who attended concerts?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT T1.Year FROM concert AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct years that concerts took place?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT T1.Lowest FROM stadium AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Show the lowest value of each stadium.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT T1.Age FROM singer AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct ages of singers?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT T1.Song_release_year FROM singer AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct song release years for each singer?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT T1.concert_ID FROM singer_in_concert AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct concert ids that have been sung in by any singer?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT T1.Capacity FROM stadium AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct capacities of stadiums?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Highest FROM stadium AS T1     ORDER BY T1.Average ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the highest average stadium for all stadiums.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Capacity FROM stadium AS T1     ORDER BY T1.Highest ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the capacity of stadiums in ascending order of highest?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Theme FROM concert AS T1     ORDER BY T1.concert_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the theme of concerts in ascending order of concert ID.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Age FROM singer AS T1     ORDER BY T1.Singer_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the ages of singers? Sort the result by their id in ascending order.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Lowest FROM stadium AS T1     ORDER BY T1.Stadium_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the lowest stadium ID for all stadiums?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Average FROM stadium AS T1     ORDER BY T1.Lowest ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average capacity of stadiums?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Highest FROM stadium AS T1     ORDER BY T1.Stadium_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the highest stadium ID for all stadiums.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_Name FROM concert AS T1     ORDER BY T1.concert_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of concerts in descending order of concert ID.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1     ORDER BY T1.Age DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the IDs of singers in descending order of age.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Name FROM singer AS T1     ORDER BY T1.Singer_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of singers in descending order of singer ID.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Average, T1.Capacity FROM stadium AS T1     ORDER BY T1.Capacity ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the average and capacity of stadiums?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Theme, T1.Year FROM concert AS T1     ORDER BY T1.Year ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the theme and year of each concert in ascending order of year.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Stadium_ID, T1.concert_ID FROM concert AS T1     ORDER BY T1.concert_ID ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the stadium ids and concert ids of all concerts in ascending order of concert ids.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Location, T1.Lowest FROM stadium AS T1     ORDER BY T1.Lowest ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the location and lowest price of stadiums in ascending order of lowest price.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Country, T1.Is_male FROM singer AS T1     ORDER BY T1.Is_male ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the countries and genders of singers?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Highest, T1.Capacity FROM stadium AS T1     ORDER BY T1.Capacity ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the highest capacity and stadium names of all stadiums.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID, T1.Singer_ID FROM singer_in_concert AS T1     ORDER BY T1.Singer_ID ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the concert IDs and singer IDs of singers in concerts in ascending order of singer IDs.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Country, T1.Singer_ID FROM singer AS T1     ORDER BY T1.Singer_ID ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the countries and ids of singers?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T2.concert_ID = 1 and T3.Year = \"2014\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the id of singers who were in the concert with id 1 and year 2014?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Country FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T2.concert_ID = 3 and T3.concert_Name = \"Week 1\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the countries of the singers in the concert with id 3 and name \"Week 1\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T2.Singer_ID = \"5\" and T3.Theme = \"Party All Night\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What is the name of the singer who performed in the concert with theme \"Party All Night\" and whose id is 5?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Year FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID JOIN singer_in_concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T2.Capacity = 2000 and T3.Singer_ID = \"6\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What years did the singer with ID 6 perform in stadiums with capacity of 2000?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T2.Song_Name = \"You\" and T3.Theme = \"Free choice\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the id of the concerts in which the singer whose song name is \"You\" performs, and the theme of the concert is \"Free choice\".",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.Theme = \"Free choice 2\" or T2.Theme = \"Bleeding Love\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the ids of the concerts attended by singers whose themes are \"Free choice 2\" or \"Bleeding Love\".",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.concert_Name = \"Auditions\" or T2.concert_Name = \"Week 1\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the ids of singers who are in the concert with the name \"Auditions\" or \"Week 1\".",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Country FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.concert_ID = 3 or T2.concert_ID = 5",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the countries of singers who attended the concerts with id 3 or 5?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Song_release_year FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.concert_ID = 6 or T2.concert_ID = 4",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the release years of the songs sung by the singers who were in the concert with id 6 or 4?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Name FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_ID = 3 or T2.concert_ID = 5",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the names of stadiums that hold concert with id 3 or 5?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Song_release_year FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID = \"5\" or T2.Singer_ID = \"3\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the release years of the songs sung by the singer with id 5 or 3 in concert?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Average FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year = \"2014\" or T2.Year = \"2014\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What is the average capacity of the stadiums that held a concert in 2014 or 2014?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1 WHERE T1.Is_male = \"T\" and T1.Name = \"Joe Sharp\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the singer ID for the singer named Joe Sharp who is male.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Stadium_ID FROM concert AS T1 WHERE T1.Year = \"2015\" and T1.Theme = \"Happy Tonight\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the id of stadiums that have held concerts with theme \"Happy Tonight\" in year 2015?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Country FROM singer AS T1 WHERE T1.Name = \"Rose White\" and T1.Song_Name = \"Sun\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the countries of singers whose name is Rose White and whose song is called Sun?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1 WHERE T1.Name = \"Rose White\" and T1.Age = 32",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the id of singers whose name is Rose White and age is 32?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Song_release_year FROM singer AS T1 WHERE T1.Is_male = \"F\" and T1.Singer_ID = 4",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the release years of the songs sung by the singer with id 4 and whose gender is \"F\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Is_male FROM singer AS T1 WHERE T1.Singer_ID = 6 and T1.Song_Name = \"Sun\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the gender of the singer with id 6 and whose song is called \"Sun\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.concert_ID) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Singer_ID = \"2\" and T2.Country = \"Netherlands\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct concerts does the singer with ID 2 have and whose country is Netherlands?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Is_male = \"T\" and T2.Singer_ID = \"3\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct singers are in the concert with singer whose gender is \"T\" and the singer id is \"3\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Highest) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Stadium_ID = 1 and T2.Theme = \"Wide Awake\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "What is the number of distinct stadiums that have the highest level for the theme \"Wide Awake\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Stadium_ID FROM concert AS T1 WHERE T1.concert_ID = 1 or T1.Theme = \"Party All Night\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the id of the stadium of the concert with id 1 or theme \"Party All Night\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Name FROM singer AS T1 WHERE T1.Is_male = \"F\" or T1.Song_release_year = \"2016\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the names of singers who are female or whose song was released in 2016?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Stadium_ID FROM stadium AS T1 WHERE T1.Location = \"Alloa Athletic\" or T1.Highest = 1763",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the id of stadiums that are located at Alloa Athletic or have the highest score of 1763?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Country FROM singer AS T1 WHERE T1.Name = \"John Nizinik\" or T1.Is_male = \"T\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the countries of the singers whose name is John Nizinik or is male?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT count(*) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.concert_ID = 3 and T2.Singer_ID = \"2\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many singers were in the concert with id 3 and the singer with id 2?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT count(*) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID = \"7\" and T2.Year = \"2015\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many concerts were held in stadium with id 7 and year 2015?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT count(*) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID = \"2\" and T2.concert_ID = 6",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many singers are in the concert with singer id 2?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID = 6 and T2.Name = \"Tribal King\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many concerts does the singer with ID 6 have?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT count(*) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID = \"9\" and T2.Theme = \"Wide Awake\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many stadiums have a concert with theme Wide Awake in the stadium with id 9?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 WHERE T1.concert_ID != 4",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of singers who are not in the concert with id 4?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1 WHERE T1.Singer_ID != \"2\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the concert ids of singers whose id is not \"2\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Average FROM stadium AS T1 WHERE T1.Highest != 921",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average attendance of stadiums whose highest attendance is not 921?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_Name FROM concert AS T1 WHERE T1.Stadium_ID != \"1\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of concerts that do not have the stadium with ID 1?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.Singer_ID != \"5\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of concerts that do not have the singer with id \"5\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.Theme != \"Free choice\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of concerts whose theme is not \"Free choice\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.concert_ID != 1",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of singers who are in the concert with id not equal to 1?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Song_Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.concert_ID != 3",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of singers who are not in the concert with id 3?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT T1.Highest FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID = \"9\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct highest values of stadiums that have concert with id 9?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT T1.Year FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Location = \"Brechin City\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct years in which concerts were held in the stadium located in Brechin City.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Theme = \"Wide Awake\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct locations of stadiums that have held concerts with theme Wide Awake.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT T1.Song_Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID = \"6\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct song names sung by the singer with id 6?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT T1.Singer_ID FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.Year = \"2015\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct singer ids who performed in a concert in year 2015?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT T1.Singer_ID FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Age = 29",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct singer ids who are aged 29?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT T1.Is_male FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.concert_ID = 3",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct male singers who performed in the concert with id 3?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT T1.Stadium_ID FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year = \"2015\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct stadium IDs that hosted a concert in year 2015?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM stadium AS T1 WHERE T1.Lowest = 411",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct stadiums have the lowest rating of 411?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM stadium AS T1 WHERE T1.Highest = 1763",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct stadiums have a highest rating of 1763?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Location) FROM stadium AS T1 WHERE T1.Lowest = 315",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct locations have stadiums with lowest grade equal to 315?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.concert_ID) FROM singer_in_concert AS T1 WHERE T1.Singer_ID = \"3\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many concerts does the singer with id 3 have been in?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Country) FROM singer AS T1 WHERE T1.Song_release_year = \"2014\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many singers released songs in 2014?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Is_male) FROM singer AS T1 WHERE T1.Song_Name = \"Love\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many male singers sang the song named Love?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Name FROM singer AS T1 WHERE T1.Singer_ID > 6",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of singers with IDs larger than 6?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 WHERE T1.concert_ID > 6",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the IDs of singers who performed in concerts after 6?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 WHERE T1.concert_ID > 3",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the ids of singers who performed in concerts after the third?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Name FROM stadium AS T1 WHERE T1.Stadium_ID > 3",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of stadiums with an ID greater than 3?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Stadium_ID FROM concert AS T1 WHERE T1.concert_ID > 3",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the id of stadiums that have hosted concerts with id larger than 3?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID, T2.Location, T3.Singer_ID FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID JOIN singer_in_concert AS T3 ON T1.concert_ID = T3.concert_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the id, location, and id of the singer of each concert?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Capacity, T2.concert_Name, T3.concert_ID FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID JOIN singer_in_concert AS T3 ON T2.concert_ID = T3.concert_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What is the capacity of each stadium, what is the name of the concert held there, and what is the id of the singer in the concert?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Stadium_ID, T2.concert_ID, T3.Lowest FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID JOIN stadium AS T3 ON T1.Stadium_ID = T3.Stadium_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the id, ids of the concerts and the stadiums where the lowest seat is less than or equal to 300?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_Name, T2.concert_ID, T3.Country FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID JOIN singer AS T3 ON T2.Singer_ID = T3.Singer_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the names of concerts, their IDs, and the countries of singers in those concerts?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Age FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.concert_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the ages of singers who are in concerts in ascending order by concert ID?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Average FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID     ORDER BY T2.concert_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the average capacity of the stadiums that host concerts?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.Age ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the IDs of singers who are in concerts in ascending order of age?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID     ORDER BY T2.Average ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the concert ID for stadiums in ascending order of average.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Lowest FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID     ORDER BY T2.concert_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the lowest stadium ID for all concerts?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID     ORDER BY T2.Age ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the concert IDs of singers in ascending order of age.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Stadium_ID FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID     ORDER BY T2.concert_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Which stadium has the most concerts?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Age FROM singer AS T1 WHERE T1.Song_Name = \"Dangerous\"     INTERSECT SELECT T2.Age FROM singer AS T2 WHERE T2.Song_Name = \"Dangerous\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the ages of singers who have released songs called \"Dangerous\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Theme FROM concert AS T1 WHERE T1.Stadium_ID = \"1\"     INTERSECT SELECT T2.Theme FROM concert AS T2 WHERE T2.Stadium_ID = \"9\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the themes of concerts held in stadium 1 and 9?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1 WHERE T1.Singer_ID = \"4\"     INTERSECT SELECT T2.concert_ID FROM singer_in_concert AS T2 WHERE T2.Singer_ID = \"4\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the concert ids of the concerts that have both singer 4 and singer 4.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Capacity FROM stadium AS T1 WHERE T1.Stadium_ID = 4     INTERSECT SELECT T2.Capacity FROM stadium AS T2 WHERE T2.Stadium_ID = 3",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What is the capacity of the stadium that has both stadium 3 and 4?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT avg( T1.concert_ID) FROM singer_in_concert AS T1 WHERE T1.Singer_ID = \"6\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of concerts performed by the singer with id \"6\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT avg( T1.concert_ID) FROM concert AS T1 WHERE T1.Stadium_ID = \"1\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of concerts held in stadium 1?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT avg( T1.Age) FROM singer AS T1 WHERE T1.Is_male = \"T\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average age of the singers who are male?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT avg( T1.Age) FROM singer AS T1 WHERE T1.Singer_ID = 4",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average age of the singer with id 4?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT avg( T1.concert_ID) FROM concert AS T1 WHERE T1.concert_Name = \"Week 1\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of tickets sold for the concert with the name \"Week 1\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Age = (SELECT max( T23.Age) FROM singer AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the id of concerts that have singers with the maximum age?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.concert_ID = (SELECT max( T23.concert_ID) FROM singer_in_concert AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the singer who was in the concert with the highest id?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Year FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Highest = (SELECT max( T23.Highest) FROM stadium AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the year of the concert held in the stadium with the highest level.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Age = (SELECT max( T23.Age) FROM singer AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the IDs of singers who are the oldest in the concerts?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Average, T2.Theme FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID JOIN singer_in_concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.concert_ID = 3 and T2.Stadium_ID = \"1\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What is the average rating of the concerts held in stadium 1 and what are their themes?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Theme, T2.Name FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID JOIN singer_in_concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T3.concert_ID = 6 and T2.Highest = 1125",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What is the theme and name of the stadium where the singer has the concert with id 6 and the highest level is 1125?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_Name, T2.Location FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID JOIN singer_in_concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T3.concert_ID = 6 and T2.Capacity = 10104",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What is the name of the concert and the location of the stadium that can hold 10104 people, and which has a singer in it with the id 6?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Theme, T2.Singer_ID FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID JOIN singer AS T3 ON T2.Singer_ID = T3.Singer_ID WHERE T3.Country = \"Netherlands\" and T2.concert_ID = 1",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the themes and ids of singers in the concert with id 1 and the country Netherlands?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Year, T2.concert_ID FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID JOIN singer AS T3 ON T2.Singer_ID = T3.Singer_ID WHERE T3.Song_Name = \"Love\" and T2.Singer_ID = \"5\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the years and ids of concerts with the singer whose song name is \"Love\" and the singer id is \"5\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Country, T2.concert_ID FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.Year = \"2014\" and T2.Singer_ID = \"3\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the country and the concert id of the singer with id 3 who performed in a concert with year 2014?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Capacity, T2.Theme FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID JOIN singer_in_concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.Singer_ID = \"5\" and T2.Stadium_ID = \"1\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the capacity and theme of the stadium where the singer with id 5 performed and the stadium id is 1.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID, T2.concert_Name FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID JOIN stadium AS T3 ON T2.Stadium_ID = T3.Stadium_ID WHERE T3.Stadium_ID = 5 and T2.Year = \"2014\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the id, name of concerts at stadium with id 5 and held in 2014?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Is_male FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID = \"2\" GROUP BY T1.Is_male  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the gender of the singer who was in the most concerts?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.concert_ID = 4 GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the name of the singer who was in the concert with the highest number of singers?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.Theme = \"Party All Night\" GROUP BY T1.Singer_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the singer who performed in the most concerts with theme \"Party All Night\".",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Stadium_ID FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Location = \"Brechin City\" GROUP BY T1.Stadium_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the id of the stadium where the most concerts are held?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Is_male = \"F\" GROUP BY T1.concert_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the concert with the most female singers.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.concert_ID = 6 GROUP BY T1.Singer_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the id of the singer who performed in the concert with id 6?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Is_male = \"F\" GROUP BY T1.Singer_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the singer who was in the concert the most times and who is male.",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID = \"10\" GROUP BY T1.Location  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the location of the stadium that held the most concerts?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1        EXCEPT SELECT T2.Singer_ID FROM singer AS T2 WHERE T2.Song_Name = \"Dangerous\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of singers who have not sung the song \"Dangerous\"?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1        EXCEPT SELECT T2.concert_ID FROM singer_in_concert AS T2 WHERE T2.Singer_ID = \"6\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the concert ids that do not have the singer with id 6?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.concert_ID FROM singer_in_concert AS T1        EXCEPT SELECT T2.concert_ID FROM singer_in_concert AS T2 WHERE T2.Singer_ID = \"3\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the concert ids that do not have the singer with id 3?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Singer_ID FROM singer AS T1        EXCEPT SELECT T2.Singer_ID FROM singer AS T2 WHERE T2.Song_release_year = \"2013\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of singers who did not release any song in 2013?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Capacity FROM stadium AS T1        EXCEPT SELECT T2.Capacity FROM stadium AS T2 WHERE T2.Stadium_ID = 6",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the capacity of stadiums that do not have the stadium with id 6?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.Name FROM singer AS T1        EXCEPT SELECT T2.Name FROM singer AS T2 WHERE T2.Singer_ID = 1",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of singers who are not associated with singer 1?",
    "db_id": "concert_singer"
  },
  {
    "query": "SELECT T1.birth_date FROM players AS T1 WHERE T1.country_code = \"THA\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the birth dates of players whose country code is \"THA\".",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_id FROM matches AS T1 WHERE T1.tourney_date = \"20161024\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the id of the loser for all the matches held on October 24, 2016.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_seed FROM matches AS T1 WHERE T1.minutes = 164",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the seed of the loser of the match that lasted for 164 minutes?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.country_code FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.round = \"SF\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the country codes of the players who participated in the \"SF\" round matches?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.best_of FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.hand = \"L\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the best of matches where the winner is played by a player with hand L.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.ranking_date = \"20030929\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the first names of the players who were ranked on the date \"20030929\"?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.winner_hand FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.birth_date = \"19470524\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the winner hands of the matches in which the player with birth date \"19470524\" participated.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_date FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.country_code = \"ANT\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the dates of the rankings in which players from country Antigua and Barbuda are included?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.first_name = \"Audra\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the rankings of the player with the first name \"Audra\"?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_name, count(*) FROM matches AS T1  GROUP BY T1.loser_name",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the name of losers and the number of matches they lost.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.winner_rank, count(*) FROM matches AS T1  GROUP BY T1.winner_rank",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all winner ranks and the number of matches they won.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.birth_date, count(*) FROM players AS T1  GROUP BY T1.birth_date",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all birth dates and the number of players born on each date.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.round, count(*) FROM matches AS T1  GROUP BY T1.round",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all round of matches and the number of matches in each round.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_date, count(*) FROM rankings AS T1  GROUP BY T1.ranking_date",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the ranking dates and the number of papers that are ranked on each date.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tours, count(*) FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.tours",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show all tours and the number of players who got rank in each tour.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.hand, count(*) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id  GROUP BY T1.hand",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the hands of players and the number of matches they win.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.best_of, count(*) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id  GROUP BY T1.best_of",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the best of each match and the number of players involved.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.player_id, count(*) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id  GROUP BY T1.player_id",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the id and the number of matches of players.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT count(*) FROM players AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many players are there?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.country_code, T1.player_id FROM players AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the country codes and player ids of all players?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.player_id, T1.ranking_date FROM rankings AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List all player ids and ranking dates for all rankings.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_ht, T1.winner_seed FROM matches AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show the loser height and winner seed of matches.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking, T2.first_name FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show all rankings and the first names of the players.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking, T2.player_id FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show all rankings and the id of the players.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tours, T2.first_name FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show all tours and the first names of players who are on the top 100 list.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tours, T2.country_code FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show all tours and the countries of the players.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.hand, T2.ranking FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the hands of the players and their rankings?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.last_name, T2.loser_entry FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show the last names of players and the loser entries of matches they were in.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_points, T1.player_id FROM rankings AS T1 WHERE T1.tours = 10",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the ranking points and player id of the top 10 player in tour 10?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.winner_rank, T1.winner_ioc FROM matches AS T1 WHERE T1.loser_hand = \"L\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the winner rank and institution of origin for the losers whose hand is \"L\"?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_date, T1.ranking_points FROM rankings AS T1 WHERE T1.player_id = 201537",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "When was the player with id 201537 ranked, and with what points?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking, T1.tours FROM rankings AS T1 WHERE T1.ranking_date = \"20050509\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the rankings and tours on May 9, 2005?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.hand, T1.country_code FROM players AS T1 WHERE T1.birth_date = \"19560419\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the hand and country code of the player who was born on April 19, 1956?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tourney_date, T1.winner_rank_points FROM matches AS T1 WHERE T1.loser_hand = \"L\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the date and rank points of the loser hand for all matches with the letter \"L\".",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.player_id, T1.first_name FROM players AS T1 WHERE T1.last_name = \"Seles\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the id and first name of all players whose last name is Seles?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.player_id FROM rankings AS T1  GROUP BY T1.player_id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the id of the player with the most rankings?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.first_name FROM players AS T1  GROUP BY T1.first_name  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the first name of the player who was listed the most times?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_date FROM rankings AS T1  GROUP BY T1.ranking_date  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the date of the ranking with the most number of schools?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.hand FROM players AS T1  GROUP BY T1.hand  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the most common hand among players?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT count(*) FROM matches AS T1 WHERE T1.tourney_id = \"2017-M024\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many matches are in the tournament with id \"2017-M024\"?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT count(*) FROM matches AS T1 WHERE T1.winner_name = \"Garbine Muguruza\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many matches does the winner name \"Garbine Muguruza\" have?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT count(*) FROM rankings AS T1 WHERE T1.ranking_points = 247",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many students have 247 points on the ranking?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT count(*) FROM matches AS T1 WHERE T1.loser_name = \"Venus Williams\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many matches has the tennis player Venus Williams lost?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking FROM rankings AS T1    ORDER BY T1.ranking_date DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the ranking of the most recent conference?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_rank_points FROM matches AS T1    ORDER BY T1.winner_rank DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the loser rank points of the winner with the highest rank?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking FROM rankings AS T1    ORDER BY T1.ranking_points DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the ranking of the institution with the highest ranking points?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking FROM rankings AS T1    ORDER BY T1.player_id DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the ranking of the player with the largest id?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_points FROM rankings AS T1    ORDER BY T1.ranking DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the points of the ranking with the lowest number?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tourney_date FROM matches AS T1    ORDER BY T1.winner_rank DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the date of the highest ranked winner of any tournament?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_date FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id    ORDER BY T2.birth_date DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the date of the highest ranking player?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.winner_id FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id    ORDER BY T2.birth_date DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the id of the oldest player who has won a match.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_name FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id    ORDER BY T2.birth_date DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the oldest player who has ever been a winner?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.player_id FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id    ORDER BY T2.winner_seed DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the player who won the most matches?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.player_id FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id    ORDER BY T2.birth_date ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the oldest player?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.round FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id    ORDER BY T2.birth_date ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the round of the first player?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.player_id FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id    ORDER BY T2.tours ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the player with the highest ranking?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id    ORDER BY T2.birth_date ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the ranking of the oldest player?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_rank, T1.loser_entry FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id    ORDER BY T2.birth_date DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the rank and entry of the player who was the oldest when he first became the winner of a match?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.first_name, T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id    ORDER BY T2.winner_age DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the first name and birth date of the player who was oldest when he won a match?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.country_code, T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id    ORDER BY T2.ranking DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the country code and last name of the top-ranked player?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.player_id) FROM players AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different players are there?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.tours) FROM rankings AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different rankings exist across all tours?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.ranking_date) FROM rankings AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct dates do the rankings have?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.loser_rank_points) FROM matches AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct loser ranks are there in the matches?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.last_name) FROM players AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different last names are there in total?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.loser_age) FROM matches AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct ages are listed for losers?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT avg( T1.winner_id) FROM matches AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average id of the winner of the matches?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT avg( T1.winner_ht) FROM matches AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average height of winners in matches?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT avg( T1.loser_age) FROM matches AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average loser age of the matches?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT avg( T1.player_id) FROM rankings AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average player id for all the rankings?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT avg( T1.ranking) FROM rankings AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average ranking across all the schools?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT avg( T1.match_num) FROM matches AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average number of matches in a school year?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT avg( T1.loser_rank) FROM matches AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average loser rank of matches?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.winner_ioc FROM matches AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Show all winner iocs of matches.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.player_id FROM rankings AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "WHERE rankings.ranking  =  1 ->What are the ids of the players with ranking 1?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_ht FROM matches AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Show the height of losers in matches.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tours FROM rankings AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Show all tours in the rankings.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.player_id FROM players AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the ids of all players?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.winner_id FROM matches AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the id of winners of matches?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT T1.player_id FROM rankings AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct player ids that have rankings?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT T1.loser_age FROM matches AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct ages of losers?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT T1.winner_age FROM matches AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Return the distinct winner ages of matches.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT T1.hand FROM players AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct hands of the players?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.player_id FROM players AS T1     ORDER BY T1.birth_date ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the player ids in ascending order of birth date.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.winner_hand FROM matches AS T1     ORDER BY T1.loser_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the winner hands of matches in ascending order of the loser id.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.hand FROM players AS T1     ORDER BY T1.birth_date ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the hands of players in ascending order of their birth date.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.winner_rank_points FROM matches AS T1     ORDER BY T1.loser_seed ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the winner rank points of matches in ascending order of the loser seed.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_points FROM rankings AS T1     ORDER BY T1.player_id ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the points of players in ascending order of player id.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.winner_rank_points FROM matches AS T1     ORDER BY T1.winner_age DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the winner rank points of matches in descending order of the winner's age.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_name FROM matches AS T1     ORDER BY T1.loser_seed DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of losers in ascending order of their seeds.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.hand FROM players AS T1     ORDER BY T1.player_id DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List all players in descending order of player id.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.match_num FROM matches AS T1     ORDER BY T1.loser_seed DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the match numbers of the losers in descending order of seed.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.hand FROM players AS T1     ORDER BY T1.birth_date DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List all players in descending order of their birth date.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_points FROM rankings AS T1     ORDER BY T1.ranking DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the points of all rankings in descending order.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.player_id FROM rankings AS T1     ORDER BY T1.tours DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the id of players in descending order of number of tours.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_points, T1.player_id FROM rankings AS T1     ORDER BY T1.player_id ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the ranking points and ids of players in ascending order of player ids.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_ioc, T1.loser_rank_points FROM matches AS T1     ORDER BY T1.loser_rank_points ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the loser IOCs and loser rank points of matches in ascending order of rank points.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_date, T1.ranking_points FROM rankings AS T1     ORDER BY T1.ranking_points ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the ranking dates and points of all rankings in ascending order of points.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking, T1.ranking_date FROM rankings AS T1     ORDER BY T1.ranking_date ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the ranking dates and the rankings for all colleges in ascending order of date.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.country_code, T1.last_name FROM players AS T1     ORDER BY T1.last_name ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the country codes and last names of players?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.country_code, T1.first_name FROM players AS T1     ORDER BY T1.first_name ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the country codes and first names of players?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_name, T1.winner_hand FROM matches AS T1     ORDER BY T1.winner_hand ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the names of losers and the hands of winners in ascending order of winner hands.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.player_id, T1.ranking_date FROM rankings AS T1     ORDER BY T1.ranking_date ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the player ids and dates for the rankings in ascending order of dates.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tourney_date FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id WHERE T2.player_id = 200184 and T3.ranking = 69",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the dates of the tournaments in which player with id 200184 got the ranking of 69?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tourney_level FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id WHERE T2.hand = \"U\" and T3.ranking = 220",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the tournament levels of the matches in which the player with hand U has won and the ranking of the player is 220?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_ioc FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id WHERE T2.player_id = 200128 and T3.ranking = 165",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the loser io for the match where the player with id 200128 has ranking 165.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_ht FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id WHERE T2.player_id = 200643 and T3.ranking_date = \"20080602\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the height of the loser of the player with id 200643 and ranking date \"20080602\".",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.player_id FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.country_code = \"SMR\" or T2.country_code = \"TUR\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the id of the players from Sierra Leone or Turkey?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.winner_rank FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.birth_date = \"19680805\" or T2.birth_date = \"19760724\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the winner rank of the matches in which the player with birth date \"19680805\" or \"19760724\" played.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.round FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.hand = \"R\" or T2.hand = \"L\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the round of matches for players whose hand is \"R\" or \"L\".",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_seed FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.birth_date = \"19461218\" or T2.birth_date = \"19570517\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the loser seeds of the matches where one of the players was born in 19461218 or in 19570517.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_date FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.last_name = \"Birioukova\" or T2.last_name = \"Krantzcke\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the dates of the rankings in which the player with last name Birioukova or Krantzcke was included?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.winner_entry FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.birth_date = \"19760420\" or T2.birth_date = \"19750714\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the entry of matches whose winner is \"19760420\" or \"19750714\".",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tours FROM rankings AS T1 WHERE T1.ranking_date = \"20020513\" and T1.player_id = 201599",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the rankings of the player with id 201599 on the date of May 13, 2002?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tourney_date FROM matches AS T1 WHERE T1.best_of = 3 and T1.draw_size = 4",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the dates of the matches with best of 3 and draw size 4?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tourney_date FROM matches AS T1 WHERE T1.year = 2013 and T1.tourney_id = \"2017-0804\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the dates of the matches of the tournament with id \"2017-0804\" in year 2013?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.birth_date FROM players AS T1 WHERE T1.first_name = \"Kristien\" and T1.country_code = \"BEN\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the birth dates of all players whose first name is \"Kristien\" and whose country code is \"BEN\"?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking FROM rankings AS T1 WHERE T1.ranking_points = 987 and T1.ranking_date = \"20130909\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the rankings of the movie with score 987 and released on Sep 9, 2013?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.ranking_points) FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T1.tours = 15 and T2.last_name = \"Baudone Furlan\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "Find the number of distinct rankings of the player with last name \"Baudone Furlan\" for tour 15.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.last_name) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T1.first_name = \"Gabriela\" and T2.score = \"6-7(10) 7-5 6-4\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct players have the last name \"Gabriela\" and played in the match with the score 6-7(10) 7-5 6-4?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.winner_hand) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.minutes = 93 and T2.last_name = \"Aubet\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "Find the number of distinct players who have won a hand in a match with duration 93 minutes and whose last name is \"Aubet\".",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.winner_rank) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_id = \"2016-540\" and T2.hand = \"R\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "Find the number of distinct players who have won with right hand in the tournament with id \"2016-540\".",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_age FROM matches AS T1 WHERE T1.loser_ioc = \"ITA\" or T1.winner_id = 201320",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ages of the losers who played in matches where the loser's ioc is \"ITA\" or the winner's id is 201320?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.birth_date FROM players AS T1 WHERE T1.country_code = \"SCG\" or T1.hand = \"L\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the birth dates of players whose country code is \"SCG\" or whose hand is \"L\".",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_points FROM rankings AS T1 WHERE T1.ranking_date = \"20150511\" or T1.player_id = 204413",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ranking points of the player with id 204413 or the ranking with date \"20150511\"?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.player_id FROM rankings AS T1 WHERE T1.ranking = 298 or T1.ranking_points = 592",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the id of players who have ranking 298 or 592 points?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.surface FROM matches AS T1 WHERE T1.winner_ioc = \"UKR\" or T1.tourney_id = \"2017-0703\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the surface of the matches whose winner ioc is \"UKR\" or the tournament id is \"2017-0703\".",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.best_of FROM matches AS T1 WHERE T1.loser_rank = 37 or T1.loser_age = 22.9869952088",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the best of matches where the loser's rank is 37 or the loser's age is 22.9869952088.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT count(*) FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.hand = \"R\" and T2.player_id = 200910",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many players have hand \"R\" and id 200910?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT count(*) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.last_name = \"Lauteslager\" and T2.player_id = 200317",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many matches has the player with last name Lauteslager and id 200317 won?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT count(*) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.loser_rank_points = 4865 and T2.winner_seed = 8",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many players have the rank points 4865 and the seed is 8 have lost the match?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT count(*) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.birth_date = \"19610608\" and T2.hand = \"U\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the number of matches the player with birth date \"19610608\" and hand \"U\" has won.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT count(*) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.loser_seed = 16 and T2.winner_rank_points = 5535",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many players have lost a match with seed 16 and have rank points 5535?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_hand FROM matches AS T1 WHERE T1.loser_age != 30.2313483915",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the hands played by losers younger than 30 years old?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_points FROM rankings AS T1 WHERE T1.tours != 41",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ranking points of the tour with id 41?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.last_name FROM players AS T1 WHERE T1.player_id != 200294",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the last names of players with id smaller than 200294?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.country_code FROM players AS T1 WHERE T1.first_name != \"Sheila\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the country codes of all players whose first name is not \"Sheila\"?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tours FROM rankings AS T1 WHERE T1.ranking != 732",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of tours that have a ranking different from 732?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_date FROM rankings AS T1 WHERE T1.ranking_points != 556",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the dates of the rankings whose points are not 556?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tourney_name FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.country_code != \"MRN\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of tournaments that have players from country code \"MRN\"?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tours FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.country_code != \"UZB\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the rankings of players from countries other than UZB?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.winner_entry FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.country_code != \"SCG\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the entries of matches whose winner does not have the country code \"SCG\"?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_points FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.birth_date != \"19560325\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ranking points of the players whose birth date is not \"19560325\"?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.ranking_date != \"20050613\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the country codes of players whose rankings were not released before June 13, 2005?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.player_id FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.birth_date != \"19650321\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of the players whose birth date is not \"19650321\"?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT T1.winner_name FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.birth_date = \"19621009\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the names of players who were born on October 9, 1962.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT T1.loser_name FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.first_name = \"Elna\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct loser names of the matches whose winner has the first name \"Elna\".",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT T1.country_code FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.winner_ht = 172",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct country codes of the players who won a match with height 172?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.ranking_date = \"20070924\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the first names of the players who were ranked on the date \"20070924\".",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT T1.minutes FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.last_name = \"Weisenberger\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the minutes of the matches in which the players with the last name \"Weisenberger\" participated.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.tours) FROM rankings AS T1 WHERE T1.ranking_points = 974",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the number of distinct tours that have ranking points of 974.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.ranking) FROM rankings AS T1 WHERE T1.player_id = 201592",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the number of distinct rankings for the player with id 201592.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.ranking_date) FROM rankings AS T1 WHERE T1.player_id = 202685",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct ranking dates does the player with id 202685 have?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.hand) FROM players AS T1 WHERE T1.country_code = \"PHI\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many players from country code PHI are there?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.tours) FROM rankings AS T1 WHERE T1.ranking = 839",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the number of distinct tours that have ranking 839.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.best_of) FROM matches AS T1 WHERE T1.winner_hand = \"L\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the number of distinct matches that have the winner hand L.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.loser_ht) FROM matches AS T1 WHERE T1.tourney_name = \"Budapest\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the number of distinct losers in the tournament named Budapest.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tourney_level FROM matches AS T1 WHERE T1.loser_ht > 170",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the tournament levels of the losers in the matches where the loser's height is greater than 170?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_date FROM rankings AS T1 WHERE T1.ranking > 932",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the dates of rankings with rank greater than 932?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_seed FROM matches AS T1 WHERE T1.winner_ht > 173",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the seeds of the losers in the matches where the winner's height is greater than 173?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tours FROM rankings AS T1 WHERE T1.ranking_points > 306",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of tours with ranking points higher than 306?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.player_id FROM rankings AS T1 WHERE T1.ranking > 1016",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the ids of players with ranking higher than 1016?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.last_name FROM players AS T1 WHERE T1.birth_date > \"19461027\"",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the last names of all players born after October 27, 1946?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.last_name, T2.winner_hand, T3.ranking FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id JOIN rankings AS T3 ON T1.player_id = T3.player_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Show the last name for each player, the winner hand, and the ranking for each match.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.last_name, T2.player_id, T3.score FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id JOIN matches AS T3 ON T1.player_id = T3.winner_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the last names, id's and scores of the players who won the matches?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.country_code, T2.ranking_points, T3.loser_rank_points FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id JOIN matches AS T3 ON T1.player_id = T3.winner_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Show the country code, ranking points, and loser ranking points for all players.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tourney_id, T2.country_code, T3.ranking FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Show the id, country code, and ranking of each tournament winner.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.winner_ioc, T2.last_name, T3.player_id FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the winner IOCs, last names, and player IDs for the matches?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.winner_hand, T2.player_id, T3.ranking_points FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "For each match, show the winner hand, the id of the player, and the ranking points.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_date FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id     ORDER BY T2.birth_date ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the dates when players were born, ordered by their birth dates ascending.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.winner_age FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id     ORDER BY T2.player_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the ages of players who are winners of matches in ascending order of player id.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_ht FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id     ORDER BY T2.player_id ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "For each match, show the height of the loser in ascending order by the player id.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id     ORDER BY T2.tourney_date ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the first names of players who won matches in ascending order of tournament date?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.first_name FROM players AS T1 WHERE T1.player_id = 200506     INTERSECT SELECT T2.first_name FROM players AS T2 WHERE T2.player_id = 200420",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the first names of the players with player id 200506 and 200420?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking FROM rankings AS T1 WHERE T1.ranking_date = \"19880523\"     INTERSECT SELECT T2.ranking FROM rankings AS T2 WHERE T2.ranking_date = \"20040705\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Show the ranking that has been shared both on May 23, 1988 and July 7, 2004.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.hand FROM players AS T1 WHERE T1.first_name = \"Tish\"     INTERSECT SELECT T2.hand FROM players AS T2 WHERE T2.first_name = \"Li Yao\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the hands of players whose first name is \"Tish\" and \"Li Yao\".",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.player_id FROM players AS T1 WHERE T1.country_code = \"ZIM\"     INTERSECT SELECT T2.player_id FROM players AS T2 WHERE T2.country_code = \"ROU\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the ids of the players who are both from Zimbabwe and Romania?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT avg( T1.player_id) FROM players AS T1 WHERE T1.first_name = \"Rachel Ann\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of games played by players with the first name \"Rachel Ann\"?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT avg( T1.ranking_points) FROM rankings AS T1 WHERE T1.player_id = 202435",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average ranking points of the player with id 202435?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT avg( T1.ranking) FROM rankings AS T1 WHERE T1.ranking_date = \"20020923\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average ranking of the movies that were released on Sep 23, 2002?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.score FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.player_id = (SELECT max( T23.player_id) FROM players AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the score of the matches where the player with the highest id participated?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.ranking = (SELECT max( T23.ranking) FROM rankings AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the country codes of the players with the highest ranking?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tours FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.player_id = (SELECT max( T23.player_id) FROM players AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the rankings of the player with the highest rank?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.hand FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.loser_age = (SELECT max( T23.loser_age) FROM matches AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the players who have the oldest loser age and have played in the matches where the loser age is the maximum.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.hand FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.tours = (SELECT max( T23.tours) FROM rankings AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the hands of players who are on the maximum tour in any of the rankings.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_date, T2.last_name FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id JOIN matches AS T3 ON T2.player_id = T3.winner_id WHERE T3.winner_hand = \"L\" and T2.country_code = \"NZL\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the ranking dates, and the last names of the players who played the winner hand \"L\" and whose country code is \"NZL\" in the matches.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.birth_date, T2.round FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id JOIN rankings AS T3 ON T1.player_id = T3.player_id WHERE T3.ranking_date = \"20030120\" and T2.tourney_date = \"20170717\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the birth dates and the rounds of the players who were ranked on the 20th of January in 2003 and played in the tournament on July 17, 2017.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.match_num, T2.birth_date FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id WHERE T3.player_id = 206025 and T2.country_code = \"CHN\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the match number and birth date of the player with id 206025 and country code CHN.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_ioc FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.first_name = \"Xinyun\" GROUP BY T1.loser_ioc  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the loser IOC of the player with the first name \"Xinyun\".",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_points FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.player_id = 200509 GROUP BY T1.ranking_points  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the points of the ranking of the player with id 200509?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_points FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.player_id = 200233 GROUP BY T1.ranking_points  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the ranking points of the player with id 200233?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.winner_ht FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.last_name = \"Caceres\" GROUP BY T1.winner_ht  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the height of the winner with the last name \"Caceres\" who has participated in the most matches.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tours FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.player_id = 200793 GROUP BY T1.tours  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the ranking of the tour with the most appearances of player with id 200793?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_id FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.hand = \"R\" GROUP BY T1.loser_id  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the player who has the most matches with the loser who uses the hand R.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.loser_name FROM matches AS T1        EXCEPT SELECT T2.loser_name FROM matches AS T2 WHERE T2.draw_size = 32",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of losers of matches with draw size 32?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.ranking_date FROM rankings AS T1        EXCEPT SELECT T2.ranking_date FROM rankings AS T2 WHERE T2.ranking_points = 2762",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the dates on which the rankings do not have the movie with ranking points 2762.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.first_name FROM players AS T1        EXCEPT SELECT T2.first_name FROM players AS T2 WHERE T2.player_id = 200830",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the first names of all players except the one with id 200830?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.score FROM matches AS T1        EXCEPT SELECT T2.score FROM matches AS T2 WHERE T2.round = \"F\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the scores of matches that did not have any \"F\" round matches?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.tours FROM rankings AS T1        EXCEPT SELECT T2.tours FROM rankings AS T2 WHERE T2.ranking_points = 363",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the names of tours that are not ranked with the score of 363.",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.first_name FROM players AS T1        EXCEPT SELECT T2.first_name FROM players AS T2 WHERE T2.hand = \"U\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the first names of all players whose hand is not \"U\"?",
    "db_id": "wta_1"
  },
  {
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1 WHERE T1.Teacher_ID = 3",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of courses arranged by teacher with id 3?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1 WHERE T1.Grade = 4",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of courses with grade 4?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Grade FROM course_arrange AS T1 WHERE T1.Course_ID = 2",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the grade of the course with ID 2?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Staring_Date FROM course AS T1 WHERE T1.Course_ID = 2",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "When was the course with id 2 started?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course AS T1 WHERE T1.Course = \"Bible\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of courses with the course \"Bible\"?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Teacher_ID = 2",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of courses that are taught by teacher with id 2?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Grade = 5",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of teachers who arrange grade 5 courses?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID, count(*) FROM teacher AS T1  GROUP BY T1.Teacher_ID",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many teachers are there in total?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Age, count(*) FROM teacher AS T1  GROUP BY T1.Age",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all ages and the number of teachers at each age.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID, count(*) FROM course_arrange AS T1  GROUP BY T1.Teacher_ID",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many teachers are in charge of each course?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Hometown, count(*) FROM teacher AS T1  GROUP BY T1.Hometown",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all hometowns and the number of teachers in each hometown.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Name, count(*) FROM teacher AS T1  GROUP BY T1.Name",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the names of teachers and the number of students they have.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID, count(*) FROM course AS T1  GROUP BY T1.Course_ID",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all course ids and the number of courses with the same id.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Grade, count(*) FROM course_arrange AS T1  GROUP BY T1.Grade",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the grade and the number of courses for each grade.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID, count(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Teacher_ID",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many teachers are assigned to each course? List the id of the teacher and the number of courses he or she is in charge of.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID, count(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Teacher_ID",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many teachers are in each course arrange? List the id of each teacher and the number of courses he or she arranges.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID, count(*) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID  GROUP BY T1.Teacher_ID",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many teachers are in each course?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID, count(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Course_ID",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many teachers are assigned to each course?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Staring_Date, count(*) FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID  GROUP BY T1.Staring_Date",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the starting date of courses and the number of courses that are arranged on that date.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course, count(*) FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID  GROUP BY T1.Course",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show all courses and the number of arrangements they have.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Name, count(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the names of teachers and the number of courses they arrange.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT count(*) FROM course_arrange AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many courses are arranged?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID, T1.Staring_Date FROM course AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the ids and staring dates of courses?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Name, T1.Age FROM teacher AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the names and ages of teachers?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course, T1.Course_ID FROM course AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the names and ids of all courses?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID, T1.Course FROM course AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the ids and names of all courses?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Hometown, T1.Age FROM teacher AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "WHERE teacher.Name LIKE '%a%' ->What are the hometown and age of teachers whose names start with 'a'?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Hometown, T1.Teacher_ID FROM teacher AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the hometowns of all the teachers? Also return the id of the teacher.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID, T2.Teacher_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the id and teacher id of each course arranged?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Grade, T2.Course_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show all the grades and ids of courses.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Staring_Date, T2.Course_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show all starting dates and ids of courses.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course, T1.Staring_Date FROM course AS T1 WHERE T1.Course_ID = 2",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the course and staring date of the course with id 2?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course, T1.Staring_Date FROM course AS T1 WHERE T1.Course_ID = 5",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the name of the course with id 5 and when does it start?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID, T1.Grade FROM course_arrange AS T1 WHERE T1.Teacher_ID = 5",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the ids and grades of the courses arranged by the teacher with id 5?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Age, T1.Name FROM teacher AS T1 WHERE T1.Hometown = \"Bolton County Borough\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the ages and names of teachers who live in Bolton County Borough?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Age, T1.Name FROM teacher AS T1 WHERE T1.Hometown = \"Turton Urban District\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the ages and names of teachers whose hometown is \"Turton Urban District\"?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID, T1.Grade FROM course_arrange AS T1 WHERE T1.Course_ID = 10",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the id and grade of the teacher of the course with id 10?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID, T1.Course FROM course AS T1 WHERE T1.Staring_Date = \"7 May\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the ids and names of courses that start on May 7.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID, T1.Grade FROM course_arrange AS T1 WHERE T1.Course_ID = 2",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the IDs of teachers and the grades of the course with ID 2?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Hometown FROM teacher AS T1  GROUP BY T1.Hometown  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the hometown of the teacher who has the most students?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course FROM course AS T1  GROUP BY T1.Course  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the most popular course.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course AS T1  GROUP BY T1.Course_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the id of the course with the most students?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1  GROUP BY T1.Course_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the id of the course that has the most arrange times?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Name FROM teacher AS T1  GROUP BY T1.Name  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the name of the teacher who has the most students?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1  GROUP BY T1.Teacher_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the id of the teacher who arranged the most courses?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT count(*) FROM course_arrange AS T1 WHERE T1.Grade = 5",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many courses have grade 5 arranges?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT count(*) FROM teacher AS T1 WHERE T1.Hometown = \"Blackrod Urban District\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many teachers are from Blackrod Urban District?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT count(*) FROM course_arrange AS T1 WHERE T1.Grade = 4",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many courses have grade 4 are arranged?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Grade FROM course_arrange AS T1    ORDER BY T1.Teacher_ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the grade of the teacher with the largest ID?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1    ORDER BY T1.Course_ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the teacher of the course with the largest id?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Staring_Date FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID    ORDER BY T2.Grade DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the starting date of the highest-graded course?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Grade FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID    ORDER BY T2.Teacher_ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the grade of the teacher with the highest id?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID    ORDER BY T2.Course_ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the teacher who arranged the course with the largest id?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Age FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID    ORDER BY T2.Grade DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the age of the teacher who arranged the highest grade course?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Age FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID    ORDER BY T2.Course_ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the age of the teacher who arranged the course with the greatest ID?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID    ORDER BY T2.Course_ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the course with the highest arrange number?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Staring_Date FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID    ORDER BY T2.Grade ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the starting date of the highest graded course?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Staring_Date FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID    ORDER BY T2.Course_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the starting date of the first course arranged?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Age FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID    ORDER BY T2.Course_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the age of the teacher who arranged the course with the smallest integer?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID    ORDER BY T2.Course_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the teacher of the first course?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Hometown, T1.Age FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID    ORDER BY T2.Teacher_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the hometown and age of the teacher who arranged the most courses?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Grade, T1.Course_ID FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID    ORDER BY T2.Teacher_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the grade and id of the teacher who arranged the highest grade course?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course, T1.Staring_Date FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID    ORDER BY T2.Teacher_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the course and its starting date that is arranged by the teacher with the greatest id?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID, T1.Staring_Date FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID    ORDER BY T2.Teacher_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id and starting date of the course arranged by the teacher with the greatest id?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Hometown, T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID    ORDER BY T2.Teacher_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the hometown and name of the teacher who arranged the most courses?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Teacher_ID) FROM teacher AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different teachers are there?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Age) FROM teacher AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct ages do teachers have?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM teacher AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different teachers are there?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Course_ID) FROM course AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different courses exist?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Staring_Date) FROM course AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct starting dates are there for courses?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Hometown) FROM teacher AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct hometowns do teachers have?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT avg( T1.Teacher_ID) FROM course_arrange AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average teacher id of the courses arranged?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT avg( T1.Course_ID) FROM course AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average course ID?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Staring_Date FROM course AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "When are the courses started?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM teacher AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are all teacher ids?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the ids of courses arranged?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Hometown FROM teacher AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "WHERE teacher.Name LIKE '%a%' ->ORDER BY teacher.Hometown ->LIMIT 1 ->What is the hometown of the teacher whose name contains 'a'?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the ids of teachers who arrange courses?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course FROM course AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are all courses?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Name FROM teacher AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the names of all teachers?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Age FROM teacher AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the ages of the teachers?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Grade FROM course_arrange AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the grades of courses arranged?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT T1.Teacher_ID FROM course_arrange AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct teacher ids who arrange courses?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT T1.Course_ID FROM course AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are all the distinct course ids?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT T1.Course_ID FROM course_arrange AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct course ids that have been arranged?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT T1.Grade FROM course_arrange AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct grades of the courses arranged?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT T1.Staring_Date FROM course AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct starting dates of courses?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT T1.Teacher_ID FROM teacher AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct ids of teachers?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1     ORDER BY T1.Course_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the teacher ids of courses arranged in ascending order of course id.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1     ORDER BY T1.Grade ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the ids of courses arranged in ascending order of grade.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Age FROM teacher AS T1     ORDER BY T1.Teacher_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the ages of teachers? Sort the results in ascending order of teacher ID.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course FROM course AS T1     ORDER BY T1.Course_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List all courses in ascending order of course ID.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course FROM course AS T1     ORDER BY T1.Course_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List all courses in descending order of course ID.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Grade FROM course_arrange AS T1     ORDER BY T1.Course_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the grades of courses in descending order of course ID.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Age FROM teacher AS T1     ORDER BY T1.Teacher_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the ages of teachers, ordered by their IDs from greatest to least?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1     ORDER BY T1.Teacher_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the ids of courses arranged by their teachers in descending order of teacher id.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID, T1.Course FROM course AS T1     ORDER BY T1.Course ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the course IDs and names in ascending order.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course, T1.Course_ID FROM course AS T1     ORDER BY T1.Course_ID ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List all courses and their ids in ascending order of ids.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course, T1.Staring_Date FROM course AS T1     ORDER BY T1.Staring_Date ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the courses and their staring dates in ascending order.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Name, T1.Age FROM teacher AS T1     ORDER BY T1.Age ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the names and ages of teachers in ascending order of age.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID, T1.Name FROM teacher AS T1     ORDER BY T1.Name ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the IDs and names of teachers in ascending order of name.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID, T1.Grade FROM course_arrange AS T1     ORDER BY T1.Grade ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the teacher ids and grades of courses in ascending order of grade.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Age, T1.Name FROM teacher AS T1     ORDER BY T1.Name ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the ages and names of teachers, ordered alphabetically by name?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID = T3.Course_ID WHERE T2.Hometown = \"Turton Urban District\" and T3.Staring_Date = \"10 May\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the ids of teachers who teach the course that starts on May 10 and whose hometown is Turton Urban District.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T2.Teacher_ID = 7 and T3.Hometown = \"Blackrod Urban District\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the ids of the courses arranged by the teacher whose hometown is Blackrod Urban District?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Staring_Date FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T2.Course_ID = 10 and T3.Age = \"45\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the starting date of the course that is arranged by a teacher whose age is 45.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID = T3.Course_ID WHERE T2.Name = \"Gustaaf Deloor\" and T3.Staring_Date = \"17 May\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the id of the teachers who are in charge of the courses that start on May 17 and have Gustaaf Deloor as their teacher.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T2.Teacher_ID = 6 and T3.Course_ID = 1",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What is the name of the teacher who arranges course 1 and has teacher ID 6?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Staring_Date FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Grade = 7 or T2.Grade = 3",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the starting dates of courses with grade 7 or 3?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Grade = 7 or T2.Grade = 4",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the ids of courses that have arranges with grade 7 or 4?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Staring_Date = \"7 May\" or T2.Staring_Date = \"9 May\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the id of the courses that start on 7 May or 9 May?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course = \"History\" or T2.Course = \"French\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the ids of the courses that are arranged with the course \"History\" or \"French\".",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Grade = 5 or T2.Grade = 4",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the ids of courses with arranges of grade 5 or 4?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM teacher AS T1 WHERE T1.Hometown = \"Blackrod Urban District\" and T1.Age = \"41\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the ids of teachers who were born in Blackrod Urban District and are 41 years old.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 WHERE T1.Grade = 4 and T1.Course_ID = 2",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ids of teachers who arrange course with grade 4 and course id 2?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 WHERE T1.Grade = 7 and T1.Course_ID = 5",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ids of teachers who arrange course with grade 7 and course id 5?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course FROM course AS T1 WHERE T1.Staring_Date = \"17 May\" and T1.Course_ID = 10",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the courses that start on May 17 and have ID 10?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Age FROM teacher AS T1 WHERE T1.Name = \"Vicente Carretero\" and T1.Hometown = \"Bolton County Borough\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the age of the teacher whose name is Vicente Carretero and whose hometown is Bolton County Borough?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course AS T1 WHERE T1.Course = \"Math\" and T1.Staring_Date = \"11 May\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the ids of courses that start on May 11?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Age) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T1.Teacher_ID = 5 and T2.Grade = 3",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct teachers are in charge of the grade 3 courses with teacher id 5?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Grade) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T1.Teacher_ID = 2 and T2.Name = \"Kearsley Brown\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct grades are arranged by the teacher with id 2 and name \"Kearsley Brown\"?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Course) FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T1.Staring_Date = \"14 May\" and T2.Grade = 4",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct courses have the starting date of 14 May and grade 4?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Course_ID) FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T1.Course = \"Music\" and T2.Grade = 5",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many students are taking Music in grade 5?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Teacher_ID) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T1.Age = \"29\" and T2.Grade = 4",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct teachers are in the age of 29 and arrange the grade 4 courses?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Teacher_ID) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T1.Grade = 7 and T2.Name = \"Vicente Carretero\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct teachers arrange courses with grade 7 and teacher \"Vicente Carretero\"?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Hometown) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T1.Teacher_ID = 7 and T2.Grade = 4",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct hometowns are associated with the teacher with id 7 and the grade 4 course arrange?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Age FROM teacher AS T1 WHERE T1.Name = \"Lucy Wong\" or T1.Teacher_ID = 6",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the age of the teacher with the name \"Lucy Wong\" or whose teacher ID is 6?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Grade FROM course_arrange AS T1 WHERE T1.Course_ID = 5 or T1.Teacher_ID = 7",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the grades of the course or the teacher with id 5 or 7?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT count(*) FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course_ID = 4 and T2.Grade = 3",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many courses have grade 3 are arranged in course with id 4?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT count(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID = 2 and T2.Age = \"26\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many courses are arranged by the teacher with id 2 and age 26?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT count(*) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Staring_Date = \"13 May\" and T2.Course_ID = 8",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many courses are arranged on the starting date of \"13 May\" and have the id 8?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT count(*) FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Teacher_ID = 5 and T2.Grade = 7",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many courses are arranged by teacher with id 5 and grade 7?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT count(*) FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Teacher_ID = 7 and T2.Course_ID = 5",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many students are in the course that has the teacher id 7 and the course id 5?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 WHERE T1.Grade != 1",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of teachers who do not give grade 1?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 WHERE T1.Course_ID != 10",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of teachers who are arranging courses other than course 10?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Staring_Date FROM course AS T1 WHERE T1.Course != \"Music\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the starting dates of courses that are not Music?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Age FROM teacher AS T1 WHERE T1.Hometown != \"Farnworth Municipal Borough\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ages of the teachers whose hometown is not \"Farnworth Municipal Borough\"?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course FROM course AS T1 WHERE T1.Staring_Date != \"9 May\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the courses that do not start on 9 May?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Grade != 7",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of teachers who arrange courses with grade other than 7?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course_ID != 4",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of courses that are not arranged in room 4?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Grade != 7",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of courses that have a grade other than 7?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Staring_Date FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course_ID != 2",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the starting dates of courses that are not arranged in course 2?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course_ID != 2",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of courses that are not arranged in course with id 2?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT T1.Course_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Teacher_ID = 7",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct courses arranged by teacher with id 7?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT T1.Grade FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course_ID = 6",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct grades of the arrangement of course with id 6?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT T1.Course_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course = \"Science\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct ids of the courses that are arranged by the course with the course name \"Science\".",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID = 5",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of the teachers who arranged course with teacher id 5?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT T1.Teacher_ID FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Course_ID = 4",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct ids of the teachers who arranged course with id 4?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Course_ID) FROM course_arrange AS T1 WHERE T1.Teacher_ID = 6",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many courses are arranged by teacher with id 6?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Course) FROM course AS T1 WHERE T1.Course_ID = 3",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many different courses have the id 3?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM teacher AS T1 WHERE T1.Hometown = \"Horwich Urban District\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many teachers have hometown Horwich Urban District?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM teacher AS T1 WHERE T1.Hometown = \"Bolton County Borough\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many teachers have hometown \"Bolton County Borough\"?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM teacher AS T1 WHERE T1.Age = \"26\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the number of teachers who are 26 years old.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Teacher_ID) FROM teacher AS T1 WHERE T1.Hometown = \"Farnworth Municipal Borough\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many teachers have hometown Farnworth Municipal Borough?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Course_ID) FROM course AS T1 WHERE T1.Course = \"Language Arts\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many students are in the Language Arts course?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Age) FROM teacher AS T1 WHERE T1.Name = \"Anne Walker\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct ages do the teachers called Anne Walker have?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Name FROM teacher AS T1 WHERE T1.Teacher_ID > 4",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of teachers with IDs larger than 4?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM course_arrange AS T1 WHERE T1.Course_ID > 2",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the ids of teachers who arrange courses with ids bigger than 2?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Name FROM teacher AS T1 WHERE T1.Teacher_ID > 2",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of all teachers with an ID greater than 2?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course FROM course AS T1 WHERE T1.Course_ID > 5",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of courses with ids larger than 5?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Name FROM teacher AS T1 WHERE T1.Teacher_ID > 7",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of teachers with IDs larger than 7?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID, T2.Course_ID, T3.Age FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the id, course id and age of the teachers who arranged the courses?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Name, T2.Course_ID, T3.Staring_Date FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the names of teachers, the course IDs of arranges, and the staring dates of courses?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID, T2.Teacher_ID, T3.Age FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the id, arrange teacher id and age of teachers who arrange courses?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Staring_Date, T2.Grade, T3.Hometown FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Show the starting date, grade, and hometown for each course arranged by each teacher.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID     ORDER BY T2.Course_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the IDs of teachers who arranged courses in ascending order of course ID?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID     ORDER BY T2.Grade ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List all courses and their arrangements in ascending order of grade.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID     ORDER BY T2.Grade ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the course IDs arranged with the highest grade.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Staring_Date FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID     ORDER BY T2.Teacher_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Show the starting dates of courses arranged by teachers in ascending order.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID     ORDER BY T2.Grade ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of teachers who arranged courses with ascending grades?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID     ORDER BY T2.Teacher_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the id of courses arranged by their teachers in ascending order?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID     ORDER BY T2.Course_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List all courses and their arrange in ascending order of arrange id.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Name FROM teacher AS T1 WHERE T1.Hometown = \"Little Lever Urban District\"     INTERSECT SELECT T2.Name FROM teacher AS T2 WHERE T2.Hometown = \"Farnworth Municipal Borough\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the names of teachers who live in Little Lever but work in Farnworth?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Staring_Date FROM course AS T1 WHERE T1.Course_ID = 4     INTERSECT SELECT T2.Staring_Date FROM course AS T2 WHERE T2.Course_ID = 4",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the starting dates of courses that have two students enrolled.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1 WHERE T1.Teacher_ID = 7     INTERSECT SELECT T2.Course_ID FROM course_arrange AS T2 WHERE T2.Teacher_ID = 5",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the intersection of the courses arranged by teacher 7 and the courses arranged by teacher 5.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course AS T1 WHERE T1.Staring_Date = \"14 May\"     INTERSECT SELECT T2.Course_ID FROM course AS T2 WHERE T2.Staring_Date = \"15 May\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the ids of the courses that start on \"14 May\" and \"15 May\"?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT avg( T1.Grade) FROM course_arrange AS T1 WHERE T1.Course_ID = 5",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average grade of the courses arranged for the course with ID 5?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT avg( T1.Grade) FROM course_arrange AS T1 WHERE T1.Teacher_ID = 7",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average grade of the courses arranged by the teacher with ID 7?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT avg( T1.Course_ID) FROM course_arrange AS T1 WHERE T1.Teacher_ID = 7",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average arrange of courses with teacher id 7?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT avg( T1.Grade) FROM course_arrange AS T1 WHERE T1.Teacher_ID = 6",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average grade of the courses arranged by the teacher with ID 6?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT avg( T1.Course_ID) FROM course AS T1 WHERE T1.Staring_Date = \"13 May\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average course id of the courses that start on 13 May?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT avg( T1.Teacher_ID) FROM teacher AS T1 WHERE T1.Hometown = \"Turton Urban District\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average teacher id of teachers who have hometown \"Turton Urban District\"?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Grade = (SELECT max( T23.Grade) FROM course_arrange AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of courses with the highest grade arrangement?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID = (SELECT max( T23.Teacher_ID) FROM teacher AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the id of the course that has the greatest teacher.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Grade = (SELECT max( T23.Grade) FROM course_arrange AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the ids of the courses with the highest grade arrangement.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course_ID = (SELECT max( T23.Course_ID) FROM course_arrange AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of courses that have the highest arrange number?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Age FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID = (SELECT max( T23.Teacher_ID) FROM course_arrange AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the age of the oldest teacher who arranged any course?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Grade = (SELECT max( T23.Grade) FROM course_arrange AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the ids of the teachers who arranged the highest grade course.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID, T2.Teacher_ID FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID = T3.Course_ID WHERE T3.Course = \"Sports\" and T2.Hometown = \"Kearsley Urban District\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the id and teacher id of the courses arranged by the teachers whose hometown is \"Kearsley Urban District\" and the course is \"Sports\".",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID, T2.Staring_Date FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T3.Name = \"John Deloor\" and T2.Course = \"Math\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the starting date and the id of the teacher \"John Deloor\" who teaches the course \"Math\".",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID, T2.Course_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T3.Name = \"Joseph Huts\" and T2.Staring_Date = \"14 May\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the id and course id of the courses that are arranged by teacher \"Joseph Huts\" and start on \"14 May\".",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Staring_Date, T2.Teacher_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T3.Age = \"33\" and T2.Grade = 4",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the starting dates and teachers of courses that have teachers with age 33 and grade 4?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Course_ID, T2.Teacher_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T3.Hometown = \"Farnworth Municipal Borough\" and T2.Grade = 5",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the id and teacher id of the courses arranged by teachers whose hometown is Farnworth Municipal Borough and the grade is 5.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID, T2.Hometown FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID = T3.Course_ID WHERE T3.Course = \"Science\" and T2.Age = \"39\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the id, hometown of the teachers who arrange Science courses and are 39 years old.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Staring_Date FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Grade = 7 GROUP BY T1.Staring_Date  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the starting date of the course that is arranged with grade 7 the most number of times.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Grade FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course = \"Math\" GROUP BY T1.Grade  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the grade of the course \"Math\" is most often arranged?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Staring_Date FROM course AS T1        EXCEPT SELECT T2.Staring_Date FROM course AS T2 WHERE T2.Course_ID = 5",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the starting dates of courses that do not have the course with ID 5?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Age FROM teacher AS T1        EXCEPT SELECT T2.Age FROM teacher AS T2 WHERE T2.Name = \"Vicente Carretero\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the age of the teacher who is not Vicente Carretero?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Age FROM teacher AS T1        EXCEPT SELECT T2.Age FROM teacher AS T2 WHERE T2.Teacher_ID = 5",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ages of all the teachers except the one with id 5?",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Teacher_ID FROM teacher AS T1        EXCEPT SELECT T2.Teacher_ID FROM teacher AS T2 WHERE T2.Name = \"Joseph Huts\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the ids of teachers except Joseph Huts.",
    "db_id": "course_teach"
  },
  {
    "query": "SELECT T1.Age FROM employee AS T1 WHERE T1.Employee_ID = 1",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the age of the employee with employee id 1?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Is_full_time FROM hiring AS T1 WHERE T1.Employee_ID = 2",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the full time status of the employee with id 2?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Start_from FROM hiring AS T1 WHERE T1.Employee_ID = 5",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "When was the employee with ID 5 hired?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID FROM hiring AS T1 WHERE T1.Is_full_time = \"T\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the ids of shops that hire full time employees.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Bonus FROM evaluation AS T1 WHERE T1.Year_awarded = \"2018\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the bonus of the evaluations that were awarded in year 2018?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Name FROM shop AS T1 WHERE T1.District = \"Lahden Stadion\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of shops in the Lahden Stadion district?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Start_from FROM hiring AS T1 WHERE T1.Shop_ID = 5",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the starting dates of the hiring in shop 5?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Name = \"Phil Vickery\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the ids of the employees with the name \"Phil Vickery\".",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID = 1",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the shop id of the employee with id 1.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Shop_ID = 6",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of the employees who were hired in shop 6?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Year_awarded, count(*) FROM evaluation AS T1  GROUP BY T1.Year_awarded",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all years awarded and the number of papers awarded in that year.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Is_full_time, count(*) FROM hiring AS T1  GROUP BY T1.Is_full_time",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all full time hiring and the number of hires.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Bonus, count(*) FROM evaluation AS T1  GROUP BY T1.Bonus",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all bonuses and the number of evaluations that receive each bonus.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Name, count(*) FROM employee AS T1  GROUP BY T1.Name",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the names of employees and the number of employees with the same name.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.City, count(*) FROM employee AS T1  GROUP BY T1.City",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all cities and the number of employees in each city.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Number_products, count(*) FROM shop AS T1  GROUP BY T1.Number_products",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the number of products for each shop and the corresponding count.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Name, count(*) FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID  GROUP BY T1.Name",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the names of employees and the number of hires for each employee.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Name, count(*) FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.Name",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the names of shops and the number of scientists they hire.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.District, count(*) FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.District",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the different districts and the number of shops in each district.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID, count(*) FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID  GROUP BY T1.Employee_ID",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "How many employees have been evaluated by each employee id?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Location, count(*) FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.Location",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the locations of shops and the number of hires in each location.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Manager_name, count(*) FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.Manager_name",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the names of managers and the number of hires they made.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Year_awarded, count(*) FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID  GROUP BY T1.Year_awarded",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the year awarded and the number of employees for each year.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Start_from, count(*) FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.Start_from",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the start time of each hiring and the number of shops it has.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Bonus, count(*) FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID  GROUP BY T1.Bonus",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the bonus and the number of employees who received the bonus.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT count(*) FROM shop AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many shops are there?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT count(*) FROM evaluation AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many evaluations exist?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Start_from, T1.Is_full_time FROM hiring AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the start dates and full time status of hiring?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Year_awarded, T1.Bonus FROM evaluation AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all years awarded and bonuses for evaluation.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Name, T1.Shop_ID FROM shop AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the names and shop ids of all shops?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID, T1.Location FROM shop AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show all shop ids and locations.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID, T2.Number_products FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show all employee ids and the number of products in each shop.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Year_awarded, T2.Name FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show all years awarded and the names of employees.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID, T2.Is_full_time FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show all shop ids and whether they have a full time or not.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Bonus, T2.Name FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show the bonus and names of the employees.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Manager_name, T1.District FROM shop AS T1 WHERE T1.Name = \"FC KooTeePee\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the name and district of the shop named FC KooTeePee.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Year_awarded, T1.Bonus FROM evaluation AS T1 WHERE T1.Employee_ID = \"2\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the years awarded and bonuses of the employee with ID 2?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Age, T1.City FROM employee AS T1 WHERE T1.Name = \"Mark Regan\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the age and city of the employee whose name is Mark Regan?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Name, T1.Age FROM employee AS T1 WHERE T1.Employee_ID = 3",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What is the name and age of the employee with employee id 3?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Start_from FROM hiring AS T1  GROUP BY T1.Start_from  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the start date of the hiring with the most number of new hires.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID FROM shop AS T1  GROUP BY T1.Shop_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the id of the shop with most number of visits.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM employee AS T1  GROUP BY T1.Employee_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the id of the employee who has the most number of relations.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1  GROUP BY T1.Employee_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which employee has been evaluated the most number of times?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Is_full_time FROM hiring AS T1  GROUP BY T1.Is_full_time  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the most common full time hiring status?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.District FROM shop AS T1  GROUP BY T1.District  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Which district has the most shops?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Age FROM employee AS T1  GROUP BY T1.Age  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the oldest age of the employees?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT count(*) FROM employee AS T1 WHERE T1.Employee_ID = 1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "Count the number of employees who have Employee ID 1.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT count(*) FROM evaluation AS T1 WHERE T1.Employee_ID = \"4\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many evaluations does the employee with ID 4 have?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT count(*) FROM shop AS T1 WHERE T1.District = \"Arto Tolsa Areena\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many shops are there in the district Arto Tolsa Areena?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT count(*) FROM hiring AS T1 WHERE T1.Employee_ID = 1",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many hiring do the employee with id 1 have?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID FROM shop AS T1    ORDER BY T1.Number_products DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the shop that has the most products?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Name FROM shop AS T1    ORDER BY T1.Number_products DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the name of the shop that has the most products?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Start_from FROM hiring AS T1    ORDER BY T1.Shop_ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the start date of the hiring with the highest shop ID?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Location FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID    ORDER BY T2.Shop_ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Show the location of the shop that has the most number of hires.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID    ORDER BY T2.Number_products DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the id of the shop that has the most products.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Bonus FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Age DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the bonus of the oldest employee?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Start_from FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID    ORDER BY T2.Shop_ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the start date of the hiring with the highest shop id?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID    ORDER BY T2.Employee_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the shop that has the highest employee id?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Number_products FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID    ORDER BY T2.Shop_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the number of products at the shop with the smallest id?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Year_awarded FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Age ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the year awarded for the oldest employee?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Name FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Shop_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name of the employee who was hired at the shop with the smallest ID?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Age ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the oldest employee?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID, T1.Bonus FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Age DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the oldest employee and what is the bonus of that employee?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Name, T1.Age FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Bonus DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name and age of the employee who received the highest bonus?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Age, T1.Name FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Employee_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the age and name of the oldest employee who was hired?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.City, T1.Age FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Bonus DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the city and age of the employee who received the highest bonus?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.City, T1.Employee_ID FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Shop_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the city and employee id of the employee who was hired at the most distant shop from the headquarter?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Name, T1.City FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID    ORDER BY T2.Bonus DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the name and city of the employee who received the highest bonus?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Location) FROM shop AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct locations are there?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Year_awarded) FROM evaluation AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different years were awarded?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Number_products) FROM shop AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different products are sold in total?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Age) FROM employee AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct ages are listed for employees?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Employee_ID) FROM evaluation AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct employees have given evaluations?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Employee_ID) FROM employee AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different employees are there?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Bonus) FROM evaluation AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct bonuses are there?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT avg( T1.Employee_ID) FROM hiring AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average employee id of all hires?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT avg( T1.Shop_ID) FROM hiring AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average shop id of the hiring record?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "WHERE evaluation.Employee_ID  =  1;",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Start_from FROM hiring AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What is the start date of every hiring?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM hiring AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the ids of all the employees?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT T1.Shop_ID FROM hiring AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct shop ids that have made any hires?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT T1.Age FROM employee AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct ages of all employees?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT T1.Employee_ID FROM hiring AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct employee ids that were hired?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT T1.Start_from FROM hiring AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct starting dates for the hires?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT T1.Is_full_time FROM hiring AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct full time hiring ids?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID FROM hiring AS T1     ORDER BY T1.Employee_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the shop ids in ascending order of employee id.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.City FROM employee AS T1     ORDER BY T1.Age ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the cities of employees in ascending order of age.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Start_from FROM hiring AS T1     ORDER BY T1.Shop_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the start dates of hiring from ascending order by shop ID.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Number_products FROM shop AS T1     ORDER BY T1.Shop_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the number of products for each shop in descending order of shop ID.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID FROM shop AS T1     ORDER BY T1.Number_products DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the id of shops in descending order of number of products.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Start_from FROM hiring AS T1     ORDER BY T1.Employee_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the start dates of employees in descending order of employee ID.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Start_from FROM hiring AS T1     ORDER BY T1.Shop_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "Show the start dates of hiring from highest shop id to lowest.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1     ORDER BY T1.Bonus DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the employee ids, ordered by bonus value from greatest to least.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Manager_name FROM shop AS T1     ORDER BY T1.Shop_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the names of managers of shops in descending order of shop ID.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Location FROM shop AS T1     ORDER BY T1.Shop_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the locations of shops in descending order of shop ID.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID, T1.Manager_name FROM shop AS T1     ORDER BY T1.Manager_name ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the id and name of managers of shops in ascending order.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Bonus, T1.Employee_ID FROM evaluation AS T1     ORDER BY T1.Employee_ID ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the bonuses and the employee ids?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.District, T1.Number_products FROM shop AS T1     ORDER BY T1.Number_products ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the district and number of products of all shops in ascending order of number of products.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Bonus, T1.Year_awarded FROM evaluation AS T1     ORDER BY T1.Year_awarded ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the bonus and the year awarded for all evaluations.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Year_awarded, T1.Bonus FROM evaluation AS T1     ORDER BY T1.Bonus ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the year awarded and bonus of evaluations in ascending order of bonus.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID JOIN employee AS T3 ON T1.Employee_ID = T3.Employee_ID WHERE T2.Number_products = 3500 and T3.Name = \"Steve Borthwick\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the ids of the shops that have 3500 products and have an employee called Steve Borthwick.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Is_full_time FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID WHERE T2.Name = \"Phil Vickery\" and T3.Shop_ID = 7",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the full time hires of the employee with the name \"Phil Vickery\" in the shop with the shop ID 7?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.City = \"Bath\" or T2.City = \"Wasps\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the ids of employees who live in Bath or Wasps.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Bonus FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Name = \"Lee Mears\" or T2.Name = \"Tim Payne\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What is the bonus of the employee whose name is \"Lee Mears\" or \"Tim Payne\"?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Age = 29 or T2.Age = 36",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the employee ids who are 29 or 36 years old?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Manager_name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Is_full_time = \"F\" or T2.Is_full_time = \"T\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the names of managers of shops that have some full time employees or no full time employees at all?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Year_awarded = \"2017\" or T2.Year_awarded = \"2018\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the names of employees who were awarded evaluation in 2017 or 2018?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.City FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID = \"7\" or T2.Employee_ID = \"7\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the cities of the employees with the id 7 or 7?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1 WHERE T1.Bonus = 2900.0 and T1.Year_awarded = \"2016\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the employee ids that were awarded bonuses of 2900.0 in 2016?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID FROM shop AS T1 WHERE T1.Name = \"FC Haka\" and T1.Number_products = 6000",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the id of the shop named FC Haka and has 6000 products?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID FROM hiring AS T1 WHERE T1.Employee_ID = 2 and T1.Is_full_time = \"F\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the id of the shop that has an employee with id 2 and is full time?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T1.Manager_name = \"Ilkka M\u00e4kel\u00e4\" and T2.Start_from = \"2011\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "Find the distinct number of employees hired from the shop whose manager name is \"Ilkka M\u00e4kel\u00e4\" and start from 2011.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Employee_ID) FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T1.Is_full_time = \"F\" and T2.Manager_name = \"Tommi Kautonen\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct employees are hired full time and have the manager name \"Tommi Kautonen\"?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T1.Number_products = 1600 and T2.Start_from = \"2013\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct shops hired someone with experience of working with product with number of products equal to 1600 and started from 2013?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Start_from FROM hiring AS T1 WHERE T1.Is_full_time = \"T\" or T1.Shop_ID = 4",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the start dates of the hiring that is either full time or in shop 4?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Age FROM employee AS T1 WHERE T1.Employee_ID = 10 or T1.Name = \"Mark Regan\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the age of the employee with id 10 or whose name is Mark Regan?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Bonus FROM evaluation AS T1 WHERE T1.Year_awarded = \"2015\" or T1.Employee_ID = \"1\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the bonus of the evaluation awarded in 2015 or whose employee ID is 1?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT count(*) FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID = 4 and T2.Is_full_time = \"T\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many shops have a full time employee with id 4?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT count(*) FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Location = \"Mariehamn\" and T2.Number_products = 10000",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many people are hired in the shop located in Mariehamn and selling 10000 products?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT count(*) FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Is_full_time = \"F\" and T2.Shop_ID = 4",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many employees are hired in the shop with id 4 and is full time?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT count(*) FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Is_full_time = \"T\" and T2.Start_from = \"2003\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many shops started hiring full time employees from 2003?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT count(*) FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.City = \"Bristol\" and T2.Age = 43",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many evaluations does the employee whose city is Bristol and age is 43 have?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT count(*) FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.City = \"Wasps\" and T2.Age = 30",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many employees are there in Wasps whose age is 30?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Name FROM employee AS T1 WHERE T1.Employee_ID != 7",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the names of employees with Employee ID that is not 7?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Bonus FROM evaluation AS T1 WHERE T1.Year_awarded != \"2017\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the bonus of the evaluations that were not awarded in 2017?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID FROM shop AS T1 WHERE T1.Location != \"Kuopio\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the ids of shops that have location != \"Kuopio\".",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Start_from FROM hiring AS T1 WHERE T1.Shop_ID != 4",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the starting dates of the hiring done in shops other than 4?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1 WHERE T1.Year_awarded != \"2016\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the employee ids that were not awarded in 2016?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Age FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Start_from != \"2010\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ages of employees who were not hired before 2010?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.City != \"Leicester\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the ids of employees who are not in Leicester?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID != 2",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the names of shops that do not have an employee with ID 2?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Is_full_time FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Age != 23",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the full time hires whose employee age is not 23?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Name != \"Lee Mears\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the evaluation IDs for employees whose names are not \"Lee Mears\"?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Number_products != 10770",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the id of the shops that do not have the product with number 10770 in their stock?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT T1.Start_from FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Age = 23",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct start dates of the hires whose employee age is 23.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT T1.Age FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID = 4",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the distinct age of the employee with id 4?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT T1.Bonus FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.City = \"Bath\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct bonuses of the employees who live in Bath.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT T1.Shop_ID FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Age = 43",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct shop ids that have an employee aged 43.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT T1.Shop_ID FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Age = 29",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct shop ids that have an employee aged 29.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT T1.Employee_ID FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.District = \"Magnum Areena\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct ids of employees who were hired in a shop located in the district Magnum Areena.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT T1.Bonus FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID = 8",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the distinct bonus of the evaluation of the employee with id 8?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT T1.Number_products FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Start_from = \"2003\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the number of distinct products for the shops that started hiring from 2003.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT T1.District FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Is_full_time = \"F\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct districts that have at least one shop that hires only full time workers?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT T1.Is_full_time FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Name = \"FC Honka\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the distinct full time hiring relations for the shop named \"FC Honka\".",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Start_from) FROM hiring AS T1 WHERE T1.Shop_ID = 1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct starting dates are there for employees who work at shop 1?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Employee_ID) FROM hiring AS T1 WHERE T1.Shop_ID = 4",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct employees are hired in the shop with id 4?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Year_awarded) FROM evaluation AS T1 WHERE T1.Employee_ID = \"7\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct years were awards given in for the employee with id 7?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Name) FROM employee AS T1 WHERE T1.City = \"Leicester\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many employees live in the city of Leicester?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Bonus) FROM evaluation AS T1 WHERE T1.Year_awarded = \"2017\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct bonuses were awarded in 2017?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Age FROM employee AS T1 WHERE T1.Employee_ID > 5",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the ages of employees with ids greater than 5?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Name FROM employee AS T1 WHERE T1.Age > 36",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of all employees older than 36?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Name FROM shop AS T1 WHERE T1.Shop_ID > 8",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of shops with IDs larger than 8?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Manager_name FROM shop AS T1 WHERE T1.Number_products > 5000",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What is the name of the manager of the shop that has more than 5000 products?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.District FROM shop AS T1 WHERE T1.Shop_ID > 5",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the districts of the shops with id larger than 5?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.City FROM employee AS T1 WHERE T1.Age > 32",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the cities of all employees older than 32?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID, T2.Manager_name, T3.Age FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID JOIN employee AS T3 ON T1.Employee_ID = T3.Employee_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Find the id, name and age of managers of shops that hired employees with different ages.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Name, T2.Year_awarded, T3.Employee_ID FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN hiring AS T3 ON T1.Employee_ID = T3.Employee_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the names of employees, the year the evaluation was awarded, and the employee id?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Bonus, T2.Name, T3.Shop_ID FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN hiring AS T3 ON T2.Employee_ID = T3.Employee_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Show the bonus, name, and shop id for all the employees.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.City, T2.Employee_ID, T3.Name FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN shop AS T3 ON T2.Shop_ID = T3.Shop_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the cities where the employees work, and what are the names of the shops they are hired in?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.District, T2.Is_full_time, T3.Employee_ID FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID JOIN employee AS T3 ON T2.Employee_ID = T3.Employee_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Show all district, whether the shop is hiring full time or not, and the employee id.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID, T2.Employee_ID, T3.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID JOIN employee AS T3 ON T2.Employee_ID = T3.Employee_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Find the id, employee id and name of the shop that has which employee.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID, T2.Location, T3.Name FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID JOIN employee AS T3 ON T1.Employee_ID = T3.Employee_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "Find the id, location, and name of each employee who was hired at a certain shop.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Is_full_time FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID     ORDER BY T2.Age ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Show the full-time hiring status for employees in ascending order of age.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Location FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID     ORDER BY T2.Employee_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Show the locations of shops with ascending employee IDs of the hires.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID     ORDER BY T2.Age ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the id of employees, ordered by their age ascending?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Number_products FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID     ORDER BY T2.Employee_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Show the number of products for each shop, ordered by the employee ID.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID     ORDER BY T2.Employee_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Show the ids of shops with ascending order of employee id.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID     ORDER BY T2.Bonus ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of employees with the highest bonuses?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Location FROM shop AS T1 WHERE T1.Number_products = 10770     INTERSECT SELECT T2.Location FROM shop AS T2 WHERE T2.Number_products = 10000",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Show the locations of shops that have both number of products equal to 10770 and 10000.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1 WHERE T1.Year_awarded = \"2015\"     INTERSECT SELECT T2.Employee_ID FROM evaluation AS T2 WHERE T2.Year_awarded = \"2016\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the ids of the employees who were awarded in both 2015 and 2016?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Location FROM shop AS T1 WHERE T1.District = \"Magnum Areena\"     INTERSECT SELECT T2.Location FROM shop AS T2 WHERE T2.District = \"Lahden Stadion\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Show the locations of shops that are in Magnum Areena district and in Lahden Stadion district.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.City FROM employee AS T1 WHERE T1.Name = \"Andrew Sheridan\"     INTERSECT SELECT T2.City FROM employee AS T2 WHERE T2.Name = \"Matt Stevens\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the cities in which both the employee named Andrew Sheridan and the employee named Matt Stevens live?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Year_awarded FROM evaluation AS T1 WHERE T1.Employee_ID = \"10\"     INTERSECT SELECT T2.Year_awarded FROM evaluation AS T2 WHERE T2.Employee_ID = \"2\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the years awarded both for the employee with ID 10 and the employee with ID 2?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Start_from FROM hiring AS T1 WHERE T1.Is_full_time = \"F\"     INTERSECT SELECT T2.Start_from FROM hiring AS T2 WHERE T2.Is_full_time = \"T\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Show the start dates of the hiring which is both full time \"F\" and \"T\".",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT avg( T1.Shop_ID) FROM hiring AS T1 WHERE T1.Start_from = \"2008\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of shops that were hired from the start of year 2008?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT avg( T1.Employee_ID) FROM hiring AS T1 WHERE T1.Shop_ID = 4",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average id of employees who are hired in shop 4?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT avg( T1.Shop_ID) FROM hiring AS T1 WHERE T1.Start_from = \"2009\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of shops that were hired from the start of year 2009?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT avg( T1.Employee_ID) FROM employee AS T1 WHERE T1.Age = 43",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average id of all employees who are 43 years old?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT avg( T1.Employee_ID) FROM employee AS T1 WHERE T1.Age = 30",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average id of employees aged 30?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Year_awarded FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID = (SELECT max( T23.Employee_ID) FROM employee AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the years awarded for the employee with the highest employee ID?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Number_products FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID = (SELECT max( T23.Employee_ID) FROM hiring AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the number of products for the shop that has the maximum employee id in its hiring record.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Number_products = (SELECT max( T23.Number_products) FROM shop AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the id of the shop that has the maximum number of products.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Age = (SELECT max( T23.Age) FROM employee AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the id of the shop that has the oldest employee.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Shop_ID = (SELECT max( T23.Shop_ID) FROM shop AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "Find the ids of employees who were hired at the shop with the maximum shop id.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Age = (SELECT max( T23.Age) FROM employee AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the ids of the employees who are the oldest?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Shop_ID, T2.Name FROM hiring AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID WHERE T3.Location = \"Espoo\" and T2.Age = 43",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the id and name of the shop that hired an employee whose age is 43 and the location of the shop is \"Espoo\".",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Year_awarded, T2.Employee_ID FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN hiring AS T3 ON T2.Employee_ID = T3.Employee_ID WHERE T3.Is_full_time = \"F\" and T2.Name = \"Andrew Sheridan\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the years awarded and the employee ID for the employee called Andrew Sheridan who is only hired part time and is full time?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Start_from, T2.District FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID JOIN employee AS T3 ON T1.Employee_ID = T3.Employee_ID WHERE T3.Age = 32 and T2.Name = \"FC Haka\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the start date of the employees who are 32 years old and work in the shop named \"FC Haka\".",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Number_products, T2.Start_from FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID JOIN employee AS T3 ON T2.Employee_ID = T3.Employee_ID WHERE T3.Name = \"Mark Regan\" and T2.Is_full_time = \"F\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the number of products and the start date of the hiring of the employee whose name is Mark Regan and whose hiring is full time.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Is_full_time FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Shop_ID = 7 GROUP BY T1.Is_full_time  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the full time hiring record of the shop with id 7.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Start_from FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.District = \"Finnair Stadium\" GROUP BY T1.Start_from  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the start time of the hiring which is related to the shop in the district of \"Finnair Stadium\".",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Manager_name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Shop_ID = 2 GROUP BY T1.Manager_name  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the name of the manager of the shop with id 2, which has the most hiring activities?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Age = 40 GROUP BY T1.Employee_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the employee who was evaluated the most when he was 40 years old.",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Is_full_time FROM hiring AS T1        EXCEPT SELECT T2.Is_full_time FROM hiring AS T2 WHERE T2.Shop_ID = 4",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the full time hires not done at shop 4?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Bonus FROM evaluation AS T1        EXCEPT SELECT T2.Bonus FROM evaluation AS T2 WHERE T2.Year_awarded = \"2017\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the bonus that was not awarded in 2017?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Location FROM shop AS T1        EXCEPT SELECT T2.Location FROM shop AS T2 WHERE T2.Name = \"FC Inter\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the locations of all the shops except the one called FC Inter?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM employee AS T1        EXCEPT SELECT T2.Employee_ID FROM employee AS T2 WHERE T2.City = \"Wasps\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of all employees who do not live in Wasps?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Employee_ID FROM evaluation AS T1        EXCEPT SELECT T2.Employee_ID FROM evaluation AS T2 WHERE T2.Bonus = 3000.0",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of employees who did not get a bonus?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.City FROM employee AS T1        EXCEPT SELECT T2.City FROM employee AS T2 WHERE T2.Employee_ID = 7",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the cities that do not have an employee with the id 7?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Year_awarded FROM evaluation AS T1        EXCEPT SELECT T2.Year_awarded FROM evaluation AS T2 WHERE T2.Bonus = 3000.0",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the years awarded without the bonus 3000?",
    "db_id": "employee_hire_evaluation"
  },
  {
    "query": "SELECT T1.Template_Details FROM Templates AS T1 WHERE T1.Version_Number = 0",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the details of the template with version number 0?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 WHERE T1.Template_Type_Description = \"Book\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the code of template types for which the description is \"Book\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Documents AS T1 WHERE T1.Document_Name = \"Summer Show\"",
    "template_id": 0,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the other details of the document named \"Summer Show\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Date_Effective_To = \"1974-09-14 06:34:39\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the ids of the templates effective from 1974-09-14 06:34:39.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Paragraph_ID FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = \"About Korea\"",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the paragraph that is in the document with the name \"About Korea\".",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Date_Effective_From FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID = 20",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "When was the document with template id 20 effective?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Version_Number = 2",
    "template_id": 1,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the descriptions of template types for the templates with version number 2?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code, count(*) FROM Templates AS T1  GROUP BY T1.Template_Type_Code",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the type code of templates and the number of templates with each type.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Date_Effective_From, count(*) FROM Templates AS T1  GROUP BY T1.Date_Effective_From",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the date effective from of all templates and the number of templates effective on that date.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details, count(*) FROM Documents AS T1  GROUP BY T1.Other_Details",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show all the other details and the number of documents with each detail.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Description, count(*) FROM Ref_Template_Types AS T1  GROUP BY T1.Template_Type_Description",
    "template_id": 2,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "List the description of template types and the number of references for each template type.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details, count(*) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Other_Details",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show all the other details of documents and the number of documents with each detail.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_Description, count(*) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_Description",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "Show the description of documents and the number of paragraphs for each description.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code, count(*) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "What are the code of template types and the number of templates of each type?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details, count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Other_Details",
    "template_id": 3,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(3) Op(0) C(-1) T(1) C(-1) T(1)",
    "question": "For each paragraph, show its other details and the number of documents it is in.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT count(*) FROM Templates AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many templates exist?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT count(*) FROM Documents AS T1",
    "template_id": 4,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "How many documents are there?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code, T1.Template_Type_Description FROM Ref_Template_Types AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the code and description of the template types?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details, T1.Paragraph_Text FROM Paragraphs AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show the other details and paragraph text of all paragraphs.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Date_Effective_To, T1.Template_ID FROM Templates AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "Show the date effective to and template ID for all templates.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code, T1.Template_Details FROM Templates AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the type codes and details of the templates?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Description, T1.Template_Type_Code FROM Ref_Template_Types AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the description and code of the template types?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID, T1.Other_Details FROM Documents AS T1",
    "template_id": 5,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the template ids and other details of all documents?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Version_Number, T2.Other_Details FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show the version number and other details of all templates.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID, T2.Version_Number FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the document ids and version numbers of the templates?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Description, T2.Date_Effective_To FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the description and the date effective to of the templates of the different template types?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Description, T2.Template_ID FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the descriptions of the template types and the ids of the templates?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID, T2.Paragraph_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the id and ids of the documents and the paragraphs?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Paragraph_Text, T2.Other_Details FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "Show the text and other details of all paragraphs and the documents they are in.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Description, T2.Version_Number FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the description and version number of the templates with the given template type code?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Version_Number, T2.Document_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID",
    "template_id": 6,
    "query_type": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1)",
    "question": "What are the version numbers of the templates and what are the document ids?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details, T1.Template_ID FROM Documents AS T1 WHERE T1.Document_Description = \"z\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the id and other details of the document whose description is \"z\".",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID, T1.Other_Details FROM Documents AS T1 WHERE T1.Document_Description = \"w\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the id and other details of the document whose description is 'w'.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Date_Effective_From, T1.Template_Type_Code FROM Templates AS T1 WHERE T1.Version_Number = 8",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the effective from dates and template types for the template with version number 8?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Details, T1.Date_Effective_From FROM Templates AS T1 WHERE T1.Template_ID = 6",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "What are the details and the effective date of the template with ID 6?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details, T1.Paragraph_ID FROM Paragraphs AS T1 WHERE T1.Paragraph_Text = \"Jersey\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the id and other details of the paragraph with the text \"Jersey\".",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_Description, T1.Document_ID FROM Documents AS T1 WHERE T1.Document_Name = \"Customer reviews\"",
    "template_id": 7,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(0)",
    "question": "Find the document description and id of the document named \"Customer reviews\".",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Version_Number FROM Templates AS T1  GROUP BY T1.Version_Number  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the latest version number of templates?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID FROM Paragraphs AS T1  GROUP BY T1.Document_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Find the id of the document that has the most number of paragraphs.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Date_Effective_From FROM Templates AS T1  GROUP BY T1.Date_Effective_From  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "Show the date effective from when most templates are effective.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Date_Effective_To FROM Templates AS T1  GROUP BY T1.Date_Effective_To  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the last date effective for the most templates?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1  GROUP BY T1.Template_Type_Code  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 8,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(0) C(-1) T(0)",
    "question": "What is the code of the most frequently used template type?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT count(*) FROM Ref_Template_Types AS T1 WHERE T1.Template_Type_Description = \"Book\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many reference templates have the description \"Book\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT count(*) FROM Templates AS T1 WHERE T1.Version_Number = 6",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many templates have version number 6?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT count(*) FROM Templates AS T1 WHERE T1.Date_Effective_From = \"2008-08-01 13:57:26\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many templates have a date effective from the given date?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT count(*) FROM Templates AS T1 WHERE T1.Template_Type_Code = \"PP\"",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many templates have the type code PP?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT count(*) FROM Documents AS T1 WHERE T1.Document_ID = 16514113",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many documents have the id 16514113?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT count(*) FROM Paragraphs AS T1 WHERE T1.Document_ID = 3",
    "template_id": 9,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(2) A(0) Op(0) C(0) T(0) C(0) T(0) V(0)",
    "question": "How many paragraphs are in the document with id 3?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_Description FROM Documents AS T1    ORDER BY T1.Template_ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the description of the document with the highest template ID?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Documents AS T1    ORDER BY T1.Document_ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the other detail of the first document ID?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID FROM Paragraphs AS T1    ORDER BY T1.Paragraph_ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the first paragraph?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID FROM Documents AS T1    ORDER BY T1.Template_ID DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the document with the greatest template id?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID FROM Templates AS T1    ORDER BY T1.Version_Number DESC LIMIT 1",
    "template_id": 10,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the id of the latest version of the template?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID    ORDER BY T2.Version_Number DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the other detail of the latest version of the document?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code    ORDER BY T2.Version_Number DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the description of the first template type?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID    ORDER BY T2.Date_Effective_From DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the template of the oldest document?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID    ORDER BY T2.Document_ID DESC LIMIT 1",
    "template_id": 11,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the text of the first paragraph of the most recent document?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID    ORDER BY T2.Document_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the id of the template of the first document?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_Description FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID    ORDER BY T2.Paragraph_ID ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the description of the first paragraph?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_Description FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID    ORDER BY T2.Date_Effective_To ASC LIMIT 1",
    "template_id": 12,
    "query_type": "Root1(3) Root(2) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the description of the oldest template in use?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Paragraph_Text, T1.Other_Details FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID    ORDER BY T2.Document_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the text and other details of the first paragraph of the longest document?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details, T1.Paragraph_ID FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID    ORDER BY T2.Template_ID DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the other detail and the id of the first paragraph of the document with the highest template id?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Description, T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code    ORDER BY T2.Version_Number DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the description and code of the template type with the highest version number?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code, T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code    ORDER BY T2.Date_Effective_To DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the code and description of the template type with the latest effective date?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Description, T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code    ORDER BY T2.Date_Effective_From DESC LIMIT 1",
    "template_id": 13,
    "query_type": "Root1(3) Root(2) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Sup(0) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What is the description and code of the template type with the oldest effective date?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Other_Details) FROM Paragraphs AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct other details are there?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Template_Type_Code) FROM Ref_Template_Types AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct template types are there?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Version_Number) FROM Templates AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct version numbers are there in all the templates?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Template_Type_Code) FROM Templates AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different types of templates are there?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Document_Description) FROM Documents AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many different descriptions are there for documents?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Paragraph_Text) FROM Paragraphs AS T1",
    "template_id": 14,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0)",
    "question": "How many distinct paragraph texts are there?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT avg( T1.Document_ID) FROM Documents AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average document id?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT avg( T1.Version_Number) FROM Templates AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average version number of the templates?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT avg( T1.Document_ID) FROM Paragraphs AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average document id of all paragraphs?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT avg( T1.Template_ID) FROM Templates AS T1",
    "template_id": 15,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(5) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What is the average template ID?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_Name FROM Documents AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the names of all documents?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_Description FROM Documents AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the descriptions of documents?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Date_Effective_From FROM Templates AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the effective from dates of the templates?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Documents AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the other details of all documents?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID FROM Templates AS T1",
    "template_id": 16,
    "query_type": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the id of the templates?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT T1.Paragraph_Text FROM Paragraphs AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "Find the distinct paragraph texts in different paragraphs.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT T1.Document_Name FROM Documents AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct names of documents?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT T1.Version_Number FROM Templates AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct version numbers of the templates?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT T1.Date_Effective_To FROM Templates AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct dates effective to for the templates?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT T1.Paragraph_ID FROM Paragraphs AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct ids of all paragraphs?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT T1.Document_ID FROM Paragraphs AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct document ids of paragraphs?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT T1.Template_Details FROM Templates AS T1",
    "template_id": 17,
    "query_type": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "question": "What are the distinct template details?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Version_Number FROM Templates AS T1     ORDER BY T1.Date_Effective_From ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "What are the version numbers of the templates, ordered by the effective date from ascending?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Paragraph_Text FROM Paragraphs AS T1     ORDER BY T1.Document_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the text of paragraphs in ascending order of document id.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID FROM Documents AS T1     ORDER BY T1.Template_ID ASC",
    "template_id": 18,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the document ids in ascending order of template id.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Date_Effective_To FROM Templates AS T1     ORDER BY T1.Template_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the dates effective for all templates in descending order of template ID.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID FROM Documents AS T1     ORDER BY T1.Document_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the template ids of documents in descending order of document ids.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID FROM Documents AS T1     ORDER BY T1.Template_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the document ids in descending order of template id.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1     ORDER BY T1.Document_ID DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the other details of the paragraphs in descending order of document ID.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code FROM Templates AS T1     ORDER BY T1.Date_Effective_From DESC",
    "template_id": 19,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(0) A(0) Op(0) C(-2) T(0) C(-2) T(0)",
    "question": "List the type codes of templates in descending order of the date effective from.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Paragraph_ID, T1.Document_ID FROM Paragraphs AS T1     ORDER BY T1.Document_ID ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the paragraph ids and document ids of all paragraphs in ascending order of document ids.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1     ORDER BY T1.Document_Name ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the document ids and names of all documents in ascending order of document names.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID, T1.Other_Details FROM Documents AS T1     ORDER BY T1.Other_Details ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the document ids and other details in ascending order of other details.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Description, T1.Template_Type_Code FROM Ref_Template_Types AS T1     ORDER BY T1.Template_Type_Code ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "What are the descriptions and codes of the reference template types?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_Name, T1.Document_Description FROM Documents AS T1     ORDER BY T1.Document_Description ASC",
    "template_id": 20,
    "query_type": "Root1(3) Root(4) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(0) C(1) T(0) Order(1) A(0) Op(0) C(1) T(0) C(1) T(0)",
    "question": "List the names and descriptions of documents in ascending order of description.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID JOIN Templates AS T3 ON T2.Template_ID = T3.Template_ID WHERE T2.Document_Description = \"n\" and T3.Template_Type_Code = \"CV\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the other details of the document with the description 'n' and the template type code 'CV'?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_Description FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID JOIN Templates AS T3 ON T1.Template_ID = T3.Template_ID WHERE T2.Document_ID = 16514113 and T3.Date_Effective_From = \"2012-04-05 07:11:42\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the descriptions of the documents with the id 16514113 and the effective date from \"2012-04-05 07:11:42\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID JOIN Templates AS T3 ON T2.Template_ID = T3.Template_ID WHERE T2.Document_ID = 1 and T3.Date_Effective_To = \"1975-07-16 04:52:10\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the text of the paragraphs of the document with document id 1 and effective date of the template as \"1975-07-16 04:52:10\".",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID JOIN Ref_Template_Types AS T3 ON T1.Template_Type_Code = T3.Template_Type_Code WHERE T2.Template_ID = 8 and T3.Template_Type_Description = \"Paper\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the template types of the document with the id 8 and the reference template type description is \"Paper\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID JOIN Templates AS T3 ON T1.Template_ID = T3.Template_ID WHERE T2.Document_ID = 33930 and T3.Version_Number = 8",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the other details of the document with document id 33930 and template version number 8?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Version_Number FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code JOIN Documents AS T3 ON T1.Template_ID = T3.Template_ID WHERE T2.Template_Type_Description = \"Advertisement\" and T3.Document_ID = 80",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the version numbers of the templates that the document with the id 80 is using for the template type \"Advertisement\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID JOIN Templates AS T3 ON T2.Template_ID = T3.Template_ID WHERE T2.Document_Name = \"How Google people work\" and T3.Version_Number = 2",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "Find the text of the paragraphs that are used in the document with the name \"How Google people work\" and the version number is 2.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Details FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID JOIN Ref_Template_Types AS T3 ON T1.Template_Type_Code = T3.Template_Type_Code WHERE T2.Document_ID = 50123 and T3.Template_Type_Description = \"Paper\"",
    "template_id": 21,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(1)",
    "question": "What are the details of the template used to create the document with id 50123 and the template type is \"Paper\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Version_Number = 4 or T2.Version_Number = 4",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the template type codes of the templates with version number 4 or 4?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Date_Effective_From = \"1979-10-20 21:23:20\" or T2.Date_Effective_From = \"2003-06-05 04:03:45\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the other details of the documents that have a template with a Date Effective From value of \"1979-10-20 21:23:20\" or \"2003-06-05 04:03:45\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Date_Effective_To = \"1995-09-19 22:27:48\" or T2.Date_Effective_To = \"2015-09-06 01:08:44\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "Find the ids of documents that have a template with a date effective to \"1995-09-19 22:27:48\" or \"2015-09-06 01:08:44\".",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Details FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_Name = \"Do not panic\" or T2.Document_Name = \"Do not panic\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the details of the templates that are used for the document with name \"Do not panic\" or \"Do not panic\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Date_Effective_From = \"2005-11-12 07:09:48\" or T2.Date_Effective_From = \"2008-08-01 13:57:26\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the template types of the templates with the effective date from \"2005-11-12 07:09:48\" or \"2008-08-01 13:57:26\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Details FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Code = \"CV\" or T2.Template_Type_Code = \"AD\"",
    "template_id": 22,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "What are the details of the templates with the type code \"CV\" or \"AD\" in the reference template types?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1 WHERE T1.Document_ID = 3830 and T1.Paragraph_Text = \"Jersey\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the other details of the document with id 3830 and the paragraph text \"Jersey\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1 WHERE T1.Document_ID = 3830 and T1.Paragraph_ID = 608931827",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the other details of the document with the id 3830 and the paragraph with the id 608931827?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID FROM Paragraphs AS T1 WHERE T1.Paragraph_ID = 243399026 and T1.Paragraph_Text = \"Korea\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the document id of the paragraph with the text \"Korea\" and the Paragraph ID 243399026.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1 WHERE T1.Paragraph_Text = \"Korea\" and T1.Paragraph_ID = 9",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the other details of the paragraph with the text \"Korea\" and the paragraphed ID?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Date_Effective_To FROM Templates AS T1 WHERE T1.Template_ID = 20 and T1.Template_Type_Code = \"AD\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the dates effective for the template with id 20 and type code \"AD\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID FROM Documents AS T1 WHERE T1.Document_ID = 801801 and T1.Document_Description = \"u\"",
    "template_id": 23,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What is the id of the template of the document with document id 801801 and document description 'u'?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Other_Details) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Description = \"n\" and T2.Template_Type_Code = \"AD\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct documents have the description \"n\" and are using the template type code \"AD\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Paragraph_ID) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Paragraph_Text = \"UK\" and T2.Document_Description = \"z\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct paragraphs are there in documents whose description is 'z' and whose paragraph text is 'UK'?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Paragraph_ID) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_ID = 3830 and T2.Template_ID = 7",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct paragraphs exist for the document with the id 3830 and template id 7?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Document_Name) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Template_ID = 25 and T2.Version_Number = 6",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many documents use template with version number 6 and are associated with template id 25?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Date_Effective_To) FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T1.Template_ID = 0 and T2.Template_Type_Description = \"Book\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct dates do not have any reference templates of type \"Book\" have been effective?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Template_Type_Description) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T1.Template_Type_Code = \"CV\" and T2.Date_Effective_To = \"1989-11-24 19:06:06\"",
    "template_id": 24,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(1) C(2) T(1) V(1)",
    "question": "How many distinct template types are there for the CV template type with the effective date of November 24, 1989?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID FROM Documents AS T1 WHERE T1.Document_Description = \"w\" or T1.Template_ID = 7",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the ids of documents whose description is 'w' or whose template id is 7.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1 WHERE T1.Paragraph_Text = \"UK\" or T1.Document_ID = 50123",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the other details of the paragraph with text \"UK\" or whose document ID is 50123?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Documents AS T1 WHERE T1.Document_Description = \"z\" or T1.Template_ID = 4",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the other details of the documents whose description is \"z\" or whose template id is 4?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Paragraph_ID FROM Paragraphs AS T1 WHERE T1.Paragraph_Text = \"Jersey\" or T1.Document_ID = 3830",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "Find the ids of the paragraphs that contain the text \"Jersey\" or the document id is 3830.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Documents AS T1 WHERE T1.Document_Description = \"b\" or T1.Document_Name = \"About Korea\"",
    "template_id": 25,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(1) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Filter(2) A(0) Op(0) C(2) T(0) C(2) T(0) V(1)",
    "question": "What are the other details of the documents whose description is \"b\" or whose name is \"About Korea\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Date_Effective_To = \"1994-12-07 13:26:23\" and T2.Template_ID = 0",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many documents have the template with the effective date of \"1994-12-07 13:26:23\" and the template id of 0?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT count(*) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Code = \"PP\" and T2.Date_Effective_To = \"1995-09-19 22:27:48\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many templates with type PP and effective date on Sep 19, 1995 exist?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Version_Number = 0 and T2.Template_ID = 6",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many documents use template version 0 and template id 6?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = \"Summer Show\" and T2.Document_Description = \"k\"",
    "template_id": 26,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(-1) T(0) C(-1) T(0) Filter(0) Filter(2) A(0) Op(0) C(0) T(1) C(0) T(1) V(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(1)",
    "question": "How many paragraphs are there in the document with name \"Summer Show\" and description \"k\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID FROM Documents AS T1 WHERE T1.Document_Description != \"b\"",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the ids of documents whose description is not 'b'.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Paragraph_Text FROM Paragraphs AS T1 WHERE T1.Document_ID != 33930",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the texts of the paragraphs in the document with the id that is not 33930?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Documents AS T1 WHERE T1.Template_ID != 25",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the other details of the document with template ID not 25?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID FROM Templates AS T1 WHERE T1.Version_Number != 4",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of templates with a version number different from 4?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code FROM Templates AS T1 WHERE T1.Template_ID != 23",
    "template_id": 27,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the type codes of all templates with an ID different from 23?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Version_Number != 7",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the descriptions of the templates with version number other than 7?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_ID != 20",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the template types of the templates that do not have the template id 20?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Date_Effective_To != \"1992-05-02 20:06:11\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the other details of the documents that have template with date effective to \"1992-05-02 20:06:11\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Date_Effective_From != \"2005-11-12 07:09:48\"",
    "template_id": 28,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(3) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the template types of the templates whose Date Effective From is not \"2005-11-12 07:09:48\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Date_Effective_From = \"2008-08-01 13:57:26\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct template types for the templates with the effective date from August 1, 2008?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT T1.Other_Details FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Template_ID = 6",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct other details of the paragraphs belonging to the template with id 6?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT T1.Version_Number FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_Name = \"A history of Arts\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct version numbers of templates that were used to create the document with the name \"A history of Arts\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_ID = 21",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct template types of the template with id 21?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Date_Effective_To = \"2006-02-06 23:52:04\"",
    "template_id": 29,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What are the distinct template types and their descriptions for the templates with the effective date of \"2006-02-06 23:52:04\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Template_Type_Code) FROM Ref_Template_Types AS T1 WHERE T1.Template_Type_Description = \"Presentation\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct template types have the description \"Presentation\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Template_Type_Code) FROM Ref_Template_Types AS T1 WHERE T1.Template_Type_Description = \"Advertisement\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct template types have the description \"Advertisement\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Document_ID) FROM Documents AS T1 WHERE T1.Template_ID = 1",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many documents use the template with id 1?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Document_Name) FROM Documents AS T1 WHERE T1.Template_ID = 22",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct documents have the template id 22?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT DISTINCT count(DISTINCT  T1.Other_Details) FROM Documents AS T1 WHERE T1.Document_Name = \"How Google people work\"",
    "template_id": 30,
    "query_type": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "How many distinct other details are associated with the document named \"How Google people work\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Details FROM Templates AS T1 WHERE T1.Version_Number > 5",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the details of the templates with version number larger than 5?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID FROM Documents AS T1 WHERE T1.Template_ID > 6",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the ids of documents with template id bigger than 6?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_Name FROM Documents AS T1 WHERE T1.Template_ID > 4",
    "template_id": 31,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(5) A(0) Op(0) C(-2) T(0) C(-2) T(0) V(0)",
    "question": "What are the names of documents with template ID greater than 4?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details, T2.Template_Type_Code, T3.Paragraph_ID FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID JOIN Paragraphs AS T3 ON T1.Document_ID = T3.Document_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the other details, the template type code, and the paragraph ID for each document?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details, T2.Document_Name, T3.Template_ID FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID JOIN Templates AS T3 ON T2.Template_ID = T3.Template_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the other details, document name, and template ID for the paragraphs of the documents?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID, T2.Other_Details, T3.Date_Effective_From FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID JOIN Templates AS T3 ON T2.Template_ID = T3.Template_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the document ids, other details and effective dates of the paragraphs related to the given documents?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID, T2.Document_Name, T3.Template_Type_Description FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID JOIN Ref_Template_Types AS T3 ON T1.Template_Type_Code = T3.Template_Type_Code",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the id, name, and description of the templates for the documents?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code, T2.Document_ID, T3.Paragraph_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID JOIN Paragraphs AS T3 ON T2.Document_ID = T3.Document_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the template type codes, document ids, and paragraph ids for the templates, documents, and paragraphs?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details, T2.Paragraph_Text, T3.Template_Type_Code FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID JOIN Templates AS T3 ON T1.Template_ID = T3.Template_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the other details, the text, and the type of template of each document?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID, T2.Document_Description, T3.Version_Number FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID JOIN Templates AS T3 ON T2.Template_ID = T3.Template_ID",
    "template_id": 32,
    "query_type": "Root1(3) Root(5) Sel(0) N(2) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) A(0) Op(0) C(2) T(2) C(2) T(2)",
    "question": "What are the document ids, descriptions, and version numbers of the paragraphs that are using each template?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID     ORDER BY T2.Document_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the template ids of documents in ascending order of document ids.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_Name FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID     ORDER BY T2.Document_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the names of documents, ordered by ascending document ID?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code     ORDER BY T2.Template_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the code of the template types of the reference templates?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID     ORDER BY T2.Document_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "List the text of paragraphs of all documents in ascending order of document ID.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID     ORDER BY T2.Document_ID ASC",
    "template_id": 33,
    "query_type": "Root1(3) Root(4) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Order(1) A(0) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the id of the templates of the documents?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code FROM Templates AS T1 WHERE T1.Version_Number = 6     INTERSECT SELECT T2.Template_Type_Code FROM Templates AS T2 WHERE T2.Version_Number = 3",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the template type codes of the templates with version number 6 that have been used for at least one project, and the templates with version number 3?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Paragraph_ID FROM Paragraphs AS T1 WHERE T1.Document_ID = 33930     INTERSECT SELECT T2.Paragraph_ID FROM Paragraphs AS T2 WHERE T2.Document_ID = 3830",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the intersection of the paragraphs that appear in document with id 33930 and the paragraphs that appear in document with id 3830.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1 WHERE T1.Paragraph_ID = 280120913     INTERSECT SELECT T2.Other_Details FROM Paragraphs AS T2 WHERE T2.Paragraph_ID = 7",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the other details of the paragraph with the id 280120913, and the other details of the paragraph with the id 7?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Date_Effective_To FROM Templates AS T1 WHERE T1.Template_Type_Code = \"PP\"     INTERSECT SELECT T2.Date_Effective_To FROM Templates AS T2 WHERE T2.Template_Type_Code = \"AD\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "What are the dates effective for both the PP templates and the AD templates?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID FROM Documents AS T1 WHERE T1.Document_Name = \"Palm reading\"     INTERSECT SELECT T2.Document_ID FROM Documents AS T2 WHERE T2.Document_Name = \"Introduction of OS\"",
    "template_id": 34,
    "query_type": "Root1(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(1)",
    "question": "Find the document ids of the documents that have both \"Palm reading\" and \"Introduction of OS\" in their names.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT avg( T1.Version_Number) FROM Templates AS T1 WHERE T1.Date_Effective_From = \"2002-08-25 13:26:23\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average version number of the templates effective from August 25, 2002 13:26:23?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT avg( T1.Document_ID) FROM Documents AS T1 WHERE T1.Document_Name = \"Learning French\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of documents for the document with the name \"Learning French\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT avg( T1.Template_ID) FROM Documents AS T1 WHERE T1.Document_Name = \"A history of Arts\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average number of documents for the document with name \"A history of Arts\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT avg( T1.Version_Number) FROM Templates AS T1 WHERE T1.Template_ID = 0",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average version number of the templates with an ID of 0?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT avg( T1.Template_ID) FROM Templates AS T1 WHERE T1.Date_Effective_To = \"2008-08-08 18:36:43\"",
    "template_id": 35,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What is the average template id that becomes effective from the given time?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_ID = (SELECT max( T23.Template_ID) FROM Templates AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the description of the template types used for the most advanced template?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Date_Effective_To = (SELECT max( T23.Date_Effective_To) FROM Templates AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the other details of the documents that have a template with the maximum effective date?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Date_Effective_To = (SELECT max( T23.Date_Effective_To) FROM Templates AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the code of template types that are in effect after the latest effective date?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Date_Effective_From FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID = (SELECT max( T23.Template_ID) FROM Documents AS T23)",
    "template_id": 36,
    "query_type": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(11) A(0) Op(0) C(-2) T(1) C(-2) T(1) Root(5) Sel(0) N(0) A(1) Op(0) C(-2) T(1) C(-2) T(1)",
    "question": "What are the effective dates of the templates used for the most recent documents?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Date_Effective_To, T2.Template_Type_Description FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code JOIN Documents AS T3 ON T1.Template_ID = T3.Template_ID WHERE T3.Template_ID = 22 and T2.Template_Type_Code = \"CV\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the effective dates and descriptions of the templates for the document with the template ID 22 and the reference template type code \"CV\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID, T2.Paragraph_Text FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID JOIN Templates AS T3 ON T1.Template_ID = T3.Template_ID WHERE T3.Template_Type_Code = \"BK\" and T2.Paragraph_ID = 3708",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the id and text of the document that uses the template of type \"BK\" and has the paragraph with id 3708.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Date_Effective_From, T2.Document_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID JOIN Paragraphs AS T3 ON T2.Document_ID = T3.Document_ID WHERE T3.Paragraph_Text = \"Senegal\" and T2.Document_Description = \"k\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "What are the effective from dates and document ids of the templates that have the paragraph text \"Senegal\" and the document description \"k\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_Name, T2.Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID JOIN Templates AS T3 ON T1.Template_ID = T3.Template_ID WHERE T3.Date_Effective_From = \"1979-12-24 10:28:16\" and T2.Paragraph_Text = \"Ukraine\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the names and IDs of documents that have the paragraph text \"Ukraine\" and whose template effective date is \"1979-12-24 10:28:16\".",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID, T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code WHERE T3.Template_Type_Description = \"CV\" and T2.Date_Effective_From = \"1999-06-21 11:10:30\"",
    "template_id": 37,
    "query_type": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(0) T(0) C(0) T(0) A(0) Op(0) C(1) T(1) C(1) T(1) Filter(0) Filter(2) A(0) Op(0) C(2) T(2) C(2) T(2) V(0) Filter(2) A(0) Op(0) C(3) T(1) C(3) T(1) V(1)",
    "question": "Find the document ids and the template types of the documents whose template effective date is \"1999-06-21 11:10:30\" and the template type description is \"CV\".",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_Description FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Paragraph_Text = \"Ireland\" GROUP BY T1.Document_Description  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the description of the document that has the largest number of paragraphs containing the text \"Ireland\".",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = \"AD\" GROUP BY T1.Template_ID  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "Find the id of the document that has been used to produce the most number of advertisements.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_ID = 16 GROUP BY T1.Template_Type_Code  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the code of the template type of the template with id 16?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Date_Effective_From = \"1984-08-07 13:36:26\" GROUP BY T1.Template_Type_Code  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the code of the template type that has the largest number of templates with a date effective from \"1984-08-07 13:36:26\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Date_Effective_From = \"1983-07-16 21:16:16\" GROUP BY T1.Template_Type_Description  ORDER BY count(*) DESC LIMIT 1",
    "template_id": 38,
    "query_type": "Root1(3) Root(0) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Sup(0) A(3) Op(0) C(-1) T(1) C(-1) T(1) Filter(2) A(0) Op(0) C(1) T(1) C(1) T(1) V(0)",
    "question": "What is the description of the template type with the most number of templates effective from \"1983-07-16 21:16:16\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID FROM Documents AS T1        EXCEPT SELECT T2.Template_ID FROM Documents AS T2 WHERE T2.Document_Description = \"r\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the ids of documents that do not have any record with description starting with letter 'r'.",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_ID FROM Templates AS T1        EXCEPT SELECT T2.Template_ID FROM Templates AS T2 WHERE T2.Template_Type_Code = \"AD\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the ids of templates that are not associated with any device?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1        EXCEPT SELECT T2.Template_Type_Code FROM Ref_Template_Types AS T2 WHERE T2.Template_Type_Description = \"CV\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the template types that do not have the description \"CV\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Document_ID FROM Documents AS T1        EXCEPT SELECT T2.Document_ID FROM Documents AS T2 WHERE T2.Document_Name = \"Understanding DB\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "Find the ids of documents that do not have the document named \"Understanding DB\".",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Paragraphs AS T1        EXCEPT SELECT T2.Other_Details FROM Paragraphs AS T2 WHERE T2.Document_ID = 16514113",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the other details of the paragraphs that do not have the document with id 16514113?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1        EXCEPT SELECT T2.Template_Type_Description FROM Ref_Template_Types AS T2 WHERE T2.Template_Type_Code = \"BK\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the descriptions of template types that do not have the code \"BK\"?",
    "db_id": "cre_Doc_Template_Mgt"
  },
  {
    "query": "SELECT T1.Other_Details FROM Documents AS T1        EXCEPT SELECT T2.Other_Details FROM Documents AS T2 WHERE T2.Document_Name = \"Summer Show\"",
    "template_id": 39,
    "query_type": "Root1(2) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0) Filter(2) A(0) Op(0) C(1) T(0) C(1) T(0) V(0)",
    "question": "What are the other details of all documents except the one with the name \"Summer Show\"?",
    "db_id": "cre_Doc_Template_Mgt"
  }
]