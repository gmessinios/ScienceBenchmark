[
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is photometrically observed star",
    "question_toks": [
      "What",
      "is",
      "photometrically",
      "observed",
      "star"
    ],
    "query": "select p.objid from photoobj as p JOIN photo_type as pt on p.type = pt.value where pt.name = 'STAR' ",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me all photometrically observable star",
    "question_toks": [
      "Show",
      "me",
      "all",
      "photometrically",
      "observable",
      "star"
    ],
    "query": "select p.objid from photoobj as p JOIN photo_type as pt on p.type = pt.value where pt.name = 'STAR' ",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all photometrically observable star that have spectral observations. Retrieve the object id, right ascension, and declination. ",
    "question_toks": [
      "Find",
      "all",
      "photometrically",
      "observable",
      "star",
      "that",
      "have",
      "spectral",
      "observations",
      ".",
      "Retrieve",
      "the",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      ",",
      "and",
      "declination",
      "."
    ],
    "query": "select p.objid, p.ra, p.dec from photoobj as p join specobj as s on s.bestobjid = p.objid join photo_type as pt on p.type = pt.value where pt.name = 'STAR'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the object id, right ascension, and declination of photometrically observed star that have spectral observations.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      ",",
      "and",
      "declination",
      "of",
      "photometrically",
      "observed",
      "star",
      "that",
      "have",
      "spectral",
      "observations",
      "."
    ],
    "query": "select p.objid, p.ra, p.dec from photoobj as p join specobj as s on s.bestobjid = p.objid join photo_type as pt on p.type = pt.value where pt.name = 'STAR'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is photometrically observed Galaxy",
    "question_toks": [
      "What",
      "is",
      "photometrically",
      "observed",
      "Galaxy"
    ],
    "query": "select p.objid from photoobj as p JOIN photo_type as pt on p.type = pt.value where pt.name = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find Galaxy that are photometrically observable",
    "question_toks": [
      "Find",
      "Galaxy",
      "that",
      "are",
      "photometrically",
      "observable"
    ],
    "query": "select p.objid from photoobj as p JOIN photo_type as pt on p.type = pt.value where pt.name = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all photometrically observable Galaxy that have spectral observations. Retrieve the object id, right ascension, and declination. ",
    "question_toks": [
      "Find",
      "all",
      "photometrically",
      "observable",
      "Galaxy",
      "that",
      "have",
      "spectral",
      "observations",
      ".",
      "Retrieve",
      "the",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      ",",
      "and",
      "declination",
      "."
    ],
    "query": "select p.objid, p.ra, p.dec from photoobj as p join specobj as s on s.bestobjid = p.objid join photo_type as pt on p.type = pt.value where  pt.name = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the object id, right ascension and declination of photometrically observable Galaxy that have spectral observations.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      "and",
      "declination",
      "of",
      "photometrically",
      "observable",
      "Galaxy",
      "that",
      "have",
      "spectral",
      "observations",
      "."
    ],
    "query": "select p.objid, p.ra, p.dec from photoobj as p join specobj as s on s.bestobjid = p.objid join photo_type as pt on p.type = pt.value where  pt.name = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids, right ascensions and declinations of photometrically observable galaxy whose right ascension is greater than 185, right ascension is less than 186, declination is greater than 15, declination is less than 16.",
    "question_toks": [
      "Find",
      "the",
      "object",
      "ids",
      ",",
      "right",
      "ascensions",
      "and",
      "declinations",
      "of",
      "photometrically",
      "observable",
      "galaxy",
      "whose",
      "right",
      "ascension",
      "is",
      "greater",
      "than",
      "185",
      ",",
      "right",
      "ascension",
      "is",
      "less",
      "than",
      "186",
      ",",
      "declination",
      "is",
      "greater",
      "than",
      "15",
      ",",
      "declination",
      "is",
      "less",
      "than",
      "16",
      "."
    ],
    "query": "select p.objid, p.ra, p.dec from photoobj as p JOIN photo_type as pt on p.type = pt.value where p.ra > 185 and p.ra < 186 and p.dec > 15 and p.dec < 16 and pt.name = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          185.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          186.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          15.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          16.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "p.ra",
      ">",
      "185",
      "and",
      "p.ra",
      "<",
      "186",
      "and",
      "p.dec",
      ">",
      "15",
      "and",
      "p.dec",
      "<",
      "16",
      "and",
      "pt.name",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me object id, right ascensions and declinations of photometrically observed galaxy in a certain area, of which the right ascension is between 185 and 186, declination is bertween 15 and 16.",
    "question_toks": [
      "Show",
      "me",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascensions",
      "and",
      "declinations",
      "of",
      "photometrically",
      "observed",
      "galaxy",
      "in",
      "a",
      "certain",
      "area",
      ",",
      "of",
      "which",
      "the",
      "right",
      "ascension",
      "is",
      "between",
      "185",
      "and",
      "186",
      ",",
      "declination",
      "is",
      "bertween",
      "15",
      "and",
      "16",
      "."
    ],
    "query": "select p.objid, p.ra, p.dec from photoobj as p JOIN photo_type as pt on p.type = pt.value where p.ra > 185 and p.ra < 186 and p.dec > 15 and p.dec < 16 and pt.name = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          185.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          186.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          15.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          16.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "p.ra",
      ">",
      "185",
      "and",
      "p.ra",
      "<",
      "186",
      "and",
      "p.dec",
      ">",
      "15",
      "and",
      "p.dec",
      "<",
      "16",
      "and",
      "pt.name",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids, right ascensions and declinations of photometrically observable star whose right ascension is greater than 185, right ascension is less than 186, declination is greater than 15, declination is less than 16.",
    "question_toks": [
      "Find",
      "the",
      "object",
      "ids",
      ",",
      "right",
      "ascensions",
      "and",
      "declinations",
      "of",
      "photometrically",
      "observable",
      "star",
      "whose",
      "right",
      "ascension",
      "is",
      "greater",
      "than",
      "185",
      ",",
      "right",
      "ascension",
      "is",
      "less",
      "than",
      "186",
      ",",
      "declination",
      "is",
      "greater",
      "than",
      "15",
      ",",
      "declination",
      "is",
      "less",
      "than",
      "16",
      "."
    ],
    "query": "select p.objid, p.ra, p.dec from photoobj as p JOIN photo_type as pt on p.type = pt.value where p.ra > 185 and p.ra < 186 and p.dec > 15 and p.dec < 16 and pt.name = 'STAR'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          185.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          186.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          15.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          16.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "p.ra",
      ">",
      "185",
      "and",
      "p.ra",
      "<",
      "186",
      "and",
      "p.dec",
      ">",
      "15",
      "and",
      "p.dec",
      "<",
      "16",
      "and",
      "pt.name",
      "=",
      "\"STAR\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me object id, right ascensions and declinations of photometrically observed star in a certain area, of which the right ascension is between 185 and 186, declination is bertween 15 and 16.",
    "question_toks": [
      "Show",
      "me",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascensions",
      "and",
      "declinations",
      "of",
      "photometrically",
      "observed",
      "star",
      "in",
      "a",
      "certain",
      "area",
      ",",
      "of",
      "which",
      "the",
      "right",
      "ascension",
      "is",
      "between",
      "185",
      "and",
      "186",
      ",",
      "declination",
      "is",
      "bertween",
      "15",
      "and",
      "16",
      "."
    ],
    "query": "select p.objid, p.ra, p.dec from photoobj as p JOIN photo_type as pt on p.type = pt.value where p.ra > 185 and p.ra < 186 and p.dec > 15 and p.dec < 16 and pt.name = 'STAR'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          185.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          186.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          15.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          16.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "p.ra",
      ">",
      "185",
      "and",
      "p.ra",
      "<",
      "186",
      "and",
      "p.dec",
      ">",
      "15",
      "and",
      "p.dec",
      "<",
      "16",
      "and",
      "pt.name",
      "=",
      "\"STAR\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic observed star,  whose right ascension is greater than 185 and less than 186, declination is greater than 15 and less than 16. Retrieve their object id, right ascension, declination, and photometric object type",
    "question_toks": [
      "Find",
      "all",
      "spectroscopic",
      "observed",
      "star",
      ",",
      " ",
      "whose",
      "right",
      "ascension",
      "is",
      "greater",
      "than",
      "185",
      "and",
      "less",
      "than",
      "186",
      ",",
      "declination",
      "is",
      "greater",
      "than",
      "15",
      "and",
      "less",
      "than",
      "16",
      ".",
      "Retrieve",
      "their",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      ",",
      "declination",
      ",",
      "and",
      "photometric",
      "object",
      "type"
    ],
    "query": "select p.objid, p.ra, p.dec, s.z from Photoobj as p join specobj as s on s.bestobjid = p.objid where s.ra > 185 and s.ra < 186 AND s.dec > 15 and s.dec < 16 and s.class = 'STAR'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              49,
              false
            ],
            null
          ],
          185.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              49,
              false
            ],
            null
          ],
          186.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              50,
              false
            ],
            null
          ],
          15.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              50,
              false
            ],
            null
          ],
          16.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      ",",
      "s.z",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "where",
      "s.ra",
      ">",
      "185",
      "and",
      "s.ra",
      "<",
      "186",
      "and",
      "s.dec",
      ">",
      "15",
      "and",
      "s.dec",
      "<",
      "16",
      "and",
      "s.class",
      "=",
      "\"STAR\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Fetch me the object id, right ascension, declination, and redshift of spectroscopic observed star in a certain area, of which the right ascension is in an unbouded interval of 185 and 186, declination is in an unbouded interval of 15 and 16.",
    "question_toks": [
      "Fetch",
      "me",
      "the",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      ",",
      "declination",
      ",",
      "and",
      "redshift",
      "of",
      "spectroscopic",
      "observed",
      "star",
      "in",
      "a",
      "certain",
      "area",
      ",",
      "of",
      "which",
      "the",
      "right",
      "ascension",
      "is",
      "in",
      "an",
      "unbouded",
      "interval",
      "of",
      "185",
      "and",
      "186",
      ",",
      "declination",
      "is",
      "in",
      "an",
      "unbouded",
      "interval",
      "of",
      "15",
      "and",
      "16",
      "."
    ],
    "query": "select p.objid, p.ra, p.dec, s.z from Photoobj as p join specobj as s on s.bestobjid = p.objid where s.ra > 185 and s.ra < 186 AND s.dec > 15 and s.dec < 16 and s.class = 'STAR'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              49,
              false
            ],
            null
          ],
          185.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              49,
              false
            ],
            null
          ],
          186.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              50,
              false
            ],
            null
          ],
          15.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              50,
              false
            ],
            null
          ],
          16.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      ",",
      "s.z",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "where",
      "s.ra",
      ">",
      "185",
      "and",
      "s.ra",
      "<",
      "186",
      "and",
      "s.dec",
      ">",
      "15",
      "and",
      "s.dec",
      "<",
      "16",
      "and",
      "s.class",
      "=",
      "\"STAR\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find properties of all spectroscopic observed galaxy,  whose right ascension is greater than 185 and less than 186, declination is greater than 15 and less than 16.",
    "question_toks": [
      "Find",
      "properties",
      "of",
      "all",
      "spectroscopic",
      "observed",
      "galaxy",
      ",",
      " ",
      "whose",
      "right",
      "ascension",
      "is",
      "greater",
      "than",
      "185",
      "and",
      "less",
      "than",
      "186",
      ",",
      "declination",
      "is",
      "greater",
      "than",
      "15",
      "and",
      "less",
      "than",
      "16",
      "."
    ],
    "query": "select p.objID, p.ra, p.dec, s.z from Photoobj as p join specobj as s on s.bestobjid = p.objid where s.ra > 185 and s.ra < 186 AND s.dec > 15 and s.dec < 16 and s.class = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              49,
              false
            ],
            null
          ],
          185.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              49,
              false
            ],
            null
          ],
          186.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              50,
              false
            ],
            null
          ],
          15.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              50,
              false
            ],
            null
          ],
          16.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      ",",
      "s.z",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "where",
      "s.ra",
      ">",
      "185",
      "and",
      "s.ra",
      "<",
      "186",
      "and",
      "s.dec",
      ">",
      "15",
      "and",
      "s.dec",
      "<",
      "16",
      "and",
      "s.class",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the object id, right ascension, declination, and redshift of spectroscopic observed galaxy in a certain area, of which the right ascension is in an unbouded interval of 185 and 186, declination is in an unbouded interval of 15 and 16.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      ",",
      "declination",
      ",",
      "and",
      "redshift",
      "of",
      "spectroscopic",
      "observed",
      "galaxy",
      "in",
      "a",
      "certain",
      "area",
      ",",
      "of",
      "which",
      "the",
      "right",
      "ascension",
      "is",
      "in",
      "an",
      "unbouded",
      "interval",
      "of",
      "185",
      "and",
      "186",
      ",",
      "declination",
      "is",
      "in",
      "an",
      "unbouded",
      "interval",
      "of",
      "15",
      "and",
      "16",
      "."
    ],
    "query": "select p.objID, p.ra, p.dec, s.z from Photoobj as p join specobj as s on s.bestobjid = p.objid where s.ra > 185 and s.ra < 186 AND s.dec > 15 and s.dec < 16 and s.class = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              49,
              false
            ],
            null
          ],
          185.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              49,
              false
            ],
            null
          ],
          186.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              50,
              false
            ],
            null
          ],
          15.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              50,
              false
            ],
            null
          ],
          16.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      ",",
      "s.z",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "where",
      "s.ra",
      ">",
      "185",
      "and",
      "s.ra",
      "<",
      "186",
      "and",
      "s.dec",
      ">",
      "15",
      "and",
      "s.dec",
      "<",
      "16",
      "and",
      "s.class",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all photometrically observable star with a difference of magnitude u and magnitude g is less than 0.4,  the difference between magnitude g and magnitude r is less than 0.7, the difference between magnitude r and magnitude i is greater than 0.4 and the difference between magnitude i and magnitude z is greater than 0.4",
    "question_toks": [
      "Find",
      "all",
      "photometrically",
      "observable",
      "star",
      "with",
      "a",
      "difference",
      "of",
      "magnitude",
      "u",
      "and",
      "magnitude",
      "g",
      "is",
      "less",
      "than",
      "0.4",
      ",",
      " ",
      "the",
      "difference",
      "between",
      "magnitude",
      "g",
      "and",
      "magnitude",
      "r",
      "is",
      "less",
      "than",
      "0.7",
      ",",
      "the",
      "difference",
      "between",
      "magnitude",
      "r",
      "and",
      "magnitude",
      "i",
      "is",
      "greater",
      "than",
      "0.4",
      "and",
      "the",
      "difference",
      "between",
      "magnitude",
      "i",
      "and",
      "magnitude",
      "z",
      "is",
      "greater",
      "than",
      "0.4"
    ],
    "query": "select p.objid from photoobj as p JOIN photo_type as pt on p.type = pt.value where pt.name = 'STAR' and p.u - p.g < 0.4  and p.g - p.r < 0.7 and p.r - p.i > 0.4 and p.i - p.z > 0.4",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              29,
              false
            ],
            [
              0,
              30,
              false
            ]
          ],
          0.7,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              30,
              false
            ],
            [
              0,
              31,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              31,
              false
            ],
            [
              0,
              32,
              false
            ]
          ],
          0.4,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\"",
      "and",
      "p.u",
      "-",
      "p.g",
      "<",
      "0.4",
      "and",
      "p.g",
      "-",
      "p.r",
      "<",
      "0.7",
      "and",
      "p.r",
      "-",
      "p.i",
      ">",
      "0.4",
      "and",
      "p.i",
      "-",
      "p.z",
      ">",
      "0.4"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the photometrically observed star with the following constraints in its color bands, u - g < 0.4, g - r < 0.7, r - i > 0.4 and i - z > 0.4",
    "question_toks": [
      "Show",
      "me",
      "the",
      "photometrically",
      "observed",
      "star",
      "with",
      "the",
      "following",
      "constraints",
      "in",
      "its",
      "color",
      "bands",
      ",",
      "u",
      "-",
      "g",
      "<",
      "0.4",
      ",",
      "g",
      "-",
      "r",
      "<",
      "0.7",
      ",",
      "r",
      "-",
      "i",
      ">",
      "0.4",
      "and",
      "i",
      "-",
      "z",
      ">",
      "0.4"
    ],
    "query": "select p.objid from photoobj as p JOIN photo_type as pt on p.type = pt.value where pt.name = 'STAR' and p.u - p.g < 0.4  and p.g - p.r < 0.7 and p.r - p.i > 0.4 and p.i - p.z > 0.4",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              29,
              false
            ],
            [
              0,
              30,
              false
            ]
          ],
          0.7,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              30,
              false
            ],
            [
              0,
              31,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              31,
              false
            ],
            [
              0,
              32,
              false
            ]
          ],
          0.4,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\"",
      "and",
      "p.u",
      "-",
      "p.g",
      "<",
      "0.4",
      "and",
      "p.g",
      "-",
      "p.r",
      "<",
      "0.7",
      "and",
      "p.r",
      "-",
      "p.i",
      ">",
      "0.4",
      "and",
      "p.i",
      "-",
      "p.z",
      ">",
      "0.4"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all star in photometrically observable binary star system, of which the neighbor's distance less than 0.05,  the difference of magnitude u and magnitude g is lower than 0.4, the difference of magnitude g and magnitude r is lower than 0.7, the difference of magnitude r and magnitude i is higher than 0.4 and the difference of magnitude i and magnitude z is higher than 0.4",
    "question_toks": [
      "Find",
      "all",
      "star",
      "in",
      "photometrically",
      "observable",
      "binary",
      "star",
      "system",
      ",",
      "of",
      "which",
      "the",
      "neighbor",
      "'s",
      "distance",
      "less",
      "than",
      "0.05",
      ",",
      " ",
      "the",
      "difference",
      "of",
      "magnitude",
      "u",
      "and",
      "magnitude",
      "g",
      "is",
      "lower",
      "than",
      "0.4",
      ",",
      "the",
      "difference",
      "of",
      "magnitude",
      "g",
      "and",
      "magnitude",
      "r",
      "is",
      "lower",
      "than",
      "0.7",
      ",",
      "the",
      "difference",
      "of",
      "magnitude",
      "r",
      "and",
      "magnitude",
      "i",
      "is",
      "higher",
      "than",
      "0.4",
      "and",
      "the",
      "difference",
      "of",
      "magnitude",
      "i",
      "and",
      "magnitude",
      "z",
      "is",
      "higher",
      "than",
      "0.4"
    ],
    "query": "select p.objid from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'STAR' and (p.u - p.g) < 0.4 and (p.g - p.r) < 0.7 and  (p.r - p.i) > 0.4 and (p.i - p.z) > 0.4 and p.objid in (select n.objid from neighbors as n join photo_type as pt on n.neighbortype = pt.value where n.distance < 0.05 and pt.name = 'STAR');",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              29,
              false
            ],
            [
              0,
              30,
              false
            ]
          ],
          0.7,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              30,
              false
            ],
            [
              0,
              31,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              31,
              false
            ],
            [
              0,
              32,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ],
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    59,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                4,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                0.05,
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    60,
                    false
                  ],
                  null
                ],
                "\"STAR\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\"",
      "and",
      "(",
      "p.u",
      "-",
      "p.g",
      ")",
      "<",
      "0.4",
      "and",
      "(",
      "p.g",
      "-",
      "p.r",
      ")",
      "<",
      "0.7",
      "and",
      "(",
      "p.r",
      "-",
      "p.i",
      ")",
      ">",
      "0.4",
      "and",
      "(",
      "p.i",
      "-",
      "p.z",
      ")",
      ">",
      "0.4",
      "and",
      "p.objid",
      "in",
      "(",
      "select",
      "n.objid",
      "from",
      "neighbors",
      "as",
      "n",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "n.neighbortype",
      "=",
      "pt.value",
      "where",
      "n.distance",
      "<",
      "0.05",
      "and",
      "pt.name",
      "=",
      "\"STAR\"",
      ")",
      ";"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the star in photometrically observed binary star system, of which the neighbor's distance is less than 0.05 and has the following constraints in its color bands, u - g < 0.4, g - r < 0.7, r - i > 0.4 and i - z > 0.4 ",
    "question_toks": [
      "What",
      "is",
      "the",
      "star",
      "in",
      "photometrically",
      "observed",
      "binary",
      "star",
      "system",
      ",",
      "of",
      "which",
      "the",
      "neighbor",
      "'s",
      "distance",
      "is",
      "less",
      "than",
      "0.05",
      "and",
      "has",
      "the",
      "following",
      "constraints",
      "in",
      "its",
      "color",
      "bands",
      ",",
      "u",
      "-",
      "g",
      "<",
      "0.4",
      ",",
      "g",
      "-",
      "r",
      "<",
      "0.7",
      ",",
      "r",
      "-",
      "i",
      ">",
      "0.4",
      "and",
      "i",
      "-",
      "z",
      ">",
      "0.4"
    ],
    "query": "select p.objid from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'STAR' and (p.u - p.g) < 0.4 and (p.g - p.r) < 0.7 and  (p.r - p.i) > 0.4 and (p.i - p.z) > 0.4 and p.objid in (select n.objid from neighbors as n join photo_type as pt on n.neighbortype = pt.value where n.distance < 0.05 and pt.name = 'STAR');",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              29,
              false
            ],
            [
              0,
              30,
              false
            ]
          ],
          0.7,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              30,
              false
            ],
            [
              0,
              31,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              31,
              false
            ],
            [
              0,
              32,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ],
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    59,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                4,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                0.05,
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    60,
                    false
                  ],
                  null
                ],
                "\"STAR\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\"",
      "and",
      "(",
      "p.u",
      "-",
      "p.g",
      ")",
      "<",
      "0.4",
      "and",
      "(",
      "p.g",
      "-",
      "p.r",
      ")",
      "<",
      "0.7",
      "and",
      "(",
      "p.r",
      "-",
      "p.i",
      ")",
      ">",
      "0.4",
      "and",
      "(",
      "p.i",
      "-",
      "p.z",
      ")",
      ">",
      "0.4",
      "and",
      "p.objid",
      "in",
      "(",
      "select",
      "n.objid",
      "from",
      "neighbors",
      "as",
      "n",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "n.neighbortype",
      "=",
      "pt.value",
      "where",
      "n.distance",
      "<",
      "0.05",
      "and",
      "pt.name",
      "=",
      "\"STAR\"",
      ")",
      ";"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of photometrically observed GALAXY whose magnitude r is less than 17, extinction r is greater than 0.2.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "photometrically",
      "observed",
      "GALAXY",
      "whose",
      "magnitude",
      "r",
      "is",
      "less",
      "than",
      "17",
      ",",
      "extinction",
      "r",
      "is",
      "greater",
      "than",
      "0.2",
      "."
    ],
    "query": "select count(*) from photoobj as p join photo_type as pt on p.type = pt.value where p.r < 17 and p.extinction_r > 0.2 and pt.name = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          17.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          0.2,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "p.r",
      "<",
      "17",
      "and",
      "p.extinction_r",
      ">",
      "0.2",
      "and",
      "pt.name",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many photometrically observable GALAXY of which magnitude r is lower than 17 and extinction r is higher than 0.2.",
    "question_toks": [
      "How",
      "many",
      "photometrically",
      "observable",
      "GALAXY",
      "of",
      "which",
      "magnitude",
      "r",
      "is",
      "lower",
      "than",
      "17",
      "and",
      "extinction",
      "r",
      "is",
      "higher",
      "than",
      "0.2",
      "."
    ],
    "query": "select count(*) from photoobj as p join photo_type as pt on p.type = pt.value where p.r < 17 and p.extinction_r > 0.2 and pt.name = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          17.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          0.2,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "p.r",
      "<",
      "17",
      "and",
      "p.extinction_r",
      ">",
      "0.2",
      "and",
      "pt.name",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all photometric observable GALAXY whose magnitude g is brighter than 22, the difference of magnitude u and magnitude g is between -0.27 and 0.71, the difference of magnitude g and magnitude r is between -0.24 and 0.35, the difference of magnitude r and magnitude i is between -0.27 and 0.57 and the difference of magnitude i and magnitude z is between -0.35 and 0.7. Retrieve the object id and magnitude g with descent order by magnitude g. ",
    "question_toks": [
      "Find",
      "all",
      "photometric",
      "observable",
      "GALAXY",
      "whose",
      "magnitude",
      "g",
      "is",
      "brighter",
      "than",
      "22",
      ",",
      "the",
      "difference",
      "of",
      "magnitude",
      "u",
      "and",
      "magnitude",
      "g",
      "is",
      "between",
      "-0.27",
      "and",
      "0.71",
      ",",
      "the",
      "difference",
      "of",
      "magnitude",
      "g",
      "and",
      "magnitude",
      "r",
      "is",
      "between",
      "-0.24",
      "and",
      "0.35",
      ",",
      "the",
      "difference",
      "of",
      "magnitude",
      "r",
      "and",
      "magnitude",
      "i",
      "is",
      "between",
      "-0.27",
      "and",
      "0.57",
      "and",
      "the",
      "difference",
      "of",
      "magnitude",
      "i",
      "and",
      "magnitude",
      "z",
      "is",
      "between",
      "-0.35",
      "and",
      "0.7",
      ".",
      "Retrieve",
      "the",
      "object",
      "i",
      "d",
      "and",
      "magnitude",
      "g",
      "with",
      "descent",
      "order",
      "by",
      "magnitude",
      "g."
    ],
    "query": "select p.objid, p.g from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'GALAXY' and p.g <= 22 and p.u - p.g >= -0.27 and p.u - p.g < 0.71 and p.g - p.r  >= -0.24 and p.g - p.r < 0.35 and p.r - p.i >= -0.27 and p.r - p.i < 0.57 and p.i - p.z  >= -0.35 and p.i - p.z < 0.7 order by p.g desc",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ],
        "and",
        [
          false,
          6,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          22.0,
          null
        ],
        "and",
        [
          false,
          5,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          -0.27,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          0.71,
          null
        ],
        "and",
        [
          false,
          5,
          [
            1,
            [
              0,
              29,
              false
            ],
            [
              0,
              30,
              false
            ]
          ],
          -0.24,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              29,
              false
            ],
            [
              0,
              30,
              false
            ]
          ],
          0.35,
          null
        ],
        "and",
        [
          false,
          5,
          [
            1,
            [
              0,
              30,
              false
            ],
            [
              0,
              31,
              false
            ]
          ],
          -0.27,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              30,
              false
            ],
            [
              0,
              31,
              false
            ]
          ],
          0.57,
          null
        ],
        "and",
        [
          false,
          5,
          [
            1,
            [
              0,
              31,
              false
            ],
            [
              0,
              32,
              false
            ]
          ],
          -0.35,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              31,
              false
            ],
            [
              0,
              32,
              false
            ]
          ],
          0.7,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.g",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"GALAXY\"",
      "and",
      "p.g",
      "<=",
      "22",
      "and",
      "p.u",
      "-",
      "p.g",
      ">=",
      "-0.27",
      "and",
      "p.u",
      "-",
      "p.g",
      "<",
      "0.71",
      "and",
      "p.g",
      "-",
      "p.r",
      ">=",
      "-0.24",
      "and",
      "p.g",
      "-",
      "p.r",
      "<",
      "0.35",
      "and",
      "p.r",
      "-",
      "p.i",
      ">=",
      "-0.27",
      "and",
      "p.r",
      "-",
      "p.i",
      "<",
      "0.57",
      "and",
      "p.i",
      "-",
      "p.z",
      ">=",
      "-0.35",
      "and",
      "p.i",
      "-",
      "p.z",
      "<",
      "0.7",
      "order",
      "by",
      "p.g",
      "desc"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the photometric observed Galaxy of which the color band magnitude g is brighter than 22, and the other constraints as following, u - g >= -0.27 but < 0.71, g - r >= -0.24 but < 0.35, r - i >= -0.27 but < 0.57, and i - z >= -0.35 but < 0.7. Rerank the result with descent order by color band magnitude g ",
    "question_toks": [
      "Show",
      "me",
      "the",
      "photometric",
      "observed",
      "Galaxy",
      "of",
      "which",
      "the",
      "color",
      "band",
      "magnitude",
      "g",
      "is",
      "brighter",
      "than",
      "22",
      ",",
      "and",
      "the",
      "other",
      "constraints",
      "as",
      "following",
      ",",
      "u",
      "-",
      "g",
      ">",
      "=",
      "-0.27",
      "but",
      "<",
      "0.71",
      ",",
      "g",
      "-",
      "r",
      ">",
      "=",
      "-0.24",
      "but",
      "<",
      "0.35",
      ",",
      "r",
      "-",
      "i",
      ">",
      "=",
      "-0.27",
      "but",
      "<",
      "0.57",
      ",",
      "and",
      "i",
      "-",
      "z",
      ">",
      "=",
      "-0.35",
      "but",
      "<",
      "0.7",
      ".",
      "Rerank",
      "the",
      "result",
      "with",
      "descent",
      "order",
      "by",
      "color",
      "band",
      "magnitude",
      "g"
    ],
    "query": "select p.objid, p.g from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'GALAXY' and p.g <= 22 and p.u - p.g >= -0.27 and p.u - p.g < 0.71 and p.g - p.r  >= -0.24 and p.g - p.r < 0.35 and p.r - p.i >= -0.27 and p.r - p.i < 0.57 and p.i - p.z  >= -0.35 and p.i - p.z < 0.7 order by p.g desc",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ],
        "and",
        [
          false,
          6,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          22.0,
          null
        ],
        "and",
        [
          false,
          5,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          -0.27,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          0.71,
          null
        ],
        "and",
        [
          false,
          5,
          [
            1,
            [
              0,
              29,
              false
            ],
            [
              0,
              30,
              false
            ]
          ],
          -0.24,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              29,
              false
            ],
            [
              0,
              30,
              false
            ]
          ],
          0.35,
          null
        ],
        "and",
        [
          false,
          5,
          [
            1,
            [
              0,
              30,
              false
            ],
            [
              0,
              31,
              false
            ]
          ],
          -0.27,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              30,
              false
            ],
            [
              0,
              31,
              false
            ]
          ],
          0.57,
          null
        ],
        "and",
        [
          false,
          5,
          [
            1,
            [
              0,
              31,
              false
            ],
            [
              0,
              32,
              false
            ]
          ],
          -0.35,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              31,
              false
            ],
            [
              0,
              32,
              false
            ]
          ],
          0.7,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.g",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"GALAXY\"",
      "and",
      "p.g",
      "<=",
      "22",
      "and",
      "p.u",
      "-",
      "p.g",
      ">=",
      "-0.27",
      "and",
      "p.u",
      "-",
      "p.g",
      "<",
      "0.71",
      "and",
      "p.g",
      "-",
      "p.r",
      ">=",
      "-0.24",
      "and",
      "p.g",
      "-",
      "p.r",
      "<",
      "0.35",
      "and",
      "p.r",
      "-",
      "p.i",
      ">=",
      "-0.27",
      "and",
      "p.r",
      "-",
      "p.i",
      "<",
      "0.57",
      "and",
      "p.i",
      "-",
      "p.z",
      ">=",
      "-0.35",
      "and",
      "p.i",
      "-",
      "p.z",
      "<",
      "0.7",
      "order",
      "by",
      "p.g",
      "desc"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find object id, right ascension, declination of photometrically observed star whose magnitude i is brighter than 19 and fainter than 0, the difference of magnitude g and magnitude r is higher than 2.26, the difference of magnitude i and magnitude z is lower than 0.25, and either the difference of magnitude u and magnitude g is greater than 2.0 or magnitude u is fainter than 22.3",
    "question_toks": [
      "Find",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      ",",
      "declination",
      "of",
      "photometrically",
      "observed",
      "star",
      "whose",
      "magnitude",
      "i",
      "is",
      "brighter",
      "than",
      "19",
      "and",
      "fainter",
      "than",
      "0",
      ",",
      "the",
      "difference",
      "of",
      "magnitude",
      "g",
      "and",
      "magnitude",
      "r",
      "is",
      "higher",
      "than",
      "2.26",
      ",",
      "the",
      "difference",
      "of",
      "magnitude",
      "i",
      "and",
      "magnitude",
      "z",
      "is",
      "lower",
      "than",
      "0.25",
      ",",
      "and",
      "either",
      "the",
      "difference",
      "of",
      "magnitude",
      "u",
      "and",
      "magnitude",
      "g",
      "is",
      "greater",
      "than",
      "2.0",
      "or",
      "magnitude",
      "u",
      "is",
      "fainter",
      "than",
      "22.3"
    ],
    "query": "SELECT p.objid, p.ra, p.dec from photoobj AS p JOIN photo_type AS pt ON p.type = pt.value where pt.name = 'STAR' and i < 19 and i > 0 and g - r > 2.26 and i - z < 0.25 and u - g > 2.0  or  u > 22.3",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          19.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          0.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              29,
              false
            ],
            [
              0,
              30,
              false
            ]
          ],
          2.26,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              31,
              false
            ],
            [
              0,
              32,
              false
            ]
          ],
          0.25,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          2.0,
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          22.3,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\"",
      "and",
      "i",
      "<",
      "19",
      "and",
      "i",
      ">",
      "0",
      "and",
      "g",
      "-",
      "r",
      ">",
      "2.26",
      "and",
      "i",
      "-",
      "z",
      "<",
      "0.25",
      "and",
      "u",
      "-",
      "g",
      ">",
      "2.0",
      "or",
      "u",
      ">",
      "22.3"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the photometrically observable star with the color band magnitude i brighter than 19 but fainter than 0, the difference of magnitude g and r is greater than 2.26, the difference of magnitude i and z is less than 0.25, and either the difference of magnitude u and g is greater than 2.0 or the color band magnitude u is fainter than 22.3",
    "question_toks": [
      "Show",
      "me",
      "the",
      "photometrically",
      "observable",
      "star",
      "with",
      "the",
      "color",
      "band",
      "magnitude",
      "i",
      "brighter",
      "than",
      "19",
      "but",
      "fainter",
      "than",
      "0",
      ",",
      "the",
      "difference",
      "of",
      "magnitude",
      "g",
      "and",
      "r",
      "is",
      "greater",
      "than",
      "2.26",
      ",",
      "the",
      "difference",
      "of",
      "magnitude",
      "i",
      "and",
      "z",
      "is",
      "less",
      "than",
      "0.25",
      ",",
      "and",
      "either",
      "the",
      "difference",
      "of",
      "magnitude",
      "u",
      "and",
      "g",
      "is",
      "greater",
      "than",
      "2.0",
      "or",
      "the",
      "color",
      "band",
      "magnitude",
      "u",
      "is",
      "fainter",
      "than",
      "22.3"
    ],
    "query": "SELECT p.objid, p.ra, p.dec from photoobj AS p JOIN photo_type AS pt ON p.type = pt.value where pt.name = 'STAR' and i < 19 and i > 0 and g - r > 2.26 and i - z < 0.25 and u - g > 2.0  or  u > 22.3",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          19.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          0.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              29,
              false
            ],
            [
              0,
              30,
              false
            ]
          ],
          2.26,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              31,
              false
            ],
            [
              0,
              32,
              false
            ]
          ],
          0.25,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          2.0,
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          22.3,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\"",
      "and",
      "i",
      "<",
      "19",
      "and",
      "i",
      ">",
      "0",
      "and",
      "g",
      "-",
      "r",
      ">",
      "2.26",
      "and",
      "i",
      "-",
      "z",
      "<",
      "0.25",
      "and",
      "u",
      "-",
      "g",
      ">",
      "2.0",
      "or",
      "u",
      ">",
      "22.3"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the photometrically observable Galaxy whose right ascension is between 140.9 and 141.1, magnitude g is brighter than 18.0 and the difference of magitude u and magnitude g is greater than 2.2. Retrieve the objecti id, right ascension and declination of these objects.",
    "question_toks": [
      "What",
      "are",
      "the",
      "photometrically",
      "observable",
      "Galaxy",
      "whose",
      "right",
      "ascension",
      "is",
      "between",
      "140.9",
      "and",
      "141.1",
      ",",
      "magnitude",
      "g",
      "is",
      "brighter",
      "than",
      "18.0",
      "and",
      "the",
      "difference",
      "of",
      "magitude",
      "u",
      "and",
      "magnitude",
      "g",
      "is",
      "greater",
      "than",
      "2.2",
      ".",
      "Retrieve",
      "the",
      "objecti",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      "and",
      "declination",
      "of",
      "these",
      "objects",
      "."
    ],
    "query": "select objid, ra, dec from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'GALAXY' and p.ra between 140.9 and 141.1 and p.g < 18.0 and p.u - p.g > 2.2",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ],
        "and",
        [
          false,
          1,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          140.9,
          141.1
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          18.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          2.2,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "objid",
      ",",
      "ra",
      ",",
      "dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"GALAXY\"",
      "and",
      "p.ra",
      "between",
      "140.9",
      "and",
      "141.1",
      "and",
      "p.g",
      "<",
      "18.0",
      "and",
      "p.u",
      "-",
      "p.g",
      ">",
      "2.2"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the object id, right ascension and declination of photometrically observed Galaxy, of which the the right ascension in a range of from 140.9 to 141.1, the magnitude g is less than 18.0 and the difference of magnitude u and g is higher than 2.2",
    "question_toks": [
      "Show",
      "me",
      "the",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      "and",
      "declination",
      "of",
      "photometrically",
      "observed",
      "Galaxy",
      ",",
      "of",
      "which",
      "the",
      "the",
      "right",
      "ascension",
      "in",
      "a",
      "range",
      "of",
      "from",
      "140.9",
      "to",
      "141.1",
      ",",
      "the",
      "magnitude",
      "g",
      "is",
      "less",
      "than",
      "18.0",
      "and",
      "the",
      "difference",
      "of",
      "magnitude",
      "u",
      "and",
      "g",
      "is",
      "higher",
      "than",
      "2.2"
    ],
    "query": "select objid, ra, dec from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'GALAXY' and p.ra between 140.9 and 141.1 and p.g < 18.0 and p.u - p.g > 2.2",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ],
        "and",
        [
          false,
          1,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          140.9,
          141.1
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          18.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          2.2,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "objid",
      ",",
      "ra",
      ",",
      "dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"GALAXY\"",
      "and",
      "p.ra",
      "between",
      "140.9",
      "and",
      "141.1",
      "and",
      "p.g",
      "<",
      "18.0",
      "and",
      "p.u",
      "-",
      "p.g",
      ">",
      "2.2"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object id, right ascension and declination of spectroscopic Galaxy, which have value of magnitude g between 17 and 18 and redshift less than 0.05. ",
    "question_toks": [
      "Find",
      "the",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      "and",
      "declination",
      "of",
      "spectroscopic",
      "Galaxy",
      ",",
      "which",
      "have",
      "value",
      "of",
      "magnitude",
      "g",
      "between",
      "17",
      "and",
      "18",
      "and",
      "redshift",
      "less",
      "than",
      "0.05",
      "."
    ],
    "query": "select p.objid, p.ra, p.dec from photoobj as p join specobj as s on s.bestobjid = p.objid where s.class = 'GALAXY' and p.g between 17 and 18 and s.z < 0.05",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ],
        "and",
        [
          false,
          1,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          17.0,
          18.0
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              51,
              false
            ],
            null
          ],
          0.05,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "where",
      "s.class",
      "=",
      "\"GALAXY\"",
      "and",
      "p.g",
      "between",
      "17",
      "and",
      "18",
      "and",
      "s.z",
      "<",
      "0.05"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Fetch me the object id, right ascension and declination of spectroscopic Galaxy with the color band magnitude g brighter than 18.0 but fainter than 17 and redshift lower than 0.05",
    "question_toks": [
      "Fetch",
      "me",
      "the",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      "and",
      "declination",
      "of",
      "spectroscopic",
      "Galaxy",
      "with",
      "the",
      "color",
      "band",
      "magnitude",
      "g",
      "brighter",
      "than",
      "18.0",
      "but",
      "fainter",
      "than",
      "17",
      "and",
      "redshift",
      "lower",
      "than",
      "0.05"
    ],
    "query": "select p.objid, p.ra, p.dec from photoobj as p join specobj as s on s.bestobjid = p.objid where s.class = 'GALAXY' and p.g between 17 and 18 and s.z < 0.05",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ],
        "and",
        [
          false,
          1,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          17.0,
          18.0
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              51,
              false
            ],
            null
          ],
          0.05,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "where",
      "s.class",
      "=",
      "\"GALAXY\"",
      "and",
      "p.g",
      "between",
      "17",
      "and",
      "18",
      "and",
      "s.z",
      "<",
      "0.05"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Search for photometrically observed Star with the difference of magnitude u and magnitude g is less than 0.5. Retrieve each object id, right ascension and declination.",
    "question_toks": [
      "Search",
      "for",
      "photometrically",
      "observed",
      "Star",
      "with",
      "the",
      "difference",
      "of",
      "magnitude",
      "u",
      "and",
      "magnitude",
      "g",
      "is",
      "less",
      "than",
      "0.5",
      ".",
      "Retrieve",
      "each",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      "and",
      "declination",
      "."
    ],
    "query": "select p.objid, p.ra, p.dec from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'STAR' and p.u - p.g < 0.5",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          0.5,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\"",
      "and",
      "p.u",
      "-",
      "p.g",
      "<",
      "0.5"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the object id, right ascension and declination of photometrically observable Star with the constraints: color band u - g < 0.5 ",
    "question_toks": [
      "Show",
      "me",
      "the",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      "and",
      "declination",
      "of",
      "photometrically",
      "observable",
      "Star",
      "with",
      "the",
      "constraints",
      ":",
      "color",
      "band",
      "u",
      "-",
      "g",
      "<",
      "0.5"
    ],
    "query": "select p.objid, p.ra, p.dec from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'STAR' and p.u - p.g < 0.5",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          0.5,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\"",
      "and",
      "p.u",
      "-",
      "p.g",
      "<",
      "0.5"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Search for photometrically observed Star that has a difference of magnitude u and magnitude g less than 0.5. Retrieve all magnitude values (u, g, r, i and z) of these objects.",
    "question_toks": [
      "Search",
      "for",
      "photometrically",
      "observed",
      "Star",
      "that",
      "has",
      "a",
      "difference",
      "of",
      "magnitude",
      "u",
      "and",
      "magnitude",
      "g",
      "less",
      "than",
      "0.5",
      ".",
      "Retrieve",
      "all",
      "magnitude",
      "values",
      "(",
      "u",
      ",",
      "g",
      ",",
      "r",
      ",",
      "i",
      "and",
      "z",
      ")",
      "of",
      "these",
      "objects",
      "."
    ],
    "query": "select p.u, p.g, p.r, p.i, p.z from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'STAR' and  p.u - p.g < 0.5",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          0.5,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.u",
      ",",
      "p.g",
      ",",
      "p.r",
      ",",
      "p.i",
      ",",
      "p.z",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\"",
      "and",
      "p.u",
      "-",
      "p.g",
      "<",
      "0.5"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Fetch all color bands (magnitude u, g, r, i, z) of photometrically observable Star where color band u - g < 0.5",
    "question_toks": [
      "Fetch",
      "all",
      "color",
      "bands",
      "(",
      "magnitude",
      "u",
      ",",
      "g",
      ",",
      "r",
      ",",
      "i",
      ",",
      "z",
      ")",
      "of",
      "photometrically",
      "observable",
      "Star",
      "where",
      "color",
      "band",
      "u",
      "-",
      "g",
      "<",
      "0.5"
    ],
    "query": "select p.u, p.g, p.r, p.i, p.z from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'STAR' and  p.u - p.g < 0.5",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          0.5,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.u",
      ",",
      "p.g",
      ",",
      "p.r",
      ",",
      "p.i",
      ",",
      "p.z",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\"",
      "and",
      "p.u",
      "-",
      "p.g",
      "<",
      "0.5"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object id, right ascension and declination from spectroscopically observed GALAXY whose value of magnitude g fainter than 17 but brighter than 18, and redshift less than 0.05. ",
    "question_toks": [
      "Find",
      "the",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      "and",
      "declination",
      "from",
      "spectroscopically",
      "observed",
      "GALAXY",
      "whose",
      "value",
      "of",
      "magnitude",
      "g",
      "fainter",
      "than",
      "17",
      "but",
      "brighter",
      "than",
      "18",
      ",",
      "and",
      "redshift",
      "less",
      "than",
      "0.05",
      "."
    ],
    "query": "select p.objid, p.ra, p.dec from photoobj as p join specobj as s on s.bestobjid = p.objid where s.class = 'GALAXY' and p.g between 17 and 18 and s.z < 0.05",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ],
        "and",
        [
          false,
          1,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          17.0,
          18.0
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              51,
              false
            ],
            null
          ],
          0.05,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "where",
      "s.class",
      "=",
      "\"GALAXY\"",
      "and",
      "p.g",
      "between",
      "17",
      "and",
      "18",
      "and",
      "s.z",
      "<",
      "0.05"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the spectroscopically observable Galaxy with magnitude g between 17 and 18, and redshift below 0.05. Retrieve the object id, right ascension and declination of them.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "spectroscopically",
      "observable",
      "Galaxy",
      "with",
      "magnitude",
      "g",
      "between",
      "17",
      "and",
      "18",
      ",",
      "and",
      "redshift",
      "below",
      "0.05",
      ".",
      "Retrieve",
      "the",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      "and",
      "declination",
      "of",
      "them",
      "."
    ],
    "query": "select p.objid, p.ra, p.dec from photoobj as p join specobj as s on s.bestobjid = p.objid where s.class = 'GALAXY' and p.g between 17 and 18 and s.z < 0.05",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ],
        "and",
        [
          false,
          1,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          17.0,
          18.0
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              51,
              false
            ],
            null
          ],
          0.05,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "where",
      "s.class",
      "=",
      "\"GALAXY\"",
      "and",
      "p.g",
      "between",
      "17",
      "and",
      "18",
      "and",
      "s.z",
      "<",
      "0.05"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all magnitude values (u, g, r, i and z) from spectroscopically observable GALAXY whose value of magnitude g between 17 and 18,  and redshift less than 0.05. ",
    "question_toks": [
      "Find",
      "all",
      "magnitude",
      "values",
      "(",
      "u",
      ",",
      "g",
      ",",
      "r",
      ",",
      "i",
      "and",
      "z",
      ")",
      "from",
      "spectroscopically",
      "observable",
      "GALAXY",
      "whose",
      "value",
      "of",
      "magnitude",
      "g",
      "between",
      "17",
      "and",
      "18",
      ",",
      " ",
      "and",
      "redshift",
      "less",
      "than",
      "0.05",
      "."
    ],
    "query": "select p.u, p.g, p.r, p.i, p.z from photoobj as p join specobj as s on s.bestobjid = p.objid where s.class = 'GALAXY' and p.g between 17 and 18 and s.z < 0.05",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ],
        "and",
        [
          false,
          1,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          17.0,
          18.0
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              51,
              false
            ],
            null
          ],
          0.05,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.u",
      ",",
      "p.g",
      ",",
      "p.r",
      ",",
      "p.i",
      ",",
      "p.z",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "where",
      "s.class",
      "=",
      "\"GALAXY\"",
      "and",
      "p.g",
      "between",
      "17",
      "and",
      "18",
      "and",
      "s.z",
      "<",
      "0.05"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Fetch all color bands (magnitude u, g, r, i, z) of spectroscopically observable Galaxy with color band g fainter than 17 but brighter than 18 and redshift lower than 0.05",
    "question_toks": [
      "Fetch",
      "all",
      "color",
      "bands",
      "(",
      "magnitude",
      "u",
      ",",
      "g",
      ",",
      "r",
      ",",
      "i",
      ",",
      "z",
      ")",
      "of",
      "spectroscopically",
      "observable",
      "Galaxy",
      "with",
      "color",
      "band",
      "g",
      "fainter",
      "than",
      "17",
      "but",
      "brighter",
      "than",
      "18",
      "and",
      "redshift",
      "lower",
      "than",
      "0.05"
    ],
    "query": "select p.u, p.g, p.r, p.i, p.z from photoobj as p join specobj as s on s.bestobjid = p.objid where s.class = 'GALAXY' and p.g between 17 and 18 and s.z < 0.05",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ],
        "and",
        [
          false,
          1,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          17.0,
          18.0
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              51,
              false
            ],
            null
          ],
          0.05,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.u",
      ",",
      "p.g",
      ",",
      "p.r",
      ",",
      "p.i",
      ",",
      "p.z",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "where",
      "s.class",
      "=",
      "\"GALAXY\"",
      "and",
      "p.g",
      "between",
      "17",
      "and",
      "18",
      "and",
      "s.z",
      "<",
      "0.05"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the photometric objects with object ids, nearst neighbor ids, distance of center-neighbors, center types.",
    "question_toks": [
      "Find",
      "the",
      "photometric",
      "objects",
      "with",
      "object",
      "ids",
      ",",
      "nearst",
      "neighbor",
      "ids",
      ",",
      "distance",
      "of",
      "center",
      "-",
      "neighbors",
      ",",
      "center",
      "types",
      "."
    ],
    "query": "select p.objid, n.neighborobjid, n.distance, n.type from neighbors as n join  photoobj as p on n.objid = p.objid",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "n.neighborobjid",
      ",",
      "n.distance",
      ",",
      "n.type",
      "from",
      "neighbors",
      "as",
      "n",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "n.objid",
      "=",
      "p.objid"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Fetch me the object id, nearst neighbor ids, distance of center to neighbors and center type from all of the nearst neighbors",
    "question_toks": [
      "Fetch",
      "me",
      "the",
      "object",
      "i",
      "d",
      ",",
      "nearst",
      "neighbor",
      "ids",
      ",",
      "distance",
      "of",
      "center",
      "to",
      "neighbors",
      "and",
      "center",
      "type",
      "from",
      "all",
      "of",
      "the",
      "nearst",
      "neighbors"
    ],
    "query": "select p.objid, n.neighborobjid, n.distance, n.type from neighbors as n join  photoobj as p on n.objid = p.objid",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "n.neighborobjid",
      ",",
      "n.distance",
      ",",
      "n.type",
      "from",
      "neighbors",
      "as",
      "n",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "n.objid",
      "=",
      "p.objid"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the different object type classifications of photometric objects whose right ascension is greater than 100 and declination is less than 100.",
    "question_toks": [
      "Find",
      "the",
      "different",
      "object",
      "type",
      "classifications",
      "of",
      "photometric",
      "objects",
      "whose",
      "right",
      "ascension",
      "is",
      "greater",
      "than",
      "100",
      "and",
      "declination",
      "is",
      "less",
      "than",
      "100",
      "."
    ],
    "query": "select distinct p.type from photoobj as p where p.ra > 100 and p.dec < 100",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          100.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "distinct",
      "p.type",
      "from",
      "photoobj",
      "as",
      "p",
      "where",
      "p.ra",
      ">",
      "100",
      "and",
      "p.dec",
      "<",
      "100"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the unique object type classifications of photometrically observed objects with right ascension higher than 100 and declination lower than 100",
    "question_toks": [
      "What",
      "is",
      "the",
      "unique",
      "object",
      "type",
      "classifications",
      "of",
      "photometrically",
      "observed",
      "objects",
      "with",
      "right",
      "ascension",
      "higher",
      "than",
      "100",
      "and",
      "declination",
      "lower",
      "than",
      "100"
    ],
    "query": "select distinct p.type from photoobj as p where p.ra > 100 and p.dec < 100",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          100.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "distinct",
      "p.type",
      "from",
      "photoobj",
      "as",
      "p",
      "where",
      "p.ra",
      ">",
      "100",
      "and",
      "p.dec",
      "<",
      "100"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of photometrically observed STAR",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "photometrically",
      "observed",
      "STAR"
    ],
    "query": "select count(*) from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'STAR'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Count the photometrically observable STAR",
    "question_toks": [
      "Count",
      "the",
      "photometrically",
      "observable",
      "STAR"
    ],
    "query": "select count(*) from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'STAR'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all photometrically observed object types. Return only unique records.",
    "question_toks": [
      "Find",
      "all",
      "photometrically",
      "observed",
      "object",
      "types",
      ".",
      "Return",
      "only",
      "unique",
      "records",
      "."
    ],
    "query": "select distinct pt.name from photo_type as pt join photoobj as p on p.type = pt.value",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                60,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "distinct",
      "pt.name",
      "from",
      "photo_type",
      "as",
      "pt",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "p.type",
      "=",
      "pt.value"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the all different photometrical observation types among all photometric objects.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "all",
      "different",
      "photometrical",
      "observation",
      "types",
      "among",
      "all",
      "photometric",
      "objects",
      "."
    ],
    "query": "select distinct pt.name from photo_type as pt join photoobj as p on p.type = pt.value",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                60,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "distinct",
      "pt.name",
      "from",
      "photo_type",
      "as",
      "pt",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "p.type",
      "=",
      "pt.value"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find everything about photometrically observable Galaxy.",
    "question_toks": [
      "Find",
      "everything",
      "about",
      "photometrically",
      "observable",
      "Galaxy",
      "."
    ],
    "query": "select * from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "*",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Fetch me all about photometrically observed Galaxy",
    "question_toks": [
      "Fetch",
      "me",
      "all",
      "about",
      "photometrically",
      "observed",
      "Galaxy"
    ],
    "query": "select * from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "*",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids, right ascensions, declinations and observed types of photometrically observed Star.",
    "question_toks": [
      "Find",
      "the",
      "object",
      "ids",
      ",",
      "right",
      "ascensions",
      ",",
      "declinations",
      "and",
      "observed",
      "types",
      "of",
      "photometrically",
      "observed",
      "Star",
      "."
    ],
    "query": "select p.objid, p.ra, p.dec, pt.name from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'STAR'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                60,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      ",",
      "pt.name",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the photometrically observable Star? Retrieve their right ascension, declinations and observed type as well.",
    "question_toks": [
      "What",
      "is",
      "the",
      "photometrically",
      "observable",
      "Star",
      "?",
      "Retrieve",
      "their",
      "right",
      "ascension",
      ",",
      "declinations",
      "and",
      "observed",
      "type",
      "as",
      "well",
      "."
    ],
    "query": "select p.objid, p.ra, p.dec, pt.name from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'STAR'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                60,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      ",",
      "pt.name",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the photometric objects with object ids, spectroscopic object id whose spectroscopic class is 'GALAXY', with the difference of magnitude u and magnitude r greater trhan 2.22 and the difference of magnitude g and magnitude i greater than 1.",
    "question_toks": [
      "Find",
      "the",
      "photometric",
      "objects",
      "with",
      "object",
      "ids",
      ",",
      "spectroscopic",
      "object",
      "i",
      "d",
      "whose",
      "spectroscopic",
      "class",
      "is",
      "'",
      "GALAXY",
      "'",
      ",",
      "with",
      "the",
      "difference",
      "of",
      "magnitude",
      "u",
      "and",
      "magnitude",
      "r",
      "greater",
      "trhan",
      "2.22",
      "and",
      "the",
      "difference",
      "of",
      "magnitude",
      "g",
      "and",
      "magnitude",
      "i",
      "greater",
      "than",
      "1",
      "."
    ],
    "query": "select p.objid, s.specobjid from photoobj as p join specobj as s on s.bestobjid = p.objid where s.class = 'GALAXY' and p.u - p.r > 2.22 and p.g - p.i > 1",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              30,
              false
            ]
          ],
          2.22,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              29,
              false
            ],
            [
              0,
              31,
              false
            ]
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "s.specobjid",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "where",
      "s.class",
      "=",
      "\"GALAXY\"",
      "and",
      "p.u",
      "-",
      "p.r",
      ">",
      "2.22",
      "and",
      "p.g",
      "-",
      "p.i",
      ">",
      "1"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the photometric objct id and corresponding spectroscopic object id of the spectroscopically observable Galaxy with the constraints in color bands, where u - r > 2.22 and g - i > 1",
    "question_toks": [
      "What",
      "is",
      "the",
      "photometric",
      "objct",
      "i",
      "d",
      "and",
      "corresponding",
      "spectroscopic",
      "object",
      "i",
      "d",
      "of",
      "the",
      "spectroscopically",
      "observable",
      "Galaxy",
      "with",
      "the",
      "constraints",
      "in",
      "color",
      "bands",
      ",",
      "where",
      "u",
      "-",
      "r",
      ">",
      "2.22",
      "and",
      "g",
      "-",
      "i",
      ">",
      "1"
    ],
    "query": "select p.objid, s.specobjid from photoobj as p join specobj as s on s.bestobjid = p.objid where s.class = 'GALAXY' and p.u - p.r > 2.22 and p.g - p.i > 1",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              30,
              false
            ]
          ],
          2.22,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              29,
              false
            ],
            [
              0,
              31,
              false
            ]
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "s.specobjid",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "where",
      "s.class",
      "=",
      "\"GALAXY\"",
      "and",
      "p.u",
      "-",
      "p.r",
      ">",
      "2.22",
      "and",
      "p.g",
      "-",
      "p.i",
      ">",
      "1"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the photometric object id and modified julien date for all 'K' type Star",
    "question_toks": [
      "Show",
      "me",
      "the",
      "photometric",
      "object",
      "i",
      "d",
      "and",
      "modified",
      "julien",
      "date",
      "for",
      "all",
      "'",
      "K",
      "'",
      "type",
      "Star"
    ],
    "query": "SELECT T2.objid, T1.mjd FROM specobj AS T1 JOIN photoobj as T2 ON T1.bestobjid = T2.objid WHERE T1.class = 'STAR' and T1.subclass like '%K%'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                42,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          9,
          [
            0,
            [
              0,
              55,
              false
            ],
            null
          ],
          "\"%K%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "t2.objid",
      ",",
      "t1.mjd",
      "from",
      "specobj",
      "as",
      "t1",
      "join",
      "photoobj",
      "as",
      "t2",
      "on",
      "t1.bestobjid",
      "=",
      "t2.objid",
      "where",
      "t1.class",
      "=",
      "\"STAR\"",
      "and",
      "t1.subclass",
      "like",
      "\"%K%\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the photometric object id and modified julien date of spectroscopic Star with spectral type 'K'",
    "question_toks": [
      "What",
      "is",
      "the",
      "photometric",
      "object",
      "i",
      "d",
      "and",
      "modified",
      "julien",
      "date",
      "of",
      "spectroscopic",
      "Star",
      "with",
      "spectral",
      "type",
      "'",
      "K",
      "'"
    ],
    "query": "SELECT T2.objid, T1.mjd FROM specobj AS T1 JOIN photoobj as T2 ON T1.bestobjid = T2.objid WHERE T1.class = 'STAR' and T1.subclass like '%K%'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                42,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          9,
          [
            0,
            [
              0,
              55,
              false
            ],
            null
          ],
          "\"%K%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "t2.objid",
      ",",
      "t1.mjd",
      "from",
      "specobj",
      "as",
      "t1",
      "join",
      "photoobj",
      "as",
      "t2",
      "on",
      "t1.bestobjid",
      "=",
      "t2.objid",
      "where",
      "t1.class",
      "=",
      "\"STAR\"",
      "and",
      "t1.subclass",
      "like",
      "\"%K%\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find redshift, right ascension and declination of all photometrically observed Starforming Galaxy",
    "question_toks": [
      "Find",
      "redshift",
      ",",
      "right",
      "ascension",
      "and",
      "declination",
      "of",
      "all",
      "photometrically",
      "observed",
      "Starforming",
      "Galaxy"
    ],
    "query": "SELECT T1.z, T1.ra, T1.dec FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid JOIN photo_type AS T3 ON T2.type = T3.value WHERE T1.subclass = 'STARFORMING' AND T3.name = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                49,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                50,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              55,
              false
            ],
            null
          ],
          "\"STARFORMING\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "t1.z",
      ",",
      "t1.ra",
      ",",
      "t1.dec",
      "from",
      "specobj",
      "as",
      "t1",
      "join",
      "photoobj",
      "as",
      "t2",
      "on",
      "t1.bestobjid",
      "=",
      "t2.objid",
      "join",
      "photo_type",
      "as",
      "t3",
      "on",
      "t2.type",
      "=",
      "t3.value",
      "where",
      "t1.subclass",
      "=",
      "\"STARFORMING\"",
      "and",
      "t3.name",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the redshift of STARFORMING GALAXY, which can be observed photometrically? Retrieve their right ascension and declination as well.",
    "question_toks": [
      "What",
      "is",
      "the",
      "redshift",
      "of",
      "STARFORMING",
      "GALAXY",
      ",",
      "which",
      "can",
      "be",
      "observed",
      "photometrically",
      "?",
      "Retrieve",
      "their",
      "right",
      "ascension",
      "and",
      "declination",
      "as",
      "well",
      "."
    ],
    "query": "SELECT T1.z, T1.ra, T1.dec FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid JOIN photo_type AS T3 ON T2.type = T3.value WHERE T1.subclass = 'STARFORMING' AND T3.name = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                49,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                50,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              55,
              false
            ],
            null
          ],
          "\"STARFORMING\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "t1.z",
      ",",
      "t1.ra",
      ",",
      "t1.dec",
      "from",
      "specobj",
      "as",
      "t1",
      "join",
      "photoobj",
      "as",
      "t2",
      "on",
      "t1.bestobjid",
      "=",
      "t2.objid",
      "join",
      "photo_type",
      "as",
      "t3",
      "on",
      "t2.type",
      "=",
      "t3.value",
      "where",
      "t1.subclass",
      "=",
      "\"STARFORMING\"",
      "and",
      "t3.name",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the mininum of the extinction r grouped by run number of photometric Galaxy?",
    "question_toks": [
      "What",
      "are",
      "the",
      "mininum",
      "of",
      "the",
      "extinction",
      "r",
      "grouped",
      "by",
      "run",
      "number",
      "of",
      "photometric",
      "Galaxy",
      "?"
    ],
    "query": "SELECT min( T1.extinction_r), T1.run FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name = 'GALAXY' GROUP BY T1.run",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "min",
      "(",
      "t1.extinction_r",
      ")",
      ",",
      "t1.run",
      "from",
      "photoobj",
      "as",
      "t1",
      "join",
      "photo_type",
      "as",
      "t2",
      "on",
      "t1.type",
      "=",
      "t2.value",
      "where",
      "t2.name",
      "=",
      "\"GALAXY\"",
      "group",
      "by",
      "t1.run"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the minimal value of the extinction r for each run number across the photometrically observed Galaxy",
    "question_toks": [
      "Find",
      "the",
      "minimal",
      "value",
      "of",
      "the",
      "extinction",
      "r",
      "for",
      "each",
      "run",
      "number",
      "across",
      "the",
      "photometrically",
      "observed",
      "Galaxy"
    ],
    "query": "SELECT min( T1.extinction_r), T1.run FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name = 'GALAXY' GROUP BY T1.run",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "min",
      "(",
      "t1.extinction_r",
      ")",
      ",",
      "t1.run",
      "from",
      "photoobj",
      "as",
      "t1",
      "join",
      "photo_type",
      "as",
      "t2",
      "on",
      "t1.type",
      "=",
      "t2.value",
      "where",
      "t2.name",
      "=",
      "\"GALAXY\"",
      "group",
      "by",
      "t1.run"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the galactic coordinates of all Quasi stellar object (QSO)",
    "question_toks": [
      "What",
      "are",
      "the",
      "galactic",
      "coordinates",
      "of",
      "all",
      "Quasi",
      "stellar",
      "object",
      "(",
      "QSO",
      ")"
    ],
    "query": "SELECT T1.b, T1.l FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid where T2.class = 'QSO'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"QSO\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "t1.b",
      ",",
      "t1.l",
      "from",
      "photoobj",
      "as",
      "t1",
      "join",
      "specobj",
      "as",
      "t2",
      "on",
      "t1.objid",
      "=",
      "t2.bestobjid",
      "where",
      "t2.class",
      "=",
      "\"QSO\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find me the galactic latitude and longitude of all Quasi stellar object (QSO)",
    "question_toks": [
      "Find",
      "me",
      "the",
      "galactic",
      "latitude",
      "and",
      "longitude",
      "of",
      "all",
      "Quasi",
      "stellar",
      "object",
      "(",
      "QSO",
      ")"
    ],
    "query": "SELECT T1.b, T1.l FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid where T2.class = 'QSO'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"QSO\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "t1.b",
      ",",
      "t1.l",
      "from",
      "photoobj",
      "as",
      "t1",
      "join",
      "specobj",
      "as",
      "t2",
      "on",
      "t1.objid",
      "=",
      "t2.bestobjid",
      "where",
      "t2.class",
      "=",
      "\"QSO\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many photometrically observable Binary Star system we can find, in which it has a distance from cetner to nearest neighbor of under 0.05, a difference of magnitude u and g below 0.4, a difference of magnitude g and r below 0.7, a difference of magnitude r and i above 0.4, and a difference of magnitude i and z above 0.4.",
    "question_toks": [
      "How",
      "many",
      "photometrically",
      "observable",
      "Binary",
      "Star",
      "system",
      "we",
      "can",
      "find",
      ",",
      "in",
      "which",
      "it",
      "has",
      "a",
      "distance",
      "from",
      "cetner",
      "to",
      "nearest",
      "neighbor",
      "of",
      "under",
      "0.05",
      ",",
      "a",
      "difference",
      "of",
      "magnitude",
      "u",
      "and",
      "g",
      "below",
      "0.4",
      ",",
      "a",
      "difference",
      "of",
      "magnitude",
      "g",
      "and",
      "r",
      "below",
      "0.7",
      ",",
      "a",
      "difference",
      "of",
      "magnitude",
      "r",
      "and",
      "i",
      "above",
      "0.4",
      ",",
      "and",
      "a",
      "difference",
      "of",
      "magnitude",
      "i",
      "and",
      "z",
      "above",
      "0.4",
      "."
    ],
    "query": "SELECT count( T1.objid ) FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid JOIN photo_type AS T3 ON T2.type = T3.value WHERE T3.name = 'STAR' and T1.neighbortype = T2.type and T1.distance < 0.05 and T2.u - T2.g < 0.4 and T2.g - T2.r < 0.7 and T2.r - T2.i > 0.4 and T2.i - T2.z > 0.4",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          [
            0,
            13,
            false
          ],
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          0.05,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              29,
              false
            ],
            [
              0,
              30,
              false
            ]
          ],
          0.7,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              30,
              false
            ],
            [
              0,
              31,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              31,
              false
            ],
            [
              0,
              32,
              false
            ]
          ],
          0.4,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "t1.objid",
      ")",
      "from",
      "neighbors",
      "as",
      "t1",
      "join",
      "photoobj",
      "as",
      "t2",
      "on",
      "t1.objid",
      "=",
      "t2.objid",
      "join",
      "photo_type",
      "as",
      "t3",
      "on",
      "t2.type",
      "=",
      "t3.value",
      "where",
      "t3.name",
      "=",
      "\"STAR\"",
      "and",
      "t1.neighbortype",
      "=",
      "t2.type",
      "and",
      "t1.distance",
      "<",
      "0.05",
      "and",
      "t2.u",
      "-",
      "t2.g",
      "<",
      "0.4",
      "and",
      "t2.g",
      "-",
      "t2.r",
      "<",
      "0.7",
      "and",
      "t2.r",
      "-",
      "t2.i",
      ">",
      "0.4",
      "and",
      "t2.i",
      "-",
      "t2.z",
      ">",
      "0.4"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Count the number of photometrically observed Binary Star system, where the distance between center and neighbor below 0.05 and with the following constraints, u - g < 0.4, g - r < 0.7, r - i > 0.4, i - z > 0.4",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "photometrically",
      "observed",
      "Binary",
      "Star",
      "system",
      ",",
      "where",
      "the",
      "distance",
      "between",
      "center",
      "and",
      "neighbor",
      "below",
      "0.05",
      "and",
      "with",
      "the",
      "following",
      "constraints",
      ",",
      "u",
      "-",
      "g",
      "<",
      "0.4",
      ",",
      "g",
      "-",
      "r",
      "<",
      "0.7",
      ",",
      "r",
      "-",
      "i",
      ">",
      "0.4",
      ",",
      "i",
      "-",
      "z",
      ">",
      "0.4"
    ],
    "query": "SELECT count( T1.objid ) FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid JOIN photo_type AS T3 ON T2.type = T3.value WHERE T3.name = 'STAR' and T1.neighbortype = T2.type and T1.distance < 0.05 and T2.u - T2.g < 0.4 and T2.g - T2.r < 0.7 and T2.r - T2.i > 0.4 and T2.i - T2.z > 0.4",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          [
            0,
            13,
            false
          ],
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          0.05,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              29,
              false
            ],
            [
              0,
              30,
              false
            ]
          ],
          0.7,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              30,
              false
            ],
            [
              0,
              31,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              31,
              false
            ],
            [
              0,
              32,
              false
            ]
          ],
          0.4,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "t1.objid",
      ")",
      "from",
      "neighbors",
      "as",
      "t1",
      "join",
      "photoobj",
      "as",
      "t2",
      "on",
      "t1.objid",
      "=",
      "t2.objid",
      "join",
      "photo_type",
      "as",
      "t3",
      "on",
      "t2.type",
      "=",
      "t3.value",
      "where",
      "t3.name",
      "=",
      "\"STAR\"",
      "and",
      "t1.neighbortype",
      "=",
      "t2.type",
      "and",
      "t1.distance",
      "<",
      "0.05",
      "and",
      "t2.u",
      "-",
      "t2.g",
      "<",
      "0.4",
      "and",
      "t2.g",
      "-",
      "t2.r",
      "<",
      "0.7",
      "and",
      "t2.r",
      "-",
      "t2.i",
      ">",
      "0.4",
      "and",
      "t2.i",
      "-",
      "t2.z",
      ">",
      "0.4"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Count all star in photometrically observable Binary Star system, of which the neighbor's distance less than 0.05, the difference of magnitude u and magnitude g is lower than 0.4, the difference of magnitude g and magnitude r is lower than 0.7, the difference of magnitude r and magnitude i is higher than 0.4 and the difference of magnitude i and magnitude z is higher than 0.4",
    "question_toks": [
      "Count",
      "all",
      "star",
      "in",
      "photometrically",
      "observable",
      "Binary",
      "Star",
      "system",
      ",",
      "of",
      "which",
      "the",
      "neighbor",
      "'s",
      "distance",
      "less",
      "than",
      "0.05",
      ",",
      "the",
      "difference",
      "of",
      "magnitude",
      "u",
      "and",
      "magnitude",
      "g",
      "is",
      "lower",
      "than",
      "0.4",
      ",",
      "the",
      "difference",
      "of",
      "magnitude",
      "g",
      "and",
      "magnitude",
      "r",
      "is",
      "lower",
      "than",
      "0.7",
      ",",
      "the",
      "difference",
      "of",
      "magnitude",
      "r",
      "and",
      "magnitude",
      "i",
      "is",
      "higher",
      "than",
      "0.4",
      "and",
      "the",
      "difference",
      "of",
      "magnitude",
      "i",
      "and",
      "magnitude",
      "z",
      "is",
      "higher",
      "than",
      "0.4"
    ],
    "query": "SELECT COUNT(p.objid) FROM photoobj AS p JOIN photo_type AS pt ON p.type = pt.value WHERE pt.name = 'STAR' AND (p.u - p.g) < 0.4 AND (p.g - p.r) < 0.7 AND  (p.r - p.i) > 0.4 AND (p.i - p.z) > 0.4 AND p.objid in (SELECT n.objid FROM neighbors AS n JOIN photo_type AS pt ON n.neighbortype = pt.value WHERE n.distance < 0.05 AND pt.name = 'STAR')",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              29,
              false
            ],
            [
              0,
              30,
              false
            ]
          ],
          0.7,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              30,
              false
            ],
            [
              0,
              31,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              31,
              false
            ],
            [
              0,
              32,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ],
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    59,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                4,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                0.05,
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    60,
                    false
                  ],
                  null
                ],
                "\"STAR\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "p.objid",
      ")",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\"",
      "and",
      "(",
      "p.u",
      "-",
      "p.g",
      ")",
      "<",
      "0.4",
      "and",
      "(",
      "p.g",
      "-",
      "p.r",
      ")",
      "<",
      "0.7",
      "and",
      "(",
      "p.r",
      "-",
      "p.i",
      ")",
      ">",
      "0.4",
      "and",
      "(",
      "p.i",
      "-",
      "p.z",
      ")",
      ">",
      "0.4",
      "and",
      "p.objid",
      "in",
      "(",
      "select",
      "n.objid",
      "from",
      "neighbors",
      "as",
      "n",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "n.neighbortype",
      "=",
      "pt.value",
      "where",
      "n.distance",
      "<",
      "0.05",
      "and",
      "pt.name",
      "=",
      "\"STAR\"",
      ")"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many photometrically observable Binary Star system were found, of which the distance to nearst neighbor below 0.05, the difference of magnitude u and g less than 0.4, the difference of magnitude g and r less than 0.7, the difference of magnitude r and i greater than 0.4, and the difference of magnitude i and z greater than 0.4.",
    "question_toks": [
      "How",
      "many",
      "photometrically",
      "observable",
      "Binary",
      "Star",
      "system",
      "were",
      "found",
      ",",
      "of",
      "which",
      "the",
      "distance",
      "to",
      "nearst",
      "neighbor",
      "below",
      "0.05",
      ",",
      "the",
      "difference",
      "of",
      "magnitude",
      "u",
      "and",
      "g",
      "less",
      "than",
      "0.4",
      ",",
      "the",
      "difference",
      "of",
      "magnitude",
      "g",
      "and",
      "r",
      "less",
      "than",
      "0.7",
      ",",
      "the",
      "difference",
      "of",
      "magnitude",
      "r",
      "and",
      "i",
      "greater",
      "than",
      "0.4",
      ",",
      "and",
      "the",
      "difference",
      "of",
      "magnitude",
      "i",
      "and",
      "z",
      "greater",
      "than",
      "0.4",
      "."
    ],
    "query": "SELECT COUNT(p.objid) FROM photoobj AS p JOIN photo_type AS pt ON p.type = pt.value WHERE pt.name = 'STAR' AND (p.u - p.g) < 0.4 AND (p.g - p.r) < 0.7 AND  (p.r - p.i) > 0.4 AND (p.i - p.z) > 0.4 AND p.objid in (SELECT n.objid FROM neighbors AS n JOIN photo_type AS pt ON n.neighbortype = pt.value WHERE n.distance < 0.05 AND pt.name = 'STAR')",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              28,
              false
            ],
            [
              0,
              29,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          4,
          [
            1,
            [
              0,
              29,
              false
            ],
            [
              0,
              30,
              false
            ]
          ],
          0.7,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              30,
              false
            ],
            [
              0,
              31,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          3,
          [
            1,
            [
              0,
              31,
              false
            ],
            [
              0,
              32,
              false
            ]
          ],
          0.4,
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ],
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    59,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                4,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                0.05,
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    60,
                    false
                  ],
                  null
                ],
                "\"STAR\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "p.objid",
      ")",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\"",
      "and",
      "(",
      "p.u",
      "-",
      "p.g",
      ")",
      "<",
      "0.4",
      "and",
      "(",
      "p.g",
      "-",
      "p.r",
      ")",
      "<",
      "0.7",
      "and",
      "(",
      "p.r",
      "-",
      "p.i",
      ")",
      ">",
      "0.4",
      "and",
      "(",
      "p.i",
      "-",
      "p.z",
      ")",
      ">",
      "0.4",
      "and",
      "p.objid",
      "in",
      "(",
      "select",
      "n.objid",
      "from",
      "neighbors",
      "as",
      "n",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "n.neighbortype",
      "=",
      "pt.value",
      "where",
      "n.distance",
      "<",
      "0.05",
      "and",
      "pt.name",
      "=",
      "\"STAR\"",
      ")"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all star observed both photometrically and spectroscopically whose subclass is 'Carbon'",
    "question_toks": [
      "Find",
      "all",
      "star",
      "observed",
      "both",
      "photometrically",
      "and",
      "spectroscopically",
      "whose",
      "subclass",
      "is",
      "'",
      "Carbon",
      "'"
    ],
    "query": "select s.specobjid from specobj as s JOIN photoobj as p ON s.bestobjid = p.objid JOIN photo_type as pt ON p.type = pt.value WHERE s.class = 'STAR' and pt.name = 'STAR' and s.subclass = 'Carbon'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              55,
              false
            ],
            null
          ],
          "\"Carbon\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "s.specobjid",
      "from",
      "specobj",
      "as",
      "s",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "s.class",
      "=",
      "\"STAR\"",
      "and",
      "pt.name",
      "=",
      "\"STAR\"",
      "and",
      "s.subclass",
      "=",
      "\"Carbon\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the photometrically observable Star with subclass of Carbon, which was spectroscopically observed as well",
    "question_toks": [
      "Show",
      "me",
      "the",
      "photometrically",
      "observable",
      "Star",
      "with",
      "subclass",
      "of",
      "Carbon",
      ",",
      "which",
      "was",
      "spectroscopically",
      "observed",
      "as",
      "well"
    ],
    "query": "select s.specobjid from specobj as s JOIN photoobj as p ON s.bestobjid = p.objid JOIN photo_type as pt ON p.type = pt.value WHERE s.class = 'STAR' and pt.name = 'STAR' and s.subclass = 'Carbon'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              55,
              false
            ],
            null
          ],
          "\"Carbon\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "s.specobjid",
      "from",
      "specobj",
      "as",
      "s",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "s.class",
      "=",
      "\"STAR\"",
      "and",
      "pt.name",
      "=",
      "\"STAR\"",
      "and",
      "s.subclass",
      "=",
      "\"Carbon\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of photometrically observed Galaxy",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "photometrically",
      "observed",
      "Galaxy"
    ],
    "query": "select COUNT(*) from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Count the number of photometrically observable Galaxy",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "photometrically",
      "observable",
      "Galaxy"
    ],
    "query": "select COUNT(*) from photoobj as p join photo_type as pt on p.type = pt.value where pt.name = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids, classes and subclasses of spectroscopically and photometrically observable Galaxy with AGN.",
    "question_toks": [
      "Find",
      "the",
      "object",
      "ids",
      ",",
      "classes",
      "and",
      "subclasses",
      "of",
      "spectroscopically",
      "and",
      "photometrically",
      "observable",
      "Galaxy",
      "with",
      "AGN",
      "."
    ],
    "query": "select s.specobjid, s.class, s.subclass from specobj as s join photoobj as p on s.bestobjid = p.objid join photo_type as pt on p.type = pt.value where s.subclass like '%AGN%' and s.class = 'GALAXY' and pt.name = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                54,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                55,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              55,
              false
            ],
            null
          ],
          "\"%AGN%\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "s.specobjid",
      ",",
      "s.class",
      ",",
      "s.subclass",
      "from",
      "specobj",
      "as",
      "s",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "s.subclass",
      "like",
      "\"%AGN%\"",
      "and",
      "s.class",
      "=",
      "\"GALAXY\"",
      "and",
      "pt.name",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Fetch me the spectroscopic object id, the spectroscopic class and subclass of Galaxy with AGN observed both spectroscopically and photometrically.",
    "question_toks": [
      "Fetch",
      "me",
      "the",
      "spectroscopic",
      "object",
      "i",
      "d",
      ",",
      "the",
      "spectroscopic",
      "class",
      "and",
      "subclass",
      "of",
      "Galaxy",
      "with",
      "AGN",
      "observed",
      "both",
      "spectroscopically",
      "and",
      "photometrically",
      "."
    ],
    "query": "select s.specobjid, s.class, s.subclass from specobj as s join photoobj as p on s.bestobjid = p.objid join photo_type as pt on p.type = pt.value where s.subclass like '%AGN%' and s.class = 'GALAXY' and pt.name = 'GALAXY'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                54,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                55,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              55,
              false
            ],
            null
          ],
          "\"%AGN%\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              54,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "s.specobjid",
      ",",
      "s.class",
      ",",
      "s.subclass",
      "from",
      "specobj",
      "as",
      "s",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "s.subclass",
      "like",
      "\"%AGN%\"",
      "and",
      "s.class",
      "=",
      "\"GALAXY\"",
      "and",
      "pt.name",
      "=",
      "\"GALAXY\""
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the least distance of the nearst photometrically observable Star",
    "question_toks": [
      "Show",
      "me",
      "the",
      "least",
      "distance",
      "of",
      "the",
      "nearst",
      "photometrically",
      "observable",
      "Star"
    ],
    "query": "SELECT min(n.distance) FROM neighbors AS n JOIN photo_type AS pt ON n.neighbortype = pt.value JOIN photoobj AS p ON p.objid = n.objid WHERE pt.name = 'STAR' and p.objid in (SELECT p.objid FROM photoobj AS p JOIN photo_type AS pt ON p.type = pt.value WHERE pt.name = 'STAR')",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    59,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    60,
                    false
                  ],
                  null
                ],
                "\"STAR\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "min",
      "(",
      "n.distance",
      ")",
      "from",
      "neighbors",
      "as",
      "n",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "n.neighbortype",
      "=",
      "pt.value",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "p.objid",
      "=",
      "n.objid",
      "where",
      "pt.name",
      "=",
      "\"STAR\"",
      "and",
      "p.objid",
      "in",
      "(",
      "select",
      "p.objid",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\"",
      ")"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimal distance between the nearest photometrically observed Star?",
    "question_toks": [
      "What",
      "is",
      "the",
      "minimal",
      "distance",
      "between",
      "the",
      "nearest",
      "photometrically",
      "observed",
      "Star",
      "?"
    ],
    "query": "SELECT min(n.distance) FROM neighbors AS n JOIN photo_type AS pt ON n.neighbortype = pt.value JOIN photoobj AS p ON p.objid = n.objid WHERE pt.name = 'STAR' and p.objid in (SELECT p.objid FROM photoobj AS p JOIN photo_type AS pt ON p.type = pt.value WHERE pt.name = 'STAR')",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"STAR\"",
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    59,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    60,
                    false
                  ],
                  null
                ],
                "\"STAR\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "min",
      "(",
      "n.distance",
      ")",
      "from",
      "neighbors",
      "as",
      "n",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "n.neighbortype",
      "=",
      "pt.value",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "p.objid",
      "=",
      "n.objid",
      "where",
      "pt.name",
      "=",
      "\"STAR\"",
      "and",
      "p.objid",
      "in",
      "(",
      "select",
      "p.objid",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"STAR\"",
      ")"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the longest distance of the photometrically observable GALAXY neighbors",
    "question_toks": [
      "Show",
      "me",
      "the",
      "longest",
      "distance",
      "of",
      "the",
      "photometrically",
      "observable",
      "GALAXY",
      "neighbors"
    ],
    "query": "SELECT max(n.distance) FROM neighbors AS n JOIN photo_type AS pt ON n.neighbortype = pt.value JOIN photoobj AS p ON p.objid = n.objid WHERE pt.name = 'GALAXY' and p.objid in (SELECT p.objid FROM photoobj AS p JOIN photo_type AS pt ON p.type = pt.value WHERE pt.name = 'GALAXY')",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    59,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    60,
                    false
                  ],
                  null
                ],
                "\"GALAXY\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "max",
      "(",
      "n.distance",
      ")",
      "from",
      "neighbors",
      "as",
      "n",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "n.neighbortype",
      "=",
      "pt.value",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "p.objid",
      "=",
      "n.objid",
      "where",
      "pt.name",
      "=",
      "\"GALAXY\"",
      "and",
      "p.objid",
      "in",
      "(",
      "select",
      "p.objid",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"GALAXY\"",
      ")"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximal distance between the nearest photometrically observed Star?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximal",
      "distance",
      "between",
      "the",
      "nearest",
      "photometrically",
      "observed",
      "Star",
      "?"
    ],
    "query": "SELECT max(n.distance) FROM neighbors AS n JOIN photo_type AS pt ON n.neighbortype = pt.value JOIN photoobj AS p ON p.objid = n.objid WHERE pt.name = 'GALAXY' and p.objid in (SELECT p.objid FROM photoobj AS p JOIN photo_type AS pt ON p.type = pt.value WHERE pt.name = 'GALAXY')",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          "\"GALAXY\"",
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  5
                ]
              ],
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      13,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    59,
                    false
                  ],
                  null
                ]
              ]
            },
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    60,
                    false
                  ],
                  null
                ],
                "\"GALAXY\"",
                null
              ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "max",
      "(",
      "n.distance",
      ")",
      "from",
      "neighbors",
      "as",
      "n",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "n.neighbortype",
      "=",
      "pt.value",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "p.objid",
      "=",
      "n.objid",
      "where",
      "pt.name",
      "=",
      "\"GALAXY\"",
      "and",
      "p.objid",
      "in",
      "(",
      "select",
      "p.objid",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "pt.name",
      "=",
      "\"GALAXY\"",
      ")"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the galactic coordinates of the center object with the least distance to its nearest neighbor. Please retrieve the distance also.",
    "question_toks": [
      "What",
      "are",
      "the",
      "galactic",
      "coordinates",
      "of",
      "the",
      "center",
      "object",
      "with",
      "the",
      "least",
      "distance",
      "to",
      "its",
      "nearest",
      "neighbor",
      ".",
      "Please",
      "retrieve",
      "the",
      "distance",
      "also",
      "."
    ],
    "query": "SELECT p.b, p.l, n.distance from photoobj as p join neighbors n on p.objid = n.objid where n.distance = (select min(n.distance) from neighbors as n)",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.b",
      ",",
      "p.l",
      ",",
      "n.distance",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "neighbors",
      "n",
      "on",
      "p.objid",
      "=",
      "n.objid",
      "where",
      "n.distance",
      "=",
      "(",
      "select",
      "min",
      "(",
      "n.distance",
      ")",
      "from",
      "neighbors",
      "as",
      "n",
      ")"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Fetch the least distance of the nearst neighbors. Retrieve the corresponding galactic latitude, galactic longitude as well.",
    "question_toks": [
      "Fetch",
      "the",
      "least",
      "distance",
      "of",
      "the",
      "nearst",
      "neighbors",
      ".",
      "Retrieve",
      "the",
      "corresponding",
      "galactic",
      "latitude",
      ",",
      "galactic",
      "longitude",
      "as",
      "well",
      "."
    ],
    "query": "SELECT p.b, p.l, n.distance from photoobj as p join neighbors n on p.objid = n.objid where n.distance = (select min(n.distance) from neighbors as n)",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.b",
      ",",
      "p.l",
      ",",
      "n.distance",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "neighbors",
      "n",
      "on",
      "p.objid",
      "=",
      "n.objid",
      "where",
      "n.distance",
      "=",
      "(",
      "select",
      "min",
      "(",
      "n.distance",
      ")",
      "from",
      "neighbors",
      "as",
      "n",
      ")"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the galactic coordinates of the center object with the least distance to its nearest neighbor. Please retrieve the distance also.",
    "question_toks": [
      "What",
      "are",
      "the",
      "galactic",
      "coordinates",
      "of",
      "the",
      "center",
      "object",
      "with",
      "the",
      "least",
      "distance",
      "to",
      "its",
      "nearest",
      "neighbor",
      ".",
      "Please",
      "retrieve",
      "the",
      "distance",
      "also",
      "."
    ],
    "query": "SELECT p.b, p.l, n.distance from photoobj as p join neighbors as n on p.objid = n.objid order by n.distance asc limit 1",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.b",
      ",",
      "p.l",
      ",",
      "n.distance",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "neighbors",
      "as",
      "n",
      "on",
      "p.objid",
      "=",
      "n.objid",
      "order",
      "by",
      "n.distance",
      "asc",
      "limit",
      "1"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the galactic coordinates of the center object with the least distance to the nearest neighbors. Return the distance as well.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "galactic",
      "coordinates",
      "of",
      "the",
      "center",
      "object",
      "with",
      "the",
      "least",
      "distance",
      "to",
      "the",
      "nearest",
      "neighbors",
      ".",
      "Return",
      "the",
      "distance",
      "as",
      "well",
      "."
    ],
    "query": "SELECT p.b, p.l, n.distance from photoobj as p join neighbors as n on p.objid = n.objid order by n.distance asc limit 1",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.b",
      ",",
      "p.l",
      ",",
      "n.distance",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "neighbors",
      "as",
      "n",
      "on",
      "p.objid",
      "=",
      "n.objid",
      "order",
      "by",
      "n.distance",
      "asc",
      "limit",
      "1"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the redshift of the center object with the least distance to its nearest neighbor",
    "question_toks": [
      "Show",
      "me",
      "the",
      "redshift",
      "of",
      "the",
      "center",
      "object",
      "with",
      "the",
      "least",
      "distance",
      "to",
      "its",
      "nearest",
      "neighbor"
    ],
    "query": "SELECT s.z from specobj as s join photoobj as p on s.bestobjid = p.objid join neighbors as n on p.objid = n.objid where n.distance = (select min(n.distance) from neighbors as n)",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "s.z",
      "from",
      "specobj",
      "as",
      "s",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "join",
      "neighbors",
      "as",
      "n",
      "on",
      "p.objid",
      "=",
      "n.objid",
      "where",
      "n.distance",
      "=",
      "(",
      "select",
      "min",
      "(",
      "n.distance",
      ")",
      "from",
      "neighbors",
      "as",
      "n",
      ")"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the redshift of the center object that has the minimal distance to the nearest neighbor",
    "question_toks": [
      "What",
      "is",
      "the",
      "redshift",
      "of",
      "the",
      "center",
      "object",
      "that",
      "has",
      "the",
      "minimal",
      "distance",
      "to",
      "the",
      "nearest",
      "neighbor"
    ],
    "query": "SELECT s.z from specobj as s join photoobj as p on s.bestobjid = p.objid join neighbors as n on p.objid = n.objid where n.distance = (select min(n.distance) from neighbors as n)",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "from": {
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ],
              "conds": []
            },
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      3,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
          },
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "s.z",
      "from",
      "specobj",
      "as",
      "s",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "join",
      "neighbors",
      "as",
      "n",
      "on",
      "p.objid",
      "=",
      "n.objid",
      "where",
      "n.distance",
      "=",
      "(",
      "select",
      "min",
      "(",
      "n.distance",
      ")",
      "from",
      "neighbors",
      "as",
      "n",
      ")"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the redshift of the center object with the least distance to its nearest neighbor",
    "question_toks": [
      "Show",
      "me",
      "the",
      "redshift",
      "of",
      "the",
      "center",
      "object",
      "with",
      "the",
      "least",
      "distance",
      "to",
      "its",
      "nearest",
      "neighbor"
    ],
    "query": "SELECT s.z from specobj as s join photoobj as p on s.bestobjid = p.objid join neighbors as n on p.objid = n.objid order by n.distance asc limit 1",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "s.z",
      "from",
      "specobj",
      "as",
      "s",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "join",
      "neighbors",
      "as",
      "n",
      "on",
      "p.objid",
      "=",
      "n.objid",
      "order",
      "by",
      "n.distance",
      "asc",
      "limit",
      "1"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the redshift of the center object that has the minimal distance to the nearest neighbor",
    "question_toks": [
      "What",
      "is",
      "the",
      "redshift",
      "of",
      "the",
      "center",
      "object",
      "that",
      "has",
      "the",
      "minimal",
      "distance",
      "to",
      "the",
      "nearest",
      "neighbor"
    ],
    "query": "SELECT s.z from specobj as s join photoobj as p on s.bestobjid = p.objid join neighbors as n on p.objid = n.objid order by n.distance asc limit 1",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "s.z",
      "from",
      "specobj",
      "as",
      "s",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "join",
      "neighbors",
      "as",
      "n",
      "on",
      "p.objid",
      "=",
      "n.objid",
      "order",
      "by",
      "n.distance",
      "asc",
      "limit",
      "1"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "List all unique run numbers",
    "question_toks": [
      "List",
      "all",
      "unique",
      "run",
      "numbers"
    ],
    "query": "select distinct p.run from photoobj as p",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "distinct",
      "p.run",
      "from",
      "photoobj",
      "as",
      "p"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all run numbers without duplicates",
    "question_toks": [
      "Find",
      "all",
      "run",
      "numbers",
      "without",
      "duplicates"
    ],
    "query": "select distinct p.run from photoobj as p",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "distinct",
      "p.run",
      "from",
      "photoobj",
      "as",
      "p"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many different run number are there",
    "question_toks": [
      "How",
      "many",
      "different",
      "run",
      "number",
      "are",
      "there"
    ],
    "query": "select count(distinct p.run) from photoobj as p",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "distinct",
      "p.run",
      ")",
      "from",
      "photoobj",
      "as",
      "p"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Count all unique run numbers",
    "question_toks": [
      "Count",
      "all",
      "unique",
      "run",
      "numbers"
    ],
    "query": "select count(distinct p.run) from photoobj as p",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "distinct",
      "p.run",
      ")",
      "from",
      "photoobj",
      "as",
      "p"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of photometric objects grouped by their photometrically observed type name.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "photometric",
      "objects",
      "grouped",
      "by",
      "their",
      "photometrically",
      "observed",
      "type",
      "name",
      "."
    ],
    "query": "select pt.name, count(*) from photoobj as p join photo_type as pt on pt.value = p.type group by pt.name",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                59,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                60,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          60,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "pt.name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "pt.value",
      "=",
      "p.type",
      "group",
      "by",
      "pt.name"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many photometric objects for each photometrically observation type are there?",
    "question_toks": [
      "How",
      "many",
      "photometric",
      "objects",
      "for",
      "each",
      "photometrically",
      "observation",
      "type",
      "are",
      "there",
      "?"
    ],
    "query": "select pt.name, count(*) from photoobj as p join photo_type as pt on pt.value = p.type group by pt.name",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                59,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                60,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          60,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "pt.name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "pt.value",
      "=",
      "p.type",
      "group",
      "by",
      "pt.name"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find right ascension, declination and photometric type class of equivalent width estimates of galactic-stars from these spectroscopic objects.",
    "question_toks": [
      "Find",
      "right",
      "ascension",
      ",",
      "declination",
      "and",
      "photometric",
      "type",
      "class",
      "of",
      "equivalent",
      "width",
      "estimates",
      "of",
      "galactic",
      "-",
      "stars",
      "from",
      "these",
      "spectroscopic",
      "objects",
      "."
    ],
    "query": "select p.ra, p.dec, p.type from spplines as sp join specobj as s on sp.specobjid = s.specobjid join photoobj as p on p.objid = s.bestobjid",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ],
            [
              0,
              35,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.ra",
      ",",
      "p.dec",
      ",",
      "p.type",
      "from",
      "spplines",
      "as",
      "sp",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "sp.specobjid",
      "=",
      "s.specobjid",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "p.objid",
      "=",
      "s.bestobjid"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Fetch the right ascension and declination of spectroscopic objects those have equivalent width estimates of galactic-stars",
    "question_toks": [
      "Fetch",
      "the",
      "right",
      "ascension",
      "and",
      "declination",
      "of",
      "spectroscopic",
      "objects",
      "those",
      "have",
      "equivalent",
      "width",
      "estimates",
      "of",
      "galactic",
      "-",
      "stars"
    ],
    "query": "select p.ra, p.dec, p.type from spplines as sp join specobj as s on sp.specobjid = s.specobjid join photoobj as p on p.objid = s.bestobjid",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            1
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ],
            [
              0,
              35,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.ra",
      ",",
      "p.dec",
      ",",
      "p.type",
      "from",
      "spplines",
      "as",
      "sp",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "sp.specobjid",
      "=",
      "s.specobjid",
      "join",
      "photoobj",
      "as",
      "p",
      "on",
      "p.objid",
      "=",
      "s.bestobjid"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object id and photometric observation type of photometric objects whose right ascension is greater than 100 and declination is less than 100.",
    "question_toks": [
      "Find",
      "the",
      "object",
      "i",
      "d",
      "and",
      "photometric",
      "observation",
      "type",
      "of",
      "photometric",
      "objects",
      "whose",
      "right",
      "ascension",
      "is",
      "greater",
      "than",
      "100",
      "and",
      "declination",
      "is",
      "less",
      "than",
      "100",
      "."
    ],
    "query": "select p.objid, pt.name from photoobj as p join photo_type as pt on p.type = pt.value where p.ra > 100 and p.dec < 100",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                60,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          100.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "pt.name",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "p.ra",
      ">",
      "100",
      "and",
      "p.dec",
      "<",
      "100"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Retrieve the photometric object id and type name of corresponding photometric observation from the objects with the right ascension over 100 and declination below 100.",
    "question_toks": [
      "Retrieve",
      "the",
      "photometric",
      "object",
      "i",
      "d",
      "and",
      "type",
      "name",
      "of",
      "corresponding",
      "photometric",
      "observation",
      "from",
      "the",
      "objects",
      "with",
      "the",
      "right",
      "ascension",
      "over",
      "100",
      "and",
      "declination",
      "below",
      "100",
      "."
    ],
    "query": "select p.objid, pt.name from photoobj as p join photo_type as pt on p.type = pt.value where p.ra > 100 and p.dec < 100",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            5
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              59,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                60,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          100.0,
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "pt.name",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "photo_type",
      "as",
      "pt",
      "on",
      "p.type",
      "=",
      "pt.value",
      "where",
      "p.ra",
      ">",
      "100",
      "and",
      "p.dec",
      "<",
      "100"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the photometric object id, right ascension and declination of corresponding spectroscopic objects, from which it has emission line estimates of galaxies.",
    "question_toks": [
      "Find",
      "the",
      "photometric",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      "and",
      "declination",
      "of",
      "corresponding",
      "spectroscopic",
      "objects",
      ",",
      "from",
      "which",
      "it",
      "has",
      "emission",
      "line",
      "estimates",
      "of",
      "galaxies",
      "."
    ],
    "query": "select p.objid, p.ra, p.dec from photoobj as p join specobj as s on s.bestobjid = p.objid join galspecline as g on s.specobjid = g.specobjid",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ],
            [
              0,
              33,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "join",
      "galspecline",
      "as",
      "g",
      "on",
      "s.specobjid",
      "=",
      "g.specobjid"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the best photometric object to the corresponding spectroscopic object that has emission line estimates of galaxies? Return me the object id, right ascension and declination of the best object.",
    "question_toks": [
      "What",
      "is",
      "the",
      "best",
      "photometric",
      "object",
      "to",
      "the",
      "corresponding",
      "spectroscopic",
      "object",
      "that",
      "has",
      "emission",
      "line",
      "estimates",
      "of",
      "galaxies",
      "?",
      "Return",
      "me",
      "the",
      "object",
      "i",
      "d",
      ",",
      "right",
      "ascension",
      "and",
      "declination",
      "of",
      "the",
      "best",
      "object",
      "."
    ],
    "query": "select p.objid, p.ra, p.dec from photoobj as p join specobj as s on s.bestobjid = p.objid join galspecline as g on s.specobjid = g.specobjid",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ],
            [
              0,
              33,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "p.objid",
      ",",
      "p.ra",
      ",",
      "p.dec",
      "from",
      "photoobj",
      "as",
      "p",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "s.bestobjid",
      "=",
      "p.objid",
      "join",
      "galspecline",
      "as",
      "g",
      "on",
      "s.specobjid",
      "=",
      "g.specobjid"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find spectroscopic objects of equivalent width estimates of galactic-stars from these spectroscopic objects.",
    "question_toks": [
      "Find",
      "spectroscopic",
      "objects",
      "of",
      "equivalent",
      "width",
      "estimates",
      "of",
      "galactic",
      "-",
      "stars",
      "from",
      "these",
      "spectroscopic",
      "objects",
      "."
    ],
    "query": "select sp.specobjid from spplines as sp join specobj as s on sp.specobjid = s.specobjid",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ],
            [
              0,
              35,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "sp.specobjid",
      "from",
      "spplines",
      "as",
      "sp",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "sp.specobjid",
      "=",
      "s.specobjid"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the equivalent width estimates of galactic-stars of spectroscopic objects",
    "question_toks": [
      "What",
      "is",
      "the",
      "equivalent",
      "width",
      "estimates",
      "of",
      "galactic",
      "-",
      "stars",
      "of",
      "spectroscopic",
      "objects"
    ],
    "query": "select sp.specobjid from spplines as sp join specobj as s on sp.specobjid = s.specobjid",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ],
            [
              0,
              35,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "sp.specobjid",
      "from",
      "spplines",
      "as",
      "sp",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "sp.specobjid",
      "=",
      "s.specobjid"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many spectroscopic objects of equivalent width estimates of galactic-stars from these spectroscopic objects are there?",
    "question_toks": [
      "How",
      "many",
      "spectroscopic",
      "objects",
      "of",
      "equivalent",
      "width",
      "estimates",
      "of",
      "galactic",
      "-",
      "stars",
      "from",
      "these",
      "spectroscopic",
      "objects",
      "are",
      "there",
      "?"
    ],
    "query": "select count(sp.specobjid) from spplines as sp join specobj as s on sp.specobjid = s.specobjid",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ],
            [
              0,
              35,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "sp.specobjid",
      ")",
      "from",
      "spplines",
      "as",
      "sp",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "sp.specobjid",
      "=",
      "s.specobjid"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Count the number of spectroscopic objects that has equivalent width estimates of galactic-stars.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "spectroscopic",
      "objects",
      "that",
      "has",
      "equivalent",
      "width",
      "estimates",
      "of",
      "galactic",
      "-",
      "stars",
      "."
    ],
    "query": "select count(sp.specobjid) from spplines as sp join specobj as s on sp.specobjid = s.specobjid",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ],
            [
              0,
              35,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "sp.specobjid",
      ")",
      "from",
      "spplines",
      "as",
      "sp",
      "join",
      "specobj",
      "as",
      "s",
      "on",
      "sp.specobjid",
      "=",
      "s.specobjid"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find everything about spectroscopic objects and everything about emission line estimates of galaxies from these spectroscopic objects.",
    "question_toks": [
      "Find",
      "everything",
      "about",
      "spectroscopic",
      "objects",
      "and",
      "everything",
      "about",
      "emission",
      "line",
      "estimates",
      "of",
      "galaxies",
      "from",
      "these",
      "spectroscopic",
      "objects",
      "."
    ],
    "query": "select * from specobj as s join galspecline as g on s.specobjid = g.specobjid",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ],
            [
              0,
              33,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "*",
      "from",
      "specobj",
      "as",
      "s",
      "join",
      "galspecline",
      "as",
      "g",
      "on",
      "s.specobjid",
      "=",
      "g.specobjid"
    ]
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me everything about emission line estimates of galaxies of corresponding spectroscopic objects",
    "question_toks": [
      "Show",
      "me",
      "everything",
      "about",
      "emission",
      "line",
      "estimates",
      "of",
      "galaxies",
      "of",
      "corresponding",
      "spectroscopic",
      "objects"
    ],
    "query": "select * from specobj as s join galspecline as g on s.specobjid = g.specobjid",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ],
            [
              0,
              33,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "*",
      "from",
      "specobj",
      "as",
      "s",
      "join",
      "galspecline",
      "as",
      "g",
      "on",
      "s.specobjid",
      "=",
      "g.specobjid"
    ]
  }
]