[
  {
    "db_id": "sdss_temporary",
    "id": "0_1",
    "user": "gpt-3",
    "question": "Retrieve the value from the \"photometrically_observed\" column in the \"photo_type\" table where the description is \"KnownObject: Object came from some other catalog (not the SDSS catalog). (not yet used)\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.description = \"KnownObject: Object came from some other catalog (not the SDSS catalog). (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "0_2",
    "user": "gpt-3",
    "question": "Retrieve the value of the photometrically observed field for a known object that came from a catalog other than SDSS and is not currently in use.",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.description = \"KnownObject: Object came from some other catalog (not the SDSS catalog). (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "1_1",
    "user": "gpt-3",
    "question": "What is the name of the type of photo where its value is 9 in the photometrically observed column?",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 9"
  },
  {
    "db_id": "sdss_temporary",
    "id": "1_2",
    "user": "gpt-3",
    "question": "What is the name of all objects in the \"photo_type\" table that have a value of 9 for the column \"value\" and are classified as photometrically observed?",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 9"
  },
  {
    "db_id": "sdss_temporary",
    "id": "2_1",
    "user": "gpt-3",
    "question": "Get the neighbor object ID from the nearest neighbor objects table where the neighbor type is equal to 0.",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 WHERE T1.neighbortype = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "2_2",
    "user": "gpt-3",
    "question": "Find the object IDs of all nearest neighbor objects from the neighbors table where the neighbor type is equal to 0.",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 WHERE T1.neighbortype = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "3_1",
    "user": "gpt-3",
    "question": "Retrieve the flags from the photometric_objects table for objects with a cmodel magnitude in the r band equal to 12.36533.",
    "query": "SELECT T1.flags FROM photoobj AS T1 WHERE T1.cmodelmag_r = 12.36533"
  },
  {
    "db_id": "sdss_temporary",
    "id": "3_2",
    "user": "gpt-3",
    "question": "Retrieve the flags from the photo objects where the r-band CModel magnitude is equal to 12.36533.",
    "query": "SELECT T1.flags FROM photoobj AS T1 WHERE T1.cmodelmag_r = 12.36533"
  },
  {
    "db_id": "sdss_temporary",
    "id": "4_1",
    "user": "gpt-3",
    "question": "Retrieve the value of the photometrically observed column from the photo_type table where the description is \"Galaxy: An extended object composed of many stars and other matter.\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.description = \"Galaxy: An extended object composed of many stars and other matter.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "4_2",
    "user": "gpt-3",
    "question": "\"Retrieve the value from the photo_type table where the description is 'Galaxy: An extended object composed of many stars and other matter'.\"",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.description = \"Galaxy: An extended object composed of many stars and other matter.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "5_1",
    "user": "gpt-3",
    "question": "Find the column \"colc\" from the table \"photoobj\" for objects in the table \"Photometric_objects\" where the flags are equal to 217165464320.",
    "query": "SELECT T1.colc FROM photoobj AS T1 WHERE T1.flags = 217165464320"
  },
  {
    "db_id": "sdss_temporary",
    "id": "5_2",
    "user": "gpt-3",
    "question": "Get the colc column from the photoobj table for objects in the Photometric_objects that have a flags value of 217165464320.",
    "query": "SELECT T1.colc FROM photoobj AS T1 WHERE T1.flags = 217165464320"
  },
  {
    "db_id": "sdss_temporary",
    "id": "6_1",
    "user": "gpt-3",
    "question": "Retrieve the name of all objects that have been observed photometrically.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "6_2",
    "user": "gpt-3",
    "question": "Retrieve the names of all photo types that have a value of 1 for being photometrically observed.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "7_1",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbor objects where the type is equal to 3.",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 WHERE T1.type = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "7_2",
    "user": "gpt-3",
    "question": "\"Retrieve the type of nearest neighbour objects from the 'neighbors' table where the type is equal to 3.\"",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 WHERE T1.type = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "8_1",
    "user": "gpt-3",
    "question": "Get the flags from the photo objects where the run is equal to 8083.",
    "query": "SELECT T1.flags FROM photoobj AS T1 WHERE T1.run = 8083"
  },
  {
    "db_id": "sdss_temporary",
    "id": "8_2",
    "user": "gpt-3",
    "question": "Retrieve the flags of photometric objects from the photoobj table where the run number is 8083.",
    "query": "SELECT T1.flags FROM photoobj AS T1 WHERE T1.run = 8083"
  },
  {
    "db_id": "sdss_temporary",
    "id": "9_1",
    "user": "gpt-3",
    "question": "Find the specobjid of all spectroscopic objects from the table specobj where the plateid is equal to 624874486314854400.",
    "query": "SELECT T1.specobjid FROM specobj AS T1 WHERE T1.plateid = 624874486314854400"
  },
  {
    "db_id": "sdss_temporary",
    "id": "9_2",
    "user": "gpt-3",
    "question": "Get the specobjid for all spectroscopic objects from the specobj table where the plateid is 624874486314854400.",
    "query": "SELECT T1.specobjid FROM specobj AS T1 WHERE T1.plateid = 624874486314854400"
  },
  {
    "db_id": "sdss_temporary",
    "id": "10_1",
    "user": "gpt-3",
    "question": "Retrieve the description from the photometrically observed photo type where the name is \"SKY\".",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name = \"SKY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "10_2",
    "user": "gpt-3",
    "question": "What is the description of the photo type that has a name of \"SKY\" in the table for photometrically observed data?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name = \"SKY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "11_1",
    "user": "gpt-3",
    "question": "What are the names of all photometrically observed photo types that do not have a description beginning with \"NotAType:\"?",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"NotAType:\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "11_2",
    "user": "gpt-3",
    "question": "Retrieve the names of all objects that are photometrically observed but do not belong to a specific type.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"NotAType:\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "12_1",
    "user": "gpt-3",
    "question": "What is the i value for objects in the photoobj table where g equals 13.335?",
    "query": "SELECT T1.i FROM photoobj AS T1 WHERE T1.g = 13.335"
  },
  {
    "db_id": "sdss_temporary",
    "id": "12_2",
    "user": "gpt-3",
    "question": "What is the i value for all objects in the photoobj table where the g value is equal to 13.335?",
    "query": "SELECT T1.i FROM photoobj AS T1 WHERE T1.g = 13.335"
  },
  {
    "db_id": "sdss_temporary",
    "id": "13_1",
    "user": "gpt-3",
    "question": "\"Retrieve the b column from the photoobj table for objects with a colc value of 63.09674 and label it as Photometric_objects.\"",
    "query": "SELECT T1.b FROM photoobj AS T1 WHERE T1.colc = 63.09674"
  },
  {
    "db_id": "sdss_temporary",
    "id": "13_2",
    "user": "gpt-3",
    "question": "Select the value in column b from the table photoobj where the value in column colc is 63.09674, for objects that have photometric properties.",
    "query": "SELECT T1.b FROM photoobj AS T1 WHERE T1.colc = 63.09674"
  },
  {
    "db_id": "sdss_temporary",
    "id": "14_1",
    "user": "gpt-3",
    "question": "Find the plate number for spectroscopic objects where the program name is \"lowz_loveday\".",
    "query": "SELECT T1.plate FROM specobj AS T1 WHERE T1.programname = \"lowz_loveday\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "14_2",
    "user": "gpt-3",
    "question": "What is the plate number for objects in the lowz_loveday program?",
    "query": "SELECT T1.plate FROM specobj AS T1 WHERE T1.programname = \"lowz_loveday\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "15_1",
    "user": "gpt-3",
    "question": "Find the ID of the nearest neighbor object from the table \"neighbors\" where the type is equal to 0.",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 WHERE T1.type = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "15_2",
    "user": "gpt-3",
    "question": "Find the ID of the nearest neighboring object where its type is equal to 0.",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 WHERE T1.type = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "16_1",
    "user": "gpt-3",
    "question": "Retrieve the value from the \"photometrically_observed\" table where the name is equal to \"COSMIC_RAY\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.name = \"COSMIC_RAY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "16_2",
    "user": "gpt-3",
    "question": "Retrieve the value from the \"photometrically_observed\" column where the name is equal to \"COSMIC_RAY\" in the photo_type table.",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.name = \"COSMIC_RAY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "17_1",
    "user": "gpt-3",
    "question": "Find the mode of the neighbor objects that have a distance of 1.20332812333327e-05 in the \"neighbors\" table.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 WHERE T1.distance = 1.20332812333327e-05"
  },
  {
    "db_id": "sdss_temporary",
    "id": "17_2",
    "user": "gpt-3",
    "question": "What is the neighbor mode for the nearest neighbor object with a distance of 1.20332812333327e-05 in the neighbors table?",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 WHERE T1.distance = 1.20332812333327e-05"
  },
  {
    "db_id": "sdss_temporary",
    "id": "18_1",
    "user": "gpt-3",
    "question": "Retrieve the \"r\" value from the \"photoobj\" table for objects with a flags value of 103951766344 in the \"Photometric_objects\" group.",
    "query": "SELECT T1.r FROM photoobj AS T1 WHERE T1.flags = 103951766344"
  },
  {
    "db_id": "sdss_temporary",
    "id": "18_2",
    "user": "gpt-3",
    "question": "Retrieve the value of the 'r' column from the 'photoobj' table for objects identified as 'Photometric_objects' where the flags value is equal to 103951766344.",
    "query": "SELECT T1.r FROM photoobj AS T1 WHERE T1.flags = 103951766344"
  },
  {
    "db_id": "sdss_temporary",
    "id": "19_1",
    "user": "gpt-3",
    "question": "What is the redshift of the spectroscopic object with a specobjid of 300677699389646848?",
    "query": "SELECT T1.z FROM specobj AS T1 WHERE T1.specobjid = 300677699389646848"
  },
  {
    "db_id": "sdss_temporary",
    "id": "19_2",
    "user": "gpt-3",
    "question": "What is the redshift value for the spectroscopic object with a specobjid of 300677699389646848?",
    "query": "SELECT T1.z FROM specobj AS T1 WHERE T1.specobjid = 300677699389646848"
  },
  {
    "db_id": "sdss_temporary",
    "id": "20_1",
    "user": "gpt-3",
    "question": "\"Retrieve the mode of nearest neighbour objects from the table 'neighbors' where the neighbor mode is equal to 2.\"",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.neighbormode = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "20_2",
    "user": "gpt-3",
    "question": "What is the mode of the nearest neighbor objects with a neighbor mode of 2?",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.neighbormode = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "21_1",
    "user": "gpt-3",
    "question": "\"What is the description of photometrically observed photo types with a value of 4?\"",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 4"
  },
  {
    "db_id": "sdss_temporary",
    "id": "21_2",
    "user": "gpt-3",
    "question": "\"Retrieve the description from the photometrically observed photo type where the value is equal to 4.\"",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 4"
  },
  {
    "db_id": "sdss_temporary",
    "id": "22_1",
    "user": "gpt-3",
    "question": "Find the value of u for objects in the photoobj table with a cmodelmag_r value of 12.29743.",
    "query": "SELECT T1.u FROM photoobj AS T1 WHERE T1.cmodelmag_r = 12.29743"
  },
  {
    "db_id": "sdss_temporary",
    "id": "22_2",
    "user": "gpt-3",
    "question": "Retrieve the u-band magnitude from the photoobj table where the cmodel magnitude in r-band is equal to 12.29743 for objects with photometric information.",
    "query": "SELECT T1.u FROM photoobj AS T1 WHERE T1.cmodelmag_r = 12.29743"
  },
  {
    "db_id": "sdss_temporary",
    "id": "23_1",
    "user": "gpt-3",
    "question": "Get the zwarning value from the specobj table for objects with a z value of -0.001723453.",
    "query": "SELECT T1.zwarning FROM specobj AS T1 WHERE T1.z = -0.001723453"
  },
  {
    "db_id": "sdss_temporary",
    "id": "23_2",
    "user": "gpt-3",
    "question": "What is the zwarning for a spectroscopic object with a redshift of -0.001723453?",
    "query": "SELECT T1.zwarning FROM specobj AS T1 WHERE T1.z = -0.001723453"
  },
  {
    "db_id": "sdss_temporary",
    "id": "24_1",
    "user": "gpt-3",
    "question": "What are the names of all objects that have been observed photometrically and whose description is \"Unknown: Object type is not known\"?",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Unknown: Object type is not known.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "24_2",
    "user": "gpt-3",
    "question": "\"Retrieve the names of objects from the photometrically observed photo type where the description is 'Unknown: Object type is not known'.\"",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Unknown: Object type is not known.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "25_1",
    "user": "gpt-3",
    "question": "\"What is the description of the photometrically observed photo type with a value of 5?\"",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 5"
  },
  {
    "db_id": "sdss_temporary",
    "id": "25_2",
    "user": "gpt-3",
    "question": "What is the description of a photometrically observed photo type with a value of 5?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 5"
  },
  {
    "db_id": "sdss_temporary",
    "id": "26_1",
    "user": "gpt-3",
    "question": "Find the fiber ID for all objects in the specobj table where the redshift value is -0.001639362.",
    "query": "SELECT T1.fiberid FROM specobj AS T1 WHERE T1.z = -0.001639362"
  },
  {
    "db_id": "sdss_temporary",
    "id": "26_2",
    "user": "gpt-3",
    "question": "\"Find the fiber ID for all objects in the specobj table where their redshift is equal to -0.001639362.\"",
    "query": "SELECT T1.fiberid FROM specobj AS T1 WHERE T1.z = -0.001639362"
  },
  {
    "db_id": "sdss_temporary",
    "id": "27_1",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbor objects where the mode is equal to 1.",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 WHERE T1.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "27_2",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbour objects from the neighbors table where the mode is equal to 1.",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 WHERE T1.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "28_1",
    "user": "gpt-3",
    "question": "Retrieve the mode of the nearest neighbor objects where the distance is equal to 1.39743133363824e-05 from the neighbors table.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.distance = 1.39743133363824e-05"
  },
  {
    "db_id": "sdss_temporary",
    "id": "28_2",
    "user": "gpt-3",
    "question": "Find the mode for the objects in the neighbor table with a distance of 1.39743133363824e-05 from the nearest neighbor objects.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.distance = 1.39743133363824e-05"
  },
  {
    "db_id": "sdss_temporary",
    "id": "29_1",
    "user": "gpt-3",
    "question": "Find the neighbor object ID from the nearest neighbour objects where the neighbor mode is equal to 1.",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 WHERE T1.neighbormode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "29_2",
    "user": "gpt-3",
    "question": "\"Find the object ID of the nearest neighbor in the neighbors table where the neighbor mode is equal to 1.\"",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 WHERE T1.neighbormode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "30_1",
    "user": "gpt-3",
    "question": "\"Find the primary science objects from the Spectroscopic_objects table where the class is 'QSO'.\"",
    "query": "SELECT T1.scienceprimary FROM specobj AS T1 WHERE T1.class = \"QSO\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "30_2",
    "user": "gpt-3",
    "question": "\"Retrieve the primary science objects from the specobj table where their class is 'QSO'.\"",
    "query": "SELECT T1.scienceprimary FROM specobj AS T1 WHERE T1.class = \"QSO\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "31_1",
    "user": "gpt-3",
    "question": "Retrieve the primary objects from the specobj table for which the ancillary target1 value is equal to 34359738368 in the Spectroscopic_objects table.",
    "query": "SELECT T1.segue2primary FROM specobj AS T1 WHERE T1.ancillary_target1 = 34359738368"
  },
  {
    "db_id": "sdss_temporary",
    "id": "31_2",
    "user": "gpt-3",
    "question": "Which primary objects in the specobj table are linked to an ancillary target with a value of 34359738368?",
    "query": "SELECT T1.segue2primary FROM specobj AS T1 WHERE T1.ancillary_target1 = 34359738368"
  },
  {
    "db_id": "sdss_temporary",
    "id": "32_1",
    "user": "gpt-3",
    "question": "What is the load version for the spectroscopic object with specobjid 300655159401277440?",
    "query": "SELECT T1.loadversion FROM specobj AS T1 WHERE T1.specobjid = 300655159401277440"
  },
  {
    "db_id": "sdss_temporary",
    "id": "32_2",
    "user": "gpt-3",
    "question": "Retrieve the load version from the table for a spectroscopic object with the specobjid 300655159401277440.",
    "query": "SELECT T1.loadversion FROM specobj AS T1 WHERE T1.specobjid = 300655159401277440"
  },
  {
    "db_id": "sdss_temporary",
    "id": "33_1",
    "user": "gpt-3",
    "question": "What is the description of the photometrically observed photo type with the name \"DEFECT\"?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name = \"DEFECT\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "33_2",
    "user": "gpt-3",
    "question": "What is the description of the photometrically observed photo type named \"DEFECT\"?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name = \"DEFECT\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "34_1",
    "user": "gpt-3",
    "question": "Find the subclass of spectroscopic objects with a redshift value of -0.002514536 in the specobj table.",
    "query": "SELECT T1.subclass FROM specobj AS T1 WHERE T1.z = -0.002514536"
  },
  {
    "db_id": "sdss_temporary",
    "id": "34_2",
    "user": "gpt-3",
    "question": "Retrieve the subclass of spectroscopic objects where the redshift is equal to -0.002514536 from the specobj table.",
    "query": "SELECT T1.subclass FROM specobj AS T1 WHERE T1.z = -0.002514536"
  },
  {
    "db_id": "sdss_temporary",
    "id": "35_1",
    "user": "gpt-3",
    "question": "\"Retrieve the r value from the photoobj table for objects with a cmodel magnitude of 14.22152 in the u band.\"",
    "query": "SELECT T1.r FROM photoobj AS T1 WHERE T1.cmodelmag_u = 14.22152"
  },
  {
    "db_id": "sdss_temporary",
    "id": "35_2",
    "user": "gpt-3",
    "question": "\"Retrieve the r magnitude from the photoobj table for Photometric objects where their cmodel u magnitude is 14.22152.\"",
    "query": "SELECT T1.r FROM photoobj AS T1 WHERE T1.cmodelmag_u = 14.22152"
  },
  {
    "db_id": "sdss_temporary",
    "id": "36_1",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbour objects where the neighbor type is equal to 6.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.neighbortype = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "36_2",
    "user": "gpt-3",
    "question": "What are the types of objects that have a neighbor type of 6 in the \"neighbors\" table?",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.neighbortype = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "37_1",
    "user": "gpt-3",
    "question": "Retrieve the best object ID from the spectroscopic objects where the redshift warning is equal to 0.",
    "query": "SELECT T1.bestobjid FROM specobj AS T1 WHERE T1.zwarning = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "37_2",
    "user": "gpt-3",
    "question": "Get the best object ID from the spectroscopic objects where the zwarning is equal to 0.",
    "query": "SELECT T1.bestobjid FROM specobj AS T1 WHERE T1.zwarning = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "38_1",
    "user": "gpt-3",
    "question": "Find the distance from the neighbor object with ID 1237645876861469266 in the neighbors table.",
    "query": "SELECT T1.distance FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861469266"
  },
  {
    "db_id": "sdss_temporary",
    "id": "38_2",
    "user": "gpt-3",
    "question": "Retrieve the distance from the nearest neighbor object where the neighbor's ID is equal to 1237645876861469266.",
    "query": "SELECT T1.distance FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861469266"
  },
  {
    "db_id": "sdss_temporary",
    "id": "39_1",
    "user": "gpt-3",
    "question": "\"Find the neighbor type of the nearest neighbour objects where the type is equal to 0.\"",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 WHERE T1.type = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "39_2",
    "user": "gpt-3",
    "question": "Find the neighbor type for all nearest neighbour objects where the type is equal to 0.",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 WHERE T1.type = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "40_1",
    "user": "gpt-3",
    "question": "Find the best object ID from the specobj table for spectroscopic objects with a class of \"QSO\".",
    "query": "SELECT T1.bestobjid FROM specobj AS T1 WHERE T1.class = \"QSO\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "40_2",
    "user": "gpt-3",
    "question": "\"Retrieve the best object identifier for all spectroscopic objects where the class is equal to 'QSO'.\"",
    "query": "SELECT T1.bestobjid FROM specobj AS T1 WHERE T1.class = \"QSO\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "41_1",
    "user": "gpt-3",
    "question": "Retrieve the rerun value from the photoobj table for all objects with a b value of -73.6702803978869 in the Photometric_objects dataset.",
    "query": "SELECT T1.rerun FROM photoobj AS T1 WHERE T1.b = -73.6702803978869"
  },
  {
    "db_id": "sdss_temporary",
    "id": "41_2",
    "user": "gpt-3",
    "question": "Retrieve the rerun value from the Photometric_objects table for objects with a b value of -73.6702803978869 in the photoobj table.",
    "query": "SELECT T1.rerun FROM photoobj AS T1 WHERE T1.b = -73.6702803978869"
  },
  {
    "db_id": "sdss_temporary",
    "id": "42_1",
    "user": "gpt-3",
    "question": "Retrieve the names of objects from the photometrically observed photo type where the description is \"Sky: Blank sky spectrogram (no objects in this arcsecond area).\"",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Sky: Blank sky spectrogram (no objects in this arcsecond area).\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "42_2",
    "user": "gpt-3",
    "question": "What is the name of all the photo types that have a description of \"Sky: Blank sky spectrogram (no objects in this arcsecond area)\"?",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Sky: Blank sky spectrogram (no objects in this arcsecond area).\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "43_1",
    "user": "gpt-3",
    "question": "Find the object ID from the photoobj table for objects in the rerun with a value of 301 in the column named rerun.",
    "query": "SELECT T1.objid FROM photoobj AS T1 WHERE T1.rerun = 301"
  },
  {
    "db_id": "sdss_temporary",
    "id": "43_2",
    "user": "gpt-3",
    "question": "Retrieve the object ID of photometric objects from the photoobj table where the rerun is equal to 301.",
    "query": "SELECT T1.objid FROM photoobj AS T1 WHERE T1.rerun = 301"
  },
  {
    "db_id": "sdss_temporary",
    "id": "44_1",
    "user": "gpt-3",
    "question": "What is the mode of the nearest neighbor object with a distance of 6.9087800754596e-06 in the \"neighbors\" table?",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.distance = 6.9087800754596e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "44_2",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbor object with a distance of 6.9087800754596e-06 from the neighbors table.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.distance = 6.9087800754596e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "45_1",
    "user": "gpt-3",
    "question": "Find the mode of the neighbor object's nearest neighbors where the type is equal to 3.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 WHERE T1.type = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "45_2",
    "user": "gpt-3",
    "question": "Find the neighbor mode for the nearest neighbour objects where the type is equal to 3.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 WHERE T1.type = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "46_1",
    "user": "gpt-3",
    "question": "Retrieve the object identification numbers of all photometric objects from a database named \"photoobj\" where the R-band model magnitude is equal to 11.58862.",
    "query": "SELECT T1.objid FROM photoobj AS T1 WHERE T1.cmodelmag_r = 11.58862"
  },
  {
    "db_id": "sdss_temporary",
    "id": "46_2",
    "user": "gpt-3",
    "question": "Find the ID numbers of objects from a table called Photometric_objects where the r-band magnitude is equal to 11.58862 in another table called photoobj.",
    "query": "SELECT T1.objid FROM photoobj AS T1 WHERE T1.cmodelmag_r = 11.58862"
  },
  {
    "db_id": "sdss_temporary",
    "id": "47_1",
    "user": "gpt-3",
    "question": "What is the value of the cosmic-ray track (not used) in the photometrically observed photo type?",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.description = \"Cosmic-ray track (not used).\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "47_2",
    "user": "gpt-3",
    "question": "\"Retrieve the value from the table photometrically_observed where the description is 'Cosmic-ray track (not used)'.\"",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.description = \"Cosmic-ray track (not used).\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "48_1",
    "user": "gpt-3",
    "question": "Find the cmodel magnitude in the g band for all photometric objects where the extinction in the r band is equal to 0.007540975.",
    "query": "SELECT T1.cmodelmag_g FROM photoobj AS T1 WHERE T1.extinction_r = 0.007540975"
  },
  {
    "db_id": "sdss_temporary",
    "id": "48_2",
    "user": "gpt-3",
    "question": "What is the cmodel magnitude in the g band for all photometric objects where the extinction in r band is equal to 0.007540975?",
    "query": "SELECT T1.cmodelmag_g FROM photoobj AS T1 WHERE T1.extinction_r = 0.007540975"
  },
  {
    "db_id": "sdss_temporary",
    "id": "49_1",
    "user": "gpt-3",
    "question": "Find the clean photometric objects from the photoobj table with a run number of 2578.",
    "query": "SELECT T1.clean FROM photoobj AS T1 WHERE T1.run = 2578"
  },
  {
    "db_id": "sdss_temporary",
    "id": "49_2",
    "user": "gpt-3",
    "question": "Find the clean photometric objects from the photoobj table where the run number is 2578.",
    "query": "SELECT T1.clean FROM photoobj AS T1 WHERE T1.run = 2578"
  },
  {
    "db_id": "sdss_temporary",
    "id": "50_1",
    "user": "gpt-3",
    "question": "What is the velocity dispersion for the spectroscopic objects with an error of 9.318482?",
    "query": "SELECT T1.veldisp FROM specobj AS T1 WHERE T1.veldisperr = 9.318482"
  },
  {
    "db_id": "sdss_temporary",
    "id": "50_2",
    "user": "gpt-3",
    "question": "Get the velocity dispersion of spectroscopic objects where the error on their velocity dispersion is equal to 9.318482.",
    "query": "SELECT T1.veldisp FROM specobj AS T1 WHERE T1.veldisperr = 9.318482"
  },
  {
    "db_id": "sdss_temporary",
    "id": "51_1",
    "user": "gpt-3",
    "question": "What is the redshift (z) value for all objects in the specobj table with a velocity dispersion of 207.8492?",
    "query": "SELECT T1.z FROM specobj AS T1 WHERE T1.veldisp = 207.8492"
  },
  {
    "db_id": "sdss_temporary",
    "id": "51_2",
    "user": "gpt-3",
    "question": "Find the redshift values for spectroscopic objects where the velocity dispersion is 207.8492.",
    "query": "SELECT T1.z FROM specobj AS T1 WHERE T1.veldisp = 207.8492"
  },
  {
    "db_id": "sdss_temporary",
    "id": "52_1",
    "user": "gpt-3",
    "question": "What is the cmodel magnitude in the r-band for objects with a magnitude of 12.36489 in the r-band?",
    "query": "SELECT T1.cmodelmag_r FROM photoobj AS T1 WHERE T1.r = 12.36489"
  },
  {
    "db_id": "sdss_temporary",
    "id": "52_2",
    "user": "gpt-3",
    "question": "What is the cmodel magnitude in the r-band for an object with an r magnitude of 12.36489 in the photoobj table?",
    "query": "SELECT T1.cmodelmag_r FROM photoobj AS T1 WHERE T1.r = 12.36489"
  },
  {
    "db_id": "sdss_temporary",
    "id": "53_1",
    "user": "gpt-3",
    "question": "Get the i values from the photoobj table for objects in the Photometric_objects with a rerun value of 301.",
    "query": "SELECT T1.i FROM photoobj AS T1 WHERE T1.rerun = 301"
  },
  {
    "db_id": "sdss_temporary",
    "id": "53_2",
    "user": "gpt-3",
    "question": "Retrieve the \"i\" values from the photoobj table for objects with a rerun value of 301 in the Photometric_objects table.",
    "query": "SELECT T1.i FROM photoobj AS T1 WHERE T1.rerun = 301"
  },
  {
    "db_id": "sdss_temporary",
    "id": "54_1",
    "user": "gpt-3",
    "question": "Find the mode of photometric objects where the cmodel magnitude in the u band is equal to 14.40202.",
    "query": "SELECT T1.mode FROM photoobj AS T1 WHERE T1.cmodelmag_u = 14.40202"
  },
  {
    "db_id": "sdss_temporary",
    "id": "54_2",
    "user": "gpt-3",
    "question": "What is the mode of the photometric objects with a cmodel magnitude in the u band equal to 14.40202?",
    "query": "SELECT T1.mode FROM photoobj AS T1 WHERE T1.cmodelmag_u = 14.40202"
  },
  {
    "db_id": "sdss_temporary",
    "id": "55_1",
    "user": "gpt-3",
    "question": "Find the names of all objects in the database that have a description of \"Galaxy: An extended object composed of many stars and other matter.\" under the column \"description\" in the table called \"photo_type\".",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Galaxy: An extended object composed of many stars and other matter.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "55_2",
    "user": "gpt-3",
    "question": "Retrieve the names of all objects that have been observed photometrically and are described as galaxies, which are extended objects made up of stars and other matter.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Galaxy: An extended object composed of many stars and other matter.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "56_1",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbor object with a distance of 6.29076235812387e-06.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.distance = 6.29076235812387e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "56_2",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbor object where the distance is equal to 6.29076235812387e-06.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.distance = 6.29076235812387e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "57_1",
    "user": "gpt-3",
    "question": "Retrieve the load version from the specobj table for objects in the SEGUE1 survey.",
    "query": "SELECT T1.loadversion FROM specobj AS T1 WHERE T1.survey = \"segue1\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "57_2",
    "user": "gpt-3",
    "question": "Retrieve the version number of loaded objects from the table \"specobj\" where the survey is \"segue1\".",
    "query": "SELECT T1.loadversion FROM specobj AS T1 WHERE T1.survey = \"segue1\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "58_1",
    "user": "gpt-3",
    "question": "\"What is the description of the photometrically observed photo type with a value of 6?\"",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "58_2",
    "user": "gpt-3",
    "question": "What is the description for the photo type with a value of 6 in the table for photometrically observed data?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "59_1",
    "user": "gpt-3",
    "question": "Find the plate number for all spectroscopic objects where the survey is \"segue2\".",
    "query": "SELECT T1.plate FROM specobj AS T1 WHERE T1.survey = \"segue2\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "59_2",
    "user": "gpt-3",
    "question": "Select the plate number from the table of spectroscopic objects where the survey is \"segue2\".",
    "query": "SELECT T1.plate FROM specobj AS T1 WHERE T1.survey = \"segue2\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "60_1",
    "user": "gpt-3",
    "question": "What is the program name of all spectroscopic objects where the ancillary target1 is 288230376151711744?",
    "query": "SELECT T1.programname FROM specobj AS T1 WHERE T1.ancillary_target1 = 288230376151711744"
  },
  {
    "db_id": "sdss_temporary",
    "id": "60_2",
    "user": "gpt-3",
    "question": "What is the name of the program for spectroscopic objects that have an ancillary target of 288230376151711744?",
    "query": "SELECT T1.programname FROM specobj AS T1 WHERE T1.ancillary_target1 = 288230376151711744"
  },
  {
    "db_id": "sdss_temporary",
    "id": "61_1",
    "user": "gpt-3",
    "question": "What is the name of the program for the spectroscopic object with specobjid 300651585988487168?",
    "query": "SELECT T1.programname FROM specobj AS T1 WHERE T1.specobjid = 300651585988487168"
  },
  {
    "db_id": "sdss_temporary",
    "id": "61_2",
    "user": "gpt-3",
    "question": "What is the program name of the spectroscopic object with specobjid = 300651585988487168?",
    "query": "SELECT T1.programname FROM specobj AS T1 WHERE T1.specobjid = 300651585988487168"
  },
  {
    "db_id": "sdss_temporary",
    "id": "62_1",
    "user": "gpt-3",
    "question": "Get the object IDs of the nearest neighbor objects from the \"neighbors\" table where the neighbor type is equal to 6.",
    "query": "SELECT T1.objid FROM neighbors AS T1 WHERE T1.neighbortype = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "62_2",
    "user": "gpt-3",
    "question": "Find the object IDs of the nearest neighbor objects from a table called \"neighbors\" where the neighbor type is 6.",
    "query": "SELECT T1.objid FROM neighbors AS T1 WHERE T1.neighbortype = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "63_1",
    "user": "gpt-3",
    "question": "Find the velocity dispersion error of objects in the specobj table with a declination of -17.245307.",
    "query": "SELECT T1.veldisperr FROM specobj AS T1 WHERE T1.dec = -17.245307"
  },
  {
    "db_id": "sdss_temporary",
    "id": "63_2",
    "user": "gpt-3",
    "question": "Find the velocity dispersion error from the spectroscopic objects table for an object with a declination of -17.245307.",
    "query": "SELECT T1.veldisperr FROM specobj AS T1 WHERE T1.dec = -17.245307"
  },
  {
    "db_id": "sdss_temporary",
    "id": "64_1",
    "user": "gpt-3",
    "question": "Find the declination values for objects in the \"photoobj\" table with a \"b\" value of -73.8462307764045 in the \"Photometric_objects\" alias.",
    "query": "SELECT T1.dec FROM photoobj AS T1 WHERE T1.b = -73.8462307764045"
  },
  {
    "db_id": "sdss_temporary",
    "id": "64_2",
    "user": "gpt-3",
    "question": "Find the declination of objects in the table \"photoobj\" with a b value of -73.8462307764045 and name the table \"Photometric_objects\".",
    "query": "SELECT T1.dec FROM photoobj AS T1 WHERE T1.b = -73.8462307764045"
  },
  {
    "db_id": "sdss_temporary",
    "id": "65_1",
    "user": "gpt-3",
    "question": "Find the plate ID for spectroscopic objects with a subclass of \"F0IV (81937)\".",
    "query": "SELECT T1.plateid FROM specobj AS T1 WHERE T1.subclass = \"F0IV (81937)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "65_2",
    "user": "gpt-3",
    "question": "Get the plate ID from the spectroscopic objects where the subclass is \"F0IV (81937)\".",
    "query": "SELECT T1.plateid FROM specobj AS T1 WHERE T1.subclass = \"F0IV (81937)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "66_1",
    "user": "gpt-3",
    "question": "Retrieve the extinction value in the r band for all objects from the photoobj table where the run number is 2134.",
    "query": "SELECT T1.extinction_r FROM photoobj AS T1 WHERE T1.run = 2134"
  },
  {
    "db_id": "sdss_temporary",
    "id": "66_2",
    "user": "gpt-3",
    "question": "Retrieve the value for the extinction in the r band from the photometric objects table where the run is equal to 2134.",
    "query": "SELECT T1.extinction_r FROM photoobj AS T1 WHERE T1.run = 2134"
  },
  {
    "db_id": "sdss_temporary",
    "id": "67_1",
    "user": "gpt-3",
    "question": "Get the neighbor mode of nearest neighbour objects from the neighbors table where the type is equal to 6.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 WHERE T1.type = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "67_2",
    "user": "gpt-3",
    "question": "\"Retrieve the mode of neighbor objects from the 'neighbors' table where the type is equal to 6.\"",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 WHERE T1.type = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "68_1",
    "user": "gpt-3",
    "question": "Find the type of photometric objects where b is equal to -73.6010540812628 in the photoobj table.",
    "query": "SELECT T1.type FROM photoobj AS T1 WHERE T1.b = -73.6010540812628"
  },
  {
    "db_id": "sdss_temporary",
    "id": "68_2",
    "user": "gpt-3",
    "question": "What is the type of the photometric object with a b value of -73.6010540812628 in the photoobj table?",
    "query": "SELECT T1.type FROM photoobj AS T1 WHERE T1.b = -73.6010540812628"
  },
  {
    "db_id": "sdss_temporary",
    "id": "69_1",
    "user": "gpt-3",
    "question": "\"Find the rowc value from Photometric_objects where the cmodel magnitude for g-band is equal to 13.63504.\"",
    "query": "SELECT T1.rowc FROM photoobj AS T1 WHERE T1.cmodelmag_g = 13.63504"
  },
  {
    "db_id": "sdss_temporary",
    "id": "69_2",
    "user": "gpt-3",
    "question": "Retrieve the rowc value from the Photometric_objects table for objects with a cmodelmag_g value of 13.63504 in the photoobj table.",
    "query": "SELECT T1.rowc FROM photoobj AS T1 WHERE T1.cmodelmag_g = 13.63504"
  },
  {
    "db_id": "sdss_temporary",
    "id": "70_1",
    "user": "gpt-3",
    "question": "Retrieve the declination values for all spectroscopic objects where the fiber ID is equal to 557.",
    "query": "SELECT T1.dec FROM specobj AS T1 WHERE T1.fiberid = 557"
  },
  {
    "db_id": "sdss_temporary",
    "id": "70_2",
    "user": "gpt-3",
    "question": "Retrieve the declination value from the \"specobj\" table for the object with a fiber ID of 557 and refer to it as \"Spectroscopic_objects\".",
    "query": "SELECT T1.dec FROM specobj AS T1 WHERE T1.fiberid = 557"
  },
  {
    "db_id": "sdss_temporary",
    "id": "71_1",
    "user": "gpt-3",
    "question": "Find the names of all objects that have a description of \"Star: A self-luminous gaseous celestial body.\".",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Star: A self-luminous gaseous celestial body.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "71_2",
    "user": "gpt-3",
    "question": "Retrieve the name of any celestial body that is described as a star and has been observed using photometric techniques.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Star: A self-luminous gaseous celestial body.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "72_1",
    "user": "gpt-3",
    "question": "What is the distance of the nearest neighbor object with an ID of 1237645876861272853 from the table \"neighbors\"?",
    "query": "SELECT T1.distance FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861272853"
  },
  {
    "db_id": "sdss_temporary",
    "id": "72_2",
    "user": "gpt-3",
    "question": "Find the distance of the nearest neighbor object with ID 1237645876861272853 from the neighbors table.",
    "query": "SELECT T1.distance FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861272853"
  },
  {
    "db_id": "sdss_temporary",
    "id": "73_1",
    "user": "gpt-3",
    "question": "Find the plate number for all spectroscopic objects where the subclass is \"A4 (G_165-39)\".",
    "query": "SELECT T1.plate FROM specobj AS T1 WHERE T1.subclass = \"A4 (G_165-39)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "73_2",
    "user": "gpt-3",
    "question": "Find the plate number of spectroscopic objects where the subclass is \"A4 (G_165-39)\".",
    "query": "SELECT T1.plate FROM specobj AS T1 WHERE T1.subclass = \"A4 (G_165-39)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "74_1",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbor object with a distance of 9.77362633135032e-06 from the neighbors table.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.distance = 9.77362633135032e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "74_2",
    "user": "gpt-3",
    "question": "Retrieve the mode from the nearest neighbor object with a distance of 9.77362633135032e-06 from the neighbors table.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.distance = 9.77362633135032e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "75_1",
    "user": "gpt-3",
    "question": "What are the ancillary target1 values for objects in the specobj table with a load version of 1017?",
    "query": "SELECT T1.ancillary_target1 FROM specobj AS T1 WHERE T1.loadversion = 1017"
  },
  {
    "db_id": "sdss_temporary",
    "id": "75_2",
    "user": "gpt-3",
    "question": "What is the ancillary target 1 for spectroscopic objects in the specobj table where the load version is 1017?",
    "query": "SELECT T1.ancillary_target1 FROM specobj AS T1 WHERE T1.loadversion = 1017"
  },
  {
    "db_id": "sdss_temporary",
    "id": "76_1",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbour objects with a neighbor type of 3.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.neighbortype = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "76_2",
    "user": "gpt-3",
    "question": "Find the mode of nearest neighbor objects where the neighbor type is 3.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.neighbortype = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "77_1",
    "user": "gpt-3",
    "question": "Find the description for photometrically observed objects that have a neighbor of type \"nearest neighbor\" with a mode value of 1.",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "77_2",
    "user": "gpt-3",
    "question": "Retrieve the description of the photometrically observed photo type for the nearest neighbor objects that have a mode value of 1 in the neighbors table.",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "78_1",
    "user": "gpt-3",
    "question": "What is the redshift value for the spectroscopic object with a specobjid of 300773906657077248, based on emission line estimates from the galspecline table?",
    "query": "SELECT T1.z FROM specobj AS T1 JOIN galspecline AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid = 300773906657077248"
  },
  {
    "db_id": "sdss_temporary",
    "id": "78_2",
    "user": "gpt-3",
    "question": "Retrieve the redshift value from the specobj table for the spectroscopic object with a specobjid of 300773906657077248, joining it with the galspecline table to retrieve emission line estimates for that same specobjid.",
    "query": "SELECT T1.z FROM specobj AS T1 JOIN galspecline AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid = 300773906657077248"
  },
  {
    "db_id": "sdss_temporary",
    "id": "79_1",
    "user": "gpt-3",
    "question": "Retrieve the value of photometrically observed objects for photo objects with a magnitude of 12.27805 in the i filter.",
    "query": "SELECT T1.value FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.i = 12.27805"
  },
  {
    "db_id": "sdss_temporary",
    "id": "79_2",
    "user": "gpt-3",
    "question": "Find the value of photometrically observed objects where the type matches with photoobj objects having a value of 12.27805 for the i parameter.",
    "query": "SELECT T1.value FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.i = 12.27805"
  },
  {
    "db_id": "sdss_temporary",
    "id": "80_1",
    "user": "gpt-3",
    "question": "Retrieve the right ascension of all photometric objects whose object ID matches that of the best spectroscopic object with an ID of 1237645943979638952.",
    "query": "SELECT T1.ra FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.bestobjid = 1237645943979638952"
  },
  {
    "db_id": "sdss_temporary",
    "id": "80_2",
    "user": "gpt-3",
    "question": "Retrieve the right ascension values for all photometric objects whose best object IDs match those of spectroscopic objects.",
    "query": "SELECT T1.ra FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.bestobjid = 1237645943979638952"
  },
  {
    "db_id": "sdss_temporary",
    "id": "81_1",
    "user": "gpt-3",
    "question": "Retrieve the mode of the nearest neighbor objects that are photometrically observed as \"Ghost: Object created by reflected or refracted light (not used)\".",
    "query": "SELECT T1.mode FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.description = \"Ghost: Object created by reflected or refracted light. (not used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "81_2",
    "user": "gpt-3",
    "question": "What is the mode of the nearest neighbor objects that were observed photometrically and described as \"Ghost: Object created by reflected or refracted light. (not used)\"?",
    "query": "SELECT T1.mode FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.description = \"Ghost: Object created by reflected or refracted light. (not used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "82_1",
    "user": "gpt-3",
    "question": "Find the specobjid for emission line estimates where the right ascension of Spectroscopic_objects is equal to 0.023387419.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.ra = 0.023387419"
  },
  {
    "db_id": "sdss_temporary",
    "id": "82_2",
    "user": "gpt-3",
    "question": "Retrieve the specobjid of emission line estimates from the table galspecline where the ra value of its corresponding entry in the table specobj is equal to 0.023387419.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.ra = 0.023387419"
  },
  {
    "db_id": "sdss_temporary",
    "id": "83_1",
    "user": "gpt-3",
    "question": "Retrieve the special target 1 for spectroscopic objects whose best object ID matches that of photometric objects with a rowc value of 50.88836.",
    "query": "SELECT T1.special_target1 FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.rowc = 50.88836"
  },
  {
    "db_id": "sdss_temporary",
    "id": "83_2",
    "user": "gpt-3",
    "question": "Retrieve the value of the special_target1 column from the Spectroscopic_objects table for the row with a rowc value of 50.88836 in the Photometric_objects table, using their bestobjid values to join them together.",
    "query": "SELECT T1.special_target1 FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.rowc = 50.88836"
  },
  {
    "db_id": "sdss_temporary",
    "id": "84_1",
    "user": "gpt-3",
    "question": "Retrieve the distance of nearest neighbour objects from the neighbors table where the object ID matches between the neighbors and photoobj tables, and also retrieve the distance for only those objects in the photoobj table that have a u value of 14.24506.",
    "query": "SELECT T1.distance FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.u = 14.24506"
  },
  {
    "db_id": "sdss_temporary",
    "id": "84_2",
    "user": "gpt-3",
    "question": "What is the distance of the nearest neighbor object for photometric objects with a u value of 14.24506, joined on their objid values?",
    "query": "SELECT T1.distance FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.u = 14.24506"
  },
  {
    "db_id": "sdss_temporary",
    "id": "85_1",
    "user": "gpt-3",
    "question": "Find the specobjid for emission line estimates where the corresponding spectroscopic object has a zwarning value of 0.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.zwarning = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "85_2",
    "user": "gpt-3",
    "question": "Retrieve the specobjid values from the Emission_line_estimates table for all spectroscopic objects in the Spectroscopic_objects table where zwarning is equal to 0.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.zwarning = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "86_1",
    "user": "gpt-3",
    "question": "Get the name of the run from the photoobj table for photometric objects where type is equal to the value associated with photometrically observed and the description is \"NotAType:\".",
    "query": "SELECT T1.run FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.description = \"NotAType:\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "86_2",
    "user": "gpt-3",
    "question": "Find the run values from the photoobj table for objects that were photometrically observed and whose type is not a specified type.",
    "query": "SELECT T1.run FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.description = \"NotAType:\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "87_1",
    "user": "gpt-3",
    "question": "What is the specobjid for a galaxy's emission line estimates where the fiberid is equal to 81?",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.fiberid = 81"
  },
  {
    "db_id": "sdss_temporary",
    "id": "87_2",
    "user": "gpt-3",
    "question": "Find the specobjid from Emission_line_estimates where Spectroscopic_objects' fiberid is equal to 81, and also join with specobj table.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.fiberid = 81"
  },
  {
    "db_id": "sdss_temporary",
    "id": "88_1",
    "user": "gpt-3",
    "question": "Find the description of photometrically observed objects that have a neighbor type value of 3 in the neighbors table.",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.neighbortype = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "88_2",
    "user": "gpt-3",
    "question": "Retrieve the description of photometrically observed objects from a list of neighbors where the neighbor type is 3.",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.neighbortype = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "89_1",
    "user": "gpt-3",
    "question": "Retrieve the photometrically observed value for the nearest neighbor object with an ID of 1237645876861534997 from the photo type table.",
    "query": "SELECT T1.value FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.neighborobjid = 1237645876861534997"
  },
  {
    "db_id": "sdss_temporary",
    "id": "89_2",
    "user": "gpt-3",
    "question": "What is the value of photometrically observed in the photo type table where the neighbor object ID in the neighbors table matches 1237645876861534997?",
    "query": "SELECT T1.value FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.neighborobjid = 1237645876861534997"
  },
  {
    "db_id": "sdss_temporary",
    "id": "90_1",
    "user": "gpt-3",
    "question": "What is the description of the photometrically observed neighbor type for objects that are nearest neighbors in mode 2?",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.neighbormode = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "90_2",
    "user": "gpt-3",
    "question": "Retrieve the description of the photometrically observed type for the nearest neighbor objects in which their neighbor mode is equal to 2.",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.neighbormode = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "91_1",
    "user": "gpt-3",
    "question": "Retrieve the declination of a spectroscopic object with the specobjid 310824547496519680 by joining the tables specobj and spplines on their shared specobjid column.",
    "query": "SELECT T1.dec FROM specobj AS T1 JOIN spplines AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid = 310824547496519680"
  },
  {
    "db_id": "sdss_temporary",
    "id": "91_2",
    "user": "gpt-3",
    "question": "What is the declination of the spectroscopic object with a specobjid of 310824547496519680 in the Spectroscopic_objects table, which is also listed in the spplines table as Stellar_spectral_line_indices?",
    "query": "SELECT T1.dec FROM specobj AS T1 JOIN spplines AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid = 310824547496519680"
  },
  {
    "db_id": "sdss_temporary",
    "id": "92_1",
    "user": "gpt-3",
    "question": "Get the declination values of objects in the photometric_objects table where the object ID matches that of the nearest neighbour objects table and the neighbormode is equal to 2.",
    "query": "SELECT T1.dec FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.neighbormode = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "92_2",
    "user": "gpt-3",
    "question": "Find the declination of objects in the photometric catalog for which there exists a nearest neighbor object in the neighbors table with a neighbormode value of 2.",
    "query": "SELECT T1.dec FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.neighbormode = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "93_1",
    "user": "gpt-3",
    "question": "Retrieve the Modified Julian Date for all spectroscopic objects that have a matching best object ID with a photometric object of type 3.",
    "query": "SELECT T1.mjd FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.type = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "93_2",
    "user": "gpt-3",
    "question": "Retrieve the Modified Julian Date (mjd) of all objects that have both spectroscopic and photometric data, where the object's bestobjid in the spectroscopic data matches the objid in the photometric data and the type of the object in the photometric data is a galaxy (type = 3).",
    "query": "SELECT T1.mjd FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.type = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "94_1",
    "user": "gpt-3",
    "question": "Find the ID of the nearest neighbor objects where their type is a galaxy and has been photometrically observed.",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.name = \"GALAXY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "94_2",
    "user": "gpt-3",
    "question": "What is the object ID for the nearest neighbor of a galaxy that has been photometrically observed?",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.name = \"GALAXY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "95_1",
    "user": "gpt-3",
    "question": "Retrieve the type of nearest neighbor objects from a table that joins neighbors and photoobj on the object ID, where the type of objects in photoobj is equal to 0.",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.type = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "95_2",
    "user": "gpt-3",
    "question": "Retrieve the neighbor type of objects closest to a photo object that has a type value of 0, by joining the neighbors and photoobj tables and selecting the neighbortype column from the Nearest_neighbour_objects table.",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.type = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "96_1",
    "user": "gpt-3",
    "question": "Retrieve the object ID from the photoobj table for objects that are classified as photometrically observed and have a type value of \"KNOWNOBJ\".",
    "query": "SELECT T1.objid FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name = \"KNOWNOBJ\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "96_2",
    "user": "gpt-3",
    "question": "Get the object ID of all objects from the table \"Photometric_objects\" that have a type value matching the value associated with the name \"KNOWNOBJ\" in the table \"photo_type\".",
    "query": "SELECT T1.objid FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name = \"KNOWNOBJ\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "97_1",
    "user": "gpt-3",
    "question": "Find the clean value for all Photometric objects where their objid matches with the objid of their nearest neighbor object, and the mode of the nearest neighbor object is equal to 1.",
    "query": "SELECT T1.clean FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "97_2",
    "user": "gpt-3",
    "question": "Find the clean data for Photometric objects that have a nearest neighbor in Nearest_neighbour_objects with a mode value of 1.",
    "query": "SELECT T1.clean FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "98_1",
    "user": "gpt-3",
    "question": "Find the neighbor object IDs of all objects in the neighbors table where the corresponding object ID in the photoobj table has a value of 0 for the clean column.",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.clean = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "98_2",
    "user": "gpt-3",
    "question": "Find the objid of the nearest neighbor objects that are clean based on the photoobj table.",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.clean = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "99_1",
    "user": "gpt-3",
    "question": "Find the best object ID for a spectroscopic object where the corresponding emission line estimate's specobjid is 300638391848953856.",
    "query": "SELECT T1.bestobjid FROM specobj AS T1 JOIN galspecline AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid = 300638391848953856"
  },
  {
    "db_id": "sdss_temporary",
    "id": "99_2",
    "user": "gpt-3",
    "question": "Get the best object identification number from the table of spectroscopic objects where the object's identification number matches that in the emission line estimates.",
    "query": "SELECT T1.bestobjid FROM specobj AS T1 JOIN galspecline AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid = 300638391848953856"
  },
  {
    "db_id": "sdss_temporary",
    "id": "100_1",
    "user": "gpt-3",
    "question": "What survey is the spectroscopic object with specobjid 299538055956555776 a part of, based on the emission line estimates from the galspecline table?",
    "query": "SELECT T1.survey FROM specobj AS T1 JOIN galspecline AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid = 299538055956555776"
  },
  {
    "db_id": "sdss_temporary",
    "id": "100_2",
    "user": "gpt-3",
    "question": "What is the survey of the spectroscopic object with a specobjid of 299538055956555776 based on data from both the specobj and galspecline tables?",
    "query": "SELECT T1.survey FROM specobj AS T1 JOIN galspecline AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid = 299538055956555776"
  },
  {
    "db_id": "sdss_temporary",
    "id": "101_1",
    "user": "gpt-3",
    "question": "\"Retrieve the declination values for all photometric objects that have been observed as cosmic rays in the photoobj table, based on their corresponding type value from the photo_type table.\"",
    "query": "SELECT T1.dec FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name = \"COSMIC_RAY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "101_2",
    "user": "gpt-3",
    "question": "Find the declination values of all objects in the photoobj table that have a type value of \"COSMIC_RAY\" as defined in the photometrically_observed table.",
    "query": "SELECT T1.dec FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name = \"COSMIC_RAY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "102_1",
    "user": "gpt-3",
    "question": "Find the spectral object ID for emission line estimates where the survey is \"boss\".",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.survey = \"boss\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "102_2",
    "user": "gpt-3",
    "question": "Retrieve the specobjid from the Emission_line_estimates table for all spectroscopic objects with a survey value of \"boss\" in the Spectroscopic_objects table.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.survey = \"boss\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "103_1",
    "user": "gpt-3",
    "question": "Retrieve the specobjid values from the spplines table for all spectroscopic objects in the Spectroscopic_objects table that have a subclass of \"B0IVe (5394)\".",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.subclass = \"B0IVe (5394)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "103_2",
    "user": "gpt-3",
    "question": "What is the specobjid for objects with a subclass of \"B0IVe (5394)\" in the table spplines?",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.subclass = \"B0IVe (5394)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "104_1",
    "user": "gpt-3",
    "question": "Find the description for all photometrically observed photo types of objects with a galactic longitude value of 0.0389610295497675 in the Photometric_objects table.",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.l = 0.0389610295497675"
  },
  {
    "db_id": "sdss_temporary",
    "id": "104_2",
    "user": "gpt-3",
    "question": "What is the description of photometrically observed objects from the photo_type table where the type value matches that of Photometric_objects with an l value of 0.0389610295497675?",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.l = 0.0389610295497675"
  },
  {
    "db_id": "sdss_temporary",
    "id": "105_1",
    "user": "gpt-3",
    "question": "Find the spectral object ID from the table of galactic spectroscopic line estimates, only for those objects whose load version is 1017 in the corresponding table of spectroscopic objects.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.loadversion = 1017"
  },
  {
    "db_id": "sdss_temporary",
    "id": "105_2",
    "user": "gpt-3",
    "question": "Find the specobjid from the galspecline table for spectroscopic objects with a loadversion of 1017.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.loadversion = 1017"
  },
  {
    "db_id": "sdss_temporary",
    "id": "106_1",
    "user": "gpt-3",
    "question": "Retrieve the specobjid from Stellar_spectal_line_indices for objects in Spectroscopic_objects with a plateid of 872572466306770944.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.plateid = 872572466306770944"
  },
  {
    "db_id": "sdss_temporary",
    "id": "106_2",
    "user": "gpt-3",
    "question": "What are the specobjids from the table spplines that correspond to objects in the Spectroscopic_objects table with a plateid of 872572466306770944?",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.plateid = 872572466306770944"
  },
  {
    "db_id": "sdss_temporary",
    "id": "107_1",
    "user": "gpt-3",
    "question": "Retrieve the program name of a spectroscopic object from the table of specobj and join it with the emission line estimates on their shared specobjid, for a specific specobjid value.",
    "query": "SELECT T1.programname FROM specobj AS T1 JOIN galspecline AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid = 299621343962359808"
  },
  {
    "db_id": "sdss_temporary",
    "id": "107_2",
    "user": "gpt-3",
    "question": "Find the name of the program for a spectroscopic object with a specobjid of 299621343962359808 that has emission line estimates in the galspecline table.",
    "query": "SELECT T1.programname FROM specobj AS T1 JOIN galspecline AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid = 299621343962359808"
  },
  {
    "db_id": "sdss_temporary",
    "id": "108_1",
    "user": "gpt-3",
    "question": "What is the modified Julian date (mjd) of photometric objects where their object id matches with the nearest neighbour objects and their mode is equal to 1?",
    "query": "SELECT T1.mjd FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "108_2",
    "user": "gpt-3",
    "question": "Retrieve the Modified Julian Date of all photometric objects where the nearest neighbor object's mode is equal to 1.",
    "query": "SELECT T1.mjd FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "109_1",
    "user": "gpt-3",
    "question": "Find the neighbor mode for the nearest neighbour objects joined with photometric objects where the extinction value in the r band is equal to 0.01013326.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.extinction_r = 0.01013326"
  },
  {
    "db_id": "sdss_temporary",
    "id": "109_2",
    "user": "gpt-3",
    "question": "Find the neighbor mode of all objects from the table \"neighbors\" that have a corresponding entry in the table \"photoobj\" with an extinction value of 0.01013326 for the r-band filter.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.extinction_r = 0.01013326"
  },
  {
    "db_id": "sdss_temporary",
    "id": "110_1",
    "user": "gpt-3",
    "question": "Find the object ID for all photometric objects from the photoobj table that have a nearest neighbor with a neighbor type of 3 in the neighbors table.",
    "query": "SELECT T1.objid FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.neighbortype = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "110_2",
    "user": "gpt-3",
    "question": "Find the object ID for all Photometric objects that have a nearest neighbor with a neighbortype of 3 in the neighbors table.",
    "query": "SELECT T1.objid FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.neighbortype = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "111_1",
    "user": "gpt-3",
    "question": "Retrieve the type of nearest neighbour objects from a table called \"neighbors\" where the object ID matches that in a table called \"photoobj\" and the value in the column \"i\" is equal to 12.27935.",
    "query": "SELECT T1.type FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.i = 12.27935"
  },
  {
    "db_id": "sdss_temporary",
    "id": "111_2",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbour objects from the neighbors table, where the corresponding Photometric object has an i-band magnitude of 12.27935.",
    "query": "SELECT T1.type FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.i = 12.27935"
  },
  {
    "db_id": "sdss_temporary",
    "id": "112_1",
    "user": "gpt-3",
    "question": "Retrieve the load version of photometric objects from the photoobj table, where the type value matches \"UNKNOWN\" in the photo_type table and is equivalent to being classified as photometrically observed.",
    "query": "SELECT T1.loadversion FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name = \"UNKNOWN\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "112_2",
    "user": "gpt-3",
    "question": "\"Select the load version from the photo objects table where the type is unknown and is observed photometrically.\"",
    "query": "SELECT T1.loadversion FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name = \"UNKNOWN\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "113_1",
    "user": "gpt-3",
    "question": "What is the special target 1 of the spectroscopic object with a specobjid of 311930381299378176?",
    "query": "SELECT T1.special_target1 FROM specobj AS T1 JOIN spplines AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid = 311930381299378176"
  },
  {
    "db_id": "sdss_temporary",
    "id": "113_2",
    "user": "gpt-3",
    "question": "What is the special target 1 value for the spectroscopic object with a specobjid of 311930381299378176?",
    "query": "SELECT T1.special_target1 FROM specobj AS T1 JOIN spplines AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid = 311930381299378176"
  },
  {
    "db_id": "sdss_temporary",
    "id": "114_1",
    "user": "gpt-3",
    "question": "Retrieve the specobjid values from the Emission_line_estimates table for all spectroscopic objects in the Spectroscopic_objects table that are not associated with a SEGUE2 primary object.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.segue2primary = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "114_2",
    "user": "gpt-3",
    "question": "Find the spectral object IDs from the table \"galspecline\" for all spectroscopic objects that are not primary in the \"specobj\" table.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.segue2primary = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "115_1",
    "user": "gpt-3",
    "question": "Retrieve the \"clean\" attribute of objects from the \"photometric_objects\" table, joining it with the \"specobj\" table on their object ID and filtering for only those where the corresponding entry in the \"segue2primary\" column is equal to 1.",
    "query": "SELECT T1.clean FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.segue2primary = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "115_2",
    "user": "gpt-3",
    "question": "Retrieve the \"clean\" value from the \"photoobj\" table for objects in the \"Photometric_objects\" and \"Spectroscopic_objects\" tables where the object IDs match and the \"segue2primary\" value in the \"Spectroscopic_objects\" table is equal to 1.",
    "query": "SELECT T1.clean FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.segue2primary = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "116_1",
    "user": "gpt-3",
    "question": "Find the neighbor mode of objects in the \"neighbors\" table that have an object ID matching those in the \"photoobj\" table with a declination value of -17.3987483737476.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.dec = -17.3987483737476"
  },
  {
    "db_id": "sdss_temporary",
    "id": "116_2",
    "user": "gpt-3",
    "question": "Find the neighbor mode for the nearest objects in the \"neighbors\" table that have an object ID matching those in the \"photoobj\" table and a declination of -17.3987483737476.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.dec = -17.3987483737476"
  },
  {
    "db_id": "sdss_temporary",
    "id": "117_1",
    "user": "gpt-3",
    "question": "What is the name of the field where photometrically observed objects with an unknown type are located?",
    "query": "SELECT T1.field FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name = \"UNKNOWN\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "117_2",
    "user": "gpt-3",
    "question": "Find the field name from the table of photometric objects where the type matches with the value \"UNKNOWN\" in the photo_type table.",
    "query": "SELECT T1.field FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name = \"UNKNOWN\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "118_1",
    "user": "gpt-3",
    "question": "Find the \"b\" column from the table of photometric objects where the type is equal to \"UNKNOWN\", joining with the photo_type table where the value matches a record with a name of \"UNKNOWN\".",
    "query": "SELECT T1.b FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name = \"UNKNOWN\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "118_2",
    "user": "gpt-3",
    "question": "Find the b values from the Photometric_objects table for objects that have a type value of \"UNKNOWN\" in the photo_type table.",
    "query": "SELECT T1.b FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name = \"UNKNOWN\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "119_1",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbour objects' modes for all photometric objects in field 180.",
    "query": "SELECT T1.mode FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.field = 180"
  },
  {
    "db_id": "sdss_temporary",
    "id": "119_2",
    "user": "gpt-3",
    "question": "Retrieve the mode of nearest neighbour objects from the table \"neighbors\" for all objects in the \"photoobj\" table with a field value of 180.",
    "query": "SELECT T1.mode FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.field = 180"
  },
  {
    "db_id": "sdss_temporary",
    "id": "120_1",
    "user": "gpt-3",
    "question": "Get the \"u\" value from the \"Photometric_objects\" table for the object with an ID of 1237678888520123034 that is also present in the \"neighbors\" table.",
    "query": "SELECT T1.u FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.objid = 1237678888520123034"
  },
  {
    "db_id": "sdss_temporary",
    "id": "120_2",
    "user": "gpt-3",
    "question": "\"Retrieve the u value from Photometric_objects for the object with objid 1237678888520123034, which is also present in Nearest_neighbour_objects.\"",
    "query": "SELECT T1.u FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.objid = 1237678888520123034"
  },
  {
    "db_id": "sdss_temporary",
    "id": "121_1",
    "user": "gpt-3",
    "question": "Get the specobjid values from the galspecline table for all emission line estimates that have a corresponding record in the specobj table where the plateid is equal to 696932076829566976.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.plateid = 696932076829566976"
  },
  {
    "db_id": "sdss_temporary",
    "id": "121_2",
    "user": "gpt-3",
    "question": "Find the specobjid from the Emission_line_estimates table where the Spectroscopic_objects table has a plateid value of 696932076829566976.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.plateid = 696932076829566976"
  },
  {
    "db_id": "sdss_temporary",
    "id": "122_1",
    "user": "gpt-3",
    "question": "Find the specobjid for all emission line estimates where the corresponding spectroscopic object has an mjd value of 52319.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.mjd = 52319"
  },
  {
    "db_id": "sdss_temporary",
    "id": "122_2",
    "user": "gpt-3",
    "question": "Retrieve the specobjid from the galspecline table for all spectroscopic objects with an mjd of 52319 in the specobj table.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.mjd = 52319"
  },
  {
    "db_id": "sdss_temporary",
    "id": "123_1",
    "user": "gpt-3",
    "question": "Retrieve the specobjid from the table Emission_line_estimates where it joins with Spectroscopic_objects and the bestobjid is equal to 1237645943979442192.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.bestobjid = 1237645943979442192"
  },
  {
    "db_id": "sdss_temporary",
    "id": "123_2",
    "user": "gpt-3",
    "question": "Find the specobjid from the table Emission_line_estimates where bestobjid in Spectroscopic_objects is equal to 1237645943979442192.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.bestobjid = 1237645943979442192"
  },
  {
    "db_id": "sdss_temporary",
    "id": "124_1",
    "user": "gpt-3",
    "question": "Find the specobjid for stellar spectral line indices where the redshift value in Spectroscopic objects is -0.001668776.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.z = -0.001668776"
  },
  {
    "db_id": "sdss_temporary",
    "id": "124_2",
    "user": "gpt-3",
    "question": "Retrieve the specobjid from spplines where the corresponding spectroscopic object has a redshift of -0.001668776.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.z = -0.001668776"
  },
  {
    "db_id": "sdss_temporary",
    "id": "125_1",
    "user": "gpt-3",
    "question": "What is the description of photometric objects where the photo type value is equal to photometrically observed and the declination is -17.2743614889667?",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.dec = -17.2743614889667"
  },
  {
    "db_id": "sdss_temporary",
    "id": "125_2",
    "user": "gpt-3",
    "question": "Retrieve the description of photometrically observed objects from the photo_type table where their type matches that of objects in the photoobj table with a declination value of -17.2743614889667.",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.dec = -17.2743614889667"
  },
  {
    "db_id": "sdss_temporary",
    "id": "126_1",
    "user": "gpt-3",
    "question": "What is the value for photometrically observed type in the photoobj table for objects with a u magnitude of 14.90171?",
    "query": "SELECT T1.value FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.u = 14.90171"
  },
  {
    "db_id": "sdss_temporary",
    "id": "126_2",
    "user": "gpt-3",
    "question": "What is the value of the photometrically observed type for objects in the photoobj table with a u value of 14.90171?",
    "query": "SELECT T1.value FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.u = 14.90171"
  },
  {
    "db_id": "sdss_temporary",
    "id": "127_1",
    "user": "gpt-3",
    "question": "What is the count of all photo objects grouped by their flags?",
    "query": "SELECT T1.flags, count(*) FROM photoobj AS T1  GROUP BY T1.flags"
  },
  {
    "db_id": "sdss_temporary",
    "id": "127_2",
    "user": "gpt-3",
    "question": "Count the number of objects in the \"photoobj\" table grouped by their flags and show the total count for each unique flag.",
    "query": "SELECT T1.flags, count(*) FROM photoobj AS T1  GROUP BY T1.flags"
  },
  {
    "db_id": "sdss_temporary",
    "id": "128_1",
    "user": "gpt-3",
    "question": "Find the number of nearest neighbor objects for each neighbor mode in the neighbors table and group the results by neighbormode.",
    "query": "SELECT T1.neighbormode, count(*) FROM neighbors AS T1  GROUP BY T1.neighbormode"
  },
  {
    "db_id": "sdss_temporary",
    "id": "128_2",
    "user": "gpt-3",
    "question": "What is the count of neighbors grouped by neighbor mode in the Nearest_neighbour_objects table?",
    "query": "SELECT T1.neighbormode, count(*) FROM neighbors AS T1  GROUP BY T1.neighbormode"
  },
  {
    "db_id": "sdss_temporary",
    "id": "129_1",
    "user": "gpt-3",
    "question": "\"Count the number of objects and their respective IDs from the neighbors table grouped by the object ID in ascending order.\"",
    "query": "SELECT T1.objid, count(*) FROM neighbors AS T1  GROUP BY T1.objid"
  },
  {
    "db_id": "sdss_temporary",
    "id": "129_2",
    "user": "gpt-3",
    "question": "Get the count of objects that are nearest neighbours for each object, grouped by object ID.",
    "query": "SELECT T1.objid, count(*) FROM neighbors AS T1  GROUP BY T1.objid"
  },
  {
    "db_id": "sdss_temporary",
    "id": "130_1",
    "user": "gpt-3",
    "question": "How many observations have been made for each type of photometrically observed data, along with a description of each type?",
    "query": "SELECT T1.description, count(*) FROM photo_type AS T1  GROUP BY T1.description"
  },
  {
    "db_id": "sdss_temporary",
    "id": "130_2",
    "user": "gpt-3",
    "question": "How many times has each description of photometrically observed been counted in the photo_type table?",
    "query": "SELECT T1.description, count(*) FROM photo_type AS T1  GROUP BY T1.description"
  },
  {
    "db_id": "sdss_temporary",
    "id": "131_1",
    "user": "gpt-3",
    "question": "Count the number of objects and group them by their redshift warning in the spectroscopic database.",
    "query": "SELECT T1.zwarning, count(*) FROM specobj AS T1  GROUP BY T1.zwarning"
  },
  {
    "db_id": "sdss_temporary",
    "id": "131_2",
    "user": "gpt-3",
    "question": "Count the number of objects and group them by their zwarning in the table specobj.",
    "query": "SELECT T1.zwarning, count(*) FROM specobj AS T1  GROUP BY T1.zwarning"
  },
  {
    "db_id": "sdss_temporary",
    "id": "132_1",
    "user": "gpt-3",
    "question": "How many photometrically observed photos are there for each name in the photo_type table?",
    "query": "SELECT T1.name, count(*) FROM photo_type AS T1  GROUP BY T1.name"
  },
  {
    "db_id": "sdss_temporary",
    "id": "132_2",
    "user": "gpt-3",
    "question": "Count the number of observations for each name in the photometrically observed photo types.",
    "query": "SELECT T1.name, count(*) FROM photo_type AS T1  GROUP BY T1.name"
  },
  {
    "db_id": "sdss_temporary",
    "id": "133_1",
    "user": "gpt-3",
    "question": "Find the number of objects that are the nearest neighbors of each object and group them by the ID of the nearest neighbor object.",
    "query": "SELECT T1.neighborobjid, count(*) FROM neighbors AS T1  GROUP BY T1.neighborobjid"
  },
  {
    "db_id": "sdss_temporary",
    "id": "133_2",
    "user": "gpt-3",
    "question": "Find the number of objects that are nearest neighbors for each unique neighbor object ID in the \"neighbors\" table.",
    "query": "SELECT T1.neighborobjid, count(*) FROM neighbors AS T1  GROUP BY T1.neighborobjid"
  },
  {
    "db_id": "sdss_temporary",
    "id": "134_1",
    "user": "gpt-3",
    "question": "Find the type and count of all nearest neighbour objects from the neighbors table grouped by their type.",
    "query": "SELECT T1.type, count(*) FROM neighbors AS T1  GROUP BY T1.type"
  },
  {
    "db_id": "sdss_temporary",
    "id": "134_2",
    "user": "gpt-3",
    "question": "What is the number of objects for each type in the table \"neighbors\" when grouped by the object's nearest neighbor?",
    "query": "SELECT T1.type, count(*) FROM neighbors AS T1  GROUP BY T1.type"
  },
  {
    "db_id": "sdss_temporary",
    "id": "135_1",
    "user": "gpt-3",
    "question": "What is the number of spectroscopic objects and their corresponding Modified Julian Date (mjd) values in the specobj table grouped by mjd?",
    "query": "SELECT T1.mjd, count(*) FROM specobj AS T1  GROUP BY T1.mjd"
  },
  {
    "db_id": "sdss_temporary",
    "id": "135_2",
    "user": "gpt-3",
    "question": "\"Retrieve the count of spectroscopic objects for each distinct modified Julian date (mjd) from the specobj table.\"",
    "query": "SELECT T1.mjd, count(*) FROM specobj AS T1  GROUP BY T1.mjd"
  },
  {
    "db_id": "sdss_temporary",
    "id": "136_1",
    "user": "gpt-3",
    "question": "Count the number of objects and group them by their color column from the table \"photoobj\" as \"Photometric_objects\".",
    "query": "SELECT T1.colc, count(*) FROM photoobj AS T1  GROUP BY T1.colc"
  },
  {
    "db_id": "sdss_temporary",
    "id": "136_2",
    "user": "gpt-3",
    "question": "Count the number of photo objects grouped by their \"colc\" attribute.",
    "query": "SELECT T1.colc, count(*) FROM photoobj AS T1  GROUP BY T1.colc"
  },
  {
    "db_id": "sdss_temporary",
    "id": "137_1",
    "user": "gpt-3",
    "question": "How many objects have a CModel magnitude in the r band, and what is the total number of objects for each unique value of CModel magnitude in the r band?",
    "query": "SELECT T1.cmodelmag_r, count(*) FROM photoobj AS T1  GROUP BY T1.cmodelmag_r"
  },
  {
    "db_id": "sdss_temporary",
    "id": "137_2",
    "user": "gpt-3",
    "question": "\"How many objects are there with a cmodel magnitude in the r-band, and what is the count of each distinct cmodel magnitude?\"",
    "query": "SELECT T1.cmodelmag_r, count(*) FROM photoobj AS T1  GROUP BY T1.cmodelmag_r"
  },
  {
    "db_id": "sdss_temporary",
    "id": "138_1",
    "user": "gpt-3",
    "question": "Count the number of photo objects and group them by their \"u\" values.",
    "query": "SELECT T1.u, count(*) FROM photoobj AS T1  GROUP BY T1.u"
  },
  {
    "db_id": "sdss_temporary",
    "id": "138_2",
    "user": "gpt-3",
    "question": "Count the number of photo objects in the database grouped by their \"u\" value.",
    "query": "SELECT T1.u, count(*) FROM photoobj AS T1  GROUP BY T1.u"
  },
  {
    "db_id": "sdss_temporary",
    "id": "139_1",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbour objects and count how many instances there are for each mode.",
    "query": "SELECT T1.mode, count(*) FROM neighbors AS T1  GROUP BY T1.mode"
  },
  {
    "db_id": "sdss_temporary",
    "id": "139_2",
    "user": "gpt-3",
    "question": "\"Count the number of nearest neighbor objects grouped by their mode.\"",
    "query": "SELECT T1.mode, count(*) FROM neighbors AS T1  GROUP BY T1.mode"
  },
  {
    "db_id": "sdss_temporary",
    "id": "140_1",
    "user": "gpt-3",
    "question": "How many objects were observed in each survey from the Spectroscopic_objects table?",
    "query": "SELECT T1.survey, count(*) FROM specobj AS T1  GROUP BY T1.survey"
  },
  {
    "db_id": "sdss_temporary",
    "id": "140_2",
    "user": "gpt-3",
    "question": "Find the number of objects in each survey from the specobj table.",
    "query": "SELECT T1.survey, count(*) FROM specobj AS T1  GROUP BY T1.survey"
  },
  {
    "db_id": "sdss_temporary",
    "id": "141_1",
    "user": "gpt-3",
    "question": "Count the number of objects in the photoobj table and group them by their cmodelmag_u value, returning the corresponding u-band magnitude for each object.",
    "query": "SELECT T1.cmodelmag_u, count(*) FROM photoobj AS T1  GROUP BY T1.cmodelmag_u"
  },
  {
    "db_id": "sdss_temporary",
    "id": "141_2",
    "user": "gpt-3",
    "question": "What is the count of Photometric objects with a cmodel magnitude in the u-band?",
    "query": "SELECT T1.cmodelmag_u, count(*) FROM photoobj AS T1  GROUP BY T1.cmodelmag_u"
  },
  {
    "db_id": "sdss_temporary",
    "id": "142_1",
    "user": "gpt-3",
    "question": "How many photometric objects are there and what is their CModel magnitude in the G band?",
    "query": "SELECT T1.cmodelmag_g, count(*) FROM photoobj AS T1  GROUP BY T1.cmodelmag_g"
  },
  {
    "db_id": "sdss_temporary",
    "id": "142_2",
    "user": "gpt-3",
    "question": "How many photometric objects are there and what is the g-band cmodel magnitude of each one?",
    "query": "SELECT T1.cmodelmag_g, count(*) FROM photoobj AS T1  GROUP BY T1.cmodelmag_g"
  },
  {
    "db_id": "sdss_temporary",
    "id": "143_1",
    "user": "gpt-3",
    "question": "How many instances of each subclass exist in the spectroscopic objects table?",
    "query": "SELECT T1.subclass, count(*) FROM specobj AS T1  GROUP BY T1.subclass"
  },
  {
    "db_id": "sdss_temporary",
    "id": "143_2",
    "user": "gpt-3",
    "question": "Find the subclass of spectroscopic objects and count the number of occurrences for each subclass in the specobj table.",
    "query": "SELECT T1.subclass, count(*) FROM specobj AS T1  GROUP BY T1.subclass"
  },
  {
    "db_id": "sdss_temporary",
    "id": "144_1",
    "user": "gpt-3",
    "question": "What is the count of clean objects in the photoobj table grouped by their clean status?",
    "query": "SELECT T1.clean, count(*) FROM photoobj AS T1  GROUP BY T1.clean"
  },
  {
    "db_id": "sdss_temporary",
    "id": "144_2",
    "user": "gpt-3",
    "question": "Count the number of objects in the photoobj table and group them by their \"clean\" status.",
    "query": "SELECT T1.clean, count(*) FROM photoobj AS T1  GROUP BY T1.clean"
  },
  {
    "db_id": "sdss_temporary",
    "id": "145_1",
    "user": "gpt-3",
    "question": "What is the count of objects in the \"photoobj\" table grouped by their value in column \"b\" in the table \"Photometric_objects\"?",
    "query": "SELECT T1.b, count(*) FROM photoobj AS T1  GROUP BY T1.b"
  },
  {
    "db_id": "sdss_temporary",
    "id": "145_2",
    "user": "gpt-3",
    "question": "What is the number of photometric objects grouped by their \"b\" values in the photoobj table?",
    "query": "SELECT T1.b, count(*) FROM photoobj AS T1  GROUP BY T1.b"
  },
  {
    "db_id": "sdss_temporary",
    "id": "146_1",
    "user": "gpt-3",
    "question": "Find the number of objects and their corresponding extinction values in the \"photoobj\" table, grouped by the extinction_r column, from the \"Photometric_objects\" table.",
    "query": "SELECT T1.extinction_r, count(*) FROM photoobj AS T1  GROUP BY T1.extinction_r"
  },
  {
    "db_id": "sdss_temporary",
    "id": "146_2",
    "user": "gpt-3",
    "question": "What is the count of objects in the photometric catalog grouped by their r-band extinction values?",
    "query": "SELECT T1.extinction_r, count(*) FROM photoobj AS T1  GROUP BY T1.extinction_r"
  },
  {
    "db_id": "sdss_temporary",
    "id": "147_1",
    "user": "gpt-3",
    "question": "Count the number of objects in each rerun for Photometric_objects from the photoobj table and group them by their corresponding rerun values.",
    "query": "SELECT T1.rerun, count(*) FROM photoobj AS T1  GROUP BY T1.rerun"
  },
  {
    "db_id": "sdss_temporary",
    "id": "147_2",
    "user": "gpt-3",
    "question": "Find the number of objects in each rerun from the Photometric_objects table.",
    "query": "SELECT T1.rerun, count(*) FROM photoobj AS T1  GROUP BY T1.rerun"
  },
  {
    "db_id": "sdss_temporary",
    "id": "148_1",
    "user": "gpt-3",
    "question": "Find the count of spectroscopic objects grouped by their specobjid.",
    "query": "SELECT T1.specobjid, count(*) FROM specobj AS T1  GROUP BY T1.specobjid"
  },
  {
    "db_id": "sdss_temporary",
    "id": "148_2",
    "user": "gpt-3",
    "question": "Count the number of spectroscopic objects and group them by their unique identifier.",
    "query": "SELECT T1.specobjid, count(*) FROM specobj AS T1  GROUP BY T1.specobjid"
  },
  {
    "db_id": "sdss_temporary",
    "id": "149_1",
    "user": "gpt-3",
    "question": "Count the number of objects in the table \"specobj\" and group them by their first ancillary target.",
    "query": "SELECT T1.ancillary_target1, count(*) FROM specobj AS T1  GROUP BY T1.ancillary_target1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "149_2",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have the same ancillary target 1 value and what is the total count of these objects in the specobj table?",
    "query": "SELECT T1.ancillary_target1, count(*) FROM specobj AS T1  GROUP BY T1.ancillary_target1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "150_1",
    "user": "gpt-3",
    "question": "Find the velocity dispersion error and count the number of spectroscopic objects in the \"specobj\" table, grouping them by the velocity dispersion error.",
    "query": "SELECT T1.veldisperr, count(*) FROM specobj AS T1  GROUP BY T1.veldisperr"
  },
  {
    "db_id": "sdss_temporary",
    "id": "150_2",
    "user": "gpt-3",
    "question": "Count the number of objects in the \"specobj\" table and group them by their velocity dispersion error, then select the velocity dispersion error and its corresponding count for each group.",
    "query": "SELECT T1.veldisperr, count(*) FROM specobj AS T1  GROUP BY T1.veldisperr"
  },
  {
    "db_id": "sdss_temporary",
    "id": "151_1",
    "user": "gpt-3",
    "question": "Count the number of objects and group them by their row center value from the table of photometric objects in the photoobj database.",
    "query": "SELECT T1.rowc, count(*) FROM photoobj AS T1  GROUP BY T1.rowc"
  },
  {
    "db_id": "sdss_temporary",
    "id": "151_2",
    "user": "gpt-3",
    "question": "What is the number of photometric objects grouped by their rowc value in the photoobj table?",
    "query": "SELECT T1.rowc, count(*) FROM photoobj AS T1  GROUP BY T1.rowc"
  },
  {
    "db_id": "sdss_temporary",
    "id": "152_1",
    "user": "gpt-3",
    "question": "Find the distance and count the number of objects for each nearest neighbor in the neighbors table.",
    "query": "SELECT T1.distance, count(*) FROM neighbors AS T1  GROUP BY T1.distance"
  },
  {
    "db_id": "sdss_temporary",
    "id": "152_2",
    "user": "gpt-3",
    "question": "Find the distance and count the number of occurrences for all nearest neighbor objects in the table \"neighbors\".",
    "query": "SELECT T1.distance, count(*) FROM neighbors AS T1  GROUP BY T1.distance"
  },
  {
    "db_id": "sdss_temporary",
    "id": "153_1",
    "user": "gpt-3",
    "question": "\"Count the number of objects observed on each unique Modified Julian Date (MJD) in the photoobj table, and group the results by MJD.\"",
    "query": "SELECT T1.mjd, count(*) FROM photoobj AS T1  GROUP BY T1.mjd"
  },
  {
    "db_id": "sdss_temporary",
    "id": "153_2",
    "user": "gpt-3",
    "question": "Count the number of photometric objects for each distinct Modified Julian Date and group them by their respective Modified Julian Dates.",
    "query": "SELECT T1.mjd, count(*) FROM photoobj AS T1  GROUP BY T1.mjd"
  },
  {
    "db_id": "sdss_temporary",
    "id": "154_1",
    "user": "gpt-3",
    "question": "Count the number of objects for each unique fiber ID in the specobj table and group them by fiber ID.",
    "query": "SELECT T1.fiberid, count(*) FROM specobj AS T1  GROUP BY T1.fiberid"
  },
  {
    "db_id": "sdss_temporary",
    "id": "154_2",
    "user": "gpt-3",
    "question": "Retrieve the number of objects for each unique fiber ID in the specobj table.",
    "query": "SELECT T1.fiberid, count(*) FROM specobj AS T1  GROUP BY T1.fiberid"
  },
  {
    "db_id": "sdss_temporary",
    "id": "155_1",
    "user": "gpt-3",
    "question": "Find the number of emission line estimates for each unique specobjid in the galspecline table.",
    "query": "SELECT T1.specobjid, count(*) FROM galspecline AS T1  GROUP BY T1.specobjid"
  },
  {
    "db_id": "sdss_temporary",
    "id": "155_2",
    "user": "gpt-3",
    "question": "\"Retrieve the number of emission line estimates for each specobjid in the galspecline table.\"",
    "query": "SELECT T1.specobjid, count(*) FROM galspecline AS T1  GROUP BY T1.specobjid"
  },
  {
    "db_id": "sdss_temporary",
    "id": "156_1",
    "user": "gpt-3",
    "question": "Count the number of photometrically observed values and group them by their value.",
    "query": "SELECT T1.value, count(*) FROM photo_type AS T1  GROUP BY T1.value"
  },
  {
    "db_id": "sdss_temporary",
    "id": "156_2",
    "user": "gpt-3",
    "question": "Find the count of observations grouped by their photometrically observed value.",
    "query": "SELECT T1.value, count(*) FROM photo_type AS T1  GROUP BY T1.value"
  },
  {
    "db_id": "sdss_temporary",
    "id": "157_1",
    "user": "gpt-3",
    "question": "Find the number of nearest neighbor objects grouped by their type in the neighbors table.",
    "query": "SELECT T1.neighbortype, count(*) FROM neighbors AS T1  GROUP BY T1.neighbortype"
  },
  {
    "db_id": "sdss_temporary",
    "id": "157_2",
    "user": "gpt-3",
    "question": "What is the number of objects for each neighbor type in the Nearest_neighbour_objects table?",
    "query": "SELECT T1.neighbortype, count(*) FROM neighbors AS T1  GROUP BY T1.neighbortype"
  },
  {
    "db_id": "sdss_temporary",
    "id": "158_1",
    "user": "gpt-3",
    "question": "Count the number of spectral line indices for each unique specobjid in the Stellar_spectal_line_indices table.",
    "query": "SELECT T1.specobjid, count(*) FROM spplines AS T1  GROUP BY T1.specobjid"
  },
  {
    "db_id": "sdss_temporary",
    "id": "158_2",
    "user": "gpt-3",
    "question": "Find the count of all spectral line indices for each unique specobjid in the table spplines, and group the results by specobjid.",
    "query": "SELECT T1.specobjid, count(*) FROM spplines AS T1  GROUP BY T1.specobjid"
  },
  {
    "db_id": "sdss_temporary",
    "id": "159_1",
    "user": "gpt-3",
    "question": "Find the number of spectroscopic objects for each segue2 target in the Spectroscopic_objects table.",
    "query": "SELECT T1.segue2_target1, count(*) FROM specobj AS T1  GROUP BY T1.segue2_target1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "159_2",
    "user": "gpt-3",
    "question": "\"Count the number of objects from the spectroscopic data table grouped by their SEGUE2 target and list the target with its corresponding count.\"",
    "query": "SELECT T1.segue2_target1, count(*) FROM specobj AS T1  GROUP BY T1.segue2_target1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "160_1",
    "user": "gpt-3",
    "question": "Retrieve the count of objects in the \"photoobj\" table grouped by their declination, and list their declination values.",
    "query": "SELECT T1.dec, count(*) FROM photoobj AS T1  GROUP BY T1.dec"
  },
  {
    "db_id": "sdss_temporary",
    "id": "160_2",
    "user": "gpt-3",
    "question": "Count the number of objects in the \"photoobj\" table and group them by their declination, displaying the declination and corresponding count.",
    "query": "SELECT T1.dec, count(*) FROM photoobj AS T1  GROUP BY T1.dec"
  },
  {
    "db_id": "sdss_temporary",
    "id": "161_1",
    "user": "gpt-3",
    "question": "How many nearest neighbor objects are in the table \"neighbors\"?",
    "query": "SELECT count(*) FROM neighbors AS T1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "161_2",
    "user": "gpt-3",
    "question": "How many nearest neighbor objects are there in the neighbors table?",
    "query": "SELECT count(*) FROM neighbors AS T1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "162_1",
    "user": "gpt-3",
    "question": "How many photometrically observed photo types are there in the database?",
    "query": "SELECT count(*) FROM photo_type AS T1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "162_2",
    "user": "gpt-3",
    "question": "How many rows are in the table for photometrically observed photo types?",
    "query": "SELECT count(*) FROM photo_type AS T1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "163_1",
    "user": "gpt-3",
    "question": "How many spectroscopic objects are there in the specobj table?",
    "query": "SELECT count(*) FROM specobj AS T1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "163_2",
    "user": "gpt-3",
    "question": "\"How many spectroscopic objects are there in the specobj table?\"",
    "query": "SELECT count(*) FROM specobj AS T1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "164_1",
    "user": "gpt-3",
    "question": "How many spectral lines are there in the SPPLines database?",
    "query": "SELECT count(*) FROM spplines AS T1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "164_2",
    "user": "gpt-3",
    "question": "How many rows are in the table \"Stellar_spectral_lines\"?",
    "query": "SELECT count(*) FROM spplines AS T1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "165_1",
    "user": "gpt-3",
    "question": "How many Photometric objects are there in the table Photoobj?",
    "query": "SELECT count(*) FROM photoobj AS T1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "165_2",
    "user": "gpt-3",
    "question": "How many Photometric objects are there in the photoobj table?",
    "query": "SELECT count(*) FROM photoobj AS T1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "166_1",
    "user": "gpt-3",
    "question": "How many emission line estimates are there in the galspecline table?",
    "query": "SELECT count(*) FROM galspecline AS T1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "166_2",
    "user": "gpt-3",
    "question": "How many rows are in the table \"galspecline\" that contains emission line estimates?",
    "query": "SELECT count(*) FROM galspecline AS T1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "167_1",
    "user": "gpt-3",
    "question": "How many spectral line indices are there in the Stellar Spectal Line Indices table where the specobjid is equal to 311956494700537856?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 311956494700537856"
  },
  {
    "db_id": "sdss_temporary",
    "id": "167_2",
    "user": "gpt-3",
    "question": "How many spectral lines are there for the object with specobjid 311956494700537856 in the table spplines?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 311956494700537856"
  },
  {
    "db_id": "sdss_temporary",
    "id": "168_1",
    "user": "gpt-3",
    "question": "How many objects are there in the Spectroscopic_objects table that have a class of \"GALAXY\"?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.class = \"GALAXY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "168_2",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have the class \"GALAXY\"?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.class = \"GALAXY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "169_1",
    "user": "gpt-3",
    "question": "How many photos are there that have been observed photometrically with a value of 5?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.value = 5"
  },
  {
    "db_id": "sdss_temporary",
    "id": "169_2",
    "user": "gpt-3",
    "question": "How many photos have been photometrically observed with a value of 5?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.value = 5"
  },
  {
    "db_id": "sdss_temporary",
    "id": "170_1",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there for the specobjid 311969688840071168 in the spplines table?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 311969688840071168"
  },
  {
    "db_id": "sdss_temporary",
    "id": "170_2",
    "user": "gpt-3",
    "question": "How many rows are in the spplines table where the specobjid is equal to 311969688840071168?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 311969688840071168"
  },
  {
    "db_id": "sdss_temporary",
    "id": "171_1",
    "user": "gpt-3",
    "question": "How many objects in the \"neighbors\" table have a neighbor type of 0?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighbortype = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "171_2",
    "user": "gpt-3",
    "question": "How many objects are there in the \"neighbors\" table that have a neighbor type of 0?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighbortype = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "172_1",
    "user": "gpt-3",
    "question": "How many photometric objects have a cmodel magnitude of 14.14018 in the u band?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.cmodelmag_u = 14.14018"
  },
  {
    "db_id": "sdss_temporary",
    "id": "172_2",
    "user": "gpt-3",
    "question": "\"How many objects have a cmodelmag_u value of 14.14018 in the Photometric_objects table of the photoobj database?\"",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.cmodelmag_u = 14.14018"
  },
  {
    "db_id": "sdss_temporary",
    "id": "173_1",
    "user": "gpt-3",
    "question": "How many spectroscopic objects are there with a plate number of 1016?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.plate = 1016"
  },
  {
    "db_id": "sdss_temporary",
    "id": "173_2",
    "user": "gpt-3",
    "question": "How many spectroscopic objects are there in the database with a plate number of 1016?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.plate = 1016"
  },
  {
    "db_id": "sdss_temporary",
    "id": "174_1",
    "user": "gpt-3",
    "question": "How many objects in the neighbors table have a neighbor type of 3?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighbortype = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "174_2",
    "user": "gpt-3",
    "question": "How many objects are there in the \"neighbors\" table that have a neighbor type of 3?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighbortype = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "175_1",
    "user": "gpt-3",
    "question": "How many records are in the photo_type table where the description is \"Trail: A satellite or asteroid or meteor trail. (not yet used)\"?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.description = \"Trail: A satellite or asteroid or meteor trail. (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "175_2",
    "user": "gpt-3",
    "question": "How many entries are there in the \"photo_type\" table where the description is \"Trail: A satellite or asteroid or meteor trail. (not yet used)\"?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.description = \"Trail: A satellite or asteroid or meteor trail. (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "176_1",
    "user": "gpt-3",
    "question": "How many objects are there in the \"neighbors\" table that have a mode of 1 in the \"Nearest_neighbour_objects\" column?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "176_2",
    "user": "gpt-3",
    "question": "How many objects are there in the \"neighbors\" table that have a mode value of 1 in the \"Nearest_neighbour_objects\" column?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "177_1",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the spectroscopic object with a specobjid of 299534757421672448?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299534757421672448"
  },
  {
    "db_id": "sdss_temporary",
    "id": "177_2",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the spectrum with specobjid = 299534757421672448 in the table \"galspecline\"?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299534757421672448"
  },
  {
    "db_id": "sdss_temporary",
    "id": "178_1",
    "user": "gpt-3",
    "question": "How many objects are there in the \"neighbors\" table that have a neighbor mode of 1 in the \"Nearest_neighbour_objects\" table?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighbormode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "178_2",
    "user": "gpt-3",
    "question": "How many neighbors have a neighbor mode of 1 in the table \"neighbors\"?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighbormode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "179_1",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there for the specobjid with a value of 309711566868080640 in the spplines table?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 309711566868080640"
  },
  {
    "db_id": "sdss_temporary",
    "id": "179_2",
    "user": "gpt-3",
    "question": "How many stellar spectral lines are there for the object with specobjid 309711566868080640 in the spplines table?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 309711566868080640"
  },
  {
    "db_id": "sdss_temporary",
    "id": "180_1",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there for the object with the specobjid 312024389543553024?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 312024389543553024"
  },
  {
    "db_id": "sdss_temporary",
    "id": "180_2",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there for the specobjid 312024389543553024 in the spplines table?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 312024389543553024"
  },
  {
    "db_id": "sdss_temporary",
    "id": "181_1",
    "user": "gpt-3",
    "question": "How many spectral line indices are there in the Stellar Spectal Line Indices table for a specific specobjid?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 305152166572615680"
  },
  {
    "db_id": "sdss_temporary",
    "id": "181_2",
    "user": "gpt-3",
    "question": "How many spectral lines are there in the spplines table for the object with a specobjid of 305152166572615680?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 305152166572615680"
  },
  {
    "db_id": "sdss_temporary",
    "id": "182_1",
    "user": "gpt-3",
    "question": "How many photo types are there where the name is \"GALAXY\" and they have been observed photometrically?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.name = \"GALAXY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "182_2",
    "user": "gpt-3",
    "question": "How many photos are there in the database that have been photometrically observed and have a type of \"GALAXY\"?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.name = \"GALAXY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "183_1",
    "user": "gpt-3",
    "question": "How many objects are in the Photometric_objects table where the redshift (z) value is 12.02298?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.z = 12.02298"
  },
  {
    "db_id": "sdss_temporary",
    "id": "183_2",
    "user": "gpt-3",
    "question": "How many objects are there in the photoobj table with a redshift value of 12.02298?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.z = 12.02298"
  },
  {
    "db_id": "sdss_temporary",
    "id": "184_1",
    "user": "gpt-3",
    "question": "How many photos are classified as photometrically observed and described as \"Defect: Object is caused by a defect in the telescope or processing pipeline. (not used)\"?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.description = \"Defect: Object is caused by a defect in the telescope or processing pipeline. (not used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "184_2",
    "user": "gpt-3",
    "question": "How many photo types are there that have a description of \"Defect: Object is caused by a defect in the telescope or processing pipeline. (not used)\" in the table photometrically_observed?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.description = \"Defect: Object is caused by a defect in the telescope or processing pipeline. (not used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "185_1",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the spectrum object with an ID of 300740646430337024?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 300740646430337024"
  },
  {
    "db_id": "sdss_temporary",
    "id": "185_2",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the spectrum object with specobjid 300740646430337024?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 300740646430337024"
  },
  {
    "db_id": "sdss_temporary",
    "id": "186_1",
    "user": "gpt-3",
    "question": "How many objects have a cmodel magnitude in the g-band equal to 13.253 in the Photometric_objects table of the photoobj database?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.cmodelmag_g = 13.253"
  },
  {
    "db_id": "sdss_temporary",
    "id": "186_2",
    "user": "gpt-3",
    "question": "How many photometric objects have a cmodel magnitude of 13.253 in the photoobj table?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.cmodelmag_g = 13.253"
  },
  {
    "db_id": "sdss_temporary",
    "id": "187_1",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have a subclass of \"F2III (89254)\"?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.subclass = \"F2III (89254)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "187_2",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have the subclass \"F2III (89254)\"?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.subclass = \"F2III (89254)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "188_1",
    "user": "gpt-3",
    "question": "How many objects have a neighbor type of 6 in the table \"neighbors\"?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighbortype = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "188_2",
    "user": "gpt-3",
    "question": "How many objects are in the \"neighbors\" table that have a neighbor type of 6?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighbortype = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "189_1",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have a redshift error of 7.737748e-08?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.zerr = 7.737748e-08"
  },
  {
    "db_id": "sdss_temporary",
    "id": "189_2",
    "user": "gpt-3",
    "question": "How many Spectroscopic objects have a zerr value of 7.737748e-08 in the specobj table?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.zerr = 7.737748e-08"
  },
  {
    "db_id": "sdss_temporary",
    "id": "190_1",
    "user": "gpt-3",
    "question": "How many objects are in the Photometric_objects table that have a type of 6?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.type = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "190_2",
    "user": "gpt-3",
    "question": "How many objects in the Photometric_objects table have a type value of 6?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.type = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "191_1",
    "user": "gpt-3",
    "question": "How many objects have a neighbor object ID of 1237645876861403866 in the neighbors table called Nearest_neighbour_objects?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861403866"
  },
  {
    "db_id": "sdss_temporary",
    "id": "191_2",
    "user": "gpt-3",
    "question": "How many objects are there in the \"neighbors\" table that have a neighborobjid value of 1237645876861403866 in the column \"Nearest_neighbour_objects\"?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861403866"
  },
  {
    "db_id": "sdss_temporary",
    "id": "192_1",
    "user": "gpt-3",
    "question": "How many emission lines have been estimated for the spectral object with the ID 299562794968180736?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299562794968180736"
  },
  {
    "db_id": "sdss_temporary",
    "id": "192_2",
    "user": "gpt-3",
    "question": "How many emission line estimates are there in the galspecline table with a specobjid of 299562794968180736?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299562794968180736"
  },
  {
    "db_id": "sdss_temporary",
    "id": "193_1",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there for the specobjid 307403417872001024 in the spplines table?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 307403417872001024"
  },
  {
    "db_id": "sdss_temporary",
    "id": "193_2",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there for the specobjid 307403417872001024 in the table spplines?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 307403417872001024"
  },
  {
    "db_id": "sdss_temporary",
    "id": "194_1",
    "user": "gpt-3",
    "question": "How many photo types in the photometrically observed category have a description of \"KnownObject: Object came from some other catalog (not the SDSS catalog). (not yet used)\"?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.description = \"KnownObject: Object came from some other catalog (not the SDSS catalog). (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "194_2",
    "user": "gpt-3",
    "question": "How many photometrically observed objects in the photo_type table have a description of \"KnownObject: Object came from some other catalog (not the SDSS catalog)\" that is not currently being used?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.description = \"KnownObject: Object came from some other catalog (not the SDSS catalog). (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "195_1",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there for the object with a specobjid of 313074423013861376 in the spplines table?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 313074423013861376"
  },
  {
    "db_id": "sdss_temporary",
    "id": "195_2",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there for the specobjid 313074423013861376 in the spplines table?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 313074423013861376"
  },
  {
    "db_id": "sdss_temporary",
    "id": "196_1",
    "user": "gpt-3",
    "question": "Count the number of objects in the Photometric_objects table where the run column has a value of 8095.",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.run = 8095"
  },
  {
    "db_id": "sdss_temporary",
    "id": "196_2",
    "user": "gpt-3",
    "question": "Count the number of objects in the photometric data set from run 8095.",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.run = 8095"
  },
  {
    "db_id": "sdss_temporary",
    "id": "197_1",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the spectral object with ID 299546302293764096?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299546302293764096"
  },
  {
    "db_id": "sdss_temporary",
    "id": "197_2",
    "user": "gpt-3",
    "question": "How many emission line estimates are associated with the spectrum object with ID 299546302293764096?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299546302293764096"
  },
  {
    "db_id": "sdss_temporary",
    "id": "198_1",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the spectroscopic object with ID number 299516065724000256?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299516065724000256"
  },
  {
    "db_id": "sdss_temporary",
    "id": "198_2",
    "user": "gpt-3",
    "question": "How many emission line estimates are associated with the spectrum object ID 299516065724000256 in the table galspecline?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299516065724000256"
  },
  {
    "db_id": "sdss_temporary",
    "id": "199_1",
    "user": "gpt-3",
    "question": "How many spectral line indices are there for the stellar object with a specobjid of 304090588532205568 in the spplines table?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 304090588532205568"
  },
  {
    "db_id": "sdss_temporary",
    "id": "199_2",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there for the specobjid 304090588532205568 in the spplines table?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 304090588532205568"
  },
  {
    "db_id": "sdss_temporary",
    "id": "200_1",
    "user": "gpt-3",
    "question": "How many objects have been photometrically observed where the description is \"Unknown: Object type is not known\"?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.description = \"Unknown: Object type is not known.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "200_2",
    "user": "gpt-3",
    "question": "How many photo types have a description of \"Unknown: Object type is not known\"?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.description = \"Unknown: Object type is not known.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "201_1",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have a best object ID of 1237645943978524843?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.bestobjid = 1237645943978524843"
  },
  {
    "db_id": "sdss_temporary",
    "id": "201_2",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have a bestobjid equal to 1237645943978524843?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.bestobjid = 1237645943978524843"
  },
  {
    "db_id": "sdss_temporary",
    "id": "202_1",
    "user": "gpt-3",
    "question": "How many objects are there in the \"neighbors\" table with a distance of 1.40128831093436e-06 in the column \"Nearest_neighbour_objects\"?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.distance = 1.40128831093436e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "202_2",
    "user": "gpt-3",
    "question": "\"How many objects are there in the 'neighbors' table that have a distance of 1.40128831093436e-06 in the 'Nearest_neighbour_objects' column?\"",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.distance = 1.40128831093436e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "203_1",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the spectroscopic object with an ID of 299662575648401408?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299662575648401408"
  },
  {
    "db_id": "sdss_temporary",
    "id": "203_2",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the object with specobjid 299662575648401408?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299662575648401408"
  },
  {
    "db_id": "sdss_temporary",
    "id": "204_1",
    "user": "gpt-3",
    "question": "How many objects are neighbors of the object with ID 1237645876861272756 in the \"neighbors\" table?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861272756"
  },
  {
    "db_id": "sdss_temporary",
    "id": "204_2",
    "user": "gpt-3",
    "question": "How many neighbors are there with the neighbor object ID of 1237645876861272756 in the table \"neighbors\"?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861272756"
  },
  {
    "db_id": "sdss_temporary",
    "id": "205_1",
    "user": "gpt-3",
    "question": "How many objects in the \"Spectroscopic_objects\" table have a redshift of -0.001817123?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.z = -0.001817123"
  },
  {
    "db_id": "sdss_temporary",
    "id": "205_2",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have a redshift of -0.001817123?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.z = -0.001817123"
  },
  {
    "db_id": "sdss_temporary",
    "id": "206_1",
    "user": "gpt-3",
    "question": "How many objects are there in the Spectroscopic_objects table where the segue2_target2 value is -2147482624?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.segue2_target2 = -2147482624"
  },
  {
    "db_id": "sdss_temporary",
    "id": "206_2",
    "user": "gpt-3",
    "question": "How many objects have a target2 value of -2147482624 in the specobj table?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.segue2_target2 = -2147482624"
  },
  {
    "db_id": "sdss_temporary",
    "id": "207_1",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the spectroscopic object with an ID of 299536131811207168 in the galspecline table?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299536131811207168"
  },
  {
    "db_id": "sdss_temporary",
    "id": "207_2",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the spectral object with ID 299536131811207168?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299536131811207168"
  },
  {
    "db_id": "sdss_temporary",
    "id": "208_1",
    "user": "gpt-3",
    "question": "How many photometric objects are there in the database with a load version of 333?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.loadversion = 333"
  },
  {
    "db_id": "sdss_temporary",
    "id": "208_2",
    "user": "gpt-3",
    "question": "How many Photometric objects are there with a load version of 333 in the photoobj table?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.loadversion = 333"
  },
  {
    "db_id": "sdss_temporary",
    "id": "209_1",
    "user": "gpt-3",
    "question": "How many spectral line indices are there for the stellar object with a specobjid of 304053754892675072 in the spplines table?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 304053754892675072"
  },
  {
    "db_id": "sdss_temporary",
    "id": "209_2",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there in the table \"spplines\" where the specobjid is equal to 304053754892675072?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 304053754892675072"
  },
  {
    "db_id": "sdss_temporary",
    "id": "210_1",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there for the specobjid 308591714325522432?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 308591714325522432"
  },
  {
    "db_id": "sdss_temporary",
    "id": "210_2",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are associated with the specobjid 308591714325522432?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 308591714325522432"
  },
  {
    "db_id": "sdss_temporary",
    "id": "211_1",
    "user": "gpt-3",
    "question": "How many records are in the photo_type table that have a description of \"Star: A self-luminous gaseous celestial body\"?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.description = \"Star: A self-luminous gaseous celestial body.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "211_2",
    "user": "gpt-3",
    "question": "How many rows are there in the \"photo_type\" table where the description is \"Star: A self-luminous gaseous celestial body\"?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.description = \"Star: A self-luminous gaseous celestial body.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "212_1",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have a special target equal to 268435456?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.special_target1 = 268435456"
  },
  {
    "db_id": "sdss_temporary",
    "id": "212_2",
    "user": "gpt-3",
    "question": "How many Spectroscopic objects have a special target1 value of 268435456?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.special_target1 = 268435456"
  },
  {
    "db_id": "sdss_temporary",
    "id": "213_1",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have a redshift of -0.001613641?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.z = -0.001613641"
  },
  {
    "db_id": "sdss_temporary",
    "id": "213_2",
    "user": "gpt-3",
    "question": "\"How many spectroscopic objects have a redshift of -0.001613641?\"",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.z = -0.001613641"
  },
  {
    "db_id": "sdss_temporary",
    "id": "214_1",
    "user": "gpt-3",
    "question": "Count the total number of photometric objects in the photoobj table where the run value is 3356.",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.run = 3356"
  },
  {
    "db_id": "sdss_temporary",
    "id": "214_2",
    "user": "gpt-3",
    "question": "How many Photometric objects are there in the run with ID 3356?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.run = 3356"
  },
  {
    "db_id": "sdss_temporary",
    "id": "215_1",
    "user": "gpt-3",
    "question": "Count the number of objects that are neighbors and have a distance of 1.07259335276047e-05.",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.distance = 1.07259335276047e-05"
  },
  {
    "db_id": "sdss_temporary",
    "id": "215_2",
    "user": "gpt-3",
    "question": "How many objects are in the \"neighbors\" table where the distance between them is exactly 1.07259335276047e-05?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.distance = 1.07259335276047e-05"
  },
  {
    "db_id": "sdss_temporary",
    "id": "216_1",
    "user": "gpt-3",
    "question": "How many photometric objects were observed on a specific modified Julian date of 53996?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.mjd = 53996"
  },
  {
    "db_id": "sdss_temporary",
    "id": "216_2",
    "user": "gpt-3",
    "question": "How many objects were counted in the Photometric_objects table that have an mjd value of 53996?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.mjd = 53996"
  },
  {
    "db_id": "sdss_temporary",
    "id": "217_1",
    "user": "gpt-3",
    "question": "How many objects with a spectroscopic ID of 299589183247247360 are in the specobj table?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.specobjid = 299589183247247360"
  },
  {
    "db_id": "sdss_temporary",
    "id": "217_2",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have a specobjid equal to 299589183247247360?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.specobjid = 299589183247247360"
  },
  {
    "db_id": "sdss_temporary",
    "id": "218_1",
    "user": "gpt-3",
    "question": "How many objects have a r-band cmodel magnitude of 13.03373 in the Photometric_objects table in the photoobj database?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.cmodelmag_r = 13.03373"
  },
  {
    "db_id": "sdss_temporary",
    "id": "218_2",
    "user": "gpt-3",
    "question": "How many Photometric objects have a cmodel magnitude in the r-band equal to 13.03373?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.cmodelmag_r = 13.03373"
  },
  {
    "db_id": "sdss_temporary",
    "id": "219_1",
    "user": "gpt-3",
    "question": "How many spectral lines are there for the object with the ID 311934504467982336 in the \"spplines\" table?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 311934504467982336"
  },
  {
    "db_id": "sdss_temporary",
    "id": "219_2",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there in the spplines table with a specobjid of 311934504467982336?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 311934504467982336"
  },
  {
    "db_id": "sdss_temporary",
    "id": "220_1",
    "user": "gpt-3",
    "question": "How many spectral line indices are there in the Stellar_spectal_line_indices table for the object with a specobjid of 310890518194186240?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 310890518194186240"
  },
  {
    "db_id": "sdss_temporary",
    "id": "220_2",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there for the specobjid 310890518194186240?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 310890518194186240"
  },
  {
    "db_id": "sdss_temporary",
    "id": "221_1",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have a fiber ID of 996?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.fiberid = 996"
  },
  {
    "db_id": "sdss_temporary",
    "id": "221_2",
    "user": "gpt-3",
    "question": "How many Spectroscopic objects have a fiberid of 996?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.fiberid = 996"
  },
  {
    "db_id": "sdss_temporary",
    "id": "222_1",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there in the spplines table with a specobjid of 307399019825489920?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 307399019825489920"
  },
  {
    "db_id": "sdss_temporary",
    "id": "222_2",
    "user": "gpt-3",
    "question": "How many entries are there in the \"Stellar_spectal_line_indices\" table with a \"specobjid\" of 307399019825489920?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 307399019825489920"
  },
  {
    "db_id": "sdss_temporary",
    "id": "223_1",
    "user": "gpt-3",
    "question": "How many Photometric objects are there with a mode of 1 in the photoobj table?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "223_2",
    "user": "gpt-3",
    "question": "How many photometric objects are there with a mode of 1 in the photoobj table?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "224_1",
    "user": "gpt-3",
    "question": "How many photometric objects have an extinction value of 0.009917868 in the r band?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.extinction_r = 0.009917868"
  },
  {
    "db_id": "sdss_temporary",
    "id": "224_2",
    "user": "gpt-3",
    "question": "How many objects are there in the table \"photoobj\" where the extinction value for the r-band is equal to 0.009917868?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.extinction_r = 0.009917868"
  },
  {
    "db_id": "sdss_temporary",
    "id": "225_1",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have a subclass of \"K7\"?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.subclass = \"K7\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "225_2",
    "user": "gpt-3",
    "question": "How many Spectroscopic objects have a subclass of \"K7\"?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.subclass = \"K7\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "226_1",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for a specific spectral object with the ID 300725803023362048 in the galspecline table?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 300725803023362048"
  },
  {
    "db_id": "sdss_temporary",
    "id": "226_2",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the spectrum object with a specobjid of 300725803023362048 in the galspecline table?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 300725803023362048"
  },
  {
    "db_id": "sdss_temporary",
    "id": "227_1",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have a redshift error of 3.152291e-06?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.zerr = 3.152291e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "227_2",
    "user": "gpt-3",
    "question": "How many Spectroscopic objects have a redshift error of 3.152291e-06?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.zerr = 3.152291e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "228_1",
    "user": "gpt-3",
    "question": "How many photometric objects are there in the field 420?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.field = 420"
  },
  {
    "db_id": "sdss_temporary",
    "id": "228_2",
    "user": "gpt-3",
    "question": "How many objects are there in the photo database with a field value of 420?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.field = 420"
  },
  {
    "db_id": "sdss_temporary",
    "id": "229_1",
    "user": "gpt-3",
    "question": "How many spectroscopic objects are there with a plate number of 876?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.plate = 876"
  },
  {
    "db_id": "sdss_temporary",
    "id": "229_2",
    "user": "gpt-3",
    "question": "Count the total number of rows in the \"specobj\" table where the \"plate\" column equals 876 and label it as \"Spectroscopic_objects\".",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.plate = 876"
  },
  {
    "db_id": "sdss_temporary",
    "id": "230_1",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for a spectrum object with a specobjid of 299548501317019648?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299548501317019648"
  },
  {
    "db_id": "sdss_temporary",
    "id": "230_2",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the spectrum object with a specobjid of 299548501317019648 in the galspecline table?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299548501317019648"
  },
  {
    "db_id": "sdss_temporary",
    "id": "231_1",
    "user": "gpt-3",
    "question": "How many emission line estimates are associated with the spectrum object with ID 299517714991441920 in the galspecline table?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299517714991441920"
  },
  {
    "db_id": "sdss_temporary",
    "id": "231_2",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for a specific specobjid?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299517714991441920"
  },
  {
    "db_id": "sdss_temporary",
    "id": "232_1",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there for the specobjid 307431180540602368 in the spplines table?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 307431180540602368"
  },
  {
    "db_id": "sdss_temporary",
    "id": "232_2",
    "user": "gpt-3",
    "question": "How many spectral lines are there for the stellar object with specobjid 307431180540602368 in the spplines table?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 307431180540602368"
  },
  {
    "db_id": "sdss_temporary",
    "id": "233_1",
    "user": "gpt-3",
    "question": "How many objects have a magnitude value of 12.0676 in the \"i\" band in the table \"photoobj\"?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.i = 12.0676"
  },
  {
    "db_id": "sdss_temporary",
    "id": "233_2",
    "user": "gpt-3",
    "question": "How many objects have a magnitude of 12.0676 in the i-band in the Photometric_objects table?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.i = 12.0676"
  },
  {
    "db_id": "sdss_temporary",
    "id": "234_1",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the spectral object with ID 299529259863533568?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299529259863533568"
  },
  {
    "db_id": "sdss_temporary",
    "id": "234_2",
    "user": "gpt-3",
    "question": "How many emission line estimates are associated with the spectrum object ID 299529259863533568?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299529259863533568"
  },
  {
    "db_id": "sdss_temporary",
    "id": "235_1",
    "user": "gpt-3",
    "question": "How many objects with a declination of -19.2292554009466 are in the photoobj table?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.dec = -19.2292554009466"
  },
  {
    "db_id": "sdss_temporary",
    "id": "235_2",
    "user": "gpt-3",
    "question": "How many photometric objects are there with a declination of -19.2292554009466 in the photoobj table?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.dec = -19.2292554009466"
  },
  {
    "db_id": "sdss_temporary",
    "id": "236_1",
    "user": "gpt-3",
    "question": "How many rows are in the table \"photo_type\" where the value in the column \"value\" is equal to 0 and represents photometrically observed data?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.value = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "236_2",
    "user": "gpt-3",
    "question": "How many records are there in the photo_type table where the value in the column \"value\" is equal to 0 and represents photometrically observed data?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.value = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "237_1",
    "user": "gpt-3",
    "question": "How many spectroscopic objects are there with a plate ID of 711568775870179328?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.plateid = 711568775870179328"
  },
  {
    "db_id": "sdss_temporary",
    "id": "237_2",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have a plate ID of 711568775870179328?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.plateid = 711568775870179328"
  },
  {
    "db_id": "sdss_temporary",
    "id": "238_1",
    "user": "gpt-3",
    "question": "How many objects are there in the \"neighbors\" table where the object's ID is equal to 1237645876861337660?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861337660"
  },
  {
    "db_id": "sdss_temporary",
    "id": "238_2",
    "user": "gpt-3",
    "question": "How many objects are in the \"neighbors\" table that have a neighborobjid of 1237645876861337660 in the \"Nearest_neighbour_objects\" column?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861337660"
  },
  {
    "db_id": "sdss_temporary",
    "id": "239_1",
    "user": "gpt-3",
    "question": "How many objects are there in the table \"photoobj\" with a redshift value of 12.14889?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.z = 12.14889"
  },
  {
    "db_id": "sdss_temporary",
    "id": "239_2",
    "user": "gpt-3",
    "question": "How many objects are there in the photoobj table with a redshift value of 12.14889?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.z = 12.14889"
  },
  {
    "db_id": "sdss_temporary",
    "id": "240_1",
    "user": "gpt-3",
    "question": "How many Photometric objects have a g magnitude of 13.31969?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.g = 13.31969"
  },
  {
    "db_id": "sdss_temporary",
    "id": "240_2",
    "user": "gpt-3",
    "question": "How many photometric objects have a g magnitude of 13.31969?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.g = 13.31969"
  },
  {
    "db_id": "sdss_temporary",
    "id": "241_1",
    "user": "gpt-3",
    "question": "How many spectral lines are there in the table of stellar spectral line indices for the specobjid 308579894575523840?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 308579894575523840"
  },
  {
    "db_id": "sdss_temporary",
    "id": "241_2",
    "user": "gpt-3",
    "question": "How many lines in the Stellar Spectral Line Indices table have a SpecObjID value of 308579894575523840?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 308579894575523840"
  },
  {
    "db_id": "sdss_temporary",
    "id": "242_1",
    "user": "gpt-3",
    "question": "How many photo types have a value of \"photometrically observed\" equal to 2?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.value = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "242_2",
    "user": "gpt-3",
    "question": "How many photometrically observed photo types have a value of 2?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.value = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "243_1",
    "user": "gpt-3",
    "question": "How many objects are there in the Photometric_objects table with flags equal to 79792836936?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.flags = 79792836936"
  },
  {
    "db_id": "sdss_temporary",
    "id": "243_2",
    "user": "gpt-3",
    "question": "Count the number of photometric objects where the flags value is equal to 79792836936.",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.flags = 79792836936"
  },
  {
    "db_id": "sdss_temporary",
    "id": "244_1",
    "user": "gpt-3",
    "question": "How many Spectroscopic objects have a specobjid of 299661751014680576?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.specobjid = 299661751014680576"
  },
  {
    "db_id": "sdss_temporary",
    "id": "244_2",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have a specobjid of 299661751014680576?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.specobjid = 299661751014680576"
  },
  {
    "db_id": "sdss_temporary",
    "id": "245_1",
    "user": "gpt-3",
    "question": "How many photo types are there where the photometrically observed value is equal to 8?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.value = 8"
  },
  {
    "db_id": "sdss_temporary",
    "id": "245_2",
    "user": "gpt-3",
    "question": "How many photos are photometrically observed with a value of 8?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.value = 8"
  },
  {
    "db_id": "sdss_temporary",
    "id": "246_1",
    "user": "gpt-3",
    "question": "How many photo types are there where the photometrically observed value is equal to 1?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.value = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "246_2",
    "user": "gpt-3",
    "question": "How many photo types are photometrically observed with a value of 1?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.value = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "247_1",
    "user": "gpt-3",
    "question": "How many types of photos have been observed photometrically with the name \"NOTATYPE\"?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.name = \"NOTATYPE\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "247_2",
    "user": "gpt-3",
    "question": "How many photometrically observed photos are there with the name \"NOTATYPE\"?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.name = \"NOTATYPE\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "248_1",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the spectral object with an ID of 299522937671673856?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299522937671673856"
  },
  {
    "db_id": "sdss_temporary",
    "id": "248_2",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the spectrum object with an id of 299522937671673856 in the galspecline table?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299522937671673856"
  },
  {
    "db_id": "sdss_temporary",
    "id": "249_1",
    "user": "gpt-3",
    "question": "Count the number of spectroscopic objects with a velocity dispersion error of 6.243002.",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.veldisperr = 6.243002"
  },
  {
    "db_id": "sdss_temporary",
    "id": "249_2",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have a velocity dispersion error of 6.243002?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.veldisperr = 6.243002"
  },
  {
    "db_id": "sdss_temporary",
    "id": "250_1",
    "user": "gpt-3",
    "question": "How many photos have been observed where the description is \"Sky: Blank sky spectrogram (no objects in this arcsecond area)\"?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.description = \"Sky: Blank sky spectrogram (no objects in this arcsecond area).\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "250_2",
    "user": "gpt-3",
    "question": "How many photo types have the description \"Sky: Blank sky spectrogram (no objects in this arcsecond area)\"?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.description = \"Sky: Blank sky spectrogram (no objects in this arcsecond area).\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "251_1",
    "user": "gpt-3",
    "question": "\"How many photometrically observed photo types have a value of 7?\"",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.value = 7"
  },
  {
    "db_id": "sdss_temporary",
    "id": "251_2",
    "user": "gpt-3",
    "question": "How many photo types are photometrically observed with a value of 7?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.value = 7"
  },
  {
    "db_id": "sdss_temporary",
    "id": "252_1",
    "user": "gpt-3",
    "question": "How many objects are there in the \"neighbors\" table where the neighbor object id is equal to 1237645876861469275?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861469275"
  },
  {
    "db_id": "sdss_temporary",
    "id": "252_2",
    "user": "gpt-3",
    "question": "How many neighbors with the object ID 1237645876861469275 are there in the table \"neighbors\"?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861469275"
  },
  {
    "db_id": "sdss_temporary",
    "id": "253_1",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there for the specobjid 308505677540648960?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 308505677540648960"
  },
  {
    "db_id": "sdss_temporary",
    "id": "253_2",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there in the spplines table where the specobjid is equal to 308505677540648960?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 308505677540648960"
  },
  {
    "db_id": "sdss_temporary",
    "id": "254_1",
    "user": "gpt-3",
    "question": "How many objects are there in the \"neighbors\" table with a type of 3?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.type = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "254_2",
    "user": "gpt-3",
    "question": "How many objects of type 3 are there in the neighbors table?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.type = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "255_1",
    "user": "gpt-3",
    "question": "How many objects are there in the table \"neighbors\" with an object ID of 1237678438625051158?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.objid = 1237678438625051158"
  },
  {
    "db_id": "sdss_temporary",
    "id": "255_2",
    "user": "gpt-3",
    "question": "How many objects are there in the \"neighbors\" table that have an object ID of 1237678438625051158?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.objid = 1237678438625051158"
  },
  {
    "db_id": "sdss_temporary",
    "id": "256_1",
    "user": "gpt-3",
    "question": "How many photometrically observed photo types have a value of 4?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.value = 4"
  },
  {
    "db_id": "sdss_temporary",
    "id": "256_2",
    "user": "gpt-3",
    "question": "How many types of photos have been observed photometrically with a value of 4?",
    "query": "SELECT count(*) FROM photo_type AS T1 WHERE T1.value = 4"
  },
  {
    "db_id": "sdss_temporary",
    "id": "257_1",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the spectral object with an ID of 299580112276318208?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299580112276318208"
  },
  {
    "db_id": "sdss_temporary",
    "id": "257_2",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the spectrum object with an ID of 299580112276318208 in the galspecline table?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 299580112276318208"
  },
  {
    "db_id": "sdss_temporary",
    "id": "258_1",
    "user": "gpt-3",
    "question": "How many spectral line indices are there for the specobjid 311976560787744768 in the spplines table?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 311976560787744768"
  },
  {
    "db_id": "sdss_temporary",
    "id": "258_2",
    "user": "gpt-3",
    "question": "How many stellar spectral line indices are there for the specobjid 311976560787744768 in the spplines table?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 311976560787744768"
  },
  {
    "db_id": "sdss_temporary",
    "id": "259_1",
    "user": "gpt-3",
    "question": "How many stellar spectral lines are there for the object with specobjid 306298958173464576 in the table spplines?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 306298958173464576"
  },
  {
    "db_id": "sdss_temporary",
    "id": "259_2",
    "user": "gpt-3",
    "question": "How many spectral lines are there in the \"Stellar_spectal_line_indices\" table with a specobjid value of 306298958173464576?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 306298958173464576"
  },
  {
    "db_id": "sdss_temporary",
    "id": "260_1",
    "user": "gpt-3",
    "question": "How many spectral lines are there for the object with a specobjid of 307370982278981632 in the spplines table?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 307370982278981632"
  },
  {
    "db_id": "sdss_temporary",
    "id": "260_2",
    "user": "gpt-3",
    "question": "How many lines are there in the SPPLines table where the specobjid is equal to 307370982278981632?",
    "query": "SELECT count(*) FROM spplines AS T1 WHERE T1.specobjid = 307370982278981632"
  },
  {
    "db_id": "sdss_temporary",
    "id": "261_1",
    "user": "gpt-3",
    "question": "How many spectroscopic objects are there in the Spectroscopic_objects table where segue2_target1 is equal to -2147483615?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.segue2_target1 = -2147483615"
  },
  {
    "db_id": "sdss_temporary",
    "id": "261_2",
    "user": "gpt-3",
    "question": "How many spectroscopic objects have a target of -2147483615 in the segue2_target1 field?",
    "query": "SELECT count(*) FROM specobj AS T1 WHERE T1.segue2_target1 = -2147483615"
  },
  {
    "db_id": "sdss_temporary",
    "id": "262_1",
    "user": "gpt-3",
    "question": "Count the number of photometric objects with a galactic longitude of 0.0170208792656723 in the photoobj table.",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.l = 0.0170208792656723"
  },
  {
    "db_id": "sdss_temporary",
    "id": "262_2",
    "user": "gpt-3",
    "question": "How many objects are there in the Photometric_objects table with a value of 0.0170208792656723 for the l attribute?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.l = 0.0170208792656723"
  },
  {
    "db_id": "sdss_temporary",
    "id": "263_1",
    "user": "gpt-3",
    "question": "How many objects are there in the photoobj table where the flags value is equal to 103884522240?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.flags = 103884522240"
  },
  {
    "db_id": "sdss_temporary",
    "id": "263_2",
    "user": "gpt-3",
    "question": "How many objects are there in the photoobj table that have a flags value of 103884522240?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.flags = 103884522240"
  },
  {
    "db_id": "sdss_temporary",
    "id": "264_1",
    "user": "gpt-3",
    "question": "How many neighbors with the object ID of 1237645876861403168 are in the table \"neighbors\" as \"Nearest_neighbour_objects\"?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861403168"
  },
  {
    "db_id": "sdss_temporary",
    "id": "264_2",
    "user": "gpt-3",
    "question": "How many objects are there in the \"neighbors\" table that have a \"neighborobjid\" of 1237645876861403168?",
    "query": "SELECT count(*) FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861403168"
  },
  {
    "db_id": "sdss_temporary",
    "id": "265_1",
    "user": "gpt-3",
    "question": "How many emission line estimates are there for the spectrum object with ID 300734049360570368 in the table \"galspecline\"?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 300734049360570368"
  },
  {
    "db_id": "sdss_temporary",
    "id": "265_2",
    "user": "gpt-3",
    "question": "How many emission line estimates are associated with the spectrum object ID of 300734049360570368 in the galspecline table?",
    "query": "SELECT count(*) FROM galspecline AS T1 WHERE T1.specobjid = 300734049360570368"
  },
  {
    "db_id": "sdss_temporary",
    "id": "266_1",
    "user": "gpt-3",
    "question": "How many photometric objects have a right ascension of 0.0319412144285138?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.ra = 0.0319412144285138"
  },
  {
    "db_id": "sdss_temporary",
    "id": "266_2",
    "user": "gpt-3",
    "question": "How many objects are there in the photoobj table where the right ascension is equal to 0.0319412144285138?",
    "query": "SELECT count(*) FROM photoobj AS T1 WHERE T1.ra = 0.0319412144285138"
  },
  {
    "db_id": "sdss_temporary",
    "id": "267_1",
    "user": "gpt-3",
    "question": "Get the description from the photometrically observed photo type, ordered by value in descending order, and only retrieve the first result.",
    "query": "SELECT T1.description FROM photo_type AS T1    ORDER BY T1.value DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "267_2",
    "user": "gpt-3",
    "question": "Find the description of the most frequently observed type of photometrically observed photos, ordered by their value in descending order, and limit the result to only one.",
    "query": "SELECT T1.description FROM photo_type AS T1    ORDER BY T1.value DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "268_1",
    "user": "gpt-3",
    "question": "Retrieve the r-band cmodel magnitude from the photoobj table for objects in order of decreasing redshift, with only the highest redshift object returned.",
    "query": "SELECT T1.cmodelmag_r FROM photoobj AS T1    ORDER BY T1.z DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "268_2",
    "user": "gpt-3",
    "question": "Retrieve the r-band cmodel magnitude from the photoobj table for Photometric objects, sorting by descending redshift and only returning the top result.",
    "query": "SELECT T1.cmodelmag_r FROM photoobj AS T1    ORDER BY T1.z DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "269_1",
    "user": "gpt-3",
    "question": "Find the object ID of the nearest neighbor object in the \"neighbors\" table, ordering by distance in descending order, and limit the result to one row.",
    "query": "SELECT T1.objid FROM neighbors AS T1    ORDER BY T1.distance DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "269_2",
    "user": "gpt-3",
    "question": "\"Find the object ID of the nearest neighbour object from the neighbors table, sorting by distance in descending order and returning only one result.\"",
    "query": "SELECT T1.objid FROM neighbors AS T1    ORDER BY T1.distance DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "270_1",
    "user": "gpt-3",
    "question": "Retrieve the type of the nearest neighbor object from a table called \"neighbors\" by ordering the objects in descending order based on their distance and limiting the result to only one entry.",
    "query": "SELECT T1.type FROM neighbors AS T1    ORDER BY T1.distance DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "270_2",
    "user": "gpt-3",
    "question": "Find the type of the nearest neighbor object from the table \"neighbors\" in descending order by distance and limit the result to 1.",
    "query": "SELECT T1.type FROM neighbors AS T1    ORDER BY T1.distance DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "271_1",
    "user": "gpt-3",
    "question": "Retrieve the right ascension of objects from the specobj table, sorted by descending modified Julian date and limited to one result.",
    "query": "SELECT T1.ra FROM specobj AS T1    ORDER BY T1.mjd DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "271_2",
    "user": "gpt-3",
    "question": "Retrieve the right ascension values from the specobj table for all objects sorted by their modified Julian date in descending order, limited to only one result.",
    "query": "SELECT T1.ra FROM specobj AS T1    ORDER BY T1.mjd DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "272_1",
    "user": "gpt-3",
    "question": "\"Show the subclass of spectroscopic objects in the specobj table, ordering them by their ancillary target 1 in descending order and only displaying the top result.\"",
    "query": "SELECT T1.subclass FROM specobj AS T1    ORDER BY T1.ancillary_target1 DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "272_2",
    "user": "gpt-3",
    "question": "What is the subclass of the first spectroscopic object in descending order by its ancillary target 1?",
    "query": "SELECT T1.subclass FROM specobj AS T1    ORDER BY T1.ancillary_target1 DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "273_1",
    "user": "gpt-3",
    "question": "Get the neighbor mode of the nearest neighbour object from the neighbors table, sorted by type in descending order, and only retrieve the top 1 result.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1    ORDER BY T1.type DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "273_2",
    "user": "gpt-3",
    "question": "Find the mode of the type of the nearest neighbor object from the neighbors table, ordered in descending order and limited to one result.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1    ORDER BY T1.type DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "274_1",
    "user": "gpt-3",
    "question": "Find the right ascension of the object with the highest velocity dispersion from the spectroscopic objects in order of decreasing velocity dispersion, limiting to only one result.",
    "query": "SELECT T1.ra FROM specobj AS T1    ORDER BY T1.veldisp DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "274_2",
    "user": "gpt-3",
    "question": "What is the right ascension of the object with the highest velocity dispersion from the table \"specobj\"?",
    "query": "SELECT T1.ra FROM specobj AS T1    ORDER BY T1.veldisp DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "275_1",
    "user": "gpt-3",
    "question": "\"Get the value of 'g' from the 'photoobj' table, selecting only objects with a descending order based on their mode and limit the result to 1.\"",
    "query": "SELECT T1.g FROM photoobj AS T1    ORDER BY T1.mode DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "275_2",
    "user": "gpt-3",
    "question": "\"Get the mode of the 'g' column from the table 'photoobj', sorting by descending order and limiting to 1 result.\"",
    "query": "SELECT T1.g FROM photoobj AS T1    ORDER BY T1.mode DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "276_1",
    "user": "gpt-3",
    "question": "Find the velocity dispersion of the most recent object in the spectroscopic database, ordering by its redshift warning and limiting to one result.",
    "query": "SELECT T1.veldisp FROM specobj AS T1    ORDER BY T1.zwarning DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "276_2",
    "user": "gpt-3",
    "question": "\"Retrieve the velocity dispersion of the highest redshift spectroscopic object in ascending order by its warning status from the specobj table.\"",
    "query": "SELECT T1.veldisp FROM specobj AS T1    ORDER BY T1.zwarning DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "277_1",
    "user": "gpt-3",
    "question": "Retrieve the special target1 of the most recently added spectroscopic object from the specobj table, ordering by plate number in descending order and limiting to 1 result.",
    "query": "SELECT T1.special_target1 FROM specobj AS T1    ORDER BY T1.plate DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "277_2",
    "user": "gpt-3",
    "question": "What is the special target1 of the most recent object in the specobj table, ordered by plate number?",
    "query": "SELECT T1.special_target1 FROM specobj AS T1    ORDER BY T1.plate DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "278_1",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbor objects from the table \"neighbors\" ordered by the type of neighbor, with a limit of 1 result.",
    "query": "SELECT T1.mode FROM neighbors AS T1    ORDER BY T1.neighbortype DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "278_2",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbour object's neighbor type, sorting by the neighbor type in descending order, and only returning one result.",
    "query": "SELECT T1.mode FROM neighbors AS T1    ORDER BY T1.neighbortype DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "279_1",
    "user": "gpt-3",
    "question": "Find the right ascension values for all spectroscopic objects, ordered by the most recent load version and only display the top result.",
    "query": "SELECT T1.ra FROM specobj AS T1    ORDER BY T1.loadversion DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "279_2",
    "user": "gpt-3",
    "question": "Find the right ascension values for all spectroscopic objects, ordering them by the most recent load version and only returning the first result.",
    "query": "SELECT T1.ra FROM specobj AS T1    ORDER BY T1.loadversion DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "280_1",
    "user": "gpt-3",
    "question": "Find the value for \"g\" from the \"Photometric_objects\" table in the database \"photoobj\", where the objects are ordered by their longitude in descending order, and only return the first result.",
    "query": "SELECT T1.g FROM photoobj AS T1    ORDER BY T1.l DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "280_2",
    "user": "gpt-3",
    "question": "Show the value of \"g\" for objects in the table photoobj named \"Photometric_objects\", ordered by the value of \"l\" in descending order, with a limit of 1.",
    "query": "SELECT T1.g FROM photoobj AS T1    ORDER BY T1.l DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "281_1",
    "user": "gpt-3",
    "question": "What is the highest plate ID for all objects in the spectroscopic data ordered by right ascension in descending order?",
    "query": "SELECT T1.plateid FROM specobj AS T1    ORDER BY T1.ra DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "281_2",
    "user": "gpt-3",
    "question": "\"Retrieve the plate ID from the specobj table, sorting by right ascension in descending order and limiting the result to 1.\"",
    "query": "SELECT T1.plateid FROM specobj AS T1    ORDER BY T1.ra DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "282_1",
    "user": "gpt-3",
    "question": "Get the type of the nearest neighbor object by sorting the neighbors in descending order based on their mode and limiting it to only one result.",
    "query": "SELECT T1.type FROM neighbors AS T1    ORDER BY T1.neighbormode DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "282_2",
    "user": "gpt-3",
    "question": "\"Retrieve the type of the nearest neighbor objects, sorted by their neighbor mode in descending order and limited to only one result.\"",
    "query": "SELECT T1.type FROM neighbors AS T1    ORDER BY T1.neighbormode DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "283_1",
    "user": "gpt-3",
    "question": "Find the distance of the nearest neighbor object and order it by the type of neighbor, then limit the result to only one record.",
    "query": "SELECT T1.distance FROM neighbors AS T1    ORDER BY T1.neighbortype DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "283_2",
    "user": "gpt-3",
    "question": "Retrieve the distance of the nearest neighbor object from the \"neighbors\" table, ordered by neighbor type in descending order, and only retrieve one result.",
    "query": "SELECT T1.distance FROM neighbors AS T1    ORDER BY T1.neighbortype DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "284_1",
    "user": "gpt-3",
    "question": "Retrieve the target 1 name from the Segue 2 spectroscopic objects table, ordered by the fiber ID in descending order and return only the last result.",
    "query": "SELECT T1.segue2_target1 FROM specobj AS T1    ORDER BY T1.fiberid DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "284_2",
    "user": "gpt-3",
    "question": "Retrieve the target 1 name of the last object listed in the Spectroscopic_objects table, sorting by fiber ID in descending order and limiting to 1 result.",
    "query": "SELECT T1.segue2_target1 FROM specobj AS T1    ORDER BY T1.fiberid DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "285_1",
    "user": "gpt-3",
    "question": "Retrieve the right ascension of all objects from the photoobj table, sorted in descending order by the modified Julian date and limited to only the most recent entry.",
    "query": "SELECT T1.ra FROM photoobj AS T1    ORDER BY T1.mjd DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "285_2",
    "user": "gpt-3",
    "question": "What is the right ascension value for the latest observation in the photometric_objects table, ordered by modified Julian date in descending order and limited to only one result?",
    "query": "SELECT T1.ra FROM photoobj AS T1    ORDER BY T1.mjd DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "286_1",
    "user": "gpt-3",
    "question": "Get the latest version of the load for all objects from the spectroscopic catalog, sorted by those that are considered primary science targets, and return only one result.",
    "query": "SELECT T1.loadversion FROM specobj AS T1    ORDER BY T1.scienceprimary DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "286_2",
    "user": "gpt-3",
    "question": "\"Select the load version from the specobj table for spectroscopic objects, ordering by science primary in descending order and limiting the result to 1.\"",
    "query": "SELECT T1.loadversion FROM specobj AS T1    ORDER BY T1.scienceprimary DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "287_1",
    "user": "gpt-3",
    "question": "Retrieve the value of the \"l\" column from the \"photoobj\" table, but only for objects with a redshift value, and sort them in descending order based on their redshift values, then limit the results to only one.",
    "query": "SELECT T1.l FROM photoobj AS T1    ORDER BY T1.z DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "287_2",
    "user": "gpt-3",
    "question": "Show the distance from Earth to the most distant object in Photometric_objects, listed in descending order by the redshift value.",
    "query": "SELECT T1.l FROM photoobj AS T1    ORDER BY T1.z DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "288_1",
    "user": "gpt-3",
    "question": "Get the type of objects from the table \"photoobj\" in descending order by object ID, and limit the result to only one row.",
    "query": "SELECT T1.type FROM photoobj AS T1    ORDER BY T1.objid DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "288_2",
    "user": "gpt-3",
    "question": "Retrieve the type of object from the latest record in the photoobj table, ordered by descending objid value.",
    "query": "SELECT T1.type FROM photoobj AS T1    ORDER BY T1.objid DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "289_1",
    "user": "gpt-3",
    "question": "Retrieve the u-band cmodel magnitude from the Photometric_objects table in the photoobj database, and sort the results by descending clean flag value, limiting to only the first result.",
    "query": "SELECT T1.cmodelmag_u FROM photoobj AS T1    ORDER BY T1.clean DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "289_2",
    "user": "gpt-3",
    "question": "Find the u-band CModel magnitude for the brightest photometric object in the photoobj table, ordered by descending clean value.",
    "query": "SELECT T1.cmodelmag_u FROM photoobj AS T1    ORDER BY T1.clean DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "290_1",
    "user": "gpt-3",
    "question": "\"Find the object ID of the nearest neighbor from a list of objects, ordered by their mode in descending order and limited to one result.\"",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1    ORDER BY T1.mode DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "290_2",
    "user": "gpt-3",
    "question": "\"Retrieve the object ID of the nearest neighbor from the neighbors table, sorted by descending mode and limited to one result.\"",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1    ORDER BY T1.mode DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "291_1",
    "user": "gpt-3",
    "question": "\"Retrieve the nearest neighbour mode from the list of neighbors, ordered by object ID in descending order, with a limit of one.\"",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1    ORDER BY T1.objid DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "291_2",
    "user": "gpt-3",
    "question": "Find the nearest neighbor mode of the object with the highest ID in the neighbors table.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1    ORDER BY T1.objid DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "292_1",
    "user": "gpt-3",
    "question": "Retrieve the most recent run from the table of photometric objects, sorted by modified Julian date in descending order, with a limit of 1 result.",
    "query": "SELECT T1.run FROM photoobj AS T1    ORDER BY T1.mjd DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "292_2",
    "user": "gpt-3",
    "question": "Get the name of the most recent run from a table named photoobj, where the data is sorted by the Modified Julian Date (mjd) column in descending order, and limit the result to only 1.",
    "query": "SELECT T1.run FROM photoobj AS T1    ORDER BY T1.mjd DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "293_1",
    "user": "gpt-3",
    "question": "Get the neighbor object ID for the nearest neighbor object in descending order by its own ID, with a limit of 1.",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1    ORDER BY T1.objid DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "293_2",
    "user": "gpt-3",
    "question": "\"Retrieve the object ID of the nearest neighbor object from the 'neighbors' table, sorted in descending order by object ID and limited to only one result.\"",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1    ORDER BY T1.objid DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "294_1",
    "user": "gpt-3",
    "question": "Select the ancillary target1 value for all spectroscopic objects and sort them in descending order by velocity dispersion, returning only the first result.",
    "query": "SELECT T1.ancillary_target1 FROM specobj AS T1    ORDER BY T1.veldisp DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "294_2",
    "user": "gpt-3",
    "question": "\"Retrieve the first ancillary target listed for the spectroscopic object with the largest velocity dispersion, ordering results in descending order by velocity dispersion and limiting to one result.\"",
    "query": "SELECT T1.ancillary_target1 FROM specobj AS T1    ORDER BY T1.veldisp DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "295_1",
    "user": "gpt-3",
    "question": "What is the most recent ancillary target 1 from the spectroscopic objects in the table specobj, ordered by load version and limited to only 1 result?",
    "query": "SELECT T1.ancillary_target1 FROM specobj AS T1    ORDER BY T1.loadversion DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "295_2",
    "user": "gpt-3",
    "question": "Retrieve the ancillary target 1 value for the most recent load version of all spectroscopic objects in ascending order.",
    "query": "SELECT T1.ancillary_target1 FROM specobj AS T1    ORDER BY T1.loadversion DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "296_1",
    "user": "gpt-3",
    "question": "Select the redshift value from the table of spectroscopic objects, ordering them by the special target 1 column in descending order and limiting the result to only one row.",
    "query": "SELECT T1.z FROM specobj AS T1    ORDER BY T1.special_target1 DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "296_2",
    "user": "gpt-3",
    "question": "What is the redshift of the spectroscopic object with the highest value for special target 1?",
    "query": "SELECT T1.z FROM specobj AS T1    ORDER BY T1.special_target1 DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "297_1",
    "user": "gpt-3",
    "question": "Get the mode of the nearest neighbour object from the neighbors table, sorted by type in descending order, with a limit of 1.",
    "query": "SELECT T1.mode FROM neighbors AS T1    ORDER BY T1.type DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "297_2",
    "user": "gpt-3",
    "question": "Get the mode of the nearest neighbour object from the neighbor table, ordering by type in descending order and limiting to one result.",
    "query": "SELECT T1.mode FROM neighbors AS T1    ORDER BY T1.type DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "298_1",
    "user": "gpt-3",
    "question": "Select the plate ID of the spectroscopic object from the specobj table, ordering by redshift in descending order and limiting to 1 result.",
    "query": "SELECT T1.plateid FROM specobj AS T1    ORDER BY T1.z DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "298_2",
    "user": "gpt-3",
    "question": "Find the plate ID of the spectroscopic object with the highest redshift value.",
    "query": "SELECT T1.plateid FROM specobj AS T1    ORDER BY T1.z DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "299_1",
    "user": "gpt-3",
    "question": "Get the type of the nearest neighbour from the \"neighbors\" table, sorting by the neighbor's object id in descending order and limiting to only one result.",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1    ORDER BY T1.neighborobjid DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "299_2",
    "user": "gpt-3",
    "question": "Retrieve the type of the nearest neighbour object from a table called \"neighbors\", sorting by the neighbor's object ID in descending order and limiting the results to 1 row.",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1    ORDER BY T1.neighborobjid DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "300_1",
    "user": "gpt-3",
    "question": "Find the magnitude of the brightest photometric object from the photoobj table, sorted by descending redshift and limited to only one result.",
    "query": "SELECT T1.r FROM photoobj AS T1    ORDER BY T1.z DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "300_2",
    "user": "gpt-3",
    "question": "What is the value of the \"r\" column for the object with the highest redshift in the photoobj table?",
    "query": "SELECT T1.r FROM photoobj AS T1    ORDER BY T1.z DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "301_1",
    "user": "gpt-3",
    "question": "What is the flags value for the object with the highest g magnitude in the photoobj table?",
    "query": "SELECT T1.flags FROM photoobj AS T1    ORDER BY T1.g DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "301_2",
    "user": "gpt-3",
    "question": "Get the flags column for objects in the Photometric_objects table from the photoobj database, sorted in descending order by the g column and limit to one result.",
    "query": "SELECT T1.flags FROM photoobj AS T1    ORDER BY T1.g DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "302_1",
    "user": "gpt-3",
    "question": "Get the model magnitude in the u-band for objects from the Photometric_objects table, ordered by right ascension in descending order and only selecting one result.",
    "query": "SELECT T1.cmodelmag_u FROM photoobj AS T1    ORDER BY T1.ra DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "302_2",
    "user": "gpt-3",
    "question": "Retrieve the u-band cmodel magnitude from the photometric objects table sorted by right ascension in descending order and limit the results to 1.",
    "query": "SELECT T1.cmodelmag_u FROM photoobj AS T1    ORDER BY T1.ra DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "303_1",
    "user": "gpt-3",
    "question": "\"Retrieve the redshift error value from the spectroscopic objects table, ordered by descending segue2 target 1 values, with a limit of 1 result.\"",
    "query": "SELECT T1.zerr FROM specobj AS T1    ORDER BY T1.segue2_target1 DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "303_2",
    "user": "gpt-3",
    "question": "Get the redshift error from the specobj table, sorted by segue2_target1 in descending order, with a limit of 1.",
    "query": "SELECT T1.zerr FROM specobj AS T1    ORDER BY T1.segue2_target1 DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "304_1",
    "user": "gpt-3",
    "question": "Get the right ascension value for the brightest object in the photoobj table, ordered by objects with clean data first.",
    "query": "SELECT T1.r FROM photoobj AS T1    ORDER BY T1.clean DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "304_2",
    "user": "gpt-3",
    "question": "Find the value of r for Photometric objects ordered by their cleanliness in descending order, with a limit of 1 result.",
    "query": "SELECT T1.r FROM photoobj AS T1    ORDER BY T1.clean DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "305_1",
    "user": "gpt-3",
    "question": "Retrieve the velocity dispersion error for the most recent spectroscopic object in the specobj table, ordered by modified Julian date and limited to one result.",
    "query": "SELECT T1.veldisperr FROM specobj AS T1    ORDER BY T1.mjd DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "305_2",
    "user": "gpt-3",
    "question": "Get the velocity dispersion error from the most recent spectroscopic object in the specobj table, ordered by modified Julian date and limited to 1 result.",
    "query": "SELECT T1.veldisperr FROM specobj AS T1    ORDER BY T1.mjd DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "306_1",
    "user": "gpt-3",
    "question": "Get the neighbor mode from the nearest neighbor objects in the neighbors table, sorted by distance in descending order, with a limit of 1 result.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1    ORDER BY T1.distance DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "306_2",
    "user": "gpt-3",
    "question": "What is the nearest neighbor mode for all objects in the neighbors table, sorted by distance in descending order, with a limit of 1 result?",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1    ORDER BY T1.distance DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "307_1",
    "user": "gpt-3",
    "question": "\"Get the declination values of the photometric objects from the photoobj table, ordered by their redshift in descending order, and limit the results to one object.\"",
    "query": "SELECT T1.dec FROM photoobj AS T1    ORDER BY T1.z DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "307_2",
    "user": "gpt-3",
    "question": "Get the declination of the object with the highest redshift from the photoobj table, sorted in descending order by redshift, and limit the results to one.",
    "query": "SELECT T1.dec FROM photoobj AS T1    ORDER BY T1.z DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "308_1",
    "user": "gpt-3",
    "question": "Find the Modified Julian Date for the object with the highest cmodel magnitude in the u band from the table photoobj, sorted in descending order.",
    "query": "SELECT T1.mjd FROM photoobj AS T1    ORDER BY T1.cmodelmag_u DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "308_2",
    "user": "gpt-3",
    "question": "What is the latest Modified Julian Date of the most luminous object according to its cmodel magnitude in the u band from the photoobj table?",
    "query": "SELECT T1.mjd FROM photoobj AS T1    ORDER BY T1.cmodelmag_u DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "309_1",
    "user": "gpt-3",
    "question": "Get the distance of the nearest neighbor object, sorted in descending order by its object ID and limited to one result.",
    "query": "SELECT T1.distance FROM neighbors AS T1    ORDER BY T1.objid DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "309_2",
    "user": "gpt-3",
    "question": "Find the distance of the nearest neighbor object, sorted by its ID in descending order, and limit the result to one entry.",
    "query": "SELECT T1.distance FROM neighbors AS T1    ORDER BY T1.objid DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "310_1",
    "user": "gpt-3",
    "question": "Retrieve the Segue 2 Target 1 name from the Spectroscopic Objects table, sorting by velocity dispersion in descending order and only returning the top result.",
    "query": "SELECT T1.segue2_target1 FROM specobj AS T1    ORDER BY T1.veldisp DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "310_2",
    "user": "gpt-3",
    "question": "What is the most massive Spectroscopic Object's SEGUE2 Target1 from the SpecObj table, ordered by its velocity dispersion in descending order and only returning 1 result?",
    "query": "SELECT T1.segue2_target1 FROM specobj AS T1    ORDER BY T1.veldisp DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "311_1",
    "user": "gpt-3",
    "question": "Get the declination values from the most recent version of the Spectroscopic_objects table, sorted in descending order by load version, and limit the results to 1.",
    "query": "SELECT T1.dec FROM specobj AS T1    ORDER BY T1.loadversion DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "311_2",
    "user": "gpt-3",
    "question": "Find the declination values of spectroscopic objects, sorted by their load version in descending order, limited to one result.",
    "query": "SELECT T1.dec FROM specobj AS T1    ORDER BY T1.loadversion DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "312_1",
    "user": "gpt-3",
    "question": "Get the Modified Julian Date for the object with the largest velocity dispersion error from the specobj table, sorted in descending order by the veldisperr column and limited to one result.",
    "query": "SELECT T1.mjd FROM specobj AS T1    ORDER BY T1.veldisperr DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "312_2",
    "user": "gpt-3",
    "question": "Find the modified Julian date for the spectroscopic object with the highest velocity dispersion error in ascending order.",
    "query": "SELECT T1.mjd FROM specobj AS T1    ORDER BY T1.veldisperr DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "313_1",
    "user": "gpt-3",
    "question": "Get the load version from the specobj table for the spectroscopic objects sorted by zwarning in descending order, with a limit of 1.",
    "query": "SELECT T1.loadversion FROM specobj AS T1    ORDER BY T1.zwarning DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "313_2",
    "user": "gpt-3",
    "question": "Retrieve the most recent version number of loaded spectroscopic objects, sorted by their redshift warning in descending order, with a limit of 1.",
    "query": "SELECT T1.loadversion FROM specobj AS T1    ORDER BY T1.zwarning DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "314_1",
    "user": "gpt-3",
    "question": "What is the right ascension of the last recorded spectroscopic object, when sorted by plate ID in descending order?",
    "query": "SELECT T1.ra FROM specobj AS T1    ORDER BY T1.plateid DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "314_2",
    "user": "gpt-3",
    "question": "Retrieve the right ascension values from the \"specobj\" table, under the alias \"Spectroscopic_objects\", ordered in descending order by plate ID, with a limit of 1.",
    "query": "SELECT T1.ra FROM specobj AS T1    ORDER BY T1.plateid DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "315_1",
    "user": "gpt-3",
    "question": "Get the subclass of the most recent spectroscopic object based on descending order of their primary scientific status.",
    "query": "SELECT T1.subclass FROM specobj AS T1    ORDER BY T1.scienceprimary DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "315_2",
    "user": "gpt-3",
    "question": "What is the subclass of the spectroscopic object with the highest priority for scientific observations?",
    "query": "SELECT T1.subclass FROM specobj AS T1    ORDER BY T1.scienceprimary DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "316_1",
    "user": "gpt-3",
    "question": "Find the name of the photometrically observed object that has the highest value in the photo_type table.",
    "query": "SELECT T1.name FROM photo_type AS T1    ORDER BY T1.value DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "316_2",
    "user": "gpt-3",
    "question": "Retrieve the name of the photometrically observed object with the highest value for its photo type, ordered in descending order, limited to 1 result.",
    "query": "SELECT T1.name FROM photo_type AS T1    ORDER BY T1.value DESC LIMIT 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "317_1",
    "user": "gpt-3",
    "question": "What is the Spectroscopic Object ID for objects with a plate ID of 953637261797255168 and a declination of -16.761242?",
    "query": "SELECT T1.specobjid FROM specobj AS T1 WHERE T1.plateid = 953637261797255168 and T1.dec = -16.761242"
  },
  {
    "db_id": "sdss_temporary",
    "id": "317_2",
    "user": "gpt-3",
    "question": "What is the spectroscopic object ID for an object with a plate ID of 953637261797255168 and a declination of -16.761242?",
    "query": "SELECT T1.specobjid FROM specobj AS T1 WHERE T1.plateid = 953637261797255168 and T1.dec = -16.761242"
  },
  {
    "db_id": "sdss_temporary",
    "id": "318_1",
    "user": "gpt-3",
    "question": "Retrieve the zwarning values from the specobj table for all spectroscopic objects that are not associated with a primary segue2 object and have a veldisp value of 186.0735.",
    "query": "SELECT T1.zwarning FROM specobj AS T1 WHERE T1.segue2primary = 0 and T1.veldisp = 186.0735"
  },
  {
    "db_id": "sdss_temporary",
    "id": "318_2",
    "user": "gpt-3",
    "question": "Get the \"zwarning\" value from the \"specobj\" table for all objects in which the values of both \"segue2primary\" and \"veldisp\" are equal to 0 and 186.0735, respectively, in the table with an alias of \"Spectroscopic_objects\".",
    "query": "SELECT T1.zwarning FROM specobj AS T1 WHERE T1.segue2primary = 0 and T1.veldisp = 186.0735"
  },
  {
    "db_id": "sdss_temporary",
    "id": "319_1",
    "user": "gpt-3",
    "question": "Retrieve the \"clean\" attribute from the table \"photoobj\" where the redshift is 11.77583 and the object type is 3, using the alias \"Photometric_objects\".",
    "query": "SELECT T1.clean FROM photoobj AS T1 WHERE T1.z = 11.77583 and T1.type = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "319_2",
    "user": "gpt-3",
    "question": "Retrieve the \"clean\" attribute from the \"photoobj\" table for all objects with a redshift value of 11.77583 and a type of 3, using the alias \"Photometric_objects\".",
    "query": "SELECT T1.clean FROM photoobj AS T1 WHERE T1.z = 11.77583 and T1.type = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "320_1",
    "user": "gpt-3",
    "question": "\"Retrieve the neighbor object's ID for objects with the ID 1237678906256196033 and a type of 3 from the neighbors table.\"",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 WHERE T1.objid = 1237678906256196033 and T1.neighbortype = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "320_2",
    "user": "gpt-3",
    "question": "Find the neighbor object IDs for the nearest objects to the given object ID 1237678906256196033 that have a neighbor type of 3.",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 WHERE T1.objid = 1237678906256196033 and T1.neighbortype = 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "321_1",
    "user": "gpt-3",
    "question": "What is the zwarning value for a spectroscopic object with a declination of -18.040984 and specobjid of 300672476709414912?",
    "query": "SELECT T1.zwarning FROM specobj AS T1 WHERE T1.dec = -18.040984 and T1.specobjid = 300672476709414912"
  },
  {
    "db_id": "sdss_temporary",
    "id": "321_2",
    "user": "gpt-3",
    "question": "What is the zwarning for a spectroscopic object with a declination of -18.040984 and specobjid of 300672476709414912 in the table specobj?",
    "query": "SELECT T1.zwarning FROM specobj AS T1 WHERE T1.dec = -18.040984 and T1.specobjid = 300672476709414912"
  },
  {
    "db_id": "sdss_temporary",
    "id": "322_1",
    "user": "gpt-3",
    "question": "\"Select the object ID of the nearest neighbour from the neighbors table where the neighbor object ID is 1237645876861534609 and the distance is 9.74622584843595e-06.\"",
    "query": "SELECT T1.objid FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861534609 and T1.distance = 9.74622584843595e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "322_2",
    "user": "gpt-3",
    "question": "Get the object ID of the nearest neighbor for an object with ID 1237645876861534609, where the distance between them is equal to 9.74622584843595e-06.",
    "query": "SELECT T1.objid FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861534609 and T1.distance = 9.74622584843595e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "323_1",
    "user": "gpt-3",
    "question": "Find the description of the photometrically observed type \"DEFECT\" with a value of 5.",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name = \"DEFECT\" and T1.value = 5"
  },
  {
    "db_id": "sdss_temporary",
    "id": "323_2",
    "user": "gpt-3",
    "question": "What is the description for a defect with a value of 5 in the photometrically observed photo type?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name = \"DEFECT\" and T1.value = 5"
  },
  {
    "db_id": "sdss_temporary",
    "id": "324_1",
    "user": "gpt-3",
    "question": "Retrieve the type of nearest neighbour objects where the neighbor object ID is 1237645876861469275 and the type is 0.",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861469275 and T1.type = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "324_2",
    "user": "gpt-3",
    "question": "What is the neighbor type of the nearest neighbour object with an ID of 1237645876861469275 and a type of 0 in the neighbors table?",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861469275 and T1.type = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "325_1",
    "user": "gpt-3",
    "question": "Find the name of objects in the photo type table that have a value of 7 and a description of \"Trail: A satellite or asteroid or meteor trail\".",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 7 and T1.description = \"Trail: A satellite or asteroid or meteor trail. (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "325_2",
    "user": "gpt-3",
    "question": "Find the names of objects that have a photometric type value of 7 and description of \"Trail: A satellite or asteroid or meteor trail.\"",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 7 and T1.description = \"Trail: A satellite or asteroid or meteor trail. (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "326_1",
    "user": "gpt-3",
    "question": "\"Retrieve the description of all photo types with a value of 6 and a name of 'STAR' from the photometrically observed table.\"",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 6 and T1.name = \"STAR\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "326_2",
    "user": "gpt-3",
    "question": "What is the description for a star that has been observed photometrically and has a value of 6 in the \"photo_type\" table?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 6 and T1.name = \"STAR\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "327_1",
    "user": "gpt-3",
    "question": "Retrieve the velocity dispersion error for the spectroscopic object with specobjid of 299552624485623808 and a class of \"STAR\".",
    "query": "SELECT T1.veldisperr FROM specobj AS T1 WHERE T1.specobjid = 299552624485623808 and T1.class = \"STAR\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "327_2",
    "user": "gpt-3",
    "question": "Retrieve the velocity dispersion error for the star object with specobjid 299552624485623808.",
    "query": "SELECT T1.veldisperr FROM specobj AS T1 WHERE T1.specobjid = 299552624485623808 and T1.class = \"STAR\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "328_1",
    "user": "gpt-3",
    "question": "Find the description from photometrically observed photo types where the name is \"COSMIC_RAY\" and the value is 7.",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name = \"COSMIC_RAY\" and T1.value = 7"
  },
  {
    "db_id": "sdss_temporary",
    "id": "328_2",
    "user": "gpt-3",
    "question": "Retrieve the description from the photometrically observed photo type where the name is \"COSMIC_RAY\" and the value is 7.",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name = \"COSMIC_RAY\" and T1.value = 7"
  },
  {
    "db_id": "sdss_temporary",
    "id": "329_1",
    "user": "gpt-3",
    "question": "What are the names of objects that were observed photometrically as having a value of 7 and a description of \"Sky: Blank sky spectrogram (no objects in this arcsecond area)\"?",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 7 and T1.description = \"Sky: Blank sky spectrogram (no objects in this arcsecond area).\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "329_2",
    "user": "gpt-3",
    "question": "Get the names of objects observed photometrically that have a value of 7 and a description of \"Sky: Blank sky spectrogram (no objects in this arcsecond area)\".",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 7 and T1.description = \"Sky: Blank sky spectrogram (no objects in this arcsecond area).\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "330_1",
    "user": "gpt-3",
    "question": "Retrieve the velocity dispersion value from the \"specobj\" table for objects that have a special target of 10737418240 and a segue2 target of -2147483644, and label these objects as \"Spectroscopic_objects\".",
    "query": "SELECT T1.veldisp FROM specobj AS T1 WHERE T1.special_target1 = 10737418240 and T1.segue2_target1 = -2147483644"
  },
  {
    "db_id": "sdss_temporary",
    "id": "330_2",
    "user": "gpt-3",
    "question": "What is the velocity dispersion of spectroscopic objects with a special target of 10737418240 and a segue2 target of -2147483644?",
    "query": "SELECT T1.veldisp FROM specobj AS T1 WHERE T1.special_target1 = 10737418240 and T1.segue2_target1 = -2147483644"
  },
  {
    "db_id": "sdss_temporary",
    "id": "331_1",
    "user": "gpt-3",
    "question": "Find the name of all objects that are not known and have a value of 6 in the photometrically observed type, where the description is \"Unknown: Object type is not known.\"",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Unknown: Object type is not known.\" and T1.value = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "331_2",
    "user": "gpt-3",
    "question": "Retrieve the names of objects that have a description of \"Unknown: Object type is not known\" and a value of 6 in the table for photometrically observed photo types.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Unknown: Object type is not known.\" and T1.value = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "332_1",
    "user": "gpt-3",
    "question": "What is the velocity dispersion error for a spectroscopic object with a redshift of -0.002888325 and a right ascension of 0.0362317280000184?",
    "query": "SELECT T1.veldisperr FROM specobj AS T1 WHERE T1.z = -0.002888325 and T1.ra = 0.0362317280000184"
  },
  {
    "db_id": "sdss_temporary",
    "id": "332_2",
    "user": "gpt-3",
    "question": "What is the velocity dispersion error for the spectroscopic object with a redshift of -0.002888325 and a right ascension of 0.0362317280000184?",
    "query": "SELECT T1.veldisperr FROM specobj AS T1 WHERE T1.z = -0.002888325 and T1.ra = 0.0362317280000184"
  },
  {
    "db_id": "sdss_temporary",
    "id": "333_1",
    "user": "gpt-3",
    "question": "Retrieve the neighbor mode for the nearest neighbour object with an ID of 1237645876861599987 and a neighbor type of 0 from the neighbors table.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861599987 and T1.neighbortype = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "333_2",
    "user": "gpt-3",
    "question": "Retrieve the mode of the nearest neighbor for the object with an ID of 1237645876861599987, where the type of neighbor is 0.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861599987 and T1.neighbortype = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "334_1",
    "user": "gpt-3",
    "question": "Find the row number for a photometric object with a cmodel magnitude of 13.73239 in the g-band and a r-band magnitude of 12.37496 from the photoobj table.",
    "query": "SELECT T1.rowc FROM photoobj AS T1 WHERE T1.cmodelmag_g = 13.73239 and T1.r = 12.37496"
  },
  {
    "db_id": "sdss_temporary",
    "id": "334_2",
    "user": "gpt-3",
    "question": "Find the row number from the photoobj table where the cmodelmag_g column has a value of 13.73239 and the r column has a value of 12.37496, and return only the rowc column for those rows that match these conditions.",
    "query": "SELECT T1.rowc FROM photoobj AS T1 WHERE T1.cmodelmag_g = 13.73239 and T1.r = 12.37496"
  },
  {
    "db_id": "sdss_temporary",
    "id": "335_1",
    "user": "gpt-3",
    "question": "What is the description of photometrically observed photo types with a value of 7 and a name of \"NOTATYPE\"?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 7 and T1.name = \"NOTATYPE\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "335_2",
    "user": "gpt-3",
    "question": "What is the description of the photometrically observed photo type with a value of 7 and a name of \"NOTATYPE\"?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 7 and T1.name = \"NOTATYPE\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "336_1",
    "user": "gpt-3",
    "question": "Find the mode of the neighbor objects with type 3 and an object ID of 1237645876861535257 in the table called \"neighbors\".",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 WHERE T1.type = 3 and T1.neighborobjid = 1237645876861535257"
  },
  {
    "db_id": "sdss_temporary",
    "id": "336_2",
    "user": "gpt-3",
    "question": "Retrieve the mode of nearest neighbors for objects with a type of 3 and a neighbor object ID of 1237645876861535257 from the table \"neighbors\".",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 WHERE T1.type = 3 and T1.neighborobjid = 1237645876861535257"
  },
  {
    "db_id": "sdss_temporary",
    "id": "337_1",
    "user": "gpt-3",
    "question": "Get the special target 1 of all galaxies from the spectroscopic objects table where the load version is 1017 and class is \"GALAXY\".",
    "query": "SELECT T1.special_target1 FROM specobj AS T1 WHERE T1.loadversion = 1017 and T1.class = \"GALAXY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "337_2",
    "user": "gpt-3",
    "question": "Retrieve the special target 1 from all spectroscopic objects with a load version of 1017 and belonging to the class of galaxies.",
    "query": "SELECT T1.special_target1 FROM specobj AS T1 WHERE T1.loadversion = 1017 and T1.class = \"GALAXY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "338_1",
    "user": "gpt-3",
    "question": "Retrieve the magnitude value from the \"g\" column in the \"photoobj\" table for all objects where their right ascension is equal to 0.00336103860473713 and their declination is equal to -19.0418600002173.",
    "query": "SELECT T1.g FROM photoobj AS T1 WHERE T1.ra = 0.00336103860473713 and T1.dec = -19.0418600002173"
  },
  {
    "db_id": "sdss_temporary",
    "id": "338_2",
    "user": "gpt-3",
    "question": "What is the value of column \"g\" from table \"Photometric_objects\" for objects with a right ascension of 0.00336103860473713 and a declination of -19.0418600002173 in table \"photoobj\"?",
    "query": "SELECT T1.g FROM photoobj AS T1 WHERE T1.ra = 0.00336103860473713 and T1.dec = -19.0418600002173"
  },
  {
    "db_id": "sdss_temporary",
    "id": "339_1",
    "user": "gpt-3",
    "question": "What is the description for photometrically observed objects with a value of 7 and name \"KNOWNOBJ\"?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 7 and T1.name = \"KNOWNOBJ\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "339_2",
    "user": "gpt-3",
    "question": "What is the description of the photo type with a value of 7 and a name of \"KNOWNOBJ\" in the table for photometrically observed objects?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 7 and T1.name = \"KNOWNOBJ\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "340_1",
    "user": "gpt-3",
    "question": "Find the extinction value in the \"r\" band for objects in the photometric catalog with a model magnitude of 12.50513 in the \"r\" band and 14.33776 in the \"u\" band.",
    "query": "SELECT T1.extinction_r FROM photoobj AS T1 WHERE T1.cmodelmag_r = 12.50513 and T1.cmodelmag_u = 14.33776"
  },
  {
    "db_id": "sdss_temporary",
    "id": "340_2",
    "user": "gpt-3",
    "question": "Find the extinction value in the \"extinction_r\" column from the \"photoobj\" table for objects with a cmodel magnitude of 12.50513 in the r band and 14.33776 in the u band in the Photometric_objects dataset.",
    "query": "SELECT T1.extinction_r FROM photoobj AS T1 WHERE T1.cmodelmag_r = 12.50513 and T1.cmodelmag_u = 14.33776"
  },
  {
    "db_id": "sdss_temporary",
    "id": "341_1",
    "user": "gpt-3",
    "question": "\"Retrieve the 'b' column from the table 'photoobj', specifically for objects with a colc value of 63.95802 and a run value of 7845.\"",
    "query": "SELECT T1.b FROM photoobj AS T1 WHERE T1.colc = 63.95802 and T1.run = 7845"
  },
  {
    "db_id": "sdss_temporary",
    "id": "341_2",
    "user": "gpt-3",
    "question": "Find the b column value from the Photometric_objects table where the colc value is 63.95802 and the run value is 7845.",
    "query": "SELECT T1.b FROM photoobj AS T1 WHERE T1.colc = 63.95802 and T1.run = 7845"
  },
  {
    "db_id": "sdss_temporary",
    "id": "342_1",
    "user": "gpt-3",
    "question": "\"Retrieve the declination of all objects from the specobj table where the velocity dispersion is equal to 138.4016 and the survey is 'eboss'.\"",
    "query": "SELECT T1.dec FROM specobj AS T1 WHERE T1.veldisp = 138.4016 and T1.survey = \"eboss\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "342_2",
    "user": "gpt-3",
    "question": "Retrieve the declination values for all spectroscopic objects where the velocity dispersion is equal to 138.4016 and the survey is \"eboss\".",
    "query": "SELECT T1.dec FROM specobj AS T1 WHERE T1.veldisp = 138.4016 and T1.survey = \"eboss\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "343_1",
    "user": "gpt-3",
    "question": "What are the names of galaxies that have been photometrically observed and described as an extended object composed of many stars and other matter with a value of 8?",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 8 and T1.description = \"Galaxy: An extended object composed of many stars and other matter.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "343_2",
    "user": "gpt-3",
    "question": "Retrieve the name of all objects that have a photo type value of 8 and description indicating it is an extended object composed of stars and other matter.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 8 and T1.description = \"Galaxy: An extended object composed of many stars and other matter.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "344_1",
    "user": "gpt-3",
    "question": "Retrieve the value of photometrically observed data where the description is \"Trail: A satellite or asteroid or meteor trail. (not yet used)\" and the name is \"COSMIC_RAY\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.description = \"Trail: A satellite or asteroid or meteor trail. (not yet used)\" and T1.name = \"COSMIC_RAY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "344_2",
    "user": "gpt-3",
    "question": "Retrieve the value from the \"photometrically_observed\" table for a trail that is either a satellite, asteroid, or meteor and has a description of \"Trail: A satellite or asteroid or meteor trail. (not yet used)\" and has a name of \"COSMIC_RAY\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.description = \"Trail: A satellite or asteroid or meteor trail. (not yet used)\" and T1.name = \"COSMIC_RAY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "345_1",
    "user": "gpt-3",
    "question": "What is the SEGUE2 target2 for the spectroscopic object with specobjid = 300643889407092736 and zwarning = 0?",
    "query": "SELECT T1.segue2_target2 FROM specobj AS T1 WHERE T1.specobjid = 300643889407092736 and T1.zwarning = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "345_2",
    "user": "gpt-3",
    "question": "What is the SEGUE2 target2 from specobj for a spectroscopic object with a specobjid of 300643889407092736 and zwarning of 0?",
    "query": "SELECT T1.segue2_target2 FROM specobj AS T1 WHERE T1.specobjid = 300643889407092736 and T1.zwarning = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "346_1",
    "user": "gpt-3",
    "question": "Retrieve the description from photo_type where the value is equal to 0 and the name is \"SKY\" for photometrically observed data.",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 0 and T1.name = \"SKY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "346_2",
    "user": "gpt-3",
    "question": "What is the description of the photo type named \"SKY\" with a value of 0 in the table for photometrically observed data?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 0 and T1.name = \"SKY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "347_1",
    "user": "gpt-3",
    "question": "Retrieve the length of all photometric objects from the photoobj table where their mode is equal to 1 and their type is equal to 0.",
    "query": "SELECT T1.l FROM photoobj AS T1 WHERE T1.mode = 1 and T1.type = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "347_2",
    "user": "gpt-3",
    "question": "Get the luminosity of objects from the photoobj table that are in mode 1 and have a type of 0.",
    "query": "SELECT T1.l FROM photoobj AS T1 WHERE T1.mode = 1 and T1.type = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "348_1",
    "user": "gpt-3",
    "question": "Find the i magnitude for objects in the photoobj table with run number 1740 and a right ascension value of 0.00555305862832256.",
    "query": "SELECT T1.i FROM photoobj AS T1 WHERE T1.run = 1740 and T1.ra = 0.00555305862832256"
  },
  {
    "db_id": "sdss_temporary",
    "id": "348_2",
    "user": "gpt-3",
    "question": "Find the i value from the photoobj table for objects with a run number of 1740 and a right ascension of 0.00555305862832256.",
    "query": "SELECT T1.i FROM photoobj AS T1 WHERE T1.run = 1740 and T1.ra = 0.00555305862832256"
  },
  {
    "db_id": "sdss_temporary",
    "id": "349_1",
    "user": "gpt-3",
    "question": "Retrieve the value for \"SKY\" from the column named \"value\" in the table \"photo_type\" where the name is \"photometrically_observed\" and the description is \"Trail: A satellite or asteroid or meteor trail. (not yet used)\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.name = \"SKY\" and T1.description = \"Trail: A satellite or asteroid or meteor trail. (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "349_2",
    "user": "gpt-3",
    "question": "Get the value from the column \"value\" in the table \"photo_type\" for entries where the name is \"SKY\" and the description is \"Trail: A satellite or asteroid or meteor trail. (not yet used)\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.name = \"SKY\" and T1.description = \"Trail: A satellite or asteroid or meteor trail. (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "350_1",
    "user": "gpt-3",
    "question": "Find the declination for spectroscopic objects where the ancillary target is 128 and the modified Julian date is 53783.",
    "query": "SELECT T1.dec FROM specobj AS T1 WHERE T1.ancillary_target1 = 128 and T1.mjd = 53783"
  },
  {
    "db_id": "sdss_temporary",
    "id": "350_2",
    "user": "gpt-3",
    "question": "What is the declination of spectroscopic objects with an ancillary target of 128 and a modified Julian date of 53783?",
    "query": "SELECT T1.dec FROM specobj AS T1 WHERE T1.ancillary_target1 = 128 and T1.mjd = 53783"
  },
  {
    "db_id": "sdss_temporary",
    "id": "351_1",
    "user": "gpt-3",
    "question": "Get the type of objects that are nearest neighbours with a neighbour mode of 2 and a distance of 1.14565022314851e-05 from the neighbors table.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.neighbormode = 2 and T1.distance = 1.14565022314851e-05"
  },
  {
    "db_id": "sdss_temporary",
    "id": "351_2",
    "user": "gpt-3",
    "question": "Select the type of nearest neighbor objects where the neighbor mode is 2 and the distance is equal to 1.14565022314851e-05.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.neighbormode = 2 and T1.distance = 1.14565022314851e-05"
  },
  {
    "db_id": "sdss_temporary",
    "id": "352_1",
    "user": "gpt-3",
    "question": "Retrieve the target1 values from the segue2 dataset for all objects with a velocity dispersion error of 35.67467 and are designated as primary science targets.",
    "query": "SELECT T1.segue2_target1 FROM specobj AS T1 WHERE T1.veldisperr = 35.67467 and T1.scienceprimary = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "352_2",
    "user": "gpt-3",
    "question": "Find the target for SEGUE2 primary science objects with a velocity dispersion error of 35.67467.",
    "query": "SELECT T1.segue2_target1 FROM specobj AS T1 WHERE T1.veldisperr = 35.67467 and T1.scienceprimary = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "353_1",
    "user": "gpt-3",
    "question": "Retrieve the value from the \"value\" column of the table \"photo_type\" where the description is \"Cosmic-ray track (not used)\" and name is \"SKY\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.description = \"Cosmic-ray track (not used).\" and T1.name = \"SKY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "353_2",
    "user": "gpt-3",
    "question": "Retrieve the value for a cosmic-ray track that is not used and is observed photometrically as \"SKY\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.description = \"Cosmic-ray track (not used).\" and T1.name = \"SKY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "354_1",
    "user": "gpt-3",
    "question": "\"Retrieve the 'r' value for objects in the 'Photometric_objects' table where the 'rowc' column is equal to 58.23757 and the 'u' column is equal to 14.46555.\"",
    "query": "SELECT T1.r FROM photoobj AS T1 WHERE T1.rowc = 58.23757 and T1.u = 14.46555"
  },
  {
    "db_id": "sdss_temporary",
    "id": "354_2",
    "user": "gpt-3",
    "question": "Retrieve the \"r\" value from the \"photoobj\" table for objects in the \"Photometric_objects\" group where the rowc value is 58.23757 and the u value is 14.46555.",
    "query": "SELECT T1.r FROM photoobj AS T1 WHERE T1.rowc = 58.23757 and T1.u = 14.46555"
  },
  {
    "db_id": "sdss_temporary",
    "id": "355_1",
    "user": "gpt-3",
    "question": "\"Select the object ID from the photo objects table where the extinction value in the r-band is equal to 0.01023307 and the declination is -17.4299742773971.\"",
    "query": "SELECT T1.objid FROM photoobj AS T1 WHERE T1.extinction_r = 0.01023307 and T1.dec = -17.4299742773971"
  },
  {
    "db_id": "sdss_temporary",
    "id": "355_2",
    "user": "gpt-3",
    "question": "Retrieve the object identification numbers from a database of photometric objects where the extinction value for the r-band is 0.01023307 and the declination is -17.4299742773971.",
    "query": "SELECT T1.objid FROM photoobj AS T1 WHERE T1.extinction_r = 0.01023307 and T1.dec = -17.4299742773971"
  },
  {
    "db_id": "sdss_temporary",
    "id": "356_1",
    "user": "gpt-3",
    "question": "Retrieve the names of all stars that have been observed to be photometrically observed, where their description is \"A self-luminous gaseous celestial body\" and their value is 2.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Star: A self-luminous gaseous celestial body.\" and T1.value = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "356_2",
    "user": "gpt-3",
    "question": "Retrieve the name of all stars that have a photometrically observed value of 2 and are described as self-luminous gaseous celestial bodies.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Star: A self-luminous gaseous celestial body.\" and T1.value = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "357_1",
    "user": "gpt-3",
    "question": "Find the Modified Julian Date for all objects from the Spectroscopic Catalog where the special target1 is equal to 6442450944 and the subclass is \"G8V (101501)\".",
    "query": "SELECT T1.mjd FROM specobj AS T1 WHERE T1.special_target1 = 6442450944 and T1.subclass = \"G8V (101501)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "357_2",
    "user": "gpt-3",
    "question": "Find the date (mjd) for spectroscopic objects where the special target1 is 6442450944 and the subclass is \"G8V (101501)\".",
    "query": "SELECT T1.mjd FROM specobj AS T1 WHERE T1.special_target1 = 6442450944 and T1.subclass = \"G8V (101501)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "358_1",
    "user": "gpt-3",
    "question": "Find the object ID of the nearest neighbour from a table called \"neighbors\" where the neighbor's object ID is 1237645876861468900 and their distance is equal to 1.14702573637915e-05.",
    "query": "SELECT T1.objid FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861468900 and T1.distance = 1.14702573637915e-05"
  },
  {
    "db_id": "sdss_temporary",
    "id": "358_2",
    "user": "gpt-3",
    "question": "Find the object ID of the nearest neighbor with an object ID of 1237645876861468900 and a distance of 1.14702573637915e-05 in the neighbors table.",
    "query": "SELECT T1.objid FROM neighbors AS T1 WHERE T1.neighborobjid = 1237645876861468900 and T1.distance = 1.14702573637915e-05"
  },
  {
    "db_id": "sdss_temporary",
    "id": "359_1",
    "user": "gpt-3",
    "question": "Find the names of galaxies that have a photometrically observed type with a description of \"Galaxy: An extended object composed of many stars and other matter\" and a value of 4.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Galaxy: An extended object composed of many stars and other matter.\" and T1.value = 4"
  },
  {
    "db_id": "sdss_temporary",
    "id": "359_2",
    "user": "gpt-3",
    "question": "Find the names of galaxies that have a description of \"Galaxy: An extended object composed of many stars and other matter\" and a value of 4 for their photometrically observed type.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Galaxy: An extended object composed of many stars and other matter.\" and T1.value = 4"
  },
  {
    "db_id": "sdss_temporary",
    "id": "360_1",
    "user": "gpt-3",
    "question": "Find the special target1 for objects in the specobj table with an mjd value of 52404 and plateid of 394064995765217280.",
    "query": "SELECT T1.special_target1 FROM specobj AS T1 WHERE T1.mjd = 52404 and T1.plateid = 394064995765217280"
  },
  {
    "db_id": "sdss_temporary",
    "id": "360_2",
    "user": "gpt-3",
    "question": "Retrieve the special target 1 for spectroscopic objects from the table specobj where the MJD is equal to 52404 and the plateid is equal to 394064995765217280.",
    "query": "SELECT T1.special_target1 FROM specobj AS T1 WHERE T1.mjd = 52404 and T1.plateid = 394064995765217280"
  },
  {
    "db_id": "sdss_temporary",
    "id": "361_1",
    "user": "gpt-3",
    "question": "Get the type of objects that are nearest neighbors to the object with ID 1237645876861600004 and have a neighbor type of 6.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.neighbortype = 6 and T1.neighborobjid = 1237645876861600004"
  },
  {
    "db_id": "sdss_temporary",
    "id": "361_2",
    "user": "gpt-3",
    "question": "\"Get the type of nearest neighbor objects with a neighbor type of 6 and a neighbor object ID of 1237645876861600004.\"",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.neighbortype = 6 and T1.neighborobjid = 1237645876861600004"
  },
  {
    "db_id": "sdss_temporary",
    "id": "362_1",
    "user": "gpt-3",
    "question": "Find the distance of nearest neighbor objects that have a type of 0 and a mode of 1.",
    "query": "SELECT T1.distance FROM neighbors AS T1 WHERE T1.type = 0 and T1.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "362_2",
    "user": "gpt-3",
    "question": "Find the distance of the nearest neighbor objects that have a type of 0 and a mode of 1.",
    "query": "SELECT T1.distance FROM neighbors AS T1 WHERE T1.type = 0 and T1.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "363_1",
    "user": "gpt-3",
    "question": "What is the name of all photometrically observed galaxies with a value of 9 and a description of \"Galaxy: An extended object composed of many stars and other matter\"?",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Galaxy: An extended object composed of many stars and other matter.\" and T1.value = 9"
  },
  {
    "db_id": "sdss_temporary",
    "id": "363_2",
    "user": "gpt-3",
    "question": "What is the name of all photometrically observed objects that have a description of \"Galaxy: An extended object composed of many stars and other matter\" and a value of 9?",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Galaxy: An extended object composed of many stars and other matter.\" and T1.value = 9"
  },
  {
    "db_id": "sdss_temporary",
    "id": "364_1",
    "user": "gpt-3",
    "question": "What is the survey of the spectroscopic object with a plate ID of 504403190142232576 and velocity dispersion of 184.6734?",
    "query": "SELECT T1.survey FROM specobj AS T1 WHERE T1.plateid = 504403190142232576 and T1.veldisp = 184.6734"
  },
  {
    "db_id": "sdss_temporary",
    "id": "364_2",
    "user": "gpt-3",
    "question": "What is the survey of the spectroscopic object with a plate ID of 504403190142232576 and a velocity dispersion of 184.6734?",
    "query": "SELECT T1.survey FROM specobj AS T1 WHERE T1.plateid = 504403190142232576 and T1.veldisp = 184.6734"
  },
  {
    "db_id": "sdss_temporary",
    "id": "365_1",
    "user": "gpt-3",
    "question": "Retrieve the value of the \"COSMIC_RAY\" type from the photo_type table, where the name is \"photometrically_observed\" and the description is \"Ghost: Object created by reflected or refracted light. (not used)\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.name = \"COSMIC_RAY\" and T1.description = \"Ghost: Object created by reflected or refracted light. (not used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "365_2",
    "user": "gpt-3",
    "question": "Retrieve the value of photometrically observed objects that are categorized as \"COSMIC_RAY\" and have a description of \"Ghost: Object created by reflected or refracted light.\"",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.name = \"COSMIC_RAY\" and T1.description = \"Ghost: Object created by reflected or refracted light. (not used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "366_1",
    "user": "gpt-3",
    "question": "Find the object IDs of the nearest neighbor objects that are in mode 1 and have a neighbor type of 6.",
    "query": "SELECT T1.objid FROM neighbors AS T1 WHERE T1.mode = 1 and T1.neighbortype = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "366_2",
    "user": "gpt-3",
    "question": "Find the object IDs of nearest neighbor objects that are in mode 1 and have a neighbor type of 6.",
    "query": "SELECT T1.objid FROM neighbors AS T1 WHERE T1.mode = 1 and T1.neighbortype = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "367_1",
    "user": "gpt-3",
    "question": "Find the name of any photometrically observed object that has a value of 1 or a description of \"NotAType:\".",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 1 or T1.description = \"NotAType:\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "367_2",
    "user": "gpt-3",
    "question": "Retrieve the name of all photometrically observed objects from the \"photo_type\" table where their value is equal to 1 or their description is not a type.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 1 or T1.description = \"NotAType:\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "368_1",
    "user": "gpt-3",
    "question": "Find the fields of objects in the photometric database that have a rerun number of 301 or a load version of 344.",
    "query": "SELECT T1.field FROM photoobj AS T1 WHERE T1.rerun = 301 or T1.loadversion = 344"
  },
  {
    "db_id": "sdss_temporary",
    "id": "368_2",
    "user": "gpt-3",
    "question": "Find the field information from the photoobj table for objects with a rerun of 301 or loadversion of 344 in the Photometric_objects database.",
    "query": "SELECT T1.field FROM photoobj AS T1 WHERE T1.rerun = 301 or T1.loadversion = 344"
  },
  {
    "db_id": "sdss_temporary",
    "id": "369_1",
    "user": "gpt-3",
    "question": "Retrieve the run number from the table \"Photometric_objects\" for objects where the value in column \"colc\" is equal to 64.76644 or the value in column \"g\" is equal to 13.3994.",
    "query": "SELECT T1.run FROM photoobj AS T1 WHERE T1.colc = 64.76644 or T1.g = 13.3994"
  },
  {
    "db_id": "sdss_temporary",
    "id": "369_2",
    "user": "gpt-3",
    "question": "Find the run number from the Photometric_objects table where the colc column is equal to 64.76644 or the g column is equal to 13.3994.",
    "query": "SELECT T1.run FROM photoobj AS T1 WHERE T1.colc = 64.76644 or T1.g = 13.3994"
  },
  {
    "db_id": "sdss_temporary",
    "id": "370_1",
    "user": "gpt-3",
    "question": "Find the neighbor object ID of the nearest neighbour objects where the mode is equal to 1 or the neighbortype is equal to 0 from the neighbors table.",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 WHERE T1.mode = 1 or T1.neighbortype = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "370_2",
    "user": "gpt-3",
    "question": "Find the nearest neighbor objects that either have a mode of 1 or a neighbor type of 0 in the neighbors table, and return their object IDs from the Nearest_neighbour_objects table.",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 WHERE T1.mode = 1 or T1.neighbortype = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "371_1",
    "user": "gpt-3",
    "question": "Retrieve the type of nearest neighbor objects where the neighbor mode or mode is equal to 1.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.neighbormode = 1 or T1.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "371_2",
    "user": "gpt-3",
    "question": "Find the type of objects that are nearest neighbors and have a neighbor mode or mode value of 1.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.neighbormode = 1 or T1.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "372_1",
    "user": "gpt-3",
    "question": "Find the redshift value for objects in the \"specobj\" table where their velocity dispersion is equal to 285.4156 or their plate ID is equal to 856809867124434944.",
    "query": "SELECT T1.z FROM specobj AS T1 WHERE T1.veldisp = 285.4156 or T1.plateid = 856809867124434944"
  },
  {
    "db_id": "sdss_temporary",
    "id": "372_2",
    "user": "gpt-3",
    "question": "Retrieve the redshift values for all spectroscopic objects where either their velocity dispersion is equal to 285.4156 or their plate ID is equal to 856809867124434944.",
    "query": "SELECT T1.z FROM specobj AS T1 WHERE T1.veldisp = 285.4156 or T1.plateid = 856809867124434944"
  },
  {
    "db_id": "sdss_temporary",
    "id": "373_1",
    "user": "gpt-3",
    "question": "Find the object IDs of nearest neighbor objects whose ID is 1237678879423595047 or whose distance is equal to 1.03534308075674e-05 in the table \"neighbors\".",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 WHERE T1.objid = 1237678879423595047 or T1.distance = 1.03534308075674e-05"
  },
  {
    "db_id": "sdss_temporary",
    "id": "373_2",
    "user": "gpt-3",
    "question": "Find the object IDs of the nearest neighbor objects to object ID 1237678879423595047 with a distance of 1.03534308075674e-05.",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 WHERE T1.objid = 1237678879423595047 or T1.distance = 1.03534308075674e-05"
  },
  {
    "db_id": "sdss_temporary",
    "id": "374_1",
    "user": "gpt-3",
    "question": "Find the neighbor type of nearest neighbor objects where the neighbor mode is 2 or the object type is 0.",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 WHERE T1.neighbormode = 2 or T1.type = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "374_2",
    "user": "gpt-3",
    "question": "Find the neighbor type of nearest neighbor objects where the neighbor mode is equal to 2 or the object type is equal to 0.",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 WHERE T1.neighbormode = 2 or T1.type = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "375_1",
    "user": "gpt-3",
    "question": "Retrieve the type of photometric objects where the rowc is equal to 58.19047 or the mjd is equal to 53439 from the photoobj table.",
    "query": "SELECT T1.type FROM photoobj AS T1 WHERE T1.rowc = 58.19047 or T1.mjd = 53439"
  },
  {
    "db_id": "sdss_temporary",
    "id": "375_2",
    "user": "gpt-3",
    "question": "Retrieve the type of objects from the photoobj table where either the rowc value is equal to 58.19047 or the mjd value is equal to 53439.",
    "query": "SELECT T1.type FROM photoobj AS T1 WHERE T1.rowc = 58.19047 or T1.mjd = 53439"
  },
  {
    "db_id": "sdss_temporary",
    "id": "376_1",
    "user": "gpt-3",
    "question": "What is the best object ID from the spectroscopic objects where the load version is 1017 or the plate ID is 325385106464204800?",
    "query": "SELECT T1.bestobjid FROM specobj AS T1 WHERE T1.loadversion = 1017 or T1.plateid = 325385106464204800"
  },
  {
    "db_id": "sdss_temporary",
    "id": "376_2",
    "user": "gpt-3",
    "question": "Find the best object ID from the spectroscopic objects where either the load version is 1017 or the plate ID is equal to 325385106464204800.",
    "query": "SELECT T1.bestobjid FROM specobj AS T1 WHERE T1.loadversion = 1017 or T1.plateid = 325385106464204800"
  },
  {
    "db_id": "sdss_temporary",
    "id": "377_1",
    "user": "gpt-3",
    "question": "Find the object IDs of nearest neighbors with a distance of 1.13413602378053e-05 or with a neighbor ID of 1237645876861534336.",
    "query": "SELECT T1.objid FROM neighbors AS T1 WHERE T1.distance = 1.13413602378053e-05 or T1.neighborobjid = 1237645876861534336"
  },
  {
    "db_id": "sdss_temporary",
    "id": "377_2",
    "user": "gpt-3",
    "question": "Find the object ID of the nearest neighbor with a distance of 1.13413602378053e-05 or a neighbor object ID of 1237645876861534336 from the neighbors table.",
    "query": "SELECT T1.objid FROM neighbors AS T1 WHERE T1.distance = 1.13413602378053e-05 or T1.neighborobjid = 1237645876861534336"
  },
  {
    "db_id": "sdss_temporary",
    "id": "378_1",
    "user": "gpt-3",
    "question": "Find the right ascension of spectroscopic objects where the program name is \"lowz\" or the redshift warning flag is set to 0.",
    "query": "SELECT T1.ra FROM specobj AS T1 WHERE T1.programname = \"lowz\" or T1.zwarning = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "378_2",
    "user": "gpt-3",
    "question": "What is the right ascension of all spectroscopic objects where the program name is \"lowz\" or the zwarning value is 0?",
    "query": "SELECT T1.ra FROM specobj AS T1 WHERE T1.programname = \"lowz\" or T1.zwarning = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "379_1",
    "user": "gpt-3",
    "question": "Find the primary science objects from the spectroscopic data for either plate number 961 or SEGUE2 target code -2147483616.",
    "query": "SELECT T1.scienceprimary FROM specobj AS T1 WHERE T1.plate = 961 or T1.segue2_target2 = -2147483616"
  },
  {
    "db_id": "sdss_temporary",
    "id": "379_2",
    "user": "gpt-3",
    "question": "Retrieve the science primary objects from the spectroscopic objects where the plate number is 961 or segue2 target 2 is equal to -2147483616.",
    "query": "SELECT T1.scienceprimary FROM specobj AS T1 WHERE T1.plate = 961 or T1.segue2_target2 = -2147483616"
  },
  {
    "db_id": "sdss_temporary",
    "id": "380_1",
    "user": "gpt-3",
    "question": "Find the cmodel magnitude in the r band for all objects with an index of 12.02158 or an objid of 1237645943979638914 from the photoobj table, using the alias Photometric_objects.",
    "query": "SELECT T1.cmodelmag_r FROM photoobj AS T1 WHERE T1.i = 12.02158 or T1.objid = 1237645943979638914"
  },
  {
    "db_id": "sdss_temporary",
    "id": "380_2",
    "user": "gpt-3",
    "question": "Retrieve the cmodelmag_r value from the Photometric_objects table in the photoobj database for objects with an i value of 12.02158 or an objid of 1237645943979638914.",
    "query": "SELECT T1.cmodelmag_r FROM photoobj AS T1 WHERE T1.i = 12.02158 or T1.objid = 1237645943979638914"
  },
  {
    "db_id": "sdss_temporary",
    "id": "381_1",
    "user": "gpt-3",
    "question": "What are the names of all galaxies that have been observed photometrically and have a value of 9 or a description of \"Galaxy: An extended object composed of many stars and other matter\"?",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 9 or T1.description = \"Galaxy: An extended object composed of many stars and other matter.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "381_2",
    "user": "gpt-3",
    "question": "\"Retrieve the names of objects from the photo_type table where their value is equal to 9 or their description is 'Galaxy: An extended object composed of many stars and other matter'.\"",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 9 or T1.description = \"Galaxy: An extended object composed of many stars and other matter.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "382_1",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbor objects where the mode is 1 or the object ID is 1237666407921353563.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.mode = 1 or T1.objid = 1237666407921353563"
  },
  {
    "db_id": "sdss_temporary",
    "id": "382_2",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbor objects whose mode is equal to 1 or whose object ID is 1237666407921353563.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.mode = 1 or T1.objid = 1237666407921353563"
  },
  {
    "db_id": "sdss_temporary",
    "id": "383_1",
    "user": "gpt-3",
    "question": "Find the description of photo types where the name is \"STAR\" or the value is 2 in the photometrically observed table.",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name = \"STAR\" or T1.value = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "383_2",
    "user": "gpt-3",
    "question": "Find the description of all stars that have either a name of \"STAR\" or a value of 2 in the photometrically observed table.",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name = \"STAR\" or T1.value = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "384_1",
    "user": "gpt-3",
    "question": "What is the description of photometrically observed photo types with a value of 4 or a name of \"UNKNOWN\"?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 4 or T1.name = \"UNKNOWN\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "384_2",
    "user": "gpt-3",
    "question": "Find the description for photometrically observed photo types where the value is equal to 4 or the name is \"UNKNOWN\".",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 4 or T1.name = \"UNKNOWN\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "385_1",
    "user": "gpt-3",
    "question": "Retrieve the special target 1 of all spectroscopic objects where the redshift error is equal to 3.583556e-06 or the subclass is \"M0III (168720)\".",
    "query": "SELECT T1.special_target1 FROM specobj AS T1 WHERE T1.zerr = 3.583556e-06 or T1.subclass = \"M0III (168720)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "385_2",
    "user": "gpt-3",
    "question": "What is the special target 1 for objects in the Spectroscopic_objects table with a redshift error of 3.583556e-06 or a subclass of \"M0III (168720)\"?",
    "query": "SELECT T1.special_target1 FROM specobj AS T1 WHERE T1.zerr = 3.583556e-06 or T1.subclass = \"M0III (168720)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "386_1",
    "user": "gpt-3",
    "question": "Retrieve the value of photometrically observed objects where the name is \"DEFECT\" or the description is \"Ghost: Object created by reflected or refracted light. (not used)\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.name = \"DEFECT\" or T1.description = \"Ghost: Object created by reflected or refracted light. (not used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "386_2",
    "user": "gpt-3",
    "question": "Get the value of photometrically observed objects that have a name of \"DEFECT\" or a description of \"Ghost: Object created by reflected or refracted light. (not used)\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.name = \"DEFECT\" or T1.description = \"Ghost: Object created by reflected or refracted light. (not used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "387_1",
    "user": "gpt-3",
    "question": "Retrieve the g-band cmodel magnitude from the photometric objects table for all rows where either the u-band cmodel magnitude is 12.69278 or the colc value is 50.95649.",
    "query": "SELECT T1.cmodelmag_g FROM photoobj AS T1 WHERE T1.cmodelmag_u = 12.69278 or T1.colc = 50.95649"
  },
  {
    "db_id": "sdss_temporary",
    "id": "387_2",
    "user": "gpt-3",
    "question": "Retrieve the g-band cmodel magnitude from the photoobj table for objects where either the u-band cmodel magnitude is equal to 12.69278 or the colc value is equal to 50.95649.",
    "query": "SELECT T1.cmodelmag_g FROM photoobj AS T1 WHERE T1.cmodelmag_u = 12.69278 or T1.colc = 50.95649"
  },
  {
    "db_id": "sdss_temporary",
    "id": "388_1",
    "user": "gpt-3",
    "question": "What is the description of the photometrically observed photo type with a name of \"GHOST\" or a value of 2?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name = \"GHOST\" or T1.value = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "388_2",
    "user": "gpt-3",
    "question": "Find the description of the photometrically observed photo type with either the name \"GHOST\" or a value of 2.",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name = \"GHOST\" or T1.value = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "389_1",
    "user": "gpt-3",
    "question": "What is the description of photometrically observed photo types with a value of 7 or a name of \"GHOST\"?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 7 or T1.name = \"GHOST\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "389_2",
    "user": "gpt-3",
    "question": "What is the description of a photometrically observed photo type with a value of 7 or a name of \"GHOST\"?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 7 or T1.name = \"GHOST\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "390_1",
    "user": "gpt-3",
    "question": "Retrieve the names of objects observed photometrically that have a value of 0 or a description of \"Trail: A satellite or asteroid or meteor trail\".",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 0 or T1.description = \"Trail: A satellite or asteroid or meteor trail. (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "390_2",
    "user": "gpt-3",
    "question": "Find the names of objects that have a photo type value of 0 or a description of \"Trail: A satellite or asteroid or meteor trail. (not yet used)\".",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 0 or T1.description = \"Trail: A satellite or asteroid or meteor trail. (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "391_1",
    "user": "gpt-3",
    "question": "What is the distance of the nearest neighbor object where the object id is 1237678617430262332 or its neighbor mode is 2?",
    "query": "SELECT T1.distance FROM neighbors AS T1 WHERE T1.objid = 1237678617430262332 or T1.neighbormode = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "391_2",
    "user": "gpt-3",
    "question": "Find the distance of the nearest neighbor objects where either their object ID is equal to 1237678617430262332 or their neighbor mode is equal to 2.",
    "query": "SELECT T1.distance FROM neighbors AS T1 WHERE T1.objid = 1237678617430262332 or T1.neighbormode = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "392_1",
    "user": "gpt-3",
    "question": "Retrieve the type of photometric objects where either their g band cmodel magnitude is equal to 13.55233 or their u band magnitude is equal to 14.67711 from the photoobj table.",
    "query": "SELECT T1.type FROM photoobj AS T1 WHERE T1.cmodelmag_g = 13.55233 or T1.u = 14.67711"
  },
  {
    "db_id": "sdss_temporary",
    "id": "392_2",
    "user": "gpt-3",
    "question": "Find the type of objects with a cmodelmag_g value of 13.55233 or a u value of 14.67711 in the photoobj table.",
    "query": "SELECT T1.type FROM photoobj AS T1 WHERE T1.cmodelmag_g = 13.55233 or T1.u = 14.67711"
  },
  {
    "db_id": "sdss_temporary",
    "id": "393_1",
    "user": "gpt-3",
    "question": "Find the right ascension of photometric objects where either their CModel magnitude in the r band is 12.89864 or their color c is equal to 64.34244.",
    "query": "SELECT T1.ra FROM photoobj AS T1 WHERE T1.cmodelmag_r = 12.89864 or T1.colc = 64.34244"
  },
  {
    "db_id": "sdss_temporary",
    "id": "393_2",
    "user": "gpt-3",
    "question": "Find the right ascension of objects in the \"photoobj\" table where the cmodel magnitude in the r band is equal to 12.89864 or where colc is equal to 64.34244.",
    "query": "SELECT T1.ra FROM photoobj AS T1 WHERE T1.cmodelmag_r = 12.89864 or T1.colc = 64.34244"
  },
  {
    "db_id": "sdss_temporary",
    "id": "394_1",
    "user": "gpt-3",
    "question": "Find the flags for objects with a declination of -17.6686483711778 or an i magnitude of 12.01573 from the photoobj table.",
    "query": "SELECT T1.flags FROM photoobj AS T1 WHERE T1.dec = -17.6686483711778 or T1.i = 12.01573"
  },
  {
    "db_id": "sdss_temporary",
    "id": "394_2",
    "user": "gpt-3",
    "question": "Retrieve the flags from the photoobj table for all objects with a declination of -17.6686483711778 or an i magnitude of 12.01573.",
    "query": "SELECT T1.flags FROM photoobj AS T1 WHERE T1.dec = -17.6686483711778 or T1.i = 12.01573"
  },
  {
    "db_id": "sdss_temporary",
    "id": "395_1",
    "user": "gpt-3",
    "question": "What are the names of objects in the photometrically observed photo type that have a description of \"Ghost: Object created by reflected or refracted light. (not used)\" or a value of 6?",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Ghost: Object created by reflected or refracted light. (not used)\" or T1.value = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "395_2",
    "user": "gpt-3",
    "question": "Find the names of objects that were observed using reflected or refracted light and have a photo type value of 6, from the table \"photometrically_observed\" where the description is \"Ghost: Object created by reflected or refracted light.\"",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Ghost: Object created by reflected or refracted light. (not used)\" or T1.value = 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "396_1",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbour objects where the type is either 0 or the neighbor mode is 2.",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 WHERE T1.type = 0 or T1.neighbormode = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "396_2",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbor objects where the type is equal to 0 or the neighbor mode is equal to 2.",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 WHERE T1.type = 0 or T1.neighbormode = 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "397_1",
    "user": "gpt-3",
    "question": "Retrieve the \"b\" column from the \"photoobj\" table for objects with an \"i\" value of 10.96083 or a \"u\" value of 13.93572.",
    "query": "SELECT T1.b FROM photoobj AS T1 WHERE T1.i = 10.96083 or T1.u = 13.93572"
  },
  {
    "db_id": "sdss_temporary",
    "id": "397_2",
    "user": "gpt-3",
    "question": "Retrieve the \"b\" column from the photoobj table for all objects where the \"i\" column is equal to 10.96083 or the \"u\" column is equal to 13.93572.",
    "query": "SELECT T1.b FROM photoobj AS T1 WHERE T1.i = 10.96083 or T1.u = 13.93572"
  },
  {
    "db_id": "sdss_temporary",
    "id": "398_1",
    "user": "gpt-3",
    "question": "Find the right ascension values for photometric objects where the column code is equal to 54.13214 or the run number is equal to 4503.",
    "query": "SELECT T1.ra FROM photoobj AS T1 WHERE T1.colc = 54.13214 or T1.run = 4503"
  },
  {
    "db_id": "sdss_temporary",
    "id": "398_2",
    "user": "gpt-3",
    "question": "Retrieve the right ascension of all photometric objects with a column count of 54.13214 or a run number of 4503 from the photoobj table.",
    "query": "SELECT T1.ra FROM photoobj AS T1 WHERE T1.colc = 54.13214 or T1.run = 4503"
  },
  {
    "db_id": "sdss_temporary",
    "id": "399_1",
    "user": "gpt-3",
    "question": "Get the extinction in r-band for all objects where the declination is equal to -18.8098484043374 or the clean flag is equal to 0 from the photoobj table.",
    "query": "SELECT T1.extinction_r FROM photoobj AS T1 WHERE T1.dec = -18.8098484043374 or T1.clean = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "399_2",
    "user": "gpt-3",
    "question": "What is the extinction in the r band for objects with a declination of -18.8098484043374 or that are not considered clean in the photometric data?",
    "query": "SELECT T1.extinction_r FROM photoobj AS T1 WHERE T1.dec = -18.8098484043374 or T1.clean = 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "400_1",
    "user": "gpt-3",
    "question": "Find the mode of nearest neighbour objects where the neighbor type is either 3 or the neighbor object ID is equal to 1237645876861599992.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.neighbortype = 3 or T1.neighborobjid = 1237645876861599992"
  },
  {
    "db_id": "sdss_temporary",
    "id": "400_2",
    "user": "gpt-3",
    "question": "Find the mode of nearest neighbor objects that have a neighbor type of 3 or a neighbor object ID of 1237645876861599992.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.neighbortype = 3 or T1.neighborobjid = 1237645876861599992"
  },
  {
    "db_id": "sdss_temporary",
    "id": "401_1",
    "user": "gpt-3",
    "question": "Find the names of all objects observed photometrically where the description is \"Trail: A satellite or asteroid or meteor trail\" or the value is 7.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Trail: A satellite or asteroid or meteor trail. (not yet used)\" or T1.value = 7"
  },
  {
    "db_id": "sdss_temporary",
    "id": "401_2",
    "user": "gpt-3",
    "question": "What are the names of all photometrically observed objects with a description of \"Trail: A satellite or asteroid or meteor trail\" or a value of 7?",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Trail: A satellite or asteroid or meteor trail. (not yet used)\" or T1.value = 7"
  },
  {
    "db_id": "sdss_temporary",
    "id": "402_1",
    "user": "gpt-3",
    "question": "Retrieve the velocity dispersion of all spectroscopic objects where the class is \"STAR\" or the fiber ID is 379.",
    "query": "SELECT T1.veldisp FROM specobj AS T1 WHERE T1.class = \"STAR\" or T1.fiberid = 379"
  },
  {
    "db_id": "sdss_temporary",
    "id": "402_2",
    "user": "gpt-3",
    "question": "Retrieve the velocity dispersion of objects that are either classified as a star or have a fiber ID of 379 from the specobj table.",
    "query": "SELECT T1.veldisp FROM specobj AS T1 WHERE T1.class = \"STAR\" or T1.fiberid = 379"
  },
  {
    "db_id": "sdss_temporary",
    "id": "403_1",
    "user": "gpt-3",
    "question": "Select the class of objects from the table of spectroscopic objects where either the load version is 1017 or the first ancillary target equals 2048.",
    "query": "SELECT T1.class FROM specobj AS T1 WHERE T1.loadversion = 1017 or T1.ancillary_target1 = 2048"
  },
  {
    "db_id": "sdss_temporary",
    "id": "403_2",
    "user": "gpt-3",
    "question": "Find the class of spectroscopic objects from a table called specobj, specifically selecting objects with either a load version of 1017 or an ancillary target1 value of 2048.",
    "query": "SELECT T1.class FROM specobj AS T1 WHERE T1.loadversion = 1017 or T1.ancillary_target1 = 2048"
  },
  {
    "db_id": "sdss_temporary",
    "id": "404_1",
    "user": "gpt-3",
    "question": "Find the u value for all objects in the photoobj table where the g band cmodel magnitude is equal to 13.41412 or the run number is equal to 3965.",
    "query": "SELECT T1.u FROM photoobj AS T1 WHERE T1.cmodelmag_g = 13.41412 or T1.run = 3965"
  },
  {
    "db_id": "sdss_temporary",
    "id": "404_2",
    "user": "gpt-3",
    "question": "Find the value in the \"u\" column of the table \"photoobj\" for objects where the cmodel magnitude in the g band is 13.41412 or the run number is 3965.",
    "query": "SELECT T1.u FROM photoobj AS T1 WHERE T1.cmodelmag_g = 13.41412 or T1.run = 3965"
  },
  {
    "db_id": "sdss_temporary",
    "id": "405_1",
    "user": "gpt-3",
    "question": "Retrieve the description from the photometrically observed photo type table where the value is equal to 3 or the name is \"GALAXY\".",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 3 or T1.name = \"GALAXY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "405_2",
    "user": "gpt-3",
    "question": "What is the description for the type of galaxy that has a value of 3 or a name of \"GALAXY\" in the photometrically observed photo type?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value = 3 or T1.name = \"GALAXY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "406_1",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbour objects for object with ID 1237666339725967609 or mode set to 1.",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 WHERE T1.objid = 1237666339725967609 or T1.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "406_2",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbour objects where either the object ID is 1237666339725967609 or the mode is equal to 1.",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 WHERE T1.objid = 1237666339725967609 or T1.mode = 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "407_1",
    "user": "gpt-3",
    "question": "What are the row coordinates for photometric objects in the photoobj table with a field value of 112 or a run value of 2780?",
    "query": "SELECT T1.rowc FROM photoobj AS T1 WHERE T1.field = 112 or T1.run = 2780"
  },
  {
    "db_id": "sdss_temporary",
    "id": "407_2",
    "user": "gpt-3",
    "question": "Retrieve the rowc value for Photometric objects from the photoobj table where the field is equal to 112 or the run is equal to 2780.",
    "query": "SELECT T1.rowc FROM photoobj AS T1 WHERE T1.field = 112 or T1.run = 2780"
  },
  {
    "db_id": "sdss_temporary",
    "id": "408_1",
    "user": "gpt-3",
    "question": "\"What is the name of all photometrically observed objects with a description of \"Unknown: Object type is not known.\" or a value of 7 in the photo_type table?\"",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Unknown: Object type is not known.\" or T1.value = 7"
  },
  {
    "db_id": "sdss_temporary",
    "id": "408_2",
    "user": "gpt-3",
    "question": "Find the names of objects that have either a description of \"Unknown: Object type is not known.\" or a value of 7 in the photometrically observed photo type.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description = \"Unknown: Object type is not known.\" or T1.value = 7"
  },
  {
    "db_id": "sdss_temporary",
    "id": "409_1",
    "user": "gpt-3",
    "question": "Find the program name for spectroscopic objects that are either marked as science primary or have a specobjid of 300681272802437120.",
    "query": "SELECT T1.programname FROM specobj AS T1 WHERE T1.scienceprimary = 1 or T1.specobjid = 300681272802437120"
  },
  {
    "db_id": "sdss_temporary",
    "id": "409_2",
    "user": "gpt-3",
    "question": "What is the program name for all spectroscopic objects that are either marked as science primary or have a specobjid of 300681272802437120?",
    "query": "SELECT T1.programname FROM specobj AS T1 WHERE T1.scienceprimary = 1 or T1.specobjid = 300681272802437120"
  },
  {
    "db_id": "sdss_temporary",
    "id": "410_1",
    "user": "gpt-3",
    "question": "Retrieve the cmodel magnitude in the u-band for photometric objects from the photoobj table where either the modified Julian date is equal to 52664 or the right ascension is equal to 0.0294510887318324.",
    "query": "SELECT T1.cmodelmag_u FROM photoobj AS T1 WHERE T1.mjd = 52664 or T1.ra = 0.0294510887318324"
  },
  {
    "db_id": "sdss_temporary",
    "id": "410_2",
    "user": "gpt-3",
    "question": "Find the cmodel magnitude in the u band for photometric objects from the photoobj table where either the mjd value is 52664 or the right ascension is 0.0294510887318324.",
    "query": "SELECT T1.cmodelmag_u FROM photoobj AS T1 WHERE T1.mjd = 52664 or T1.ra = 0.0294510887318324"
  },
  {
    "db_id": "sdss_temporary",
    "id": "411_1",
    "user": "gpt-3",
    "question": "Retrieve the declination values of all spectroscopic objects where the redshift error is 3.229446e-06 or the target code for SEGUE2 is -2147483646.",
    "query": "SELECT T1.dec FROM specobj AS T1 WHERE T1.zerr = 3.229446e-06 or T1.segue2_target1 = -2147483646"
  },
  {
    "db_id": "sdss_temporary",
    "id": "411_2",
    "user": "gpt-3",
    "question": "What are the declination values for spectroscopic objects with a redshift error of 3.229446e-06 or a SEGUE2 target1 value of -2147483646?",
    "query": "SELECT T1.dec FROM specobj AS T1 WHERE T1.zerr = 3.229446e-06 or T1.segue2_target1 = -2147483646"
  },
  {
    "db_id": "sdss_temporary",
    "id": "412_1",
    "user": "gpt-3",
    "question": "Retrieve the fiber ID from the specobj table for objects that are not considered a primary target in SEGUE2 or have an ancillary target1 value of 1179648.",
    "query": "SELECT T1.fiberid FROM specobj AS T1 WHERE T1.segue2primary = 0 or T1.ancillary_target1 = 1179648"
  },
  {
    "db_id": "sdss_temporary",
    "id": "412_2",
    "user": "gpt-3",
    "question": "Retrieve the fiber ID from the specobj table for objects that are not part of a SEGUE2 primary target or have an ancillary target 1 value of 1179648.",
    "query": "SELECT T1.fiberid FROM specobj AS T1 WHERE T1.segue2primary = 0 or T1.ancillary_target1 = 1179648"
  },
  {
    "db_id": "sdss_temporary",
    "id": "413_1",
    "user": "gpt-3",
    "question": "Find the SEGUE-2 target 1 from spectroscopic objects where the class is \"galaxy\" or the specobjid is equal to 300708485715224576.",
    "query": "SELECT T1.segue2_target1 FROM specobj AS T1 WHERE T1.class = \"GALAXY\" or T1.specobjid = 300708485715224576"
  },
  {
    "db_id": "sdss_temporary",
    "id": "413_2",
    "user": "gpt-3",
    "question": "Retrieve the target name of spectroscopic objects from the table specobj where the class is \"GALAXY\" or the specobjid is 300708485715224576.",
    "query": "SELECT T1.segue2_target1 FROM specobj AS T1 WHERE T1.class = \"GALAXY\" or T1.specobjid = 300708485715224576"
  },
  {
    "db_id": "sdss_temporary",
    "id": "414_1",
    "user": "gpt-3",
    "question": "Retrieve the names of all objects that are either photometrically observed with a value of 4 or have a description of \"Galaxy: An extended object composed of many stars and other matter.\"",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 4 or T1.description = \"Galaxy: An extended object composed of many stars and other matter.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "414_2",
    "user": "gpt-3",
    "question": "What are the names of all objects that have a photo type value of 4 or a description of \"Galaxy: An extended object composed of many stars and other matter\"?",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value = 4 or T1.description = \"Galaxy: An extended object composed of many stars and other matter.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "415_1",
    "user": "gpt-3",
    "question": "Find the SEGUE2 target 1 values for spectroscopic objects where the SEGUE2 target 2 is -2147483616 or the subclass is \"K5Ve (118100)\".",
    "query": "SELECT T1.segue2_target1 FROM specobj AS T1 WHERE T1.segue2_target2 = -2147483616 or T1.subclass = \"K5Ve (118100)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "415_2",
    "user": "gpt-3",
    "question": "Retrieve the target1 objects from the spectroscopic database where the target2 is equal to -2147483616 or the subclass is \"K5Ve (118100)\".",
    "query": "SELECT T1.segue2_target1 FROM specobj AS T1 WHERE T1.segue2_target2 = -2147483616 or T1.subclass = \"K5Ve (118100)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "416_1",
    "user": "gpt-3",
    "question": "Retrieve the value of the \"i\" attribute from the \"photoobj\" table for any objects with an object ID of 1237645942905634957 or a column C value of 63.38636.",
    "query": "SELECT T1.i FROM photoobj AS T1 WHERE T1.objid = 1237645942905634957 or T1.colc = 63.38636"
  },
  {
    "db_id": "sdss_temporary",
    "id": "416_2",
    "user": "gpt-3",
    "question": "Retrieve the value for \"i\" from the \"photoobj\" table for an object with an ID of 1237645942905634957 or a column \"colc\" value of 63.38636.",
    "query": "SELECT T1.i FROM photoobj AS T1 WHERE T1.objid = 1237645942905634957 or T1.colc = 63.38636"
  },
  {
    "db_id": "sdss_temporary",
    "id": "417_1",
    "user": "gpt-3",
    "question": "Find the velocity dispersion error for objects with a segue2 target of -2147483640 in the specobj table.",
    "query": "SELECT T1.veldisperr FROM specobj AS T1 WHERE T1.segue2_target1 != -2147483640"
  },
  {
    "db_id": "sdss_temporary",
    "id": "417_2",
    "user": "gpt-3",
    "question": "What is the velocity dispersion error for all spectroscopic objects that do not have a Segue 2 target of -2147483640?",
    "query": "SELECT T1.veldisperr FROM specobj AS T1 WHERE T1.segue2_target1 != -2147483640"
  },
  {
    "db_id": "sdss_temporary",
    "id": "418_1",
    "user": "gpt-3",
    "question": "Find the type of all nearest neighbor objects that have an object ID different from 1237678618506690882.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.objid != 1237678618506690882"
  },
  {
    "db_id": "sdss_temporary",
    "id": "418_2",
    "user": "gpt-3",
    "question": "Find the type of objects that are neighbors to the object with ID 1237678618506690882, excluding itself.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.objid != 1237678618506690882"
  },
  {
    "db_id": "sdss_temporary",
    "id": "419_1",
    "user": "gpt-3",
    "question": "Find the clean objects from the photoobj table where the mjd value is not equal to 53995.",
    "query": "SELECT T1.clean FROM photoobj AS T1 WHERE T1.mjd != 53995"
  },
  {
    "db_id": "sdss_temporary",
    "id": "419_2",
    "user": "gpt-3",
    "question": "Retrieve the \"clean\" column from the \"photoobj\" table for objects in which the \"mjd\" column is not equal to 53995.",
    "query": "SELECT T1.clean FROM photoobj AS T1 WHERE T1.mjd != 53995"
  },
  {
    "db_id": "sdss_temporary",
    "id": "420_1",
    "user": "gpt-3",
    "question": "Find the mode of all nearest neighbour objects whose type is not equal to 0.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.type != 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "420_2",
    "user": "gpt-3",
    "question": "Find the mode of all nearest neighbor objects where the type is not equal to 0.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.type != 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "421_1",
    "user": "gpt-3",
    "question": "Find the object ID for all objects in the photoobj table where the r value is not equal to 12.40652.",
    "query": "SELECT T1.objid FROM photoobj AS T1 WHERE T1.r != 12.40652"
  },
  {
    "db_id": "sdss_temporary",
    "id": "421_2",
    "user": "gpt-3",
    "question": "Retrieve the object ID from the photoobj table for all objects with a red magnitude value that is not equal to 12.40652.",
    "query": "SELECT T1.objid FROM photoobj AS T1 WHERE T1.r != 12.40652"
  },
  {
    "db_id": "sdss_temporary",
    "id": "422_1",
    "user": "gpt-3",
    "question": "Retrieve the target 1 for objects in the SEGUE2 survey that have a non-zero right ascension value.",
    "query": "SELECT T1.segue2_target1 FROM specobj AS T1 WHERE T1.ra != 0.00404502869997714"
  },
  {
    "db_id": "sdss_temporary",
    "id": "422_2",
    "user": "gpt-3",
    "question": "\"Find the target1 value for objects in the specobj table where the right ascension is not equal to 0.00404502869997714.\"",
    "query": "SELECT T1.segue2_target1 FROM specobj AS T1 WHERE T1.ra != 0.00404502869997714"
  },
  {
    "db_id": "sdss_temporary",
    "id": "423_1",
    "user": "gpt-3",
    "question": "Get the description from the photometrically observed photo type where the name is not equal to \"NOTATYPE\".",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name != \"NOTATYPE\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "423_2",
    "user": "gpt-3",
    "question": "\"Retrieve the description from the photometrically observed photo type where the name is not 'NOTATYPE'.\"",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name != \"NOTATYPE\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "424_1",
    "user": "gpt-3",
    "question": "What is the survey name of all spectroscopic objects with a velocity dispersion that is not equal to 137.458?",
    "query": "SELECT T1.survey FROM specobj AS T1 WHERE T1.veldisp != 137.458"
  },
  {
    "db_id": "sdss_temporary",
    "id": "424_2",
    "user": "gpt-3",
    "question": "What is the survey of spectroscopic objects in which the velocity dispersion is not equal to 137.458?",
    "query": "SELECT T1.survey FROM specobj AS T1 WHERE T1.veldisp != 137.458"
  },
  {
    "db_id": "sdss_temporary",
    "id": "425_1",
    "user": "gpt-3",
    "question": "What type of nearest neighbour objects have a neighbour mode that is not equal to 1?",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.neighbormode != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "425_2",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbour objects that have a neighbour mode other than 1 in the \"neighbors\" table.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.neighbormode != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "426_1",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbour objects that are not in neighbor mode 2.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.neighbormode != 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "426_2",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbor objects where the neighboring mode is not equal to 2.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.neighbormode != 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "427_1",
    "user": "gpt-3",
    "question": "Find the r magnitude values from the photoobj table for objects with a cmodelmag_u value that is not equal to 13.911.",
    "query": "SELECT T1.r FROM photoobj AS T1 WHERE T1.cmodelmag_u != 13.911"
  },
  {
    "db_id": "sdss_temporary",
    "id": "427_2",
    "user": "gpt-3",
    "question": "Retrieve the value for the \"r\" column from the table \"photoobj\" for all objects where the magnitude in the \"cmodelmag_u\" column is not equal to 13.911.",
    "query": "SELECT T1.r FROM photoobj AS T1 WHERE T1.cmodelmag_u != 13.911"
  },
  {
    "db_id": "sdss_temporary",
    "id": "428_1",
    "user": "gpt-3",
    "question": "Find the distance of nearest neighbor objects where the neighbor mode is not equal to 2.",
    "query": "SELECT T1.distance FROM neighbors AS T1 WHERE T1.neighbormode != 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "428_2",
    "user": "gpt-3",
    "question": "Find the distance of the nearest neighbor objects where the neighbor mode is not equal to 2.",
    "query": "SELECT T1.distance FROM neighbors AS T1 WHERE T1.neighbormode != 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "429_1",
    "user": "gpt-3",
    "question": "Retrieve the subclass of all spectroscopic objects from the specobj table where segue2_target1 does not equal -2147483644 in the Spectroscopic_objects table.",
    "query": "SELECT T1.subclass FROM specobj AS T1 WHERE T1.segue2_target1 != -2147483644"
  },
  {
    "db_id": "sdss_temporary",
    "id": "429_2",
    "user": "gpt-3",
    "question": "Find the subclass of all spectroscopic objects from the specobj table where segue2_target1 does not equal -2147483644.",
    "query": "SELECT T1.subclass FROM specobj AS T1 WHERE T1.segue2_target1 != -2147483644"
  },
  {
    "db_id": "sdss_temporary",
    "id": "430_1",
    "user": "gpt-3",
    "question": "Retrieve the right ascension values from the \"specobj\" table for all objects in the \"Spectroscopic_objects\" view that do not have a velocity dispersion error of 7.423635.",
    "query": "SELECT T1.ra FROM specobj AS T1 WHERE T1.veldisperr != 7.423635"
  },
  {
    "db_id": "sdss_temporary",
    "id": "430_2",
    "user": "gpt-3",
    "question": "Get the right ascension of objects from the table \"specobj\" where the velocity dispersion error is not equal to 7.423635.",
    "query": "SELECT T1.ra FROM specobj AS T1 WHERE T1.veldisperr != 7.423635"
  },
  {
    "db_id": "sdss_temporary",
    "id": "431_1",
    "user": "gpt-3",
    "question": "Find the declination of all spectroscopic objects where the specobjid is not equal to 299520188892604416.",
    "query": "SELECT T1.dec FROM specobj AS T1 WHERE T1.specobjid != 299520188892604416"
  },
  {
    "db_id": "sdss_temporary",
    "id": "431_2",
    "user": "gpt-3",
    "question": "What is the declination of all spectroscopic objects except for the one with specobjid 299520188892604416?",
    "query": "SELECT T1.dec FROM specobj AS T1 WHERE T1.specobjid != 299520188892604416"
  },
  {
    "db_id": "sdss_temporary",
    "id": "432_1",
    "user": "gpt-3",
    "question": "Find the neighbor mode for nearest neighbor objects that are not of type 3.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 WHERE T1.neighbortype != 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "432_2",
    "user": "gpt-3",
    "question": "Get the neighbor mode of all nearest neighbor objects from the table neighbors, except for those with a neighbor type of 3.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 WHERE T1.neighbortype != 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "433_1",
    "user": "gpt-3",
    "question": "Get the description from the photometrically observed photo types except for those with the name \"DEFECT\".",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name != \"DEFECT\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "433_2",
    "user": "gpt-3",
    "question": "Retrieve the description from photometrically observed photo types where the name is not \"DEFECT\".",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name != \"DEFECT\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "434_1",
    "user": "gpt-3",
    "question": "Find the neighbor mode for all nearest neighbor objects that are not of type 6.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 WHERE T1.type != 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "434_2",
    "user": "gpt-3",
    "question": "Find the neighbor mode of objects in the \"neighbors\" table where the type is not equal to 6.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 WHERE T1.type != 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "435_1",
    "user": "gpt-3",
    "question": "What are the ancillary targets of spectroscopic objects that do not have a special target with code 1048576?",
    "query": "SELECT T1.ancillary_target1 FROM specobj AS T1 WHERE T1.special_target1 != 1048576"
  },
  {
    "db_id": "sdss_temporary",
    "id": "435_2",
    "user": "gpt-3",
    "question": "Find the ancillary target 1 for all spectroscopic objects where the special target 1 is not equal to 1048576.",
    "query": "SELECT T1.ancillary_target1 FROM specobj AS T1 WHERE T1.special_target1 != 1048576"
  },
  {
    "db_id": "sdss_temporary",
    "id": "436_1",
    "user": "gpt-3",
    "question": "Retrieve the r magnitude from the photoobj table for all objects with a cmodelmag_u value that is not equal to 13.95065 in the Photometric_objects collection.",
    "query": "SELECT T1.r FROM photoobj AS T1 WHERE T1.cmodelmag_u != 13.95065"
  },
  {
    "db_id": "sdss_temporary",
    "id": "436_2",
    "user": "gpt-3",
    "question": "\"Retrieve the 'r' value from the 'photoobj' table where the CModel magnitude for U band is not equal to 13.95065 for photometric objects.\"",
    "query": "SELECT T1.r FROM photoobj AS T1 WHERE T1.cmodelmag_u != 13.95065"
  },
  {
    "db_id": "sdss_temporary",
    "id": "437_1",
    "user": "gpt-3",
    "question": "Find the subclass for all spectroscopic objects where the declination is not -16.682353.",
    "query": "SELECT T1.subclass FROM specobj AS T1 WHERE T1.dec != -16.682353"
  },
  {
    "db_id": "sdss_temporary",
    "id": "437_2",
    "user": "gpt-3",
    "question": "Find the subclass of all spectroscopic objects where their declination is not -16.682353.",
    "query": "SELECT T1.subclass FROM specobj AS T1 WHERE T1.dec != -16.682353"
  },
  {
    "db_id": "sdss_temporary",
    "id": "438_1",
    "user": "gpt-3",
    "question": "Retrieve the velocity dispersion for all objects in the specobj table where the science primary flag is not equal to 1.",
    "query": "SELECT T1.veldisp FROM specobj AS T1 WHERE T1.scienceprimary != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "438_2",
    "user": "gpt-3",
    "question": "Retrieve the velocity dispersion from the spectroscopic objects table for all objects that are not marked as primary science targets.",
    "query": "SELECT T1.veldisp FROM specobj AS T1 WHERE T1.scienceprimary != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "439_1",
    "user": "gpt-3",
    "question": "Find the right ascension for all objects in the photoobj table where the extinction value for the r band is not equal to 0.008201179.",
    "query": "SELECT T1.ra FROM photoobj AS T1 WHERE T1.extinction_r != 0.008201179"
  },
  {
    "db_id": "sdss_temporary",
    "id": "439_2",
    "user": "gpt-3",
    "question": "Find the right ascension of objects in the photoobj table with a non-zero extinction value in the r band.",
    "query": "SELECT T1.ra FROM photoobj AS T1 WHERE T1.extinction_r != 0.008201179"
  },
  {
    "db_id": "sdss_temporary",
    "id": "440_1",
    "user": "gpt-3",
    "question": "Find the survey name of all spectroscopic objects where the program name is not \"photoz\".",
    "query": "SELECT T1.survey FROM specobj AS T1 WHERE T1.programname != \"photoz\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "440_2",
    "user": "gpt-3",
    "question": "\"What is the survey of all spectroscopic objects where the program name is not 'photoz'?\"",
    "query": "SELECT T1.survey FROM specobj AS T1 WHERE T1.programname != \"photoz\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "441_1",
    "user": "gpt-3",
    "question": "Find the velocity dispersion error from the spectroscopic objects where the program name is not \"hyades\".",
    "query": "SELECT T1.veldisperr FROM specobj AS T1 WHERE T1.programname != \"hyades\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "441_2",
    "user": "gpt-3",
    "question": "Retrieve the velocity dispersion error from all spectroscopic objects that do not have a program name of \"hyades\".",
    "query": "SELECT T1.veldisperr FROM specobj AS T1 WHERE T1.programname != \"hyades\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "442_1",
    "user": "gpt-3",
    "question": "What is the r magnitude of Photometric objects from the photoobj table where the cmodelmag_u is not equal to 14.44426?",
    "query": "SELECT T1.r FROM photoobj AS T1 WHERE T1.cmodelmag_u != 14.44426"
  },
  {
    "db_id": "sdss_temporary",
    "id": "442_2",
    "user": "gpt-3",
    "question": "What is the value of r for all objects with a cmodelmag_u not equal to 14.44426 in the photoobj table?",
    "query": "SELECT T1.r FROM photoobj AS T1 WHERE T1.cmodelmag_u != 14.44426"
  },
  {
    "db_id": "sdss_temporary",
    "id": "443_1",
    "user": "gpt-3",
    "question": "Find the fiber ID for objects in the specobj table where segue2_target1 is not equal to -2147483359.",
    "query": "SELECT T1.fiberid FROM specobj AS T1 WHERE T1.segue2_target1 != -2147483359"
  },
  {
    "db_id": "sdss_temporary",
    "id": "443_2",
    "user": "gpt-3",
    "question": "Find the fiber ID of all objects from the specobj table where the segue2_target1 value is not -2147483359.",
    "query": "SELECT T1.fiberid FROM specobj AS T1 WHERE T1.segue2_target1 != -2147483359"
  },
  {
    "db_id": "sdss_temporary",
    "id": "444_1",
    "user": "gpt-3",
    "question": "Select the plate ID from the spectroscopic objects table where the science primary column is not equal to 1.",
    "query": "SELECT T1.plateid FROM specobj AS T1 WHERE T1.scienceprimary != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "444_2",
    "user": "gpt-3",
    "question": "Retrieve the plate ID of spectroscopic objects from the specobj table where the science primary flag is not equal to 1.",
    "query": "SELECT T1.plateid FROM specobj AS T1 WHERE T1.scienceprimary != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "445_1",
    "user": "gpt-3",
    "question": "\"Find the load version for all objects in the Spectroscopic_objects table where the class is not equal to 'QSO'.\"",
    "query": "SELECT T1.loadversion FROM specobj AS T1 WHERE T1.class != \"QSO\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "445_2",
    "user": "gpt-3",
    "question": "Retrieve the load version from the Spectroscopic_objects table for all objects that are not classified as QSO.",
    "query": "SELECT T1.loadversion FROM specobj AS T1 WHERE T1.class != \"QSO\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "446_1",
    "user": "gpt-3",
    "question": "Retrieve the names of all objects from the photo_type table where the description is not equal to \"Trail: A satellite or asteroid or meteor trail. (not yet used)\".",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description != \"Trail: A satellite or asteroid or meteor trail. (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "446_2",
    "user": "gpt-3",
    "question": "Retrieve the names of photometrically observed objects that are not described as \"Trail: A satellite or asteroid or meteor trail\".",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description != \"Trail: A satellite or asteroid or meteor trail. (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "447_1",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbor objects from the table \"neighbors\" where the distance is not equal to 1.33218266560845e-05.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.distance != 1.33218266560845e-05"
  },
  {
    "db_id": "sdss_temporary",
    "id": "447_2",
    "user": "gpt-3",
    "question": "What is the type of nearest neighbour objects from the neighbors table where the distance is not equal to 1.33218266560845e-05?",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.distance != 1.33218266560845e-05"
  },
  {
    "db_id": "sdss_temporary",
    "id": "448_1",
    "user": "gpt-3",
    "question": "Retrieve the mode of all nearest neighbor objects where the mode is not equal to 1 from the neighbors table.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 WHERE T1.mode != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "448_2",
    "user": "gpt-3",
    "question": "Find the neighbor mode for all nearest neighbor objects where the mode is not equal to 1.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 WHERE T1.mode != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "449_1",
    "user": "gpt-3",
    "question": "\"Retrieve the name of all photometrically observed objects that have a value other than 9 for their photo type.\"",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value != 9"
  },
  {
    "db_id": "sdss_temporary",
    "id": "449_2",
    "user": "gpt-3",
    "question": "Get the name of all photometrically observed objects from the photo_type table where their value is not equal to 9.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value != 9"
  },
  {
    "db_id": "sdss_temporary",
    "id": "450_1",
    "user": "gpt-3",
    "question": "Find the flags from the photometric objects where the declination is not equal to -16.9388738535473.",
    "query": "SELECT T1.flags FROM photoobj AS T1 WHERE T1.dec != -16.9388738535473"
  },
  {
    "db_id": "sdss_temporary",
    "id": "450_2",
    "user": "gpt-3",
    "question": "Get the flags from the photometric objects where the declination is not equal to -16.9388738535473.",
    "query": "SELECT T1.flags FROM photoobj AS T1 WHERE T1.dec != -16.9388738535473"
  },
  {
    "db_id": "sdss_temporary",
    "id": "451_1",
    "user": "gpt-3",
    "question": "Retrieve the values from the column \"value\" in the table \"photo_type\" where the description is not equal to \"Galaxy: An extended object composed of many stars and other matter.\" and label it as \"photometrically_observed\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.description != \"Galaxy: An extended object composed of many stars and other matter.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "451_2",
    "user": "gpt-3",
    "question": "Find the values from the photometrically observed objects that are not described as \"Galaxy: An extended object composed of many stars and other matter.\"",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.description != \"Galaxy: An extended object composed of many stars and other matter.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "452_1",
    "user": "gpt-3",
    "question": "Find the redshift error for spectroscopic objects where the best object ID is not equal to 1237645943978918153.",
    "query": "SELECT T1.zerr FROM specobj AS T1 WHERE T1.bestobjid != 1237645943978918153"
  },
  {
    "db_id": "sdss_temporary",
    "id": "452_2",
    "user": "gpt-3",
    "question": "Retrieve the redshift error for all spectroscopic objects where the best object ID is not equal to 1237645943978918153.",
    "query": "SELECT T1.zerr FROM specobj AS T1 WHERE T1.bestobjid != 1237645943978918153"
  },
  {
    "db_id": "sdss_temporary",
    "id": "453_1",
    "user": "gpt-3",
    "question": "Find the object IDs of nearest neighbor objects where the neighbor mode is not equal to 1.",
    "query": "SELECT T1.objid FROM neighbors AS T1 WHERE T1.neighbormode != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "453_2",
    "user": "gpt-3",
    "question": "Find the object IDs of the nearest neighbor objects where the neighbor mode is not equal to 1.",
    "query": "SELECT T1.objid FROM neighbors AS T1 WHERE T1.neighbormode != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "454_1",
    "user": "gpt-3",
    "question": "Retrieve the declination values from the Spectroscopic_objects table for objects with a zwarning value not equal to 0.",
    "query": "SELECT T1.dec FROM specobj AS T1 WHERE T1.zwarning != 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "454_2",
    "user": "gpt-3",
    "question": "Find the declination values for spectroscopic objects where the zwarning is not equal to zero.",
    "query": "SELECT T1.dec FROM specobj AS T1 WHERE T1.zwarning != 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "455_1",
    "user": "gpt-3",
    "question": "Find the object IDs of the nearest neighboring objects where the neighbor object ID is not equal to 1237645876861599951.",
    "query": "SELECT T1.objid FROM neighbors AS T1 WHERE T1.neighborobjid != 1237645876861599951"
  },
  {
    "db_id": "sdss_temporary",
    "id": "455_2",
    "user": "gpt-3",
    "question": "Retrieve the IDs of all objects that are neighbors of an object with ID 1237645876861599951.",
    "query": "SELECT T1.objid FROM neighbors AS T1 WHERE T1.neighborobjid != 1237645876861599951"
  },
  {
    "db_id": "sdss_temporary",
    "id": "456_1",
    "user": "gpt-3",
    "question": "Retrieve the extinction value for the r band from the photometric objects table where the cmodel magnitude in the u band is not equal to 14.14542.",
    "query": "SELECT T1.extinction_r FROM photoobj AS T1 WHERE T1.cmodelmag_u != 14.14542"
  },
  {
    "db_id": "sdss_temporary",
    "id": "456_2",
    "user": "gpt-3",
    "question": "What is the value of the extinction in the r band for photometric objects with a cmodel magnitude in u-band not equal to 14.14542, from the photoobj table as Photometric_objects?",
    "query": "SELECT T1.extinction_r FROM photoobj AS T1 WHERE T1.cmodelmag_u != 14.14542"
  },
  {
    "db_id": "sdss_temporary",
    "id": "457_1",
    "user": "gpt-3",
    "question": "What is the Modified Julian Date of all photometric objects that do not have a rerun value of 301?",
    "query": "SELECT T1.mjd FROM photoobj AS T1 WHERE T1.rerun != 301"
  },
  {
    "db_id": "sdss_temporary",
    "id": "457_2",
    "user": "gpt-3",
    "question": "What is the modified Julian Date for photometric objects where the rerun is not equal to 301 in the photoobj table?",
    "query": "SELECT T1.mjd FROM photoobj AS T1 WHERE T1.rerun != 301"
  },
  {
    "db_id": "sdss_temporary",
    "id": "458_1",
    "user": "gpt-3",
    "question": "Retrieve the redshift warning information for all spectroscopic objects with a plate number other than 999.",
    "query": "SELECT T1.zwarning FROM specobj AS T1 WHERE T1.plate != 999"
  },
  {
    "db_id": "sdss_temporary",
    "id": "458_2",
    "user": "gpt-3",
    "question": "Retrieve the zwarning value from Spectroscopic_objects for all objects where the plate number is not equal to 999.",
    "query": "SELECT T1.zwarning FROM specobj AS T1 WHERE T1.plate != 999"
  },
  {
    "db_id": "sdss_temporary",
    "id": "459_1",
    "user": "gpt-3",
    "question": "Find the names of objects that have been observed photometrically and do not have a value of 5.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value != 5"
  },
  {
    "db_id": "sdss_temporary",
    "id": "459_2",
    "user": "gpt-3",
    "question": "Find the names of all objects that have been observed photometrically but do not have a value of 5.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.value != 5"
  },
  {
    "db_id": "sdss_temporary",
    "id": "460_1",
    "user": "gpt-3",
    "question": "What is the ancillary target for all spectroscopic objects where the redshift error is not equal to 3.503741e-06?",
    "query": "SELECT T1.ancillary_target1 FROM specobj AS T1 WHERE T1.zerr != 3.503741e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "460_2",
    "user": "gpt-3",
    "question": "\"Retrieve the ancillary target 1 value from the specobj table for spectroscopic objects that do not have a redshift error of 3.503741e-06.\"",
    "query": "SELECT T1.ancillary_target1 FROM specobj AS T1 WHERE T1.zerr != 3.503741e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "461_1",
    "user": "gpt-3",
    "question": "Find the plate ID for all spectroscopic objects where the error in redshift is not equal to 3.165267e-06.",
    "query": "SELECT T1.plateid FROM specobj AS T1 WHERE T1.zerr != 3.165267e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "461_2",
    "user": "gpt-3",
    "question": "What is the plate ID of all spectroscopic objects where the redshift error is not equal to 3.165267e-06?",
    "query": "SELECT T1.plateid FROM specobj AS T1 WHERE T1.zerr != 3.165267e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "462_1",
    "user": "gpt-3",
    "question": "Retrieve the names of all types that have been observed photometrically and have a description other than \"NotAType:\".",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description != \"NotAType:\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "462_2",
    "user": "gpt-3",
    "question": "What are the names of all photometrically observed types that do not have a description starting with \"NotAType:\"?",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description != \"NotAType:\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "463_1",
    "user": "gpt-3",
    "question": "Find the rerun value from the Photometric_objects table for all objects in the photoobj table where the flags are not equal to 144753820232.",
    "query": "SELECT T1.rerun FROM photoobj AS T1 WHERE T1.flags != 144753820232"
  },
  {
    "db_id": "sdss_temporary",
    "id": "463_2",
    "user": "gpt-3",
    "question": "Find the rerun value from the photoobj table for photometric objects where the flags are not equal to 144753820232.",
    "query": "SELECT T1.rerun FROM photoobj AS T1 WHERE T1.flags != 144753820232"
  },
  {
    "db_id": "sdss_temporary",
    "id": "464_1",
    "user": "gpt-3",
    "question": "What is the class of spectroscopic objects where the best object ID is not equal to 1237645943979311239?",
    "query": "SELECT T1.class FROM specobj AS T1 WHERE T1.bestobjid != 1237645943979311239"
  },
  {
    "db_id": "sdss_temporary",
    "id": "464_2",
    "user": "gpt-3",
    "question": "Find the classification of spectroscopic objects where the best object ID is not equal to 1237645943979311239.",
    "query": "SELECT T1.class FROM specobj AS T1 WHERE T1.bestobjid != 1237645943979311239"
  },
  {
    "db_id": "sdss_temporary",
    "id": "465_1",
    "user": "gpt-3",
    "question": "Retrieve the value of photometrically observed photos that are not labeled as \"DEFECT\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.name != \"DEFECT\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "465_2",
    "user": "gpt-3",
    "question": "\"Retrieve the value of photometrically observed photos where the type is not equal to \"DEFECT\".\"",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.name != \"DEFECT\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "466_1",
    "user": "gpt-3",
    "question": "Retrieve the right ascension value from the \"photoobj\" table for objects with a \"b\" value that is not equal to -79.2979923526957 in the \"Photometric_objects\" alias.",
    "query": "SELECT T1.ra FROM photoobj AS T1 WHERE T1.b != -79.2979923526957"
  },
  {
    "db_id": "sdss_temporary",
    "id": "466_2",
    "user": "gpt-3",
    "question": "Retrieve the right ascension data for all objects from the \"Photometric_objects\" table where the value in the \"b\" column is not equal to -79.2979923526957.",
    "query": "SELECT T1.ra FROM photoobj AS T1 WHERE T1.b != -79.2979923526957"
  },
  {
    "db_id": "sdss_temporary",
    "id": "467_1",
    "user": "gpt-3",
    "question": "Find the description from the photometrically observed photo type where the name is not \"TRAIL\".",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name != \"TRAIL\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "467_2",
    "user": "gpt-3",
    "question": "What is the description of all photometrically observed photo types except for \"TRAIL\"?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name != \"TRAIL\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "468_1",
    "user": "gpt-3",
    "question": "Find the Modified Julian Date from the table of spectroscopic objects where the survey is not \"boss\".",
    "query": "SELECT T1.mjd FROM specobj AS T1 WHERE T1.survey != \"boss\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "468_2",
    "user": "gpt-3",
    "question": "Find the Modified Julian Date for all spectroscopic objects from the specobj table where the survey is not equal to \"boss\".",
    "query": "SELECT T1.mjd FROM specobj AS T1 WHERE T1.survey != \"boss\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "469_1",
    "user": "gpt-3",
    "question": "Retrieve the right ascension values from the photoobj table for objects that are not in field 611.",
    "query": "SELECT T1.ra FROM photoobj AS T1 WHERE T1.field != 611"
  },
  {
    "db_id": "sdss_temporary",
    "id": "469_2",
    "user": "gpt-3",
    "question": "Retrieve the right ascension of all objects from the photometric catalog that do not belong to field 611.",
    "query": "SELECT T1.ra FROM photoobj AS T1 WHERE T1.field != 611"
  },
  {
    "db_id": "sdss_temporary",
    "id": "470_1",
    "user": "gpt-3",
    "question": "Get the type of all objects that are neighbors of an object with the ID 1237645876861468766.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.neighborobjid != 1237645876861468766"
  },
  {
    "db_id": "sdss_temporary",
    "id": "470_2",
    "user": "gpt-3",
    "question": "Get the type of objects that are nearest neighbors to the object with ID 1237645876861468766.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.neighborobjid != 1237645876861468766"
  },
  {
    "db_id": "sdss_temporary",
    "id": "471_1",
    "user": "gpt-3",
    "question": "Get the description of all photometrically observed photo types, excluding those with the name \"KNOWNOBJ\".",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name != \"KNOWNOBJ\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "471_2",
    "user": "gpt-3",
    "question": "Find the description of all photometrically observed objects except for those with the name \"KNOWNOBJ\".",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name != \"KNOWNOBJ\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "472_1",
    "user": "gpt-3",
    "question": "Retrieve the spectroscopic object identification numbers from the specobj table for all objects where the subclass is not equal to \"L1\".",
    "query": "SELECT T1.specobjid FROM specobj AS T1 WHERE T1.subclass != \"L1\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "472_2",
    "user": "gpt-3",
    "question": "Find the specobjid of spectroscopic objects that do not have a subclass of \"L1\".",
    "query": "SELECT T1.specobjid FROM specobj AS T1 WHERE T1.subclass != \"L1\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "473_1",
    "user": "gpt-3",
    "question": "Find the IDs of all neighbor objects that are not of type 0 in the \"neighbors\" table.",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 WHERE T1.type != 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "473_2",
    "user": "gpt-3",
    "question": "Find the IDs of the nearest neighbor objects that have a type other than 0 in the neighbors table.",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 WHERE T1.type != 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "474_1",
    "user": "gpt-3",
    "question": "Find the object ID of the nearest neighbor objects that are not equal to 1237645876861469424.",
    "query": "SELECT T1.objid FROM neighbors AS T1 WHERE T1.neighborobjid != 1237645876861469424"
  },
  {
    "db_id": "sdss_temporary",
    "id": "474_2",
    "user": "gpt-3",
    "question": "Find the object ID of the nearest neighbor objects from a table called \"neighbors\" where the neighbor object ID is not equal to 1237645876861469424.",
    "query": "SELECT T1.objid FROM neighbors AS T1 WHERE T1.neighborobjid != 1237645876861469424"
  },
  {
    "db_id": "sdss_temporary",
    "id": "475_1",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbor objects where the neighbor mode is not equal to 1.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.neighbormode != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "475_2",
    "user": "gpt-3",
    "question": "\"Find the mode of all nearest neighbor objects where their neighbormode is not equal to 1.\"",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.neighbormode != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "476_1",
    "user": "gpt-3",
    "question": "Find the values in the column \"value\" from the table \"photo_type\" where the description is not equal to \"Star: A self-luminous gaseous celestial body.\" and label this information as \"photometrically observed\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.description != \"Star: A self-luminous gaseous celestial body.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "476_2",
    "user": "gpt-3",
    "question": "\"Retrieve the values from the photometrically observed column where the description is not 'Star: A self-luminous gaseous celestial body'.\"",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.description != \"Star: A self-luminous gaseous celestial body.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "477_1",
    "user": "gpt-3",
    "question": "Retrieve the extinction value in the r band for all objects with a cmodel magnitude in the g band not equal to 13.05159 from the photoobj table.",
    "query": "SELECT T1.extinction_r FROM photoobj AS T1 WHERE T1.cmodelmag_g != 13.05159"
  },
  {
    "db_id": "sdss_temporary",
    "id": "477_2",
    "user": "gpt-3",
    "question": "Find the extinction in the r band for all photometric objects where the cmodel magnitude in the g band is not equal to 13.05159.",
    "query": "SELECT T1.extinction_r FROM photoobj AS T1 WHERE T1.cmodelmag_g != 13.05159"
  },
  {
    "db_id": "sdss_temporary",
    "id": "478_1",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbor objects where the neighbor type is not equal to 0.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.neighbortype != 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "478_2",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbor objects where the type of neighbor is not equal to 0.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.neighbortype != 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "479_1",
    "user": "gpt-3",
    "question": "Select the science primary objects from the specobj table where the segue2_target2 column is not equal to -2147483640 in the Spectroscopic_objects database.",
    "query": "SELECT T1.scienceprimary FROM specobj AS T1 WHERE T1.segue2_target2 != -2147483640"
  },
  {
    "db_id": "sdss_temporary",
    "id": "479_2",
    "user": "gpt-3",
    "question": "Retrieve the scientific primary objects from the Spectroscopic_objects table where the segue2_target2 value is not equal to -2147483640 in the specobj database.",
    "query": "SELECT T1.scienceprimary FROM specobj AS T1 WHERE T1.segue2_target2 != -2147483640"
  },
  {
    "db_id": "sdss_temporary",
    "id": "480_1",
    "user": "gpt-3",
    "question": "Find the r-band model magnitude from the photoobj table for photometric objects with a declination not equal to -17.5891895421151.",
    "query": "SELECT T1.cmodelmag_r FROM photoobj AS T1 WHERE T1.dec != -17.5891895421151"
  },
  {
    "db_id": "sdss_temporary",
    "id": "480_2",
    "user": "gpt-3",
    "question": "Retrieve the cmodel magnitude in the r band from all photometric objects except those with a declination of -17.5891895421151.",
    "query": "SELECT T1.cmodelmag_r FROM photoobj AS T1 WHERE T1.dec != -17.5891895421151"
  },
  {
    "db_id": "sdss_temporary",
    "id": "481_1",
    "user": "gpt-3",
    "question": "Retrieve the load version from the Spectroscopic_objects table for all objects that have a velocity dispersion error that is not equal to 9.597716.",
    "query": "SELECT T1.loadversion FROM specobj AS T1 WHERE T1.veldisperr != 9.597716"
  },
  {
    "db_id": "sdss_temporary",
    "id": "481_2",
    "user": "gpt-3",
    "question": "Find the load version for spectroscopic objects where the velocity dispersion error is not equal to 9.597716.",
    "query": "SELECT T1.loadversion FROM specobj AS T1 WHERE T1.veldisperr != 9.597716"
  },
  {
    "db_id": "sdss_temporary",
    "id": "482_1",
    "user": "gpt-3",
    "question": "What is the cmodel magnitude in the r-band for objects in the photoobj table where u does not equal 14.59539?",
    "query": "SELECT T1.cmodelmag_r FROM photoobj AS T1 WHERE T1.u != 14.59539"
  },
  {
    "db_id": "sdss_temporary",
    "id": "482_2",
    "user": "gpt-3",
    "question": "Retrieve the r-band model magnitude of photometric objects from the photoobj table where the u-band is not equal to 14.59539.",
    "query": "SELECT T1.cmodelmag_r FROM photoobj AS T1 WHERE T1.u != 14.59539"
  },
  {
    "db_id": "sdss_temporary",
    "id": "483_1",
    "user": "gpt-3",
    "question": "Get the description from the photometrically observed photo types where the value is not equal to 6.",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value != 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "483_2",
    "user": "gpt-3",
    "question": "What is the description of all photometrically observed objects that have a value different from 6 in the photo_type table?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.value != 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "484_1",
    "user": "gpt-3",
    "question": "Find the mode of nearest neighbour objects that have a neighbor mode other than 2 in the neighbors table.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.neighbormode != 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "484_2",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbor objects where the neighbor mode is not equal to 2.",
    "query": "SELECT T1.mode FROM neighbors AS T1 WHERE T1.neighbormode != 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "485_1",
    "user": "gpt-3",
    "question": "Find the value of the column \"l\" from the table \"photoobj\" where the value in the column \"rowc\" is not equal to 58.48783 for objects with photometric properties.",
    "query": "SELECT T1.l FROM photoobj AS T1 WHERE T1.rowc != 58.48783"
  },
  {
    "db_id": "sdss_temporary",
    "id": "485_2",
    "user": "gpt-3",
    "question": "What is the value of the \"l\" attribute from all objects in the table \"photoobj\" where the value of the \"rowc\" attribute is not equal to 58.48783?",
    "query": "SELECT T1.l FROM photoobj AS T1 WHERE T1.rowc != 58.48783"
  },
  {
    "db_id": "sdss_temporary",
    "id": "486_1",
    "user": "gpt-3",
    "question": "Find the field from the photoobj table where the rowc value is not equal to 59.08637 for objects classified as photometric.",
    "query": "SELECT T1.field FROM photoobj AS T1 WHERE T1.rowc != 59.08637"
  },
  {
    "db_id": "sdss_temporary",
    "id": "486_2",
    "user": "gpt-3",
    "question": "Find the field from the table \"photoobj\" where the rowc value is not equal to 59.08637 for objects with a photometric classification.",
    "query": "SELECT T1.field FROM photoobj AS T1 WHERE T1.rowc != 59.08637"
  },
  {
    "db_id": "sdss_temporary",
    "id": "487_1",
    "user": "gpt-3",
    "question": "Select the type of nearest neighbour objects from a table called \"neighbors\" where the object ID is not equal to 1237678437555503132.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.objid != 1237678437555503132"
  },
  {
    "db_id": "sdss_temporary",
    "id": "487_2",
    "user": "gpt-3",
    "question": "Find the type of objects that are nearest neighbors to the object with ID 1237678437555503132, excluding that object.",
    "query": "SELECT T1.type FROM neighbors AS T1 WHERE T1.objid != 1237678437555503132"
  },
  {
    "db_id": "sdss_temporary",
    "id": "488_1",
    "user": "gpt-3",
    "question": "Retrieve the l attribute of objects from the photoobj table, specifically those whose flags do not equal 115226055496.",
    "query": "SELECT T1.l FROM photoobj AS T1 WHERE T1.flags != 115226055496"
  },
  {
    "db_id": "sdss_temporary",
    "id": "488_2",
    "user": "gpt-3",
    "question": "Find the value in the \"l\" column of the photoobj table for objects that have a flags value that is not equal to 115226055496.",
    "query": "SELECT T1.l FROM photoobj AS T1 WHERE T1.flags != 115226055496"
  },
  {
    "db_id": "sdss_temporary",
    "id": "489_1",
    "user": "gpt-3",
    "question": "Retrieve the description from the table \"photometrically_observed\" where the name is not equal to \"COSMIC_RAY\".",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name != \"COSMIC_RAY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "489_2",
    "user": "gpt-3",
    "question": "What is the description of all photo types that are not \"COSMIC_RAY\"?",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name != \"COSMIC_RAY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "490_1",
    "user": "gpt-3",
    "question": "\"Retrieve the value of photometrically observed data for all types except those with the description 'NotAType:' from the photo_type table.\"",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.description != \"NotAType:\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "490_2",
    "user": "gpt-3",
    "question": "\"Retrieve the value of photometrically observed photos where the description is not 'NotAType' from the photo_type table.\"",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.description != \"NotAType:\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "491_1",
    "user": "gpt-3",
    "question": "Retrieve the description from the photometrically observed photo type table where the name is not \"GHOST\".",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name != \"GHOST\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "491_2",
    "user": "gpt-3",
    "question": "Retrieve the description of all photo types that are not named \"GHOST\" from the table of photometrically observed observations.",
    "query": "SELECT T1.description FROM photo_type AS T1 WHERE T1.name != \"GHOST\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "492_1",
    "user": "gpt-3",
    "question": "\"Retrieve the declination values from the photometric objects where the redshift is not equal to 11.72341.\"",
    "query": "SELECT T1.dec FROM photoobj AS T1 WHERE T1.z != 11.72341"
  },
  {
    "db_id": "sdss_temporary",
    "id": "492_2",
    "user": "gpt-3",
    "question": "What is the declination of all objects in the photoobj table that have a redshift value not equal to 11.72341?",
    "query": "SELECT T1.dec FROM photoobj AS T1 WHERE T1.z != 11.72341"
  },
  {
    "db_id": "sdss_temporary",
    "id": "493_1",
    "user": "gpt-3",
    "question": "Get the load version from the photo object table where the flags column does not equal 80330494792.",
    "query": "SELECT T1.loadversion FROM photoobj AS T1 WHERE T1.flags != 80330494792"
  },
  {
    "db_id": "sdss_temporary",
    "id": "493_2",
    "user": "gpt-3",
    "question": "Find the version of the load for all objects in the Photometric_objects table from the photoobj table, where the flags column is not equal to 80330494792.",
    "query": "SELECT T1.loadversion FROM photoobj AS T1 WHERE T1.flags != 80330494792"
  },
  {
    "db_id": "sdss_temporary",
    "id": "494_1",
    "user": "gpt-3",
    "question": "Retrieve the load version from the Spectroscopic_objects table for objects in the specobj table that do not have a redshift error of 5.254633e-07.",
    "query": "SELECT T1.loadversion FROM specobj AS T1 WHERE T1.zerr != 5.254633e-07"
  },
  {
    "db_id": "sdss_temporary",
    "id": "494_2",
    "user": "gpt-3",
    "question": "What is the load version for spectroscopic objects in the specobj table, excluding those with a redshift error of 5.254633e-07?",
    "query": "SELECT T1.loadversion FROM specobj AS T1 WHERE T1.zerr != 5.254633e-07"
  },
  {
    "db_id": "sdss_temporary",
    "id": "495_1",
    "user": "gpt-3",
    "question": "Retrieve the value of photometrically observed data that is not \"COSMIC_RAY\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.name != \"COSMIC_RAY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "495_2",
    "user": "gpt-3",
    "question": "Retrieve the values of photometrically observed data excluding those with the name \"COSMIC_RAY\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.name != \"COSMIC_RAY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "496_1",
    "user": "gpt-3",
    "question": "Find the mode of the photometric objects where the u value is not equal to 14.35719 in the photoobj table.",
    "query": "SELECT T1.mode FROM photoobj AS T1 WHERE T1.u != 14.35719"
  },
  {
    "db_id": "sdss_temporary",
    "id": "496_2",
    "user": "gpt-3",
    "question": "Find the mode of all photometric objects from the photoobj table where the value for u is not equal to 14.35719.",
    "query": "SELECT T1.mode FROM photoobj AS T1 WHERE T1.u != 14.35719"
  },
  {
    "db_id": "sdss_temporary",
    "id": "497_1",
    "user": "gpt-3",
    "question": "Show the names of objects that have a photo type description other than \"Star: A self-luminous gaseous celestial body.\" in the photometrically_observed table.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description != \"Star: A self-luminous gaseous celestial body.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "497_2",
    "user": "gpt-3",
    "question": "Find the names of celestial objects that have been observed photometrically and are not stars.",
    "query": "SELECT T1.name FROM photo_type AS T1 WHERE T1.description != \"Star: A self-luminous gaseous celestial body.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "498_1",
    "user": "gpt-3",
    "question": "Retrieve the value of all photometrically observed photo types except for \"GHOST\".",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.name != \"GHOST\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "498_2",
    "user": "gpt-3",
    "question": "What are the values of photometrically observed data, excluding those under the name \"GHOST\"?",
    "query": "SELECT T1.value FROM photo_type AS T1 WHERE T1.name != \"GHOST\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "499_1",
    "user": "gpt-3",
    "question": "Find the specobjid for stellar spectral line indices where the corresponding spectroscopic objects are not considered as primary in the segue2 survey.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.segue2primary != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "499_2",
    "user": "gpt-3",
    "question": "Find the specobjid values from the table spplines for all stellar spectral line indices where the corresponding specobjid in the table Spectroscopic_objects is not associated with a segue2primary value of 1.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.segue2primary != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "500_1",
    "user": "gpt-3",
    "question": "Retrieve the modified Julian date from the spectobj table for all spectroscopic objects that have an associated emission line estimate, excluding a specific specobjid.",
    "query": "SELECT T1.mjd FROM specobj AS T1 JOIN galspecline AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 300745044476848128"
  },
  {
    "db_id": "sdss_temporary",
    "id": "500_2",
    "user": "gpt-3",
    "question": "What is the Modified Julian Date (mjd) for all spectroscopic objects in the galspecline table, except for the one with specobjid 300745044476848128?",
    "query": "SELECT T1.mjd FROM specobj AS T1 JOIN galspecline AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 300745044476848128"
  },
  {
    "db_id": "sdss_temporary",
    "id": "501_1",
    "user": "gpt-3",
    "question": "Find the specobjid for all emission line estimates from galspecline where the corresponding spectroscopic object's subclass is not \"K7\".",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.subclass != \"K7\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "501_2",
    "user": "gpt-3",
    "question": "Find the specobjid from the galspecline table where the subclass of its corresponding Spectroscopic object is not \"K7\".",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.subclass != \"K7\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "502_1",
    "user": "gpt-3",
    "question": "What is the value of photometrically observed objects where the type of the nearest neighbor object is not equal to 3?",
    "query": "SELECT T1.value FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.type != 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "502_2",
    "user": "gpt-3",
    "question": "What is the value of photometrically observed objects for the nearest neighbor objects that are not of type 3?",
    "query": "SELECT T1.value FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.type != 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "503_1",
    "user": "gpt-3",
    "question": "Find the specobjid of emission line estimates for spectroscopic objects that are not part of the \"seglowlatf\" program.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.programname != \"seglowlatf\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "503_2",
    "user": "gpt-3",
    "question": "What is the specobjid of all objects in the galspecline table that are also present in the specobj table, but have a program name different from \"seglowlatf\"?",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.programname != \"seglowlatf\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "504_1",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbor objects from the table \"neighbors\" where the object ID matches that in the \"photoobj\" table and the value in the column \"u\" is not equal to 14.63933.",
    "query": "SELECT T1.type FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.u != 14.63933"
  },
  {
    "db_id": "sdss_temporary",
    "id": "504_2",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbour objects that are connected to photometric objects where the u value is not equal to 14.63933.",
    "query": "SELECT T1.type FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.u != 14.63933"
  },
  {
    "db_id": "sdss_temporary",
    "id": "505_1",
    "user": "gpt-3",
    "question": "Retrieve the specobjid from the spplines table for all spectroscopic objects in the specobj table that have a special_target1 value different than 268435456.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.special_target1 != 268435456"
  },
  {
    "db_id": "sdss_temporary",
    "id": "505_2",
    "user": "gpt-3",
    "question": "Find the specobjid values for objects in the Stellar_spectal_line_indices table that have a corresponding entry in the Spectroscopic_objects table where the special_target1 value is not equal to 268435456.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.special_target1 != 268435456"
  },
  {
    "db_id": "sdss_temporary",
    "id": "506_1",
    "user": "gpt-3",
    "question": "Retrieve the column \"colc\" from the table \"photoobj\" for objects in the table \"neighbors\" whose object ID does not have a mode of 1.",
    "query": "SELECT T1.colc FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.mode != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "506_2",
    "user": "gpt-3",
    "question": "Retrieve the \"colc\" column from the \"photoobj\" table for all objects where the corresponding object ID in the \"neighbors\" table does not have a mode value of 1.",
    "query": "SELECT T1.colc FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.mode != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "507_1",
    "user": "gpt-3",
    "question": "Retrieve the description of photometrically observed photo types for all neighbor objects that do not have a neighbor type value of 6.",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.neighbortype != 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "507_2",
    "user": "gpt-3",
    "question": "Retrieve the description of all photometrically observed objects from the table \"photo_type\" that have a value matching the neighbor type of any object in the \"neighbors\" table, excluding those with a neighbor type of 6.",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.neighbortype != 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "508_1",
    "user": "gpt-3",
    "question": "Find the \"r\" values from the table of Photometric objects for all objects that have an object ID matching with those in the Nearest neighbor objects table and where the mode is not equal to 1.",
    "query": "SELECT T1.r FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.mode != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "508_2",
    "user": "gpt-3",
    "question": "Retrieve the \"r\" column for objects in the Photometric_objects table that have an object ID matching with those in the Nearest_neighbour_objects table where the mode is not equal to 1.",
    "query": "SELECT T1.r FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.mode != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "509_1",
    "user": "gpt-3",
    "question": "Retrieve the neighbor object IDs from the table of neighbors, where the corresponding neighbor type is equal to a value from the photo_type table that has a description not equal to \"Trail: A satellite or asteroid or meteor trail (not yet used)\".",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.description != \"Trail: A satellite or asteroid or meteor trail. (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "509_2",
    "user": "gpt-3",
    "question": "Find the neighbor object IDs from the table of nearest neighbors that have been photometrically observed and do not have a description of \"Trail: A satellite or asteroid or meteor trail.\"",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.description != \"Trail: A satellite or asteroid or meteor trail. (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "510_1",
    "user": "gpt-3",
    "question": "Find the name of photometrically observed objects where the rowc value is not equal to 52.44669 in the photoobj table and join it with the name from the photo_type table where their type values are the same.",
    "query": "SELECT T1.name FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.rowc != 52.44669"
  },
  {
    "db_id": "sdss_temporary",
    "id": "510_2",
    "user": "gpt-3",
    "question": "Find the names of objects that have been observed photometrically and have a type value that is not equal to 52.44669 in the photoobj table.",
    "query": "SELECT T1.name FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.rowc != 52.44669"
  },
  {
    "db_id": "sdss_temporary",
    "id": "511_1",
    "user": "gpt-3",
    "question": "What is the program name for spectroscopic objects where the best photometric object id does not have a cmodel magnitude of 14.00395 in the u-band?",
    "query": "SELECT T1.programname FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.cmodelmag_u != 14.00395"
  },
  {
    "db_id": "sdss_temporary",
    "id": "511_2",
    "user": "gpt-3",
    "question": "Find the program names for spectroscopic objects where their best object IDs match with photometric objects and the cmodel magnitude in the u band is not equal to 14.00395.",
    "query": "SELECT T1.programname FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.cmodelmag_u != 14.00395"
  },
  {
    "db_id": "sdss_temporary",
    "id": "512_1",
    "user": "gpt-3",
    "question": "Find the specobjid of all objects with spplines in the Stellar_spectal_line_indices table, joined with the specobj table on matching specobjid values, where the ra column in Spectroscopic_objects does not equal 0.0267587999999819.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.ra != 0.0267587999999819"
  },
  {
    "db_id": "sdss_temporary",
    "id": "512_2",
    "user": "gpt-3",
    "question": "Get the specobjid from the Stellar_spectal_line_indices table where the Spectroscopic_objects table's ra column is not equal to 0.0267587999999819 and join on the specobjid column.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.ra != 0.0267587999999819"
  },
  {
    "db_id": "sdss_temporary",
    "id": "513_1",
    "user": "gpt-3",
    "question": "Find the spectral object ID for emission line estimates where the velocity dispersion error is not equal to 16.29792, and join it with the spectroscopic object table using their shared specobjid column.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.veldisperr != 16.29792"
  },
  {
    "db_id": "sdss_temporary",
    "id": "513_2",
    "user": "gpt-3",
    "question": "Find the specobjid from the Emission_line_estimates table for all objects in the Spectroscopic_objects table where the veldisperr value is not equal to 16.29792.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.veldisperr != 16.29792"
  },
  {
    "db_id": "sdss_temporary",
    "id": "514_1",
    "user": "gpt-3",
    "question": "Find the description of photometrically observed objects that are not listed as type 0 in the table of nearest neighbor objects.",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.neighbortype != 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "514_2",
    "user": "gpt-3",
    "question": "Get the description of all photometrically observed objects that are not type 0 and have a neighbor.",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.neighbortype != 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "515_1",
    "user": "gpt-3",
    "question": "What is the distance of the nearest neighbor objects that have a photometrically observed type description that is not \"NotAType:\"?",
    "query": "SELECT T1.distance FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.description != \"NotAType:\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "515_2",
    "user": "gpt-3",
    "question": "Find the distance of nearest neighboring objects where their type is photometrically observed and the description is not \"NotAType:\".",
    "query": "SELECT T1.distance FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.description != \"NotAType:\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "516_1",
    "user": "gpt-3",
    "question": "What is the name of all objects that have been photometrically observed and are not classified as nearest neighbor type 6?",
    "query": "SELECT T1.name FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.neighbortype != 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "516_2",
    "user": "gpt-3",
    "question": "Find the names of all photometrically observed objects that have a neighbor type that is not equal to 6.",
    "query": "SELECT T1.name FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.neighbortype != 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "517_1",
    "user": "gpt-3",
    "question": "Find the neighbor mode from the nearest neighbor objects where the corresponding object in the Photometric_objects table has a clean value of not equal to 0.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.clean != 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "517_2",
    "user": "gpt-3",
    "question": "\"Retrieve the neighbor mode of objects from the neighbors table for photometric objects that are not clean in the photoobj table.\"",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.clean != 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "518_1",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbor objects from the neighbors table, where the object ID matches in both tables and the clean value is not equal to 1 in the photoobj table.",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.clean != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "518_2",
    "user": "gpt-3",
    "question": "Get the type of nearest neighbour objects from the \"neighbors\" table where their object ID matches with that in the \"photoobj\" table and their cleanliness is not equal to 1.",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.clean != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "519_1",
    "user": "gpt-3",
    "question": "Retrieve the redshift warning for all spectroscopic objects whose best object identification number matches with an object in the photometric table where the extinction value for the r-band is not equal to 0.009874543.",
    "query": "SELECT T1.zwarning FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.extinction_r != 0.009874543"
  },
  {
    "db_id": "sdss_temporary",
    "id": "519_2",
    "user": "gpt-3",
    "question": "Retrieve the zwarning values for all spectroscopic objects where the corresponding photometric object's extinction_r value is not equal to 0.009874543.",
    "query": "SELECT T1.zwarning FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.extinction_r != 0.009874543"
  },
  {
    "db_id": "sdss_temporary",
    "id": "520_1",
    "user": "gpt-3",
    "question": "Find the specobjid of all objects with emission line estimates where the object is not a primary target in the segue2 survey.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.segue2primary != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "520_2",
    "user": "gpt-3",
    "question": "Find the spectroscopic object identification numbers for emission line estimates from the galspecline table that are not primary objects in the specobj table in SEGUE2.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.segue2primary != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "521_1",
    "user": "gpt-3",
    "question": "Find the specobjid of all galspecline emission line estimates for spectroscopic objects that have a declination value other than -16.712474.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.dec != -16.712474"
  },
  {
    "db_id": "sdss_temporary",
    "id": "521_2",
    "user": "gpt-3",
    "question": "Retrieve the specobjid values from the Emission_line_estimates table for all objects that have a non-matching declination value of -16.712474 in the Spectroscopic_objects table.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.dec != -16.712474"
  },
  {
    "db_id": "sdss_temporary",
    "id": "522_1",
    "user": "gpt-3",
    "question": "Find the description of photometrically observed objects whose value matches the neighbor type of the nearest neighbor, but only if the neighbor mode is not equal to 1.",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.neighbormode != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "522_2",
    "user": "gpt-3",
    "question": "\"Retrieve the description of photometrically observed objects from a table of photo types, joined with a table of nearest neighbor objects where the neighbor type matches the photometrically observed value and the neighbor mode is not equal to 1.\"",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.neighbormode != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "523_1",
    "user": "gpt-3",
    "question": "Retrieve the rowc values from the Photometric_objects table for all objects where the veldisperr value in the Spectroscopic_objects table is not equal to 13.42702.",
    "query": "SELECT T1.rowc FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.veldisperr != 13.42702"
  },
  {
    "db_id": "sdss_temporary",
    "id": "523_2",
    "user": "gpt-3",
    "question": "Retrieve the rowc value from the Photometric_objects table for all objects in the photoobj table where the bestobjid matches and the veldisperr does not equal 13.42702 in the specobj table.",
    "query": "SELECT T1.rowc FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.veldisperr != 13.42702"
  },
  {
    "db_id": "sdss_temporary",
    "id": "524_1",
    "user": "gpt-3",
    "question": "Find the specobjid of all emission line estimates for galaxies that have been spectroscopically observed, excluding those with a loadversion of 1017.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.loadversion != 1017"
  },
  {
    "db_id": "sdss_temporary",
    "id": "524_2",
    "user": "gpt-3",
    "question": "Get the specobjid of all objects in galspecline that have a matching specobjid in specobj, but only if the loadversion for that object in specobj is not equal to 1017.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.loadversion != 1017"
  },
  {
    "db_id": "sdss_temporary",
    "id": "525_1",
    "user": "gpt-3",
    "question": "Get the field from the table of photometric objects where the object ID in the photometric objects table is equal to the best object ID in the spectroscopic objects table and where special target 1 in the spectroscopic objects table does not equal 2147483648.",
    "query": "SELECT T1.field FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.special_target1 != 2147483648"
  },
  {
    "db_id": "sdss_temporary",
    "id": "525_2",
    "user": "gpt-3",
    "question": "Find the field values from the photoobj table for objects where the objid value in Photometric_objects is equal to the bestobjid value in Spectroscopic_objects, and where special_target1 in Spectroscopic_objects is not equal to 2147483648.",
    "query": "SELECT T1.field FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.special_target1 != 2147483648"
  },
  {
    "db_id": "sdss_temporary",
    "id": "526_1",
    "user": "gpt-3",
    "question": "Find the plate number of all spectroscopic objects that have an emission line estimate, except for the one with specobjid 300784352017541120.",
    "query": "SELECT T1.plate FROM specobj AS T1 JOIN galspecline AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 300784352017541120"
  },
  {
    "db_id": "sdss_temporary",
    "id": "526_2",
    "user": "gpt-3",
    "question": "Find the plate numbers for all spectroscopic objects that have an emission line estimate, except for the object with a specobjid of 300784352017541120.",
    "query": "SELECT T1.plate FROM specobj AS T1 JOIN galspecline AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 300784352017541120"
  },
  {
    "db_id": "sdss_temporary",
    "id": "527_1",
    "user": "gpt-3",
    "question": "Retrieve the value from the photometrically observed type column for photo objects where the i column is not equal to 11.57538.",
    "query": "SELECT T1.value FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.i != 11.57538"
  },
  {
    "db_id": "sdss_temporary",
    "id": "527_2",
    "user": "gpt-3",
    "question": "Find the photometric values of objects in the photoobj table, where the type is equal to \"photometrically observed\" and exclude any objects with an i value of 11.57538.",
    "query": "SELECT T1.value FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.i != 11.57538"
  },
  {
    "db_id": "sdss_temporary",
    "id": "528_1",
    "user": "gpt-3",
    "question": "Find the object ID of all objects in the photoobj table that have been observed photometrically and are not classified as stars according to the photo_type table.",
    "query": "SELECT T1.objid FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name != \"STAR\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "528_2",
    "user": "gpt-3",
    "question": "Find the objid of objects from the photoobj table that have been observed photometrically and whose type is not equal to \"STAR\".",
    "query": "SELECT T1.objid FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name != \"STAR\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "529_1",
    "user": "gpt-3",
    "question": "Retrieve the clean flag from the Photometric_objects table for objects where the ancillary_target1 column in the Spectroscopic_objects table is not equal to 256.",
    "query": "SELECT T1.clean FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ancillary_target1 != 256"
  },
  {
    "db_id": "sdss_temporary",
    "id": "529_2",
    "user": "gpt-3",
    "question": "Find the clean photometric objects where their objid matches with the bestobjid of spectroscopic objects and the ancillary target 1 is not equal to 256.",
    "query": "SELECT T1.clean FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ancillary_target1 != 256"
  },
  {
    "db_id": "sdss_temporary",
    "id": "530_1",
    "user": "gpt-3",
    "question": "Find the value of photometrically observed type for Photometric objects where the right ascension is not equal to 0.0165372075736627.",
    "query": "SELECT T1.value FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.ra != 0.0165372075736627"
  },
  {
    "db_id": "sdss_temporary",
    "id": "530_2",
    "user": "gpt-3",
    "question": "Retrieve the values from the \"value\" column in the \"photometrically_observed\" table for all objects in the \"photoobj\" table where the object's right ascension is not equal to 0.0165372075736627 and their type matches a value in the \"type\" column of the \"photo_type\" table.",
    "query": "SELECT T1.value FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.ra != 0.0165372075736627"
  },
  {
    "db_id": "sdss_temporary",
    "id": "531_1",
    "user": "gpt-3",
    "question": "Find the load version for spectroscopic objects where the specobjid does not equal 300700239378016256 and is joined with emission line estimates on the specobjid.",
    "query": "SELECT T1.loadversion FROM specobj AS T1 JOIN galspecline AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 300700239378016256"
  },
  {
    "db_id": "sdss_temporary",
    "id": "531_2",
    "user": "gpt-3",
    "question": "Find the load version for a spectroscopic object where the specobjid in the emission line estimates table does not equal 300700239378016256.",
    "query": "SELECT T1.loadversion FROM specobj AS T1 JOIN galspecline AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 300700239378016256"
  },
  {
    "db_id": "sdss_temporary",
    "id": "532_1",
    "user": "gpt-3",
    "question": "Get the declination of all objects in the photoobj table that have a type value corresponding to a photometrically observed type, excluding any with an \"UNKNOWN\" type.",
    "query": "SELECT T1.dec FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name != \"UNKNOWN\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "532_2",
    "user": "gpt-3",
    "question": "Get the declination of objects from the photoobj table where the type is not \"UNKNOWN\" and it has been observed photometrically according to the values in the photo_type table.",
    "query": "SELECT T1.dec FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name != \"UNKNOWN\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "533_1",
    "user": "gpt-3",
    "question": "Find the neighbor object IDs for nearest neighbor objects where the type is photometrically observed and not equal to \"GHOST\".",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.name != \"GHOST\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "533_2",
    "user": "gpt-3",
    "question": "Find the IDs of nearest neighbor objects that have been observed photometrically and are not classified as \"GHOST\".",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.name != \"GHOST\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "534_1",
    "user": "gpt-3",
    "question": "Retrieve the type of nearest neighbor objects where the description of photometrically observed objects is not \"Sky: Blank sky spectrogram (no objects in this arcsecond area)\".",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.description != \"Sky: Blank sky spectrogram (no objects in this arcsecond area).\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "534_2",
    "user": "gpt-3",
    "question": "Get the type of nearest neighbour objects from the neighbors table where the neighbortype value matches with the value in photometrically_observed column of photo_type table, excluding those with a description of \"Sky: Blank sky spectrogram (no objects in this arcsecond area)\".",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.description != \"Sky: Blank sky spectrogram (no objects in this arcsecond area).\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "535_1",
    "user": "gpt-3",
    "question": "What is the specobjid of all objects in the Emission_line_estimates table that are not associated with ancillary target 1 value of 68719493120 in the Spectroscopic_objects table?",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.ancillary_target1 != 68719493120"
  },
  {
    "db_id": "sdss_temporary",
    "id": "535_2",
    "user": "gpt-3",
    "question": "Retrieve the specobjid values from the Emission_line_estimates table for spectroscopic objects where the ancillary_target1 value in the Spectroscopic_objects table is not equal to 68719493120.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.ancillary_target1 != 68719493120"
  },
  {
    "db_id": "sdss_temporary",
    "id": "536_1",
    "user": "gpt-3",
    "question": "Retrieve the specobjid from the spplines table for spectroscopic objects in the Spectroscopic_objects table where bestobjid is not equal to 1237645943978984236.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.bestobjid != 1237645943978984236"
  },
  {
    "db_id": "sdss_temporary",
    "id": "536_2",
    "user": "gpt-3",
    "question": "Find the spectobjid from spplines for stellar spectral line indices where the bestobjid in specobj does not equal 1237645943978984236.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.bestobjid != 1237645943978984236"
  },
  {
    "db_id": "sdss_temporary",
    "id": "537_1",
    "user": "gpt-3",
    "question": "Get the clean value from the photoobj table for all objects that have a type matching a description in the photometrically_observed table, where the description is not \"KnownObject: Object came from some other catalog (not the SDSS catalog). (not yet used)\".",
    "query": "SELECT T1.clean FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.description != \"KnownObject: Object came from some other catalog (not the SDSS catalog). (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "537_2",
    "user": "gpt-3",
    "question": "Retrieve the clean column from the Photometric_objects table where the type matches a value in the photo_type table, but exclude any objects that have a description of \"KnownObject: Object came from some other catalog (not the SDSS catalog)\".",
    "query": "SELECT T1.clean FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.description != \"KnownObject: Object came from some other catalog (not the SDSS catalog). (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "538_1",
    "user": "gpt-3",
    "question": "Retrieve the model magnitude in the u band for all photometric objects that have been observed photometrically, excluding those with a type of \"DEFECT\".",
    "query": "SELECT T1.cmodelmag_u FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name != \"DEFECT\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "538_2",
    "user": "gpt-3",
    "question": "Find the cmodel magnitude in the u band for all objects that have been observed photometrically and are not considered as DEFECT in the photoobj and photo_type tables.",
    "query": "SELECT T1.cmodelmag_u FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name != \"DEFECT\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "539_1",
    "user": "gpt-3",
    "question": "Retrieve the specobjid from the Emission_line_estimates table where the fiberid in the Spectroscopic_objects table is not equal to 446.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.fiberid != 446"
  },
  {
    "db_id": "sdss_temporary",
    "id": "539_2",
    "user": "gpt-3",
    "question": "Find the specobjid from the Emission_line_estimates table where the fiberid is not equal to 446 in the Spectroscopic_objects table.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.fiberid != 446"
  },
  {
    "db_id": "sdss_temporary",
    "id": "540_1",
    "user": "gpt-3",
    "question": "Find the cmodelmag_u values for objects in the Photometric_objects table that have an object ID that matches with a neighbor object ID in the Nearest_neighbour_objects table, except for those with a neighborobjid of 1237645876861337828.",
    "query": "SELECT T1.cmodelmag_u FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.neighborobjid != 1237645876861337828"
  },
  {
    "db_id": "sdss_temporary",
    "id": "540_2",
    "user": "gpt-3",
    "question": "Retrieve the u-band cmodel magnitude for all Photometric objects that have a neighbor object that is not equal to 1237645876861337828.",
    "query": "SELECT T1.cmodelmag_u FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.neighborobjid != 1237645876861337828"
  },
  {
    "db_id": "sdss_temporary",
    "id": "541_1",
    "user": "gpt-3",
    "question": "\"Retrieve the load version of photometric objects where the ancillary target1 value is not equal to 1048576 in the Spectroscopic_objects table.\"",
    "query": "SELECT T1.loadversion FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ancillary_target1 != 1048576"
  },
  {
    "db_id": "sdss_temporary",
    "id": "541_2",
    "user": "gpt-3",
    "question": "What is the load version of photometric objects for all spectroscopic objects that have an ancillary target1 value not equal to 1048576?",
    "query": "SELECT T1.loadversion FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ancillary_target1 != 1048576"
  },
  {
    "db_id": "sdss_temporary",
    "id": "542_1",
    "user": "gpt-3",
    "question": "What are the specobjids for all objects in the Emission_line_estimates table that have a zerr value different than 3.571396e-06 in the Spectroscopic_objects table?",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.zerr != 3.571396e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "542_2",
    "user": "gpt-3",
    "question": "What are the specobjids from the galspecline table where the corresponding spectroscopic objects have a zerr value that is not equal to 3.571396e-06?",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.zerr != 3.571396e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "543_1",
    "user": "gpt-3",
    "question": "Find the specobjid of stellar spectral line indices for all spectroscopic objects that do not have a subclass of \"G0Va (143761)\".",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.subclass != \"G0Va (143761)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "543_2",
    "user": "gpt-3",
    "question": "Retrieve the specobjid from the spplines table where the corresponding spectroscopic object's subclass is not equal to \"G0Va (143761)\".",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.subclass != \"G0Va (143761)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "544_1",
    "user": "gpt-3",
    "question": "Retrieve the specobjid from the Stellar_spectal_line_indices table for all records where the fiberid in the Spectroscopic_objects table is not equal to 587.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.fiberid != 587"
  },
  {
    "db_id": "sdss_temporary",
    "id": "544_2",
    "user": "gpt-3",
    "question": "Retrieve the specobjid from the Stellar_spectal_line_indices table where the fiberid is not equal to 587 in the Spectroscopic_objects table.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.fiberid != 587"
  },
  {
    "db_id": "sdss_temporary",
    "id": "545_1",
    "user": "gpt-3",
    "question": "Get the redshift error value for spectroscopic objects where the best object ID in the specobj table does not match with the objid in the photoobj table, excluding a specific objid.",
    "query": "SELECT T1.zerr FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.objid != 1237645943978655770"
  },
  {
    "db_id": "sdss_temporary",
    "id": "545_2",
    "user": "gpt-3",
    "question": "Find the redshift error for all spectroscopic objects where the object ID in the photoobj table is not equal to 1237645943978655770.",
    "query": "SELECT T1.zerr FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.objid != 1237645943978655770"
  },
  {
    "db_id": "sdss_temporary",
    "id": "546_1",
    "user": "gpt-3",
    "question": "What is the specobjid for all stellar spectral line indices joined with spectroscopic objects where the bestobjid is not equal to 1237645943978721411?",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.bestobjid != 1237645943978721411"
  },
  {
    "db_id": "sdss_temporary",
    "id": "546_2",
    "user": "gpt-3",
    "question": "Retrieve the specobjid from the Stellar_spectal_line_indices table for all objects in the Spectroscopic_objects table where the bestobjid is not equal to 1237645943978721411.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.bestobjid != 1237645943978721411"
  },
  {
    "db_id": "sdss_temporary",
    "id": "547_1",
    "user": "gpt-3",
    "question": "Find the best object ID from the spectroscopic objects table where the specobjid is not equal to 303022962758412288 in the stellar spectral line indices table.",
    "query": "SELECT T1.bestobjid FROM specobj AS T1 JOIN spplines AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 303022962758412288"
  },
  {
    "db_id": "sdss_temporary",
    "id": "547_2",
    "user": "gpt-3",
    "question": "Find the best object ID from the Spectroscopic objects table where the specobjid does not equal 303022962758412288 and join it with the spplines table on matching specobjids.",
    "query": "SELECT T1.bestobjid FROM specobj AS T1 JOIN spplines AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 303022962758412288"
  },
  {
    "db_id": "sdss_temporary",
    "id": "548_1",
    "user": "gpt-3",
    "question": "Retrieve the cmodel magnitude values in the g band for all photometrically observed objects, excluding any that have a type of \"SKY\".",
    "query": "SELECT T1.cmodelmag_g FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name != \"SKY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "548_2",
    "user": "gpt-3",
    "question": "Find the g-band cmodel magnitude of all objects from the photoobj table that have a type value that is not \"SKY\" according to the photo_type table.",
    "query": "SELECT T1.cmodelmag_g FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name != \"SKY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "549_1",
    "user": "gpt-3",
    "question": "Retrieve the value of the \"u\" column from the table \"photoobj\" for all objects that have a type description that is not \"Galaxy: An extended object composed of many stars and other matter.\" as described in the table \"photo_type\".",
    "query": "SELECT T1.u FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.description != \"Galaxy: An extended object composed of many stars and other matter.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "549_2",
    "user": "gpt-3",
    "question": "Find the u values for all photometric objects where the type is not equal to \"Galaxy: An extended object composed of many stars and other matter\".",
    "query": "SELECT T1.u FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.description != \"Galaxy: An extended object composed of many stars and other matter.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "550_1",
    "user": "gpt-3",
    "question": "Retrieve the specobjid values from the spplines table for all objects in the Spectroscopic_objects table that do not have \"segue1\" as their survey value.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.survey != \"segue1\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "550_2",
    "user": "gpt-3",
    "question": "Find the specobjid from Stellar_spectal_line_indices where the survey in Spectroscopic_objects is not \"segue1\".",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.survey != \"segue1\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "551_1",
    "user": "gpt-3",
    "question": "Find the velocity dispersion error for all objects in the spectroscopic catalog that have an emission line estimate, except for object number 299615571526313984.",
    "query": "SELECT T1.veldisperr FROM specobj AS T1 JOIN galspecline AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 299615571526313984"
  },
  {
    "db_id": "sdss_temporary",
    "id": "551_2",
    "user": "gpt-3",
    "question": "Find the velocity dispersion error for a spectroscopic object that has a spectral object ID not equal to 299615571526313984 by joining the specobj and galspecline tables, then selecting the veldisperr column from the Spectroscopic_objects table.",
    "query": "SELECT T1.veldisperr FROM specobj AS T1 JOIN galspecline AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 299615571526313984"
  },
  {
    "db_id": "sdss_temporary",
    "id": "552_1",
    "user": "gpt-3",
    "question": "\"Retrieve the neighbor mode from the nearest neighbor objects where the neighbor type is not equal to 'KNOWNOBJ' as observed in photometric data.\"",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.name != \"KNOWNOBJ\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "552_2",
    "user": "gpt-3",
    "question": "Find the neighboring objects' mode of observation from a table called \"neighbors\" and join it with a table called \"photo_type\" where the photometrically observed objects are not equal to those that are already known.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.name != \"KNOWNOBJ\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "553_1",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbor objects that have been photometrically observed and whose photometric type is not equal to 8.",
    "query": "SELECT T1.mode FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.value != 8"
  },
  {
    "db_id": "sdss_temporary",
    "id": "553_2",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbour objects that have a photometrically observed type value that is not equal to 8.",
    "query": "SELECT T1.mode FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.value != 8"
  },
  {
    "db_id": "sdss_temporary",
    "id": "554_1",
    "user": "gpt-3",
    "question": "Find the target IDs for objects in the Segue 2 dataset that have spectroscopic data and do not match a specific object ID in the Stellar Spectral Line Indices dataset.",
    "query": "SELECT T1.segue2_target2 FROM specobj AS T1 JOIN spplines AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 308498255837161472"
  },
  {
    "db_id": "sdss_temporary",
    "id": "554_2",
    "user": "gpt-3",
    "question": "Find the SEGUE2 target2 values from the specobj table for objects where the specobjid in spplines is not equal to 308498255837161472.",
    "query": "SELECT T1.segue2_target2 FROM specobj AS T1 JOIN spplines AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 308498255837161472"
  },
  {
    "db_id": "sdss_temporary",
    "id": "555_1",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbour objects where the photometrically observed name is not \"COSMIC_RAY\".",
    "query": "SELECT T1.mode FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.name != \"COSMIC_RAY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "555_2",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbour objects for which the photometric observation type is not \"COSMIC_RAY\".",
    "query": "SELECT T1.mode FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.name != \"COSMIC_RAY\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "556_1",
    "user": "gpt-3",
    "question": "Retrieve the name of photometrically observed objects from the photoobj table where their type value matches that of the photo_type table and their declination does not equal -17.1110510805343.",
    "query": "SELECT T1.name FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.dec != -17.1110510805343"
  },
  {
    "db_id": "sdss_temporary",
    "id": "556_2",
    "user": "gpt-3",
    "question": "Find the names of all photometrically observed objects whose type in the photoobj table is not equal to -17.1110510805343 for their declination value.",
    "query": "SELECT T1.name FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.dec != -17.1110510805343"
  },
  {
    "db_id": "sdss_temporary",
    "id": "557_1",
    "user": "gpt-3",
    "question": "Find the distance of the nearest neighboring objects from the photo objects where the g value is not equal to 12.61056 in the neighbors and photoobj tables.",
    "query": "SELECT T1.distance FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.g != 12.61056"
  },
  {
    "db_id": "sdss_temporary",
    "id": "557_2",
    "user": "gpt-3",
    "question": "Find the distance of the nearest neighbor objects from a list of photo objects where the g value is not equal to 12.61056.",
    "query": "SELECT T1.distance FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.g != 12.61056"
  },
  {
    "db_id": "sdss_temporary",
    "id": "558_1",
    "user": "gpt-3",
    "question": "Get the load version for the spectroscopic object with a specobjid of 310762150211643392 from the Stellar_spectral_line_indices table joined with the Spectroscopic_objects table.",
    "query": "SELECT T1.loadversion FROM specobj AS T1 JOIN spplines AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 310762150211643392"
  },
  {
    "db_id": "sdss_temporary",
    "id": "558_2",
    "user": "gpt-3",
    "question": "Find the load version of the spectroscopic objects for which the specobjid is not equal to 310762150211643392 and are also present in the spplines table.",
    "query": "SELECT T1.loadversion FROM specobj AS T1 JOIN spplines AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 310762150211643392"
  },
  {
    "db_id": "sdss_temporary",
    "id": "559_1",
    "user": "gpt-3",
    "question": "Retrieve the Spectroscopic object ID from the specobj table where the bestobjid does not equal 1237645943978983547 in the photoobj table.",
    "query": "SELECT T1.specobjid FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.objid != 1237645943978983547"
  },
  {
    "db_id": "sdss_temporary",
    "id": "559_2",
    "user": "gpt-3",
    "question": "Find the specobjid of all spectroscopic objects where the bestobjid is not equal to 1237645943978983547 in the specobj table, which is joined with the photoobj table on the condition that Photometric_objects.objid is equal to Spectroscopic_objects.bestobjid.",
    "query": "SELECT T1.specobjid FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.objid != 1237645943978983547"
  },
  {
    "db_id": "sdss_temporary",
    "id": "560_1",
    "user": "gpt-3",
    "question": "\"Retrieve the specobjid from spplines for all stellar spectral line indices, joining with specobj as spectroscopic objects where the fiberid is not equal to 7.\"",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.fiberid != 7"
  },
  {
    "db_id": "sdss_temporary",
    "id": "560_2",
    "user": "gpt-3",
    "question": "Retrieve the specobjid from Stellar_spectal_line_indices for all objects in Spectroscopic_objects that do not have a fiberid of 7.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.fiberid != 7"
  },
  {
    "db_id": "sdss_temporary",
    "id": "561_1",
    "user": "gpt-3",
    "question": "Retrieve the specobjid from spplines where the ra value in Spectroscopic_objects is not equal to 0.000881 and join with the specobj table to get all corresponding spectroscopic objects.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.ra != 0.000881"
  },
  {
    "db_id": "sdss_temporary",
    "id": "561_2",
    "user": "gpt-3",
    "question": "Retrieve the specobjid values from the Stellar_spectal_line_indices table where the ra value in the Spectroscopic_objects table is not equal to 0.000881.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.ra != 0.000881"
  },
  {
    "db_id": "sdss_temporary",
    "id": "562_1",
    "user": "gpt-3",
    "question": "\"Retrieve the name of the run for all Photometric objects that have a corresponding Spectroscopic object with a non-zero special target 1.\"",
    "query": "SELECT T1.run FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.special_target1 != 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "562_2",
    "user": "gpt-3",
    "question": "Retrieve the run number for all photometric objects that have a corresponding entry in the specobj table and whose special_target1 value is not equal to 0.",
    "query": "SELECT T1.run FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.special_target1 != 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "563_1",
    "user": "gpt-3",
    "question": "\"Retrieve the best object ID from the spectroscopic objects table where the clean status in the photometric objects table is not equal to 1.\"",
    "query": "SELECT T1.bestobjid FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.clean != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "563_2",
    "user": "gpt-3",
    "question": "Find the best object ID from the spectroscopic objects table for those objects whose clean status is not equal to 1 in the photometric objects table.",
    "query": "SELECT T1.bestobjid FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.clean != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "564_1",
    "user": "gpt-3",
    "question": "Find the color column for all photometric objects where the type is labeled as photometrically observed and the description is not \"Cosmic-ray track (not used)\".",
    "query": "SELECT T1.colc FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.description != \"Cosmic-ray track (not used).\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "564_2",
    "user": "gpt-3",
    "question": "Retrieve the colc column from the Photometric_objects table for all rows where the value in the type column is described as \"photometrically observed\" and not \"Cosmic-ray track (not used)\".",
    "query": "SELECT T1.colc FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.description != \"Cosmic-ray track (not used).\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "565_1",
    "user": "gpt-3",
    "question": "Retrieve the luminosity values (l) from the photometric objects where the best object ID matches between the photoobj and specobj tables and exclude any rows where the redshift error is equal to 2.856912e-06.",
    "query": "SELECT T1.l FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.zerr != 2.856912e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "565_2",
    "user": "gpt-3",
    "question": "Retrieve the l column from the Photometric_objects table for objects where the bestobjid column in the Spectroscopic_objects table matches the objid column in Photometric_objects and where the zerr column in Spectroscopic_objects does not equal 2.856912e-06.",
    "query": "SELECT T1.l FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.zerr != 2.856912e-06"
  },
  {
    "db_id": "sdss_temporary",
    "id": "566_1",
    "user": "gpt-3",
    "question": "Find the name of the run from the table of photometric objects where the type matches with the description for \"photometrically observed\", excluding any rows with a description of \"Cosmic-ray track (not used)\".",
    "query": "SELECT T1.run FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.description != \"Cosmic-ray track (not used).\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "566_2",
    "user": "gpt-3",
    "question": "Retrieve the run information for photometric objects from the photoobj table, where the type matches with the description \"photometrically observed\" from the photo_type table and is not equal to \"Cosmic-ray track (not used)\".",
    "query": "SELECT T1.run FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.description != \"Cosmic-ray track (not used).\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "567_1",
    "user": "gpt-3",
    "question": "Find the object ID of the nearest neighbor objects that have been photometrically observed and do not have a value of 8 in the photo_type table.",
    "query": "SELECT T1.objid FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.value != 8"
  },
  {
    "db_id": "sdss_temporary",
    "id": "567_2",
    "user": "gpt-3",
    "question": "Find the object IDs of nearest neighbor objects that have been observed photometrically and whose photometric observation type is not equal to 8.",
    "query": "SELECT T1.objid FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.value != 8"
  },
  {
    "db_id": "sdss_temporary",
    "id": "568_1",
    "user": "gpt-3",
    "question": "What are the names of all photometric objects that have a photo type value matching that of photometrically observed and do not have flags equal to 79793619016?",
    "query": "SELECT T1.name FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.flags != 79793619016"
  },
  {
    "db_id": "sdss_temporary",
    "id": "568_2",
    "user": "gpt-3",
    "question": "Find the names of photometrically observed objects from the photoobj table where their type value matches with the name in the photo_type table and their flags value is not equal to 79793619016.",
    "query": "SELECT T1.name FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.flags != 79793619016"
  },
  {
    "db_id": "sdss_temporary",
    "id": "569_1",
    "user": "gpt-3",
    "question": "Find the mode of nearest neighbor objects where the photometric object's b value is not equal to -73.5024977792631.",
    "query": "SELECT T1.mode FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.b != -73.5024977792631"
  },
  {
    "db_id": "sdss_temporary",
    "id": "569_2",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbor objects from the neighbors table, where their object IDs match with those in the photoobj table and have a b value that is not equal to -73.5024977792631.",
    "query": "SELECT T1.mode FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.b != -73.5024977792631"
  },
  {
    "db_id": "sdss_temporary",
    "id": "570_1",
    "user": "gpt-3",
    "question": "Retrieve the value of photometrically observed objects where the neighbor type is equal to the value and the neighbor object ID is not equal to 1237645876861272528 from the photo type table.",
    "query": "SELECT T1.value FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.neighborobjid != 1237645876861272528"
  },
  {
    "db_id": "sdss_temporary",
    "id": "570_2",
    "user": "gpt-3",
    "question": "Get the values of photometrically observed objects where their value is equal to the neighbor type in the table photo_type, as long as their corresponding neighbor object ID is not equal to 1237645876861272528.",
    "query": "SELECT T1.value FROM photo_type AS T1 JOIN neighbors AS T2 ON T1.value = T2.neighbortype WHERE T2.neighborobjid != 1237645876861272528"
  },
  {
    "db_id": "sdss_temporary",
    "id": "571_1",
    "user": "gpt-3",
    "question": "Get the neighbor type for the nearest neighbor objects where the photometrically observed name is not \"NOTATYPE\".",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.name != \"NOTATYPE\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "571_2",
    "user": "gpt-3",
    "question": "Get the neighbor type from the nearest neighbor objects where the photometrically observed value is not equal to \"NOTATYPE\".",
    "query": "SELECT T1.neighbortype FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.name != \"NOTATYPE\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "572_1",
    "user": "gpt-3",
    "question": "What is the type of nearest neighbour objects that have been photometrically observed, excluding those with the name \"KNOWNOBJ\"?",
    "query": "SELECT T1.type FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.name != \"KNOWNOBJ\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "572_2",
    "user": "gpt-3",
    "question": "Retrieve the type of nearest neighbour objects that have been photometrically observed, excluding those with the name \"KNOWNOBJ\".",
    "query": "SELECT T1.type FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.name != \"KNOWNOBJ\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "573_1",
    "user": "gpt-3",
    "question": "Retrieve the special target 1 value for spectroscopic objects where the rowc value of their best photometric object does not equal 50.88836.",
    "query": "SELECT T1.special_target1 FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.rowc != 50.88836"
  },
  {
    "db_id": "sdss_temporary",
    "id": "573_2",
    "user": "gpt-3",
    "question": "Get the value for the special target 1 of all spectroscopic objects where the corresponding photoobj rowc value is not equal to 50.88836.",
    "query": "SELECT T1.special_target1 FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.rowc != 50.88836"
  },
  {
    "db_id": "sdss_temporary",
    "id": "574_1",
    "user": "gpt-3",
    "question": "Get the load version from the photoobj table for all photometrically observed objects that are not type 2, joined with the photo_type table on the type column.",
    "query": "SELECT T1.loadversion FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.value != 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "574_2",
    "user": "gpt-3",
    "question": "Get the load version from the Photometric_objects table for all objects that have been photometrically observed, excluding those with a type value of 2.",
    "query": "SELECT T1.loadversion FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.value != 2"
  },
  {
    "db_id": "sdss_temporary",
    "id": "575_1",
    "user": "gpt-3",
    "question": "Return the load version from the Spectroscopic Objects table for all objects where the specobjid does not equal 305206867276097536 and is joined with the Stellar Spectral Line Indices table.",
    "query": "SELECT T1.loadversion FROM specobj AS T1 JOIN spplines AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 305206867276097536"
  },
  {
    "db_id": "sdss_temporary",
    "id": "575_2",
    "user": "gpt-3",
    "question": "What is the load version of all objects in the Spectroscopic_objects table that have an associated specobjid in the Stellar_spectal_line_indices table, excluding any object with a specobjid of 305206867276097536?",
    "query": "SELECT T1.loadversion FROM specobj AS T1 JOIN spplines AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 305206867276097536"
  },
  {
    "db_id": "sdss_temporary",
    "id": "576_1",
    "user": "gpt-3",
    "question": "Get the clean photometric objects for all photoobj entries that have an object ID that does not match 1237678617968771303 in the neighbors table.",
    "query": "SELECT T1.clean FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.objid != 1237678617968771303"
  },
  {
    "db_id": "sdss_temporary",
    "id": "576_2",
    "user": "gpt-3",
    "question": "\"Retrieve the clean value from the Photometric_objects table for all objects in the Nearest_neighbour_objects table, excluding the object with objid 1237678617968771303.\"",
    "query": "SELECT T1.clean FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.objid != 1237678617968771303"
  },
  {
    "db_id": "sdss_temporary",
    "id": "577_1",
    "user": "gpt-3",
    "question": "Find the field from the photoobj table where the object's type is marked as photometrically observed and the description is not \"Trail: A satellite or asteroid or meteor trail\".",
    "query": "SELECT T1.field FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.description != \"Trail: A satellite or asteroid or meteor trail. (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "577_2",
    "user": "gpt-3",
    "question": "Find the fields from the Photometric_objects table where the type is equal to a value in the photo_type table with a description that is not \"Trail: A satellite or asteroid or meteor trail. (not yet used)\".",
    "query": "SELECT T1.field FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.description != \"Trail: A satellite or asteroid or meteor trail. (not yet used)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "578_1",
    "user": "gpt-3",
    "question": "What are the zwarning values for Spectroscopic objects that have a specobjid not equal to 301746150233368576 in the Spectral Lines table?",
    "query": "SELECT T1.zwarning FROM specobj AS T1 JOIN spplines AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 301746150233368576"
  },
  {
    "db_id": "sdss_temporary",
    "id": "578_2",
    "user": "gpt-3",
    "question": "What is the zwarning value for all spectroscopic objects that have a specobjid different from 301746150233368576 in the specobj and spplines tables?",
    "query": "SELECT T1.zwarning FROM specobj AS T1 JOIN spplines AS T2 ON T1.specobjid = T2.specobjid WHERE T2.specobjid != 301746150233368576"
  },
  {
    "db_id": "sdss_temporary",
    "id": "579_1",
    "user": "gpt-3",
    "question": "Retrieve the description of the photometrically observed type for objects in the photoobj table that have a cmodelmag_r value other than 12.59261.",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.cmodelmag_r != 12.59261"
  },
  {
    "db_id": "sdss_temporary",
    "id": "579_2",
    "user": "gpt-3",
    "question": "Retrieve the description of photometrically observed objects from the table \"photo_type\" for those objects in the table \"photoobj\" with a type matching that of the photometrically observed objects, where their cmodelmag_r value is not equal to 12.59261.",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.cmodelmag_r != 12.59261"
  },
  {
    "db_id": "sdss_temporary",
    "id": "580_1",
    "user": "gpt-3",
    "question": "Find the spectral object ID for all objects in the galactic spectroscopic line table that are not primary science targets.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.scienceprimary != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "580_2",
    "user": "gpt-3",
    "question": "Find the specobjid of all emission line estimates that are associated with spectroscopic objects that are not considered primary science targets.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.scienceprimary != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "581_1",
    "user": "gpt-3",
    "question": "Find the object IDs of the nearest neighbor objects for each photo object, where the photo object has a clean value not equal to 0.",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.clean != 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "581_2",
    "user": "gpt-3",
    "question": "Find the ID of all neighboring objects that have been marked as clean in the \"photoobj\" table, and return their corresponding object IDs from the \"neighbors\" table.",
    "query": "SELECT T1.neighborobjid FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.clean != 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "582_1",
    "user": "gpt-3",
    "question": "Find the type of nearest neighbour objects where the photometrically observed description is not \"Galaxy: An extended object composed of many stars and other matter.\"",
    "query": "SELECT T1.type FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.description != \"Galaxy: An extended object composed of many stars and other matter.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "582_2",
    "user": "gpt-3",
    "question": "Find the types of nearest neighbor objects where their photometrically observed value is not \"Galaxy: An extended object composed of many stars and other matter.\"",
    "query": "SELECT T1.type FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.description != \"Galaxy: An extended object composed of many stars and other matter.\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "583_1",
    "user": "gpt-3",
    "question": "What is the description for photometrically observed objects that have a type value equal to the type of Photometric_objects with a right ascension not equal to 0.0480864707545834?",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.ra != 0.0480864707545834"
  },
  {
    "db_id": "sdss_temporary",
    "id": "583_2",
    "user": "gpt-3",
    "question": "Find the description of photometrically observed photo objects that have a type value matching those in the photo_type table and whose right ascension does not equal 0.0480864707545834.",
    "query": "SELECT T1.description FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.ra != 0.0480864707545834"
  },
  {
    "db_id": "sdss_temporary",
    "id": "584_1",
    "user": "gpt-3",
    "question": "Find the distance of the nearest neighbour objects from the table \"neighbors\" where their object ID matches with the object ID in the table \"photoobj\" and their cmodelmag_u value is not equal to 14.57352.",
    "query": "SELECT T1.distance FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.cmodelmag_u != 14.57352"
  },
  {
    "db_id": "sdss_temporary",
    "id": "584_2",
    "user": "gpt-3",
    "question": "Find the distance from the nearest neighbor object for all objects in the photoobj table whose cmodelmag_u value is not equal to 14.57352 and join it with the neighbors table using objid as the common identifier.",
    "query": "SELECT T1.distance FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.cmodelmag_u != 14.57352"
  },
  {
    "db_id": "sdss_temporary",
    "id": "585_1",
    "user": "gpt-3",
    "question": "Retrieve the specobjid values from the Emission_line_estimates table where the corresponding spectroscopic objects in the Spectroscopic_objects table do not have a program name of \"SEGUE_GES\".",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.programname != \"SEGUE_GES\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "585_2",
    "user": "gpt-3",
    "question": "What is the specobjid for all galspecline entries where the associated spectroscopic object's program name is not \"SEGUE_GES\"?",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.programname != \"SEGUE_GES\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "586_1",
    "user": "gpt-3",
    "question": "Get the u-band model magnitude from Photometric_objects for objects that have been observed photometrically and are not categorized as \"GHOST\" in the photo_type table.",
    "query": "SELECT T1.cmodelmag_u FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name != \"GHOST\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "586_2",
    "user": "gpt-3",
    "question": "Find the cmodel magnitude in the u band for all photometric objects where the type is not equal to \"GHOST\".",
    "query": "SELECT T1.cmodelmag_u FROM photoobj AS T1 JOIN photo_type AS T2 ON T1.type = T2.value WHERE T2.name != \"GHOST\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "587_1",
    "user": "gpt-3",
    "question": "What is the redshift value for all objects in the photometric_objects table where their object ID matches with an object ID in the neighbors table but have a type that is not equal to 3?",
    "query": "SELECT T1.z FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.type != 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "587_2",
    "user": "gpt-3",
    "question": "Retrieve the redshift value for all Photometric objects whose object ID matches with the Nearest neighbor objects' object ID, excluding any Nearest neighbor objects with a type value of 3.",
    "query": "SELECT T1.z FROM photoobj AS T1 JOIN neighbors AS T2 ON T1.objid = T2.objid WHERE T2.type != 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "588_1",
    "user": "gpt-3",
    "question": "What is the velocity dispersion error for spectroscopic objects that have a best object ID matching with a photometric object whose cmodel magnitude in the u band is not equal to 13.8112?",
    "query": "SELECT T1.veldisperr FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.cmodelmag_u != 13.8112"
  },
  {
    "db_id": "sdss_temporary",
    "id": "588_2",
    "user": "gpt-3",
    "question": "Retrieve the velocity dispersion error for all spectroscopic objects whose corresponding best photometric object has a cmodel magnitude in the u band not equal to 13.8112.",
    "query": "SELECT T1.veldisperr FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.cmodelmag_u != 13.8112"
  },
  {
    "db_id": "sdss_temporary",
    "id": "589_1",
    "user": "gpt-3",
    "question": "What is the program name of all spectroscopic objects where their best object ID does not match any photometric objects with a type other than 3?",
    "query": "SELECT T1.programname FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.type != 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "589_2",
    "user": "gpt-3",
    "question": "Get the program name for spectroscopic objects where the best object ID in the specobj table is equal to the object ID in the photoobj table and where the type in the photoobj table is not equal to 3.",
    "query": "SELECT T1.programname FROM specobj AS T1 JOIN photoobj AS T2 ON T1.bestobjid = T2.objid WHERE T2.type != 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "590_1",
    "user": "gpt-3",
    "question": "Retrieve the g magnitude from the Photometric_objects table for all objects where the bestobjid in the Spectroscopic_objects table does not have a segue2primary value of 1.",
    "query": "SELECT T1.g FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.segue2primary != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "590_2",
    "user": "gpt-3",
    "question": "Retrieve the \"g\" column from the \"photoobj\" table where the object ID in the \"bestobjid\" column of the \"specobj\" table is not equal to 1 and is joined with the object ID in the \"objid\" column of the \"photometric_objects\" table.",
    "query": "SELECT T1.g FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.segue2primary != 1"
  },
  {
    "db_id": "sdss_temporary",
    "id": "591_1",
    "user": "gpt-3",
    "question": "Find the mode of the nearest neighbour objects whose type is photometrically observed and exclude those that have a name of \"GHOST\".",
    "query": "SELECT T1.mode FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.name != \"GHOST\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "591_2",
    "user": "gpt-3",
    "question": "Retrieve the mode of nearest neighbour objects from the neighbors table, where the neighbor type is not equal to \"GHOST\" and has been observed photometrically according to the photo_type table.",
    "query": "SELECT T1.mode FROM neighbors AS T1 JOIN photo_type AS T2 ON T1.neighbortype = T2.value WHERE T2.name != \"GHOST\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "592_1",
    "user": "gpt-3",
    "question": "Retrieve the specobjid from the spplines table for all spectroscopic objects in the Spectroscopic_objects table that do not have a segue2_target1 value of -2147483647.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.segue2_target1 != -2147483647"
  },
  {
    "db_id": "sdss_temporary",
    "id": "592_2",
    "user": "gpt-3",
    "question": "Find the specobjid from the spplines table for all objects in the Spectroscopic_objects table with a segue2_target1 value that is not equal to -2147483647.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.segue2_target1 != -2147483647"
  },
  {
    "db_id": "sdss_temporary",
    "id": "593_1",
    "user": "gpt-3",
    "question": "What are the specobjid values from the table Emission_line_estimates for all spectroscopic objects that have a segue2_target1 value not equal to -2147483584 in the table Spectroscopic_objects?",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.segue2_target1 != -2147483584"
  },
  {
    "db_id": "sdss_temporary",
    "id": "593_2",
    "user": "gpt-3",
    "question": "Find the specobjid from the galspecline table for objects in the Spectroscopic_objects table that have a segue2_target1 value not equal to -2147483584.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.segue2_target1 != -2147483584"
  },
  {
    "db_id": "sdss_temporary",
    "id": "594_1",
    "user": "gpt-3",
    "question": "Retrieve the run number of all photometric objects that have a matching object identification with spectroscopic objects where the subclass is not \"B0IVe (5394)\".",
    "query": "SELECT T1.run FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.subclass != \"B0IVe (5394)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "594_2",
    "user": "gpt-3",
    "question": "Retrieve the name of the run from the photoobj table for objects where the bestobjid in the specobj table does not have a subclass of \"B0IVe (5394)\".",
    "query": "SELECT T1.run FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.subclass != \"B0IVe (5394)\""
  },
  {
    "db_id": "sdss_temporary",
    "id": "595_1",
    "user": "gpt-3",
    "question": "Find the names of all photometrically observed objects that have a photo type value different from 6 in the photoobj table.",
    "query": "SELECT T1.name FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.type != 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "595_2",
    "user": "gpt-3",
    "question": "Find the names of all objects that have been observed photometrically and are not type 6 in the photo_type table, by joining with the photoobj table on matching type values.",
    "query": "SELECT T1.name FROM photo_type AS T1 JOIN photoobj AS T2 ON T1.value = T2.type WHERE T2.type != 6"
  },
  {
    "db_id": "sdss_temporary",
    "id": "596_1",
    "user": "gpt-3",
    "question": "Find the specobjid of stellar spectral line indices for spectroscopic objects that have a segue2_target1 value other than -2147483644.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.segue2_target1 != -2147483644"
  },
  {
    "db_id": "sdss_temporary",
    "id": "596_2",
    "user": "gpt-3",
    "question": "Find the specobjid values from the spplines table that correspond to spectroscopic objects with a segue2_target1 value not equal to -2147483644 in the specobj table.",
    "query": "SELECT T1.specobjid FROM spplines AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.segue2_target1 != -2147483644"
  },
  {
    "db_id": "sdss_temporary",
    "id": "597_1",
    "user": "gpt-3",
    "question": "Find the neighbor mode for the nearest neighbor objects that have a different type from 3 in the table of neighbors, joined with the table of photometric objects based on their shared object ID.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.type != 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "597_2",
    "user": "gpt-3",
    "question": "Retrieve the neighbor mode from the nearest neighbour objects for all photometric objects where the object type is not equal to 3.",
    "query": "SELECT T1.neighbormode FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.type != 3"
  },
  {
    "db_id": "sdss_temporary",
    "id": "598_1",
    "user": "gpt-3",
    "question": "What are the specobjid values for the emission line estimates where the segue2primary value in the corresponding spectroscopic object is not equal to 0?",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.segue2primary != 0"
  },
  {
    "db_id": "sdss_temporary",
    "id": "598_2",
    "user": "gpt-3",
    "question": "Find the specobjid of all emission lines where the corresponding spectroscopic object is not a primary object in the Segue2 survey.",
    "query": "SELECT T1.specobjid FROM galspecline AS T1 JOIN specobj AS T2 ON T1.specobjid = T2.specobjid WHERE T2.segue2primary != 0"
  }
]