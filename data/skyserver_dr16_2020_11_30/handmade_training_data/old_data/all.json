[
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and psfmag u of photometric objects.",
    "sql_query": "select p.objid, p.psfmag_u from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(22) T(1) C(22) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and expmag u of photometric objects.",
    "sql_query": "select p.objid, p.expmag_u from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(53) T(1) C(53) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and petromag z of photometric objects.",
    "sql_query": "select p.objid, p.petromag_z from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(41) T(1) C(41) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find spectroscopic objects whose redshift warning is 0.",
    "sql_query": "select s.specobjid from specobj as s where zwarning = 0",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(2) A(0) Op(0) C(122) T(4) C(122) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and classes of spectroscopic objects.",
    "sql_query": "select s.specobjid, s.class from specobj as s",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(123) T(4) C(123) T(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and extinction r of photometric objects.",
    "sql_query": "select p.objid, p.extinction_r from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(88) T(1) C(88) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find everything about emission line estimates.",
    "sql_query": "select * from galspecline",
    "semql_query": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(2) C(0) T(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids, right ascensions, declinations, object type classifications and clean photometry flags of photometric objects whose clean photometry flag is 0.",
    "sql_query": "select p.objid, p.ra, p.dec, p.type, p.clean from photoobj as p where p.clean = 0",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(13) T(1) C(13) T(1) A(0) Op(0) C(14) T(1) C(14) T(1) Filter(2) A(0) Op(0) C(14) T(1) C(14) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find spectroscopic objects whose class is star and redshift warning is 0.",
    "sql_query": "select s.specobjid from specobj as s where s.class = 'STAR' and s.zwarning = 0",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(2) A(0) Op(0) C(122) T(4) C(122) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and expmag i of photometric objects.",
    "sql_query": "select p.objid, p.expmag_i from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(56) T(1) C(56) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find spectroscopic objects whose class is star and spectroscopic subclass is carbon.",
    "sql_query": "select s.specobjid from specobj as s where s.class = 'STAR' and s.subclass = 'CARBON' or s.subclass = 'CARBON_LINES'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(1) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all stars with both photometric and spectroscopic data",
    "sql_query": "select p.objid, p.ra, p.dec, s.z from photoobj as p join specobj as s on s.bestobjid = p.objid where p.ra > 185 and p.ra < 186 and p.dec > 15 and p.dec < 16 and s.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(0) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(1) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(2) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(3) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and expmag z of photometric objects.",
    "sql_query": "select p.objid, p.expmag_z from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(57) T(1) C(57) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids, right ascensions, declinations and object type classifications of photometric objects whose object type classification is 6.",
    "sql_query": "select p.objid, p.ra, p.dec, p.type from photoobj as p where p.type = 6",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(13) T(1) C(13) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and petromag g of photometric objects.",
    "sql_query": "select p.objid, p.petromag_g from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(38) T(1) C(38) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find photometric objects whose mode of photo observation is not 1.",
    "sql_query": "select p.objid from photoobj as p where p.mode != 1",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(1) C(7) T(1) Filter(3) A(0) Op(0) C(12) T(1) C(12) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids, right ascensions, declinations, object type classifications and clean photometry flags of photometric objects whose object type classification is 3.",
    "sql_query": "select p.objid, p.ra, p.dec, p.type, p.clean from photoobj as p where p.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(13) T(1) C(13) T(1) A(0) Op(0) C(14) T(1) C(14) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and expmag r of photometric objects.",
    "sql_query": "select p.objid, p.expmag_r from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(55) T(1) C(55) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find spectroscopic objects whose class is star.",
    "sql_query": "select s.specobjid from specobj as s where s.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and devmag i of photometric objects.",
    "sql_query": "select p.objid, p.devmag_i from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(51) T(1) C(51) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and devmag z of photometric objects.",
    "sql_query": "select p.objid, p.devmag_z from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(52) T(1) C(52) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and petromag r of photometric objects.",
    "sql_query": "select p.objid, p.petromag_r from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(39) T(1) C(39) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object type classifications of photometric objects. Return only unique records.",
    "sql_query": "select distinct p.type from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(13) T(1) C(13) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find everything about spectroscopic objects and everything about emission line estimates of galaxies from these spectroscopic objects.",
    "sql_query": "select * from specobj as s join galspecline as g on s.specobjid = g.specobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(2) C(0) T(2) Filter(18) A(0) Op(0) C(7) T(4) C(7) T(4) Root(5) Sel(0) N(0) A(0) Op(0) C(107) T(2) C(107) T(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and petromag u of photometric objects.",
    "sql_query": "select p.objid, p.petromag_u from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(37) T(1) C(37) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find spectroscopic objects whose spectroscopic subclass is starburst and class is 'GALAXY'.",
    "sql_query": "select s.specobjid from specobj as s where s.subclass = 'STARBURST' and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and psfmag i of photometric objects.",
    "sql_query": "select p.objid, p.psfmag_i from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(25) T(1) C(25) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and modelmag u of photometric objects.",
    "sql_query": "select p.objid, p.modelmag_u from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(63) T(1) C(63) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and modelmag g of photometric objects.",
    "sql_query": "select p.objid, p.modelmag_g from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(64) T(1) C(64) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and fibermag r of photometric objects.",
    "sql_query": "select p.objid, p.fibermag_r from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(34) T(1) C(34) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find photometric objects whose mode of photo observation is 1.",
    "sql_query": "select p.objid from photoobj as p where p.mode = 1",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(1) C(7) T(1) Filter(2) A(0) Op(0) C(12) T(1) C(12) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and extinction i of photometric objects.",
    "sql_query": "select p.objid, p.extinction_i from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(89) T(1) C(89) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find spectroscopic objects whose spectroscopic subclass is starburst.",
    "sql_query": "select s.specobjid from specobj as s where s.subclass = 'STARBURST'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and psfmag g of photometric objects.",
    "sql_query": "select p.objid, p.psfmag_g from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(23) T(1) C(23) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of photometric objects whose magnitude r is less than 17, extinction r is greater than 0.2 and object type classification is 3.",
    "sql_query": "select count(*) from photoobj where r < 17 and extinction_r > 0.2 and type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(1) C(0) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(4) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of photometric objects whose object type classification is 6.",
    "sql_query": "select count(*) from photoobj as p where p.type = 6",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(1) C(0) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids, classes and spectroscopic subclasses of spectroscopic objects whose spectroscopic subclass is agn and class is galaxy.",
    "sql_query": "select s.specobjid, s.class, s.subclass from specobj as s where s.subclass = 'AGN' and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find spectroscopic objects whose class is qso.",
    "sql_query": "select s.specobjid from specobj as s where class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object type classifications of photometric objects whose right ascension is greater than 100 and declination is less than 100.",
    "sql_query": "select p.type from photoobj as p where p.ra > 100 and p.dec < 100",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(13) T(1) C(13) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find everything about spectroscopic objects.",
    "sql_query": "select * from specobj as s",
    "semql_query": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(4) C(0) T(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find spectroscopic objects whose spectroscopic subclass is 'STARFORMING'.",
    "sql_query": "select s.specobjid from specobj as s where s.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids, right ascensions, declinations and object type classifications of photometric objects whose object type classification is 6. ",
    "sql_query": "select p.objid, p.ra, p.dec, p.type from photoobj as p where p.type = 6",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(13) T(1) C(13) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find everything about nearest neighbors.",
    "sql_query": "select * from neighbors as n",
    "semql_query": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and psfmag z of photometric objects.",
    "sql_query": "select p.objid, p.psfmag_z from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(26) T(1) C(26) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find everything about photometric objects whose object type classification is 3.",
    "sql_query": "select * from photoobj as p where p.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(1) C(0) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids, right ascensions, declinations, object type classifications and clean photometry flags of photometric objects whose clean photometry flag is 1.",
    "sql_query": "select p.objid, p.ra, p.dec, p.type, p.clean from photoobj as p where p.clean = 1",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(13) T(1) C(13) T(1) A(0) Op(0) C(14) T(1) C(14) T(1) Filter(2) A(0) Op(0) C(14) T(1) C(14) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and fibermag z of photometric objects.",
    "sql_query": "select p.objid, p.fibermag_z from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(36) T(1) C(36) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids, right ascensions and declinations of photometric objects whose right ascension is greater than 185, right ascension is less than 186, declination is greater than 15 and declination is less than 16 and the redshifts of spectroscopic objects whose class is 'STAR' for spectroscopic objects corresponding to these photometric objects.",
    "sql_query": "select p.objid, p.ra, p.dec, s.z from photoobj as p join specobj as s on s.bestobjid = p.objid where p.ra > 185 and p.ra < 186 and p.dec > 15 and p.dec < 16 and s.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(1) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(5) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(0) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(6)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and expmag g of photometric objects.",
    "sql_query": "select p.objid, p.expmag_g from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(54) T(1) C(54) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find spectroscopic objects whose spectroscopic subclass is ob and class is star.",
    "sql_query": "select s.specobjid from specobj as s where s.subclass = 'OB' and s.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and devmag u of photometric objects.",
    "sql_query": "select p.objid, p.devmag_u from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(48) T(1) C(48) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and fibermag g of photometric objects.",
    "sql_query": "select p.objid, p.fibermag_g from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(33) T(1) C(33) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and fibermag u of photometric objects.",
    "sql_query": "select p.objid, p.fibermag_u from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(32) T(1) C(32) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of spectroscopic objects whose survey is 'SEGUE2'.",
    "sql_query": "select count(*) from specobj as s where s.survey = 'SEGUE2'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(4) C(0) T(4) Filter(2) A(0) Op(0) C(112) T(4) C(112) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids, right ascensions and declinations of photometric objects whose right ascension is greater than 185, right ascension is less than 186, declination is greater than 15 and declination is less than 16 and the redshifts of spectroscopic objects whose class is galaxy for spectroscopic objects corresponding to these photometric objects",
    "sql_query": "select p.objid, p.ra, p.dec, s.z from photoobj as p join specobj as s on s.bestobjid = p.objid where p.ra > 185 and p.ra < 186 and p.dec > 15 and p.dec < 16 and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(0) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(5) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(3) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(7)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find everything about spectroscopic objects.",
    "sql_query": "select * from specobj as s",
    "semql_query": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(4) C(0) T(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the classes and number of spectroscopic objects grouped by their classes.",
    "sql_query": "select s.class, count(*) from specobj as s group by s.class",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(123) T(4) C(123) T(4) A(3) Op(0) C(0) T(4) C(0) T(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find everything about photometric objects whose right ascension is greater than 100.",
    "sql_query": "select * from photoobj as p where p.ra > 100",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(1) C(0) T(1) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and psfmag r of photometric objects.",
    "sql_query": "select p.objid, p.psfmag_r from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(24) T(1) C(24) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and devmag r of photometric objects.",
    "sql_query": "select p.objid, p.devmag_r from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(50) T(1) C(50) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids, right ascensions and declinations of photometric objects whose right ascension is greater than 185, right ascension is less than 186, declination is greater than 15, declination is less than 16 and object type classification is 3.",
    "sql_query": "select p.objid, p.ra, p.dec from photoobj as p where p.ra > 185 and p.ra < 186 and p.dec > 15 and p.dec < 16 and type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(5) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(1) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(2) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(7) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(6)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find spectroscopic objects whose spectroscopic subclass is agn broadline and class is galaxy.",
    "sql_query": "select s.specobjid from specobj as s where s.subclass = 'AGN BROADLINE' and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and fibermag i of photometric objects.",
    "sql_query": "select p.objid, p.fibermag_i from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(35) T(1) C(35) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and cmodelmag g of photometric objects.",
    "sql_query": "select p.objid, p.cmodelmag_g from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(74) T(1) C(74) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find spectroscopic objects and the specobjids of equivalent width estimates of galactic-stars from these spectroscopic objects.",
    "sql_query": "select spp.specobjid, spe.specobjid from spplines as spp join specobj as spe where spp.specobjid = spe.specobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(107) T(3) C(107) T(3) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(2) A(0) Op(0) C(107) T(3) C(107) T(3) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find Galaxies with both photometric and spectroscopic data",
    "sql_query": "select p.objid, p.ra, p.dec, s.z from photoobj as p join specobj as s on s.bestobjid = p.objid where p.ra > 185 and p.ra < 186 and p.dec > 15 and p.dec < 16 and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(1) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(2) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(3) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(5)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and modelmag z of photometric objects.",
    "sql_query": "select p.objid, p.modelmag_z from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(67) T(1) C(67) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids, right ascensions and declinations of photometric objects whose right ascension is greater than 185, right ascension is less than 186, declination is greater than 15, declination is less than 16 and object type classification is 6.",
    "sql_query": "select p.objid, p.ra, p.dec from photoobj as p where p.ra > 185 and p.ra < 186 and p.dec > 15 and p.dec < 16 and type = 6",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(2) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(6) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(1) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(5) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and modelmag i of photometric objects.",
    "sql_query": "select p.objid, p.modelmag_i from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(66) T(1) C(66) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find photometric objects and spectroscopic objects corresponding to these photometric objects.",
    "sql_query": "select p.objid, s.specobjid from photoobj as p join specobj as s on s.bestobjid = p.objid",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(7) T(4) C(7) T(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids, devmag g, declinations and right ascensions of photometric objects.",
    "sql_query": "select p.objid, p.devmag_g, p.dec, p.ra from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(49) T(1) C(49) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(83) T(1) C(83) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find spectroscopic objects and the specobjids of emission line estimates of galaxies from these spectroscopic objects.",
    "sql_query": "select g.specobjid, s.specobjid from galspecline as g join specobj as s on g.specobjid = s.specobjid",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(107) T(2) C(107) T(2) A(0) Op(0) C(7) T(4) C(7) T(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and modelmag r of photometric objects.",
    "sql_query": "select p.objid, p.modelmag_r from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(65) T(1) C(65) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find everything about photometric objects.",
    "sql_query": "select * from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(1) C(0) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find spectroscopic objects whose redshift warning is 1.",
    "sql_query": "select s.specobjid from specobj as s where zwarning = 1",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(2) A(0) Op(0) C(122) T(4) C(122) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids and petromag i of photometric objects.",
    "sql_query": "select p.objid, p.petromag_i from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(40) T(1) C(40) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find everything about equivalent width estimates.",
    "sql_query": "select * from spplines as s",
    "semql_query": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(3) C(0) T(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all photometric objects whose type is 6. Retrieve the object id, right ascension, declination, and object type.  ",
    "sql_query": "select p.objid, p.ra, p.dec, p.type from photoobj as p where p.type = 6",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(13) T(1) C(13) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all photometric objects whose type is 6, that have spectral observations. Retrieve the object id, right ascension, declination, and object type. ",
    "sql_query": "select p.objid, p.ra, p.dec, p.type from photoobj as p join specobj as s on s.bestobjid = p.objid where  p.type = 6",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(13) T(1) C(13) T(1) Filter(0) Filter(18) A(0) Op(0) C(7) T(1) C(7) T(1) Root(5) Sel(0) N(0) A(0) Op(0) C(108) T(4) C(108) T(4) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all photometric objects whose type is 3. Retrieve the object id, right ascension, declination, and object type.  ",
    "sql_query": "select  p.objid, p.ra, p.dec, p.type from photoobj as p where p.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(13) T(1) C(13) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all photometric objects whose type is 3, that have spectral observations. Retrieve the object id, right ascension, declination, and object type. ",
    "sql_query": "select  p.objid, p.ra, p.dec, p.type from photoobj as p join specobj as s on s.bestobjid = p.objid where p.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(13) T(1) C(13) T(1) Filter(0) Filter(18) A(0) Op(0) C(7) T(1) C(7) T(1) Root(5) Sel(0) N(0) A(0) Op(0) C(108) T(4) C(108) T(4) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Retrieve all photometric object id, right ascension, declination, and object type,  whose right ascension is greater than 185 and less than 186, declination is greater than 15 and less than 16, and whose type is 3.  ",
    "sql_query": "select p.objID, p.ra, p.dec from photoobj as p where p.ra > 185 and p.ra < 186 and p.dec > 15 and p.dec < 16 and p.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(9) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(5) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(1) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(6) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Retrieve all photometric object id, right ascension, declination, and object type,  whose right ascension is greater than 185 and less than 186, declination is greater than 15 and less than 16, and whose type is 6.  ",
    "sql_query": "select p.objID, p.ra, p.dec from photoobj as p where p.ra > 185 and p.ra < 186 and p.dec > 15 and p.dec < 16 and p.type = 6",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(1) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(4) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(7) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(6) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(5)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all photometric object id, right ascension, declination, and object type,  whose right ascension is greater than 185 and less than 186, declination is greater than 15 and less than 16 and whose spectroscopic objects class is 'STAR'",
    "sql_query": "select p.objID, p.ra, p.dec, s.z from Photoobj as p join specobj as s on s.bestobjid = p.objid where s.ra > 185 and s.ra < 186 AND s.dec > 15 and s.dec < 16 and s.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(6) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(1) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(4) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(5)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all photometric object id, right ascension, declination, and object type,  whose right ascension is greater than 185 and less than 186, declination is greater than 15 and less than 16 and whose spectroscopic objects class is 'GALAXY'",
    "sql_query": "select p.objID, p.ra, p.dec, s.z from Photoobj as p join specobj as s on s.bestobjid = p.objid where s.ra > 185 and s.ra < 186 AND s.dec > 15 and s.dec < 16 and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(8) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(4) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(0) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(5) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects whose subclass is 'STARFORMING'",
    "sql_query": "select s.specobjid from specobj as s where s.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects whose subclass is 'STARBURST'",
    "sql_query": "select s.specobjid from specobj as s where s.subclass = 'STARBURST'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects whose subclass is 'AGN' and class is 'GALAXY'",
    "sql_query": "select s.specobjid, s.class, s.subclass from specobj as s where s.subclass = 'AGN' and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects whose subclass is 'AGN BROADLINE' and class is 'GALAXY'",
    "sql_query": "select s.specobjid, s.class, s.subclass from specobj as s where s.subclass = 'AGN BROADLINE' and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects whose class is 'QSO''",
    "sql_query": "select specobjid from specobj where class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects whose subclass is 'OB' and class is 'STAR'",
    "sql_query": "select s.specobjid from SpecObj as s where s.subclass = 'OB' and s.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects whose subclass is 'Carbon' or 'Carbon_lines' and class is 'STAR'",
    "sql_query": "select s.specobjid from specobj as s where s.class = 'STAR' and s.subclass = 'Carbon' or s.subclass = 'Carbon_lines'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2) Filter(1) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects whose class is 'STAR'' and subclass begins with 'WD'",
    "sql_query": "select s.specobjid,s.bestobjid, s.class, s.subclass, s.programname from specobj as s where s.class = 'STAR' and s.subclass like 'WD%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) A(0) Op(0) C(113) T(4) C(113) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects whose class is 'STAR'' and subclass begins with 'O'",
    "sql_query": "select s.specobjid, s.subclass from specobj as s where s.class = 'STAR' and s.subclass like 'O%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects whose class is 'STAR'' and subclass begins with 'B'",
    "sql_query": "select s.specobjid, s.subclass from specobj as s where s.class = 'STAR' and s.subclass like 'B%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects whose class is 'STAR'' and subclass begins with 'A'",
    "sql_query": "select s.specobjid, s.subclass from specobj as s where s.class = 'STAR' and s.subclass like 'A%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects whose class is 'STAR'' and subclass begins with 'F'",
    "sql_query": "select s.specobjid, s.subclass from specobj as s where s.class = 'STAR' and s.subclass like 'F%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects whose class is 'STAR'' and subclass begins with 'G'",
    "sql_query": "select s.specobjid, s.subclass from specobj as s where s.class = 'STAR' and s.subclass like 'G%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects whose class is 'STAR'' and subclass begins with 'K'",
    "sql_query": "select s.specobjid, s.subclass from specobj as s where s.class = 'STAR' and s.subclass like 'K%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects whose class is 'STAR'' and subclass begins with 'M'",
    "sql_query": "select s.specobjid, s.subclass from specobj as s where s.class = 'STAR' and s.subclass like 'M%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects whose class is 'STAR'' and subclass begins with 'L' or 'T'",
    "sql_query": "select s.specobjid, s.subclass from specobj as s where s.class = 'STAR' and s.subclass like 'L%' or s.subclass like 'T%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2) Filter(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all photometric objects whose type is 6 and the difference of  magnitude u and magnitude g is less than 0.4,  the difference between magnitude g and magnitude r is less than 0.7, the difference between magnitude r and magnitude i is greater than 0.4 and the difference between magnitude g and magnitude r is greater than 0.4    ",
    "sql_query": "select p.objid from photoobj as p where p.type = 6 and p.u - p.g < 0.4  and p.g - p.r < 0.7 and p.r - p.i > 0.4 and p.i - p.z > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(1) C(7) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(2) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(0) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(2) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all photometric objects whose type is 6, which have neighbors whose class and the neighbor type both are 6, the the neighbor's distance less than 0.05,  the difference of magnitude u and magnitude g is lower than 0.4, the difference of magnitude g and magnitude r is lower than 0.7, the difference of magnitude r and magnitude i is higher than 0.4 and the difference of magnitude i and magnitude z is higher than 0.4",
    "sql_query": "select p.objid, s.objid from photoobj as p join neighbors as n on p.objid = n.objid join photoobj as s on s.objid = n.objid where p.type = 6 and s.type = 6 and n.neighbortype = 6 and n.distance < 0.05 and (p.u - p.g) < 0.4  and (p.g - p.r) < 0.7 and  (p.r - p.i) > 0.4 and (p.i - p.z) > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(7) T(1) C(7) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4) Filter(0) Filter(2) A(0) Op(0) C(5) T(0) C(5) T(0) V(4) Filter(0) Filter(4) A(0) Op(0) C(3) T(0) C(3) T(0) V(1) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(2) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(3) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(2) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the number of photometric objects whose magnitude r brighter than 17, local extinction greater than 0.2 and type equivalent to 3.",
    "sql_query": "select count(*) from photoobj as p where p.r < 17 and p.extinction_r > 0.2 and p.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(1) C(0) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(0) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(4) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all photometric objects whose type is 3, magnitude g is brighter than 22, the difference of magnitude u and magnitude g is between -0.27 and 0.71, the difference of magnitude g and magnitude r is between -0.24 and 0.35, the difference of magnitude r and magnitude i is between -0.27 and 0.57 and the difference of magnitude i and magnitude z is between -0.35 and 0.7. Retrieve the object id and magnitude g with descent order by magnitude g. ",
    "sql_query": "select p.objid, p.g from photoobj as p where p.type = 3 and p.g <= 22 and p.u - p.g >= -0.27 and p.u - p.g < 0.71 and p.g - p.r  >= -0.24 and p.g - p.r < 0.35 and p.r - p.i >= -0.27 and p.r - p.i < 0.57 and p.i - p.z  >= -0.35 and p.i - p.z < 0.7 order by p.g desc",
    "semql_query": "Root1(3) Root(1) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(93) T(1) C(93) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(12) Filter(0) Filter(6) A(0) Op(0) C(93) T(1) C(93) T(1) V(7) Filter(0) Filter(7) A(0) Op(1) C(92) T(1) C(93) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(10) Filter(0) Filter(7) A(0) Op(1) C(93) T(1) C(94) T(1) V(0) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(5) Filter(0) Filter(7) A(0) Op(1) C(94) T(1) C(95) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(94) T(1) C(95) T(1) V(6) Filter(0) Filter(7) A(0) Op(1) C(95) T(1) C(96) T(1) V(8) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(9) Order(0) A(0) Op(0) C(93) T(1) C(93) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all photometric object id, right ascension, declination whose type is 6, magnitude i is brighter than 19 and darker than 0, the difference of magnitude g and magnitude r is higher than 2.26, the difference of magnitude i and magnitude z is lower than 0.25, and either the difference of magnitude u and magnitude g is greater than 2.0 or magnitude u is darker than 22.3",
    "sql_query": "select objid, ra, dec from photoobj where type = 6 and i < 19 and i > 0 and g - r > 2.26 and i - z < 0.25 and u - g > 2.0  or  u > 22.3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(4) A(0) Op(0) C(95) T(1) C(95) T(1) V(3) Filter(0) Filter(5) A(0) Op(0) C(95) T(1) C(95) T(1) V(5) Filter(0) Filter(5) A(0) Op(1) C(93) T(1) C(94) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(2) Filter(1) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(7) Filter(5) A(0) Op(0) C(92) T(1) C(92) T(1) V(8)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the photometric objects whose type is 3,  right ascension is near 141, magnitude g is brighter than 18.0 and the difference of magitude u and magnitude g is greater than 2.2. Retrieve the objecti id, right ascension and declination of these objects.",
    "sql_query": "select objid, ra, dec from photoobj where type = 3 and ra between 140.9 and 141.1 and g < 18.0 and u - g > 2.2",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4) Filter(0) Filter(8) A(0) Op(0) C(83) T(1) C(83) T(1) V(7) V(8) Filter(0) Filter(4) A(0) Op(0) C(93) T(1) C(93) T(1) V(5) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show me the photometric objects whose type is 3,  right ascension is near 141, magnitude g is brighter than 18.0 and the difference of magitude u and magnitude g is greater than 2.2. Retrieve all magnitude values (u, g, r, i and z) of these objects.",
    "sql_query": "select u, g, r, i, z from photoobj where type = 3 and ra between 140.9 and 141.1  and g < 18.0 and u - g > 2.2",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(92) T(1) C(92) T(1) A(0) Op(0) C(93) T(1) C(93) T(1) A(0) Op(0) C(94) T(1) C(94) T(1) A(0) Op(0) C(95) T(1) C(95) T(1) A(0) Op(0) C(96) T(1) C(96) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(8) A(0) Op(0) C(83) T(1) C(83) T(1) V(7) V(8) Filter(0) Filter(4) A(0) Op(0) C(93) T(1) C(93) T(1) V(2) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(5)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Search for spectroscopic objects, whose class is 'QSO', redshifts greater than 4.5 with good measurements which means zWarning equals to 0. Retrieve each best object id, right ascension, declination, and redshift",
    "sql_query": "select bestobjid, ra, dec, z from specobj where class = 'QSO' and z > 4.5 and zWarning = 0",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(83) T(4) C(83) T(4) A(0) Op(0) C(84) T(4) C(84) T(4) A(0) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(0) Filter(5) A(0) Op(0) C(120) T(4) C(120) T(4) V(2) Filter(2) A(0) Op(0) C(122) T(4) C(122) T(4) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Search for photometric object whose type is 6 and the difference of magnitude u and magnitude g is less than 0.5. Retrieve each object id, right ascension and declination.",
    "sql_query": "select objid, ra, dec from photoobj where type = 6 and u - g < 0.5",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(2) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Search for photometric object whose type is 6 and the difference of magnitude u and magnitude g is less than 0.5. Retrieve all magnitude values (u, g, r, i and z) of these objects.",
    "sql_query": "select u, g, r, i, z from photoobj where type = 6 and u - g < 0.5",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(92) T(1) C(92) T(1) A(0) Op(0) C(93) T(1) C(93) T(1) A(0) Op(0) C(94) T(1) C(94) T(1) A(0) Op(0) C(95) T(1) C(95) T(1) A(0) Op(0) C(96) T(1) C(96) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object id, right ascension and declination from photometric objects, which have type 6, value of magnitude g between 17 and 18 and redshift less than 0.05. ",
    "sql_query": "select objid, ra, dec from photoobj as p join specobj as s on s.bestobjid = p.objid where s.class = 'GALAXY' and p.g between 17 and 18 and s.z < 0.05",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(7) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(5) V(0) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all magnitude values (u, g, r, i and z) from photometric objects, which have type 6, value of magnitude g between 17 and 18 and redshift less than 0.05. ",
    "sql_query": "select u, g, r, i, z from photoobj as p join specobj as s on s.bestobjid = p.objid where s.class = 'GALAXY' and p.g between 17 and 18 and s.z < 0.05",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(92) T(1) C(92) T(1) A(0) Op(0) C(93) T(1) C(93) T(1) A(0) Op(0) C(94) T(1) C(94) T(1) A(0) Op(0) C(95) T(1) C(95) T(1) A(0) Op(0) C(96) T(1) C(96) T(1) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(6) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(0) V(2) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(5)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Retrieve the best object id, right ascension, declination and redshift from spectroscopic objects, whose class is galaxy and redshift in a range of 0.5 and 1  ",
    "sql_query": "select bestobjid, ra, dec, z from specobj where class = 'GALAXY' and z > 0.5 and  z < 1 ",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(83) T(4) C(83) T(4) A(0) Op(0) C(84) T(4) C(84) T(4) A(0) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(3) Filter(0) Filter(5) A(0) Op(0) C(120) T(4) C(120) T(4) V(2) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Retrieve the best object id, right ascension, declination and redshift from spectroscopic objects, which have class galaxy and redshift in a range of 0.5 and 1",
    "sql_query": "select bestobjid, ra, dec, z from specobj where class = 'GALAXY' and z between 0.5 and 1 ",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(83) T(4) C(83) T(4) A(0) Op(0) C(84) T(4) C(84) T(4) A(0) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(3) Filter(8) A(0) Op(0) C(120) T(4) C(120) T(4) V(0) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find everything about nearest neighbors.",
    "sql_query": "select * from neighbors as n",
    "semql_query": "Root1(3) Root(5) Sel(0) N(0) A(0) Op(0) C(0) T(0) C(0) T(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the photometric objects with object ids, nearst neighbor ids, distance center-neighbors, center types.",
    "sql_query": "select p.objid, n.neighborobjid, n.distance, n.type, from neighbors as n join  photoobj as p on n.objid = p.objid",
    "semql_query": "Root1(3) Root(5) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(2) T(0) C(2) T(0) A(0) Op(0) C(3) T(0) C(3) T(0) A(0) Op(0) C(4) T(0) C(4) T(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find spectroscopic objects and the specobjids of equivalent width estimates of galactic-stars from these spectroscopic objects.",
    "sql_query": "select sp.specobjid, s.specobjid from spplines as sp join specobj as s on sp.specobjid = s.specobjid",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(107) T(3) C(107) T(3) A(0) Op(0) C(7) T(4) C(7) T(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object type classifications of photometric objects whose right ascension is greater than 100 and declination is less than 100.",
    "sql_query": "select p.type from photoobj as p where p.ra > 100 and p.dec < 100",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(13) T(1) C(13) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of photometric objects whose object type classification is 6.",
    "sql_query": "select count(*) from photoobj as p where p.type = 6",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(1) C(0) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object type classifications of photometric objects. Return only unique records.",
    "sql_query": "select distinct p.type from photoobj as p",
    "semql_query": "Root1(3) Root(5) Sel(1) N(0) A(0) Op(0) C(13) T(1) C(13) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the classes and number of spectroscopic objects grouped by their classes.",
    "sql_query": "select s.class, count(*) from specobj as s group by s.class",
    "semql_query": "Root1(3) Root(5) Sel(0) N(1) A(0) Op(0) C(123) T(4) C(123) T(4) A(3) Op(0) C(0) T(4) C(0) T(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of spectroscopic objects whose survey is 'SEGUE2'.",
    "sql_query": "select count(*) from specobj as s where s.survey = 'SEGUE2'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(4) C(0) T(4) Filter(2) A(0) Op(0) C(112) T(4) C(112) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find spectroscopic objects whose class is star and redshift warning is 0.",
    "sql_query": "select s.specobjid from specobj as s where s.class = 'STAR' and s.zwarning = 0",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(2) A(0) Op(0) C(122) T(4) C(122) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find everything about photometric objects whose object type classification is 3.",
    "sql_query": "select * from photoobj as p where p.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(1) C(0) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find everything about spectroscopic objects and everything about emission line estimates of galaxies from these spectroscopic objects.",
    "sql_query": "select * from specobj as s join galspecline as g on s.specobjid = g.specobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(0) T(2) C(0) T(2) Filter(18) A(0) Op(0) C(7) T(4) C(7) T(4) Root(5) Sel(0) N(0) A(0) Op(0) C(107) T(2) C(107) T(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object ids, right ascensions, declinations and object type classifications of photometric objects whose object type classification is 6.",
    "sql_query": "select p.objid, p.ra, p.dec, p.type from photoobj as p where p.type = 6",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(13) T(1) C(13) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the photometric objects with object ids, spectroscopic object id whose spectroscopic class is 'GALAXY', with the difference of magnitude u and magnitude r greater trhan 2.22 and the difference of magnitude g and magnitude i greater than 1.",
    "sql_query": "select p.objid, s.specobjid from photoobj as p join specobj as s on s.bestobjid = p.objid where s.class = 'GALAXY' and p.u - p.r > 2.22 and p.g - p.i > 1",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(0) Filter(5) A(0) Op(1) C(92) T(1) C(94) T(1) V(2) Filter(5) A(0) Op(1) C(93) T(1) C(95) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the object id from spectroscopic objects with survey equal to 'eboss', programname of either 'ELG_NGC' or 'ELG_SGC'  and spectroscopic class 'GALAXY'",
    "sql_query": "select s.specobjid from specobj as s where s.survey = 'eboss' and s.programname = 'ELG_NGC' or s.programname = 'ELG_SGC' and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(112) T(4) C(112) T(4) V(5) Filter(0) Filter(1) Filter(2) A(0) Op(0) C(113) T(4) C(113) T(4) V(4) Filter(2) A(0) Op(0) C(113) T(4) C(113) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with SDSS special program targets equal to '1024'",
    "sql_query": "select s.specobjid from specobj as s where s.special_target1 = '1024'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(2) A(0) Op(0) C(116) T(4) C(116) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with SDSS special program targets equal to '768' or '256' and class as 'GALAXY' ",
    "sql_query": "select s.specobjid from specobj as s where s.special_target1 = '768' or s.special_target1 = '256' and class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(1) Filter(2) A(0) Op(0) C(116) T(4) C(116) T(4) V(6) Filter(2) A(0) Op(0) C(116) T(4) C(116) T(4) V(2) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with SDSS special program targets equal to '16' and class 'STAR' ",
    "sql_query": "select s.specobjid from specobj as s where s.special_target1 = '16' and s.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(116) T(4) C(116) T(4) V(3) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with SDSS special program targets equal to '536870912' and class 'STAR' ",
    "sql_query": "select specobjid from specobj as s where s.special_target1 = '536870912' and s.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(116) T(4) C(116) T(4) V(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with SDSS special program targets equal to '268435456' or '134217728' and class as 'GALAXY' ",
    "sql_query": "select specobjid from specobj as s where s.special_target1 = '268435456' or s.special_target1 = '134217728' and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(1) Filter(2) A(0) Op(0) C(116) T(4) C(116) T(4) V(0) Filter(2) A(0) Op(0) C(116) T(4) C(116) T(4) V(5) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with BOSS ancillary program targets equal to 2048,  4096,  8192 or 16384 and class as 'GALAXY' ",
    "sql_query": "select specobjid from specobj as s where s.ancillary_target1 = 2048 or s.ancillary_target1 = 4096 or s.ancillary_target1 = 8192 or s.ancillary_target1 = 16384 and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(1) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(7) Filter(1) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(8) Filter(1) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(4) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(6) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(5)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with BOSS ancillary program targets equal to 2097152 and class as 'GALAXY' ",
    "sql_query": "select specobjid from specobj as s where s.ancillary_target1 = 2097152 and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with BOSS ancillary program targets equal to '549755813888' and class as 'GALAXY' ",
    "sql_query": "select specobjid from specobj as s where s.ancillary_target1 = '549755813888' and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with BOSS ancillary program targets equal to '1' and class as 'STAR' ",
    "sql_query": "select specobjid from specobj as s where s.ancillary_target1 = '1' and s.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with BOSS ancillary program targets equal to '2' or '4' and class as 'STAR' ",
    "sql_query": "select specobjid from specobj as s where s.ancillary_target1 = '2' or s.ancillary_target1 = '4' and s.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(1) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(3) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with BOSS ancillary program targets equal to '16' and class as 'STAR' ",
    "sql_query": "select specobjid from specobj as s where s.ancillary_target1 = '16' and s.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(2) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with BOSS ancillary program targets equal to '8' and class as 'STAR' ",
    "sql_query": "select specobjid from specobj as s where s.ancillary_target1 = '8' and s.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with BOSS ancillary program targets equal to '281474976710656' and class as 'STAR' ",
    "sql_query": "select specobjid from specobj as s where s.ancillary_target1 = '281474976710656' and s.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with BOSS ancillary program targets equal to '72057594037927936' and class as 'GALAXY' ",
    "sql_query": "select specobjid from specobj as s where s.ancillary_target1 = '72057594037927936' and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with BOSS ancillary program targets equal to '1125899906842624' and class as 'QSO' ",
    "sql_query": "select specobjid from specobj as s where s.ancillary_target1 = '1125899906842624' and s.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with BOSS ancillary program targets equal to '18014398509481984' and class as 'QSO' ",
    "sql_query": "select specobjid from specobj as s where s.ancillary_target1 = '18014398509481984' and s.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(3) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with BOSS ancillary program targets equal to '4503599627370496' and class as 'QSO' ",
    "sql_query": "select specobjid from specobj as s where s.ancillary_target1 = '4503599627370496' and s.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with BOSS ancillary program targets equal to '144115188075855872' and class as 'GALAXY' ",
    "sql_query": "select specobjid from specobj as s where s.ancillary_target1 = '144115188075855872' and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with BOSS ancillary program targets equal to '536870912', '1073741824', or '2147483648' and class as 'QSO' ",
    "sql_query": "select specobjid from specobj as s where s.ancillary_target1 = '536870912' or s.ancillary_target1 = '1073741824' or s.ancillary_target1 = '2147483648' and s.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(1) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(7) Filter(1) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(6) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(5) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with BOSS ancillary program targets equal to '1152921504606846976' or '16384' and class as 'GALAXY' ",
    "sql_query": "select specobjid from specobj as s where s.ancillary_target1 = '1152921504606846976' or s.ancillary_target1 = '16384' and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(1) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(4) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with BOSS ancillary program targets equal to '288230376151711744' or '2048' and class as 'GALAXY' ",
    "sql_query": "select specobjid from specobj as s where s.ancillary_target1 = '288230376151711744' or s.ancillary_target1 = '2048' and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(1) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(4) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(3) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all spectroscopic objects with B63 equal to '576460752303423488' or '4096' and class as 'GALAXY' ",
    "sql_query": "select specobjid from specobj as s where s.ancillary_target1 = '576460752303423488' or s.ancillary_target1 = '4096' and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(1) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(5) Filter(2) A(0) Op(0) C(119) T(4) C(119) T(4) V(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find th photometric object id and the corresponding spectroscopic object id, whose composite modelmagnitude g between 0 and 23, both composite modelmagnitude error g and composite modelmagnitude error r less than 0.2, the difference of composite modelmagnitude u and composite modelmagnitude g greater than 0.3, the difference of composite modelmagnitude r and composite modelmagnitude g greater than 0.5, the difference of composite modelmagnitude r and composite modelmagnitude i less than 1.0,  the difference of composite modelmagnitude i and composite modelmagnitude g greater than 0.5, either the difference of composite modelmagnitude r and composite modelmagnitude g greater than 0.7 or the difference of composite modelmagnitude i and composite modelmagnitude g greater than 1.0, the petrocian radius g smaller than 5, the petrosian radius containing 90% of flux smaller than 5.0 and clean photometry flag equal to 1, redshift less or equal to 1 and spectroscopic class is 'GALAXY'",
    "sql_query": "select  p.objid, s.specobjid from photoobj as p join specobj as s  on s.bestobjid = p.objid where p.cModelMag_g > 0 and p.cModelMag_g < 23 and cModelMagErr_g < 0.2 and cModelMagErr_r < 0.2 and p.cModelMag_u - p.cModelMag_g > 0.3 and p.cModelMag_r - p.cModelMag_g > 0.5 and p.cModelMag_r - p.cModelMag_i < 1.0 and p.cModelMag_i - p.cModelMag_g > 0.5 and p.cModelMag_r - p.cModelMag_g > 0.7 or p.cModelMag_i - p.cModelMag_g > 1.0 and p.petrorad_g < 5 and petroR90_r < 5.0 and p.clean = 1 and s.z <= 0.1 and s.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(5) A(0) Op(0) C(74) T(1) C(74) T(1) V(7) Filter(0) Filter(4) A(0) Op(0) C(74) T(1) C(74) T(1) V(0) Filter(0) Filter(4) A(0) Op(0) C(79) T(1) C(79) T(1) V(2) Filter(0) Filter(4) A(0) Op(0) C(80) T(1) C(80) T(1) V(2) Filter(0) Filter(5) A(0) Op(1) C(73) T(1) C(74) T(1) V(11) Filter(0) Filter(5) A(0) Op(1) C(75) T(1) C(74) T(1) V(10) Filter(0) Filter(4) A(0) Op(1) C(75) T(1) C(76) T(1) V(8) Filter(0) Filter(5) A(0) Op(1) C(76) T(1) C(74) T(1) V(10) Filter(0) Filter(1) Filter(5) A(0) Op(1) C(75) T(1) C(74) T(1) V(5) Filter(5) A(0) Op(1) C(76) T(1) C(74) T(1) V(8) Filter(0) Filter(4) A(0) Op(0) C(43) T(1) C(43) T(1) V(3) Filter(0) Filter(4) A(0) Op(0) C(47) T(1) C(47) T(1) V(3) Filter(0) Filter(2) A(0) Op(0) C(14) T(1) C(14) T(1) V(8) Filter(0) Filter(6) A(0) Op(0) C(120) T(4) C(120) T(4) V(12) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(6)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average modelmagnitude corrected for extinction r from photometric objects with type classification of 3 grouped by the comosite modelmagnitude u?",
    "sql_query": "SELECT T1.cmodelmag_u, avg( T1.dered_i) FROM photoobj AS T1 WHERE T1.type = 3 GROUP BY T1.cmodelmag_u",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(73) T(1) C(73) T(1) A(5) Op(0) C(100) T(1) C(100) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum plate id of the spectroscopic objects of AGN subclass and GALAXY class grouped in load division?",
    "sql_query": "SELECT max( T1.plateid), T1.loadversion FROM specobj AS T1 WHERE T1.subclass = 'AGN' and T1.class = 'GALAXY' GROUP BY T1.loadversion",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(109) T(4) C(109) T(4) A(0) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the number of plate id for each best object with class 'GALAXY' and magnitude g between 17 and 18 and a redshift lower than 0.05?",
    "sql_query": "SELECT count( T2.plateid) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05 GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(109) T(4) C(109) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(5) V(4) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Which photometric objects are labelled as type 6? List the clean photometry flag, the psfmagnitude error u, the psfmagnitude error r, and the model magnitude error r.",
    "sql_query": "SELECT T1.clean, T1.psfmagerr_u, T1.psfmagerr_r, T1.modelmagerr_r FROM photoobj AS T1 WHERE T1.type = 6",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(14) T(1) C(14) T(1) A(0) Op(0) C(27) T(1) C(27) T(1) A(0) Op(0) C(29) T(1) C(29) T(1) A(0) Op(0) C(70) T(1) C(70) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the minimum extinction r for each modelmag z of photometric objects with type classification of 6, magnitude i less then 19 and greater than 0, difference of magnitude g and r greater than 2.26, difference of magnitude i and z less than 0.25, difference of magnitude u and g greater than 2, or those magnitude u greater than 22.3. ",
    "sql_query": "SELECT T1.modelmag_z, min( T1.extinction_r) FROM photoobj AS T1 WHERE T1.type = 6 and T1.i < 19 and T1.i > 0 and T1.g - T1.r > 2.26 and T1.i - T1.z < 0.25 and T1.u - T1.g > 2 or T1.u > 22.3 GROUP BY T1.modelmag_z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(67) T(1) C(67) T(1) A(2) Op(0) C(88) T(1) C(88) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(9) Filter(0) Filter(4) A(0) Op(0) C(95) T(1) C(95) T(1) V(8) Filter(0) Filter(5) A(0) Op(0) C(95) T(1) C(95) T(1) V(2) Filter(0) Filter(5) A(0) Op(1) C(93) T(1) C(94) T(1) V(5) Filter(0) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(6) Filter(1) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(4) Filter(5) A(0) Op(0) C(92) T(1) C(92) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the average time of observation r for all of the photometric objects according to different load versions with type classification 3, a magnitude g at most of 22, a difference of magnitude u and g between -0.27 and 0.71, a difference of magnitude g and r between -0.24 and 0.35, a difference of magnitude r and i between -0.27 and 0.57, a difference of magnitude i and z between -0.35 and 0.7? List the result by load version in descending order.",
    "sql_query": "SELECT T1.loadversion, avg( T1.tai_r) FROM photoobj AS T1 WHERE T1.type = 3 and T1.g <= 22 and T1.u - T1.g >= -0.27 and T1.u - T1.g < 0.71 and T1.g - T1.r >= -0.24 and T1.g - T1.r < 0.35 and T1.r - T1.i >= -0.27 and T1.r - T1.i < 0.57 and T1.i - T1.z >= -0.35 and T1.i - T1.z < 0.7 GROUP BY T1.loadversion   ORDER BY T1.loadversion DESC",
    "semql_query": "Root1(3) Root(1) Sel(0) N(1) A(0) Op(0) C(91) T(1) C(91) T(1) A(5) Op(0) C(104) T(1) C(104) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(11) Filter(0) Filter(6) A(0) Op(0) C(93) T(1) C(93) T(1) V(2) Filter(0) Filter(7) A(0) Op(1) C(92) T(1) C(93) T(1) V(10) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(1) Filter(0) Filter(7) A(0) Op(1) C(93) T(1) C(94) T(1) V(4) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(9) Filter(0) Filter(7) A(0) Op(1) C(94) T(1) C(95) T(1) V(10) Filter(0) Filter(4) A(0) Op(1) C(94) T(1) C(95) T(1) V(0) Filter(0) Filter(7) A(0) Op(1) C(95) T(1) C(96) T(1) V(8) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(3) Order(0) A(0) Op(0) C(91) T(1) C(91) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of photometric objects according to different magnitude g whose object type classification are of 3, magnitude u are less than or equal to 22. Besides those objects have a difference of magnitude u and g greater than or equal to -0.27 and smaller than or equal to 0.71, a difference of magnitude g and r bigger than or equal to -0.24 and smaller than or equal to 0.35, a difference of magnitude r and i larger than or equal to -0.27 and smaller than or equal to 0.57, a difference of magnitude i and z larger than or equal to -0.35 and smaller than or equal to 0.7? Sort the result by magnitude g in descending order.",
    "sql_query": "SELECT count( T1.fibermag_u) FROM photoobj AS T1 WHERE T1.type = 3 and T1.g <= 22 and T1.u - T1.g >= -0.27 and T1.u - T1.g < 0.71 and T1.g - T1.r >= -0.24 and T1.g - T1.r < 0.35 and T1.r - T1.i >= -0.27 and T1.r - T1.i < 0.57 and T1.i - T1.z >= -0.35 and T1.i - T1.z < 0.7 GROUP BY T1.g   ORDER BY T1.g DESC",
    "semql_query": "Root1(3) Root(1) Sel(0) N(0) A(3) Op(0) C(32) T(1) C(32) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(9) Filter(0) Filter(6) A(0) Op(0) C(93) T(1) C(93) T(1) V(0) Filter(0) Filter(7) A(0) Op(1) C(92) T(1) C(93) T(1) V(11) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(3) Filter(0) Filter(7) A(0) Op(1) C(93) T(1) C(94) T(1) V(8) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(10) Filter(0) Filter(7) A(0) Op(1) C(94) T(1) C(95) T(1) V(11) Filter(0) Filter(4) A(0) Op(1) C(94) T(1) C(95) T(1) V(4) Filter(0) Filter(7) A(0) Op(1) C(95) T(1) C(96) T(1) V(5) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(13) Order(0) A(0) Op(0) C(93) T(1) C(93) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the minimum petromag i for each psfmag z of all photometric objects with a type classification as 3, a magnitude g at most of 22,  a difference of magnitude u and g bigger than -0.27 and smaller than 0.71, a difference of magnitude g and r bigger than -0.24 and smaller than 0.35, a difference of magnitude r and i larger than -0.27 and smaller than 0.57, a difference of magnitude i and z larger than -0.35 and smaller than 0.7? Sort the result by psfmag z in descending order.",
    "sql_query": "SELECT T1.psfmag_z, min( T1.petromag_i) FROM photoobj AS T1 WHERE T1.type = 3 and T1.g <= 22 and T1.u - T1.g >= -0.27 and T1.u - T1.g < 0.71 and T1.g - T1.r >= -0.24 and T1.g - T1.r < 0.35 and T1.r - T1.i >= -0.27 and T1.r - T1.i < 0.57 and T1.i - T1.z >= -0.35 and T1.i - T1.z < 0.7 GROUP BY T1.psfmag_z   ORDER BY T1.psfmag_z DESC",
    "semql_query": "Root1(3) Root(1) Sel(0) N(1) A(0) Op(0) C(26) T(1) C(26) T(1) A(2) Op(0) C(40) T(1) C(40) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(12) Filter(0) Filter(6) A(0) Op(0) C(93) T(1) C(93) T(1) V(7) Filter(0) Filter(7) A(0) Op(1) C(92) T(1) C(93) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(10) Filter(0) Filter(7) A(0) Op(1) C(93) T(1) C(94) T(1) V(0) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(5) Filter(0) Filter(7) A(0) Op(1) C(94) T(1) C(95) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(94) T(1) C(95) T(1) V(6) Filter(0) Filter(7) A(0) Op(1) C(95) T(1) C(96) T(1) V(8) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(9) Order(0) A(0) Op(0) C(26) T(1) C(26) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many photometric objects have the fiber magnitude u for each petrocian radius z with an object type classification of 3, an magnitude g less or equal to 22, a difference of magnitude u and g between -0.27 and 0.71, a difference of magnitude g and r between -0.24 and 0.35, a difference of magnitude r and i between -0.27 and 0.57, a difference of magnitude i and z between -0.35 and 0.7?",
    "sql_query": "SELECT count( T1.fibermag_u), T1.petrorad_z FROM photoobj AS T1 WHERE T1.type = 3 and T1.g <= 22 and T1.u - T1.g >= -0.27 and T1.u - T1.g < 0.71 and T1.g - T1.r >= -0.24 and T1.g - T1.r < 0.35 and T1.r - T1.i >= -0.27 and T1.r - T1.i < 0.57 and T1.i - T1.z >= -0.35 and T1.i - T1.z < 0.7 GROUP BY T1.petrorad_z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(3) Op(0) C(32) T(1) C(32) T(1) A(0) Op(0) C(46) T(1) C(46) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(5) Filter(0) Filter(6) A(0) Op(0) C(93) T(1) C(93) T(1) V(11) Filter(0) Filter(7) A(0) Op(1) C(92) T(1) C(93) T(1) V(2) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(1) Filter(0) Filter(7) A(0) Op(1) C(93) T(1) C(94) T(1) V(3) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(6) Filter(0) Filter(7) A(0) Op(1) C(94) T(1) C(95) T(1) V(2) Filter(0) Filter(4) A(0) Op(1) C(94) T(1) C(95) T(1) V(4) Filter(0) Filter(7) A(0) Op(1) C(95) T(1) C(96) T(1) V(10) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(9)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the center type and fibermag i, for object belonging to a neighborhood with a center-neighbor distance below 0.05, a type classification of 6 and a neighbor type of 6, which have a difference of magnitude u and g below 0.4, a difference of magnitude g and r below 0.7, a difference of magnitude r and i above 0.4, and a difference of magnitude i and z above 0.4.",
    "sql_query": "SELECT T1.type, T2.fibermag_i FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.type = 6 and T2.type = 6 and T1.neighbortype = 6 and T1.distance < 0.05 and T2.u - T2.g < 0.4 and T2.g - T2.r < 0.7 and T2.r - T2.i > 0.4 and T2.i - T2.z > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(4) T(0) C(4) T(0) A(0) Op(0) C(35) T(1) C(35) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(2) A(0) Op(0) C(5) T(0) C(5) T(0) V(0) Filter(0) Filter(4) A(0) Op(0) C(3) T(0) C(3) T(0) V(2) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(3) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(4) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(3) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many objects for each petromag r are there across the objects with object type classification of 6 and neighbor type of 6, which have a nearby neighbor with distance below 0.05, a difference of magnitude u and g less than 0.4, a difference of magnitude g and r less than 0.7, a difference of magnitude r and i greater than 0.4, and a difference of magnitude i and z greater than 0.4.",
    "sql_query": "SELECT count( T1.objid), T2.petromag_r FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.type = 6 and T2.type = 6 and T1.neighbortype = 6 and T1.distance < 0.05 and T2.u - T2.g < 0.4 and T2.g - T2.r < 0.7 and T2.r - T2.i > 0.4 and T2.i - T2.z > 0.4 GROUP BY T2.petromag_r",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(3) Op(0) C(1) T(0) C(1) T(0) A(0) Op(0) C(39) T(1) C(39) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(0) Filter(2) A(0) Op(0) C(5) T(0) C(5) T(0) V(1) Filter(0) Filter(4) A(0) Op(0) C(3) T(0) C(3) T(0) V(4) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(3) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(2) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(3) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the fiber id and spectroscopic subclass of objects with class STAR and subclass containing an A.",
    "sql_query": "SELECT T1.fiberid, T1.subclass FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%A%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(115) T(4) C(115) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the maximum model magnitude r grouped by expmagnitude error u of the photometric object with right ascension above 185 and below 186, declination above 15 and below 16 and object type classification of 6?",
    "sql_query": "SELECT T1.expmagerr_u, max( T1.modelmag_r) FROM photoobj AS T1 WHERE T1.ra > 185 and T1.ra < 186 and T1.dec > 15 and T1.dec < 16 and T1.type = 6 GROUP BY T1.expmagerr_u",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(58) T(1) C(58) T(1) A(1) Op(0) C(65) T(1) C(65) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(7) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(3) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(6) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "show the number of column center position for each best object with a class of Galaxy, a magnitude g between 17 and 18, and a redshift lower than 0.05.",
    "sql_query": "SELECT count( T1.colc) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05 GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(17) T(1) C(17) T(1) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(6) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(4) V(5) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the mean value of column center position for each best object with class GALAXY, magnitude g between 17 and 18, and redshift smaller than 0.05.",
    "sql_query": "SELECT avg( T1.colc) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05 GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(17) T(1) C(17) T(1) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(5) V(4) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the count of the column center position for each best object with class 'GALAXY' and magnitude g between 17 and 18 and redshift smaller than 0.05?",
    "sql_query": "SELECT count( T1.colc) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05 GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(17) T(1) C(17) T(1) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(1) V(2) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the photometric object id, psfmagnitude error u, expmag z, extinction r and spectroscopic object id for all objects with class of GALAXY, with magnitude g between 17 and 18 and with redshift below 0.05?",
    "sql_query": "SELECT T1.objid, T1.psfmagerr_u, T1.expmag_z, T1.extinction_r, T2.specobjid FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(27) T(1) C(27) T(1) A(0) Op(0) C(57) T(1) C(57) T(1) A(0) Op(0) C(88) T(1) C(88) T(1) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(2) V(0) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(5)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the number of each object whose class is 'GALAXY' and magnitude g between 17 and 18 and with redshift below 0.05?",
    "sql_query": "SELECT count( T2.specobjid) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05 GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(7) T(4) C(7) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(5) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(0) V(1) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the total petromag r for each best object with a class of GALAXY with a magnitude g between 17 and 18 and a redshift less than 0.05.",
    "sql_query": "SELECT sum( T1.petromag_r) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05 GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(4) Op(0) C(39) T(1) C(39) T(1) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(5) V(0) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "show the average value of modelmagnitude error z for each best spectroscopic objects of class 'GALAXY' and magnitude g between 17 and 18 and redshift smaller than 0.05.",
    "sql_query": "SELECT avg( T1.modelmagerr_z) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05 GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(72) T(1) C(72) T(1) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(5) V(4) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the count of the plates for each best object which is in the GALAXY class and has a magnitude between 17 and 18 and has redshift below 0.05.",
    "sql_query": "SELECT count( T2.plateid) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05 GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(109) T(4) C(109) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(4) V(5) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the magnitude z, model magnitude corrected for extinction r, and right ascension of the objects in class 'GALAXY' with magnitude g between 17 and 18 and redshift below 0.05?",
    "sql_query": "SELECT T1.z, T1.dered_r, T2.ra FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(96) T(1) C(96) T(1) A(0) Op(0) C(99) T(1) C(99) T(1) A(0) Op(0) C(83) T(4) C(83) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(1) V(2) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the magnitude z, the modelmagnitude corrected for extinction r and the right ascension of the objects belong to a class 'GALAXY' with a magnitude g between 17 and 18, and a redshift smaller than 0.05.",
    "sql_query": "SELECT T1.z, T1.dered_r, T2.ra FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(96) T(1) C(96) T(1) A(0) Op(0) C(99) T(1) C(99) T(1) A(0) Op(0) C(83) T(4) C(83) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(2) V(0) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(5)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Which objects have a class of GALAXY, a magnitude z between 17 and 18 and a redshift below 0.05? Return the magnitude z, modelmagnitude corrected for extinction r, and right ascension of each.",
    "sql_query": "SELECT T1.z, T1.dered_r, T2.ra FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(96) T(1) C(96) T(1) A(0) Op(0) C(99) T(1) C(99) T(1) A(0) Op(0) C(83) T(4) C(83) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(6) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(0) V(2) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(5)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "For each best object with class of Galaxy, a magnitude between 17 and 18 and a redshift below 0.05, find the max velocity dispersion.",
    "sql_query": "SELECT max( T2.veldisp) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05 GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(125) T(4) C(125) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(6) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(4) V(0) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the largest velocity dispersion for each best object id of objects with spectroscopic class of GALAXY and magnitude g between 17 and 18 and with redshift below 0.05?",
    "sql_query": "SELECT max( T2.veldisp) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05 GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(125) T(4) C(125) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(4) V(5) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum of expmag z per best object id of photometric objects from spectroscopic class 'GALAXY' with magnitude g between 17 to 18 and with redshift less than 0.05",
    "sql_query": "SELECT min( T1.expmag_z) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05 GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(2) Op(0) C(57) T(1) C(57) T(1) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(5) V(4) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Return the maximum expmag z corresponding to each best object id across the objects with class of 'GALAXY' and with magnitude g between 17 AND 18 and a redshift smaller than 0.05.",
    "sql_query": "SELECT max( T1.expmag_z) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05 GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(57) T(1) C(57) T(1) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(2) V(3) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(5)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Return the maximum declination grouped by best object id for photometric objects with class GALAXY and the magnitude g between 17 and 18 and with redshift lower than 0.05.",
    "sql_query": "SELECT max( T2.dec) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05 GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(84) T(4) C(84) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(2) V(0) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(5)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum declination of photometric objects with spectroscopic class of 'GALAXY' and magnitude g between 17 and 18 and a redshift lower than 0.05 for each of the best object id?",
    "sql_query": "SELECT max( T2.dec) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05 GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(84) T(4) C(84) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(5) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(0) V(1) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum declination of all the photometric objects corresponding to each best object id, which have class 'GALAXY' and magnitude g between 17 and 18 and redshift lesser than 0.05?",
    "sql_query": "SELECT max( T2.dec) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05 GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(84) T(4) C(84) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(5) V(0) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum declination per best object id of the photometric objects with spectroscopic class of 'GAXY' and magnitude g between 17 and 18, and with redshifts below 0.05?",
    "sql_query": "SELECT max( T2.dec) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.class = 'GALAXY' and T1.g between 17 AND 18 and T2.z < 0.05 GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(84) T(4) C(84) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(6) Filter(0) Filter(8) A(0) Op(0) C(93) T(1) C(93) T(1) V(3) V(4) Filter(4) A(0) Op(0) C(120) T(4) C(120) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Which photometric objects have a type classification of 6 and a difference of magnitude u and magnitude g less than 0.5. Give me the corresponding petrocian radius g, the expmagnitude error r, the composite modelmagnitude i, the composite modelmagnitude error z, and right ascension error of those objects.",
    "sql_query": "SELECT T1.petrorad_g, T1.expmagerr_r, T1.cmodelmag_i, T1.cmodelmagerr_z, T1.raerr FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(43) T(1) C(43) T(1) A(0) Op(0) C(60) T(1) C(60) T(1) A(0) Op(0) C(76) T(1) C(76) T(1) A(0) Op(0) C(82) T(1) C(82) T(1) A(0) Op(0) C(85) T(1) C(85) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(2) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the petrocian radius g, expmagnitude error r, composite modelmagnitude i, composite modelmagnitude error z, and right ascension error for photometric objects with type classification of 6 and with a difference of magnitude u and magnitude g lower than 0.5.",
    "sql_query": "SELECT T1.petrorad_g, T1.expmagerr_r, T1.cmodelmag_i, T1.cmodelmagerr_z, T1.raerr FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(43) T(1) C(43) T(1) A(0) Op(0) C(60) T(1) C(60) T(1) A(0) Op(0) C(76) T(1) C(76) T(1) A(0) Op(0) C(82) T(1) C(82) T(1) A(0) Op(0) C(85) T(1) C(85) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the average value of expmagnitude error i according to different time of observation i among the photometric objects with an object type classification of 6 and a difference between magnitude u and magnitude g below 0.5.",
    "sql_query": "SELECT avg( T1.expmagerr_i), T1.tai_i FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.tai_i",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(5) Op(0) C(61) T(1) C(61) T(1) A(0) Op(0) C(105) T(1) C(105) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the average value of expmagnitude error i for each time of observation i of all the photometric objects that have a class classification of 6 and a difference (magnitude u - magnitude g) smaller than 0.5.",
    "sql_query": "SELECT avg( T1.expmagerr_i), T1.tai_i FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.tai_i",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(5) Op(0) C(61) T(1) C(61) T(1) A(0) Op(0) C(105) T(1) C(105) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the smallest value of petromag i of photometric object with type classification of 6 and a difference of magnitude u and magnitude g lesser than 0.5, grouped for each right ascension error i.",
    "sql_query": "SELECT min( T1.petromag_i), T1.raerr FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.raerr",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(40) T(1) C(40) T(1) A(0) Op(0) C(85) T(1) C(85) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "For each right ascension error, what are the corresponding minimum petromag i of objects with type classification of 6 and  with difference of magnitude u and magnitude g less than 0.5? ",
    "sql_query": "SELECT min( T1.petromag_i), T1.raerr FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.raerr",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(40) T(1) C(40) T(1) A(0) Op(0) C(85) T(1) C(85) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the minimum modelmagnitude corrected for extinction g corresponding to each magnitude z of the objects with a type classification of 6 and  a difference (magnitude u - magnitude g) smaller than 0.5?",
    "sql_query": "SELECT T1.z, min( T1.dered_g) FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(96) T(1) C(96) T(1) A(2) Op(0) C(98) T(1) C(98) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find a total of run numbers grouped by expmag g for objects with type classification of 6 and with a difference of magnitude u and magnitude g less than 0.5.",
    "sql_query": "SELECT sum( T1.rerun), T1.expmag_g FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.expmag_g",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(9) T(1) C(9) T(1) A(0) Op(0) C(54) T(1) C(54) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the average fiber magnitude u according to different magnitude i for all photometric objects whose type classification is 6 and have a magnitude u - magnitude g lower than 0.5.",
    "sql_query": "SELECT avg( T1.fibermag_u), T1.i FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.i",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(5) Op(0) C(32) T(1) C(32) T(1) A(0) Op(0) C(95) T(1) C(95) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the average fibermag u for each magnitude i with object type classification 6 and with a difference of magnitude u and g smaller than 0.5.",
    "sql_query": "SELECT avg( T1.fibermag_u), T1.i FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.i",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(5) Op(0) C(32) T(1) C(32) T(1) A(0) Op(0) C(95) T(1) C(95) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Return the sum of the row velocity according to different magnitude u among all photometric objects with object type classification 6 and whose magnitude u minus magnitude g is less than 0.5.",
    "sql_query": "SELECT sum( T1.rowv), T1.u FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.u",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(18) T(1) C(18) T(1) A(0) Op(0) C(92) T(1) C(92) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the total row velocity for each magnitude u of photometric objects with classification 6, and a difference of magnitude u and magnitude g lower than 0.5.",
    "sql_query": "SELECT sum( T1.rowv), T1.u FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.u",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(18) T(1) C(18) T(1) A(0) Op(0) C(92) T(1) C(92) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "For photometric objects with type classification 6 and a difference between magnitude u and g is smaller than 0, show the total of composite modelmagnitude u per magnitude g.",
    "sql_query": "SELECT sum( T1.cmodelmag_u), T1.g FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.g",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(73) T(1) C(73) T(1) A(0) Op(0) C(93) T(1) C(93) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Give me the total composite modelmagnitude u for each magnitude g among all objects whose type classification is 6 and magnitude u minus magnitude g is lower than 0.5.",
    "sql_query": "SELECT sum( T1.cmodelmag_u), T1.g FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.g",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(73) T(1) C(73) T(1) A(0) Op(0) C(93) T(1) C(93) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the sum of composite model magnitude u for each magnitude g across all photometric objects with type classification of 6, a difference between magnitude u and magnitude g less than 0.5.",
    "sql_query": "SELECT sum( T1.cmodelmag_u), T1.g FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.g",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(73) T(1) C(73) T(1) A(0) Op(0) C(93) T(1) C(93) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the number of objects with type classification 6 and a difference of magnitude u and magnitude g smaller than 0.5 for each petrocian radius z?",
    "sql_query": "SELECT T1.petrorad_z, count( T1.devmag_i) FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.petrorad_z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(46) T(1) C(46) T(1) A(3) Op(0) C(51) T(1) C(51) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find min of psfmag g of all objects with a type classification 6 and a difference of magnitude u and g larger than 0.5, grouped for each psfmag r.",
    "sql_query": "SELECT min( T1.psfmag_g), T1.psfmag_r FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.psfmag_r",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(23) T(1) C(23) T(1) A(0) Op(0) C(24) T(1) C(24) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the minimum psfmag g for each psfmag r across all objects with type classification of 6 and magnitude u - magnitude g smaller than 0.5.",
    "sql_query": "SELECT min( T1.psfmag_g), T1.psfmag_r FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.psfmag_r",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(23) T(1) C(23) T(1) A(0) Op(0) C(24) T(1) C(24) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum psfmag g with respect to psfmag f for objects with type classification of 6 and magnitude u minus  magnitude g lower than 0.5?",
    "sql_query": "SELECT min( T1.psfmag_g), T1.psfmag_r FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.psfmag_r",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(23) T(1) C(23) T(1) A(0) Op(0) C(24) T(1) C(24) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the minimum psfmag g for each psfmag r of the objects with type classification of 6 and difference of magnitude u and magnitude g less than 0.5.",
    "sql_query": "SELECT min( T1.psfmag_g), T1.psfmag_r FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.5 GROUP BY T1.psfmag_r",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(23) T(1) C(23) T(1) A(0) Op(0) C(24) T(1) C(24) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the average value of redshift of all spectroscopic objects with class of QSO, redshift greater than 4.5 and redshift warning = 0, for each load version?",
    "sql_query": "SELECT avg( T1.z), T1.loadversion FROM specobj AS T1 WHERE T1.class = 'QSO' and T1.z > 4.5 and T1.zwarning = 0 GROUP BY T1.loadversion",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(5) Op(0) C(120) T(4) C(120) T(4) A(0) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(0) Filter(5) A(0) Op(0) C(120) T(4) C(120) T(4) V(2) Filter(2) A(0) Op(0) C(122) T(4) C(122) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the average redshift according to different loading versions of spectroscopic objects whose class is QSO, redshift is above 4.5 and  redshift warning of zero?",
    "sql_query": "SELECT avg( T1.z), T1.loadversion FROM specobj AS T1 WHERE T1.class = 'QSO' and T1.z > 4.5 and T1.zwarning = 0 GROUP BY T1.loadversion",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(5) Op(0) C(120) T(4) C(120) T(4) A(0) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2) Filter(0) Filter(5) A(0) Op(0) C(120) T(4) C(120) T(4) V(0) Filter(2) A(0) Op(0) C(122) T(4) C(122) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the average redshift for each load version among all spectroscopic objects that have class 'QSO' and whose redshift is more than 4.5, and whose redshift warning is '0'?",
    "sql_query": "SELECT avg( T1.z), T1.loadversion FROM specobj AS T1 WHERE T1.class = 'QSO' and T1.z > 4.5 and T1.zwarning = 0 GROUP BY T1.loadversion",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(5) Op(0) C(120) T(4) C(120) T(4) A(0) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(3) Filter(0) Filter(5) A(0) Op(0) C(120) T(4) C(120) T(4) V(2) Filter(2) A(0) Op(0) C(122) T(4) C(122) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the sum of the redshifts across the spectroscopy objects with class QSO and with redshift  greater than 4.5 and redshift warning of zero for different declinations?",
    "sql_query": "SELECT T1.dec, sum( T1.z) FROM specobj AS T1 WHERE T1.class = 'QSO' and T1.z > 4.5 and T1.zwarning = 0 GROUP BY T1.dec",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(84) T(4) C(84) T(4) A(4) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(0) Filter(5) A(0) Op(0) C(120) T(4) C(120) T(4) V(3) Filter(2) A(0) Op(0) C(122) T(4) C(122) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the sum of the redshifts for each declination in spectroscopic objects with class QSO and redshift bigger than 4.5 and redshift warning of 0?",
    "sql_query": "SELECT T1.dec, sum( T1.z) FROM specobj AS T1 WHERE T1.class = 'QSO' and T1.z > 4.5 and T1.zwarning = 0 GROUP BY T1.dec",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(84) T(4) C(84) T(4) A(4) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(0) Filter(5) A(0) Op(0) C(120) T(4) C(120) T(4) V(2) Filter(2) A(0) Op(0) C(122) T(4) C(122) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "For each redshift warning of object in QSO class, what are all the objects that have a right ascension of over 4.5 and redshift warning of 0? List the average right ascension and redshift warning.",
    "sql_query": "SELECT avg( T1.ra), T1.zwarning FROM specobj AS T1 WHERE T1.class = 'QSO' and T1.z > 4.5 and T1.zwarning = 0 GROUP BY T1.zwarning",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(5) Op(0) C(83) T(4) C(83) T(4) A(0) Op(0) C(122) T(4) C(122) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(4) Filter(0) Filter(5) A(0) Op(0) C(120) T(4) C(120) T(4) V(2) Filter(2) A(0) Op(0) C(122) T(4) C(122) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show all the best spectrums, redshift errors, corresponding redshift warning and class for objects with class of 'QSO' and redshift above 4.5 and redshift warning of 0.",
    "sql_query": "SELECT T1.scienceprimary, T1.zerr, T1.zwarning, T1.class FROM specobj AS T1 WHERE T1.class = 'QSO' and T1.z > 4.5 and T1.zwarning = 0",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(110) T(4) C(110) T(4) A(0) Op(0) C(121) T(4) C(121) T(4) A(0) Op(0) C(122) T(4) C(122) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(0) Filter(5) A(0) Op(0) C(120) T(4) C(120) T(4) V(3) Filter(2) A(0) Op(0) C(122) T(4) C(122) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Which spectroscopic objects belong to QSO class with redshift greater than 4.5 and have 0 redshift warning? Return the best spectrum, redshift error, redshift warning and class of those objects.",
    "sql_query": "SELECT T1.scienceprimary, T1.zerr, T1.zwarning, T1.class FROM specobj AS T1 WHERE T1.class = 'QSO' and T1.z > 4.5 and T1.zwarning = 0",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(110) T(4) C(110) T(4) A(0) Op(0) C(121) T(4) C(121) T(4) A(0) Op(0) C(122) T(4) C(122) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2) Filter(0) Filter(5) A(0) Op(0) C(120) T(4) C(120) T(4) V(4) Filter(2) A(0) Op(0) C(122) T(4) C(122) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the best spectrum, redshift error, redshift warning, and class for spectroscopic objects with class QSO and redshift higher than 4.5 and redshift warning is 0?",
    "sql_query": "SELECT T1.scienceprimary, T1.zerr, T1.zwarning, T1.class FROM specobj AS T1 WHERE T1.class = 'QSO' and T1.z > 4.5 and T1.zwarning = 0",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(110) T(4) C(110) T(4) A(0) Op(0) C(121) T(4) C(121) T(4) A(0) Op(0) C(122) T(4) C(122) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(3) Filter(0) Filter(5) A(0) Op(0) C(120) T(4) C(120) T(4) V(2) Filter(2) A(0) Op(0) C(122) T(4) C(122) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the best optical object id, segue2 object type, modified julien date, and right ascension for spectroscopic objects with QSO class and a redshift larger than 4.5 and a redshift warning of zero.",
    "sql_query": "SELECT T1.bestobjid, T1.segue2primary, T1.mjd, T1.ra FROM specobj AS T1 WHERE T1.class = 'QSO' and T1.z > 4.5 and T1.zwarning = 0",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(111) T(4) C(111) T(4) A(0) Op(0) C(90) T(4) C(90) T(4) A(0) Op(0) C(83) T(4) C(83) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(0) Filter(5) A(0) Op(0) C(120) T(4) C(120) T(4) V(3) Filter(2) A(0) Op(0) C(122) T(4) C(122) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the best object ids, segue2 object type, modified julien dates and right ascension for objects that are in the QSO class with redshift more than 4.5 and whose redshift warning is zero?",
    "sql_query": "SELECT T1.bestobjid, T1.segue2primary, T1.mjd, T1.ra FROM specobj AS T1 WHERE T1.class = 'QSO' and T1.z > 4.5 and T1.zwarning = 0",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(111) T(4) C(111) T(4) A(0) Op(0) C(90) T(4) C(90) T(4) A(0) Op(0) C(83) T(4) C(83) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(0) Filter(5) A(0) Op(0) C(120) T(4) C(120) T(4) V(2) Filter(2) A(0) Op(0) C(122) T(4) C(122) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the best object id, segue2 object type, modified julien date and right ascension for spectroscopic objects with class 'QSO' and redshift greater than 4.5 and that have 0 redshift warnings?",
    "sql_query": "SELECT T1.bestobjid, T1.segue2primary, T1.mjd, T1.ra FROM specobj AS T1 WHERE T1.class = 'QSO' and T1.z > 4.5 and T1.zwarning = 0",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(111) T(4) C(111) T(4) A(0) Op(0) C(90) T(4) C(90) T(4) A(0) Op(0) C(83) T(4) C(83) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2) Filter(0) Filter(5) A(0) Op(0) C(120) T(4) C(120) T(4) V(1) Filter(2) A(0) Op(0) C(122) T(4) C(122) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum time of observation for objects with type classification of 3 and right ascension between 140.9 AND 141.1 and magnitude g below 18 and magnitude u minus magnitude g greater than 2.2, grouped for each model magnitude corrected for extinction u?",
    "sql_query": "SELECT T1.dered_u, min( T1.tai_i) FROM photoobj AS T1 WHERE T1.type = 3 and T1.ra between 140.9 AND 141.1 and T1.g < 18 and T1.u - T1.g > 2.2 GROUP BY T1.dered_u",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(97) T(1) C(97) T(1) A(2) Op(0) C(105) T(1) C(105) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(8) Filter(0) Filter(8) A(0) Op(0) C(83) T(1) C(83) T(1) V(5) V(1) Filter(0) Filter(4) A(0) Op(0) C(93) T(1) C(93) T(1) V(0) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the minimum time of observation for each modelmagnitude corrected for extinction u across all photometric objects with a class classification 3 for which the right ascension was between 140.9 and 141.1 with magnitude g below 18 and a difference between magnitude u and magnitude g higher than 2.2?",
    "sql_query": "SELECT T1.dered_u, min( T1.tai_i) FROM photoobj AS T1 WHERE T1.type = 3 and T1.ra between 140.9 AND 141.1 and T1.g < 18 and T1.u - T1.g > 2.2 GROUP BY T1.dered_u",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(97) T(1) C(97) T(1) A(2) Op(0) C(105) T(1) C(105) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(8) A(0) Op(0) C(83) T(1) C(83) T(1) V(3) V(5) Filter(0) Filter(4) A(0) Op(0) C(93) T(1) C(93) T(1) V(2) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(6)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum model magnitude u for each time of observation z among all objects with the classification 3, right ascension between 140.9 and 141.1 and magnitude g below 18, and a difference of magnitude u and magnitude g above 2.2.",
    "sql_query": "SELECT max( T1.modelmag_u), T1.tai_z FROM photoobj AS T1 WHERE T1.type = 3 and T1.ra between 140.9 AND 141.1 and T1.g < 18 and T1.u - T1.g > 2.2 GROUP BY T1.tai_z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(63) T(1) C(63) T(1) A(0) Op(0) C(106) T(1) C(106) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(2) Filter(0) Filter(8) A(0) Op(0) C(83) T(1) C(83) T(1) V(6) V(5) Filter(0) Filter(4) A(0) Op(0) C(93) T(1) C(93) T(1) V(1) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the biggest model magnitude u for each time of observation z, among all objects with object type classfication of 3, right ascension between 140.9 and 141.1 and with magnitude g smaller than 18 and magnitude u minus magnitude g bigger than 2.2.",
    "sql_query": "SELECT max( T1.modelmag_u), T1.tai_z FROM photoobj AS T1 WHERE T1.type = 3 and T1.ra between 140.9 AND 141.1 and T1.g < 18 and T1.u - T1.g > 2.2 GROUP BY T1.tai_z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(63) T(1) C(63) T(1) A(0) Op(0) C(106) T(1) C(106) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(5) Filter(0) Filter(8) A(0) Op(0) C(83) T(1) C(83) T(1) V(3) V(2) Filter(0) Filter(4) A(0) Op(0) C(93) T(1) C(93) T(1) V(6) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Describe the max model magnitude u for each time of observation z, among all the objects with classification 3 and right ascension between 140.9 and 141.1 and magnitude g below 18 and magnitude u minus magnitude g above 2.2.",
    "sql_query": "SELECT max( T1.modelmag_u), T1.tai_z FROM photoobj AS T1 WHERE T1.type = 3 and T1.ra between 140.9 AND 141.1 and T1.g < 18 and T1.u - T1.g > 2.2 GROUP BY T1.tai_z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(63) T(1) C(63) T(1) A(0) Op(0) C(106) T(1) C(106) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(5) Filter(0) Filter(8) A(0) Op(0) C(83) T(1) C(83) T(1) V(3) V(2) Filter(0) Filter(4) A(0) Op(0) C(93) T(1) C(93) T(1) V(6) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the maximum model magnitude u for each time of observation z of the objects that have type classification of 3, the right ascension between 140.9 and 141.1, magnitude g less than 18, and a difference of magnitude u and g greater than 2.2.",
    "sql_query": "SELECT max( T1.modelmag_u), T1.tai_z FROM photoobj AS T1 WHERE T1.type = 3 and T1.ra between 140.9 AND 141.1 and T1.g < 18 and T1.u - T1.g > 2.2 GROUP BY T1.tai_z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(63) T(1) C(63) T(1) A(0) Op(0) C(106) T(1) C(106) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(5) Filter(0) Filter(8) A(0) Op(0) C(83) T(1) C(83) T(1) V(2) V(6) Filter(0) Filter(4) A(0) Op(0) C(93) T(1) C(93) T(1) V(1) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Return the max model magnitude u for each time of observation z of all the photometric objects that have classification 3 and right ascension between 140.9 and 141.1, and have magnitude g lower than 18 and magnitude u minus magnitude g greater than 2.2.",
    "sql_query": "SELECT max( T1.modelmag_u), T1.tai_z FROM photoobj AS T1 WHERE T1.type = 3 and T1.ra between 140.9 AND 141.1 and T1.g < 18 and T1.u - T1.g > 2.2 GROUP BY T1.tai_z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(63) T(1) C(63) T(1) A(0) Op(0) C(106) T(1) C(106) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(6) Filter(0) Filter(8) A(0) Op(0) C(83) T(1) C(83) T(1) V(4) V(0) Filter(0) Filter(4) A(0) Op(0) C(93) T(1) C(93) T(1) V(1) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum expmagnitude error z for each model magnitude corrected for extinction r of photometric objects with object type classification and right ascending between 140.9 and 141.1 and magnitude g lower than 18 and magnitude u minus magnitude g greater than 2.2?",
    "sql_query": "SELECT min( T1.expmagerr_z), T1.dered_r FROM photoobj AS T1 WHERE T1.type = 3 and T1.ra between 140.9 AND 141.1 and T1.g < 18 and T1.u - T1.g > 2.2 GROUP BY T1.dered_r",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(62) T(1) C(62) T(1) A(0) Op(0) C(99) T(1) C(99) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(5) Filter(0) Filter(8) A(0) Op(0) C(83) T(1) C(83) T(1) V(1) V(3) Filter(0) Filter(4) A(0) Op(0) C(93) T(1) C(93) T(1) V(0) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Return the devmag g, declination, and right ascension error of the photometric objects with object type classification 3, right ascension between 140.9 and 141.1, magnitude g below 18, and a difference of magnitude u and magnitude g above 2.2.",
    "sql_query": "SELECT T1.devmag_g, T1.dec, T1.raerr FROM photoobj AS T1 WHERE T1.type = 3 and T1.ra between 140.9 AND 141.1 and T1.g < 18 and T1.u - T1.g > 2.2",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(49) T(1) C(49) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(85) T(1) C(85) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(2) Filter(0) Filter(8) A(0) Op(0) C(83) T(1) C(83) T(1) V(6) V(5) Filter(0) Filter(4) A(0) Op(0) C(93) T(1) C(93) T(1) V(1) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum composite model magnitude g for each petromag z of objects with object type classification of 3, right ascension between 140.9 and 141.1, magnitude g less than 18, and a difference of magnitude u and magnitude g greater than 2.2. ",
    "sql_query": "SELECT T1.petromag_z, min( T1.cmodelmag_g) FROM photoobj AS T1 WHERE T1.type = 3 and T1.ra between 140.9 AND 141.1 and T1.g < 18 and T1.u - T1.g > 2.2 GROUP BY T1.petromag_z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(41) T(1) C(41) T(1) A(2) Op(0) C(74) T(1) C(74) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(5) Filter(0) Filter(8) A(0) Op(0) C(83) T(1) C(83) T(1) V(3) V(2) Filter(0) Filter(4) A(0) Op(0) C(93) T(1) C(93) T(1) V(6) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the sum of declination for each modelmagnitude corrected for extinction z of across the objects with classification of 6, magnitude i less then 19 and greater than 0, difference of magnitude g and r greater than 2.26, difference of magnitude i and z less than 0.25, difference of magnitude u and g greater than 2, or those magnitude u greater than 22.3.",
    "sql_query": "SELECT sum( T1.dec), T1.dered_z FROM photoobj AS T1 WHERE T1.type = 6 and T1.i < 19 and T1.i > 0 and T1.g - T1.r > 2.26 and T1.i - T1.z < 0.25 and T1.u - T1.g > 2 or T1.u > 22.3 GROUP BY T1.dered_z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(101) T(1) C(101) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(4) A(0) Op(0) C(95) T(1) C(95) T(1) V(1) Filter(0) Filter(5) A(0) Op(0) C(95) T(1) C(95) T(1) V(5) Filter(0) Filter(5) A(0) Op(1) C(93) T(1) C(94) T(1) V(3) Filter(0) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(2) Filter(1) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(7) Filter(5) A(0) Op(0) C(92) T(1) C(92) T(1) V(8)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the total declination grouped by correction for extinction z of all photometric objects with classification of 6, magnitude i between 0 and 19, difference of magnitude g and r above 2.26, difference of magnitude i and z below 0.25, difference of magnitude u and g above 2, or those magnitude u greater than 22.3. ",
    "sql_query": "SELECT sum( T1.dec), T1.dered_z FROM photoobj AS T1 WHERE T1.type = 6 and T1.i < 19 and T1.i > 0 and T1.g - T1.r > 2.26 and T1.i - T1.z < 0.25 and T1.u - T1.g > 2 or T1.u > 22.3 GROUP BY T1.dered_z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(101) T(1) C(101) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(3) Filter(0) Filter(4) A(0) Op(0) C(95) T(1) C(95) T(1) V(4) Filter(0) Filter(5) A(0) Op(0) C(95) T(1) C(95) T(1) V(5) Filter(0) Filter(5) A(0) Op(1) C(93) T(1) C(94) T(1) V(9) Filter(0) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(1) Filter(1) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(8) Filter(5) A(0) Op(0) C(92) T(1) C(92) T(1) V(7)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "List the expmag r, declination and model magnitude corrected for extinction z for the objects with type classification is 6, magnitude i less then 19 and greater than 0, difference of magnitude g and r greater than 2.26, difference of magnitude i and z less than 0.25, difference of magnitude u and g greater than 2, or those magnitude u greater than 22.3. ",
    "sql_query": "SELECT T1.expmag_r, T1.dec, T1.dered_z FROM photoobj AS T1 WHERE T1.type = 6 and T1.i < 19 and T1.i > 0 and T1.g - T1.r > 2.26 and T1.i - T1.z < 0.25 and T1.u - T1.g > 2 or T1.u > 22.3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(55) T(1) C(55) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(101) T(1) C(101) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(5) Filter(0) Filter(4) A(0) Op(0) C(95) T(1) C(95) T(1) V(4) Filter(0) Filter(5) A(0) Op(0) C(95) T(1) C(95) T(1) V(7) Filter(0) Filter(5) A(0) Op(1) C(93) T(1) C(94) T(1) V(2) Filter(0) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(8) Filter(1) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(3) Filter(5) A(0) Op(0) C(92) T(1) C(92) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the expmag r, declination, and model magnitude corrected for extinction r of the objects with type classification of 6, which have  magnitude i between 0 and 19, difference of magnitude g and r above 2.26, difference of magnitude i and z below 0.25, difference of magnitude u and g above 2, or those magnitude u greater than 22.3.  ",
    "sql_query": "SELECT T1.expmag_r, T1.dec, T1.dered_z FROM photoobj AS T1 WHERE T1.type = 6 and T1.i < 19 and T1.i > 0 and T1.g - T1.r > 2.26 and T1.i - T1.z < 0.25 and T1.u - T1.g > 2 or T1.u > 22.3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(55) T(1) C(55) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(101) T(1) C(101) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(9) Filter(0) Filter(4) A(0) Op(0) C(95) T(1) C(95) T(1) V(8) Filter(0) Filter(5) A(0) Op(0) C(95) T(1) C(95) T(1) V(2) Filter(0) Filter(5) A(0) Op(1) C(93) T(1) C(94) T(1) V(5) Filter(0) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(6) Filter(1) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(4) Filter(5) A(0) Op(0) C(92) T(1) C(92) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the expmag r, declination, and model magnitude corrected for extinction z of all the objets with type classification 6, magnitude i less then 19 and greater than 0, difference of magnitude g and r greater than 2.26, difference of magnitude i and z less than 0.25, difference of magnitude u and g greater than 2, or those magnitude u greater than 22.3.",
    "sql_query": "SELECT T1.expmag_r, T1.dec, T1.dered_z FROM photoobj AS T1 WHERE T1.type = 6 and T1.i < 19 and T1.i > 0 and T1.g - T1.r > 2.26 and T1.i - T1.z < 0.25 and T1.u - T1.g > 2 or T1.u > 22.3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(55) T(1) C(55) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(101) T(1) C(101) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(3) Filter(0) Filter(4) A(0) Op(0) C(95) T(1) C(95) T(1) V(4) Filter(0) Filter(5) A(0) Op(0) C(95) T(1) C(95) T(1) V(5) Filter(0) Filter(5) A(0) Op(1) C(93) T(1) C(94) T(1) V(9) Filter(0) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(1) Filter(1) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(8) Filter(5) A(0) Op(0) C(92) T(1) C(92) T(1) V(7)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Which photometric objects have the object type classification 6,  magnitude i between 0 and 19, difference of magnitude g and r above 2.26, difference of magnitude i and z below 0.25, difference of magnitude u and g above 2, or those magnitude u greater than 22.3. ? List the expmag r, the declination, and the model magnitude corrected for extinction z of those objects..",
    "sql_query": "SELECT T1.expmag_r, T1.dec, T1.dered_z FROM photoobj AS T1 WHERE T1.type = 6 and T1.i < 19 and T1.i > 0 and T1.g - T1.r > 2.26 and T1.i - T1.z < 0.25 and T1.u - T1.g > 2 or T1.u > 22.3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(55) T(1) C(55) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) A(0) Op(0) C(101) T(1) C(101) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(4) A(0) Op(0) C(95) T(1) C(95) T(1) V(3) Filter(0) Filter(5) A(0) Op(0) C(95) T(1) C(95) T(1) V(5) Filter(0) Filter(5) A(0) Op(1) C(93) T(1) C(94) T(1) V(2) Filter(0) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(1) Filter(1) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(8) Filter(5) A(0) Op(0) C(92) T(1) C(92) T(1) V(9)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Return the minimum petromagnitude z grouped by difference model magnitude error i for photometric objects with classification 6,  magnitude i between 0 and 19, difference of magnitude g and r above 2.26, difference of magnitude i and z below 0.25, difference of magnitude u and g above 2, or those magnitude u greater than 22.3. ",
    "sql_query": "SELECT min( T1.petromag_z), T1.modelmagerr_i FROM photoobj AS T1 WHERE T1.type = 6 and T1.i < 19 and T1.i > 0 and T1.g - T1.r > 2.26 and T1.i - T1.z < 0.25 and T1.u - T1.g > 2 or T1.u > 22.3 GROUP BY T1.modelmagerr_i",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(41) T(1) C(41) T(1) A(0) Op(0) C(71) T(1) C(71) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4) Filter(0) Filter(4) A(0) Op(0) C(95) T(1) C(95) T(1) V(0) Filter(0) Filter(5) A(0) Op(0) C(95) T(1) C(95) T(1) V(8) Filter(0) Filter(5) A(0) Op(1) C(93) T(1) C(94) T(1) V(3) Filter(0) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(7) Filter(1) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(5) Filter(5) A(0) Op(0) C(92) T(1) C(92) T(1) V(9)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum of petromagnitude z for each model magnitude error i of all objects whose type classification is 6, magnitude i is less then 19 and greater than 0, difference of magnitude g and r is greater than 2.26, difference of magnitude i and z is less than 0.25, difference of magnitude u and g is greater than 2, or magnitude u is greater than 22.3. ",
    "sql_query": "SELECT min( T1.petromag_z), T1.modelmagerr_i FROM photoobj AS T1 WHERE T1.type = 6 and T1.i < 19 and T1.i > 0 and T1.g - T1.r > 2.26 and T1.i - T1.z < 0.25 and T1.u - T1.g > 2 or T1.u > 22.3 GROUP BY T1.modelmagerr_i",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(41) T(1) C(41) T(1) A(0) Op(0) C(71) T(1) C(71) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(2) Filter(0) Filter(4) A(0) Op(0) C(95) T(1) C(95) T(1) V(8) Filter(0) Filter(5) A(0) Op(0) C(95) T(1) C(95) T(1) V(5) Filter(0) Filter(5) A(0) Op(1) C(93) T(1) C(94) T(1) V(0) Filter(0) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(6) Filter(1) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(3) Filter(5) A(0) Op(0) C(92) T(1) C(92) T(1) V(7)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Which photometric objects have type classification of 6 and have  magnitude i between 0 and 19, difference of magnitude g and r above 2.26, difference of magnitude i and z below 0.25, difference of magnitude u and g above 2, or those magnitude u greater than 22.3? List the object type classification, petromagnitude r, and composite model magnitude z.",
    "sql_query": "SELECT T1.type, T1.petromag_r, T1.cmodelmag_z FROM photoobj AS T1 WHERE T1.type = 6 and T1.i < 19 and T1.i > 0 and T1.g - T1.r > 2.26 and T1.i - T1.z < 0.25 and T1.u - T1.g > 2 or T1.u > 22.3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(13) T(1) C(13) T(1) A(0) Op(0) C(39) T(1) C(39) T(1) A(0) Op(0) C(77) T(1) C(77) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(5) Filter(0) Filter(4) A(0) Op(0) C(95) T(1) C(95) T(1) V(4) Filter(0) Filter(5) A(0) Op(0) C(95) T(1) C(95) T(1) V(7) Filter(0) Filter(5) A(0) Op(1) C(93) T(1) C(94) T(1) V(2) Filter(0) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(8) Filter(1) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(3) Filter(5) A(0) Op(0) C(92) T(1) C(92) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the object type classification, petromag r and composite model magnitude z for the objects with class classification 6, magnitude i between 0 and 19, difference of magnitude g and r above 2.26, difference of magnitude i and z below 0.25, difference of magnitude u and g above 2, or those magnitude u greater than 22.3. ",
    "sql_query": "SELECT T1.type, T1.petromag_r, T1.cmodelmag_z FROM photoobj AS T1 WHERE T1.type = 6 and T1.i < 19 and T1.i > 0 and T1.g - T1.r > 2.26 and T1.i - T1.z < 0.25 and T1.u - T1.g > 2 or T1.u > 22.3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(13) T(1) C(13) T(1) A(0) Op(0) C(39) T(1) C(39) T(1) A(0) Op(0) C(77) T(1) C(77) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(4) A(0) Op(0) C(95) T(1) C(95) T(1) V(3) Filter(0) Filter(5) A(0) Op(0) C(95) T(1) C(95) T(1) V(5) Filter(0) Filter(5) A(0) Op(1) C(93) T(1) C(94) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(2) Filter(1) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(7) Filter(5) A(0) Op(0) C(92) T(1) C(92) T(1) V(8)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the object type classification, petromagnitude r, and composite modelmagnitude z of each photometric object with type classification of 6, magnitude i less then 19 and greater than 0, difference of magnitude g and r greater than 2.26, difference of magnitude i and z less than 0.25, difference of magnitude u and g greater than 2, or those magnitude u greater than 22.3. ",
    "sql_query": "SELECT T1.type, T1.petromag_r, T1.cmodelmag_z FROM photoobj AS T1 WHERE T1.type = 6 and T1.i < 19 and T1.i > 0 and T1.g - T1.r > 2.26 and T1.i - T1.z < 0.25 and T1.u - T1.g > 2 or T1.u > 22.3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(13) T(1) C(13) T(1) A(0) Op(0) C(39) T(1) C(39) T(1) A(0) Op(0) C(77) T(1) C(77) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(3) Filter(0) Filter(4) A(0) Op(0) C(95) T(1) C(95) T(1) V(4) Filter(0) Filter(5) A(0) Op(0) C(95) T(1) C(95) T(1) V(5) Filter(0) Filter(5) A(0) Op(1) C(93) T(1) C(94) T(1) V(9) Filter(0) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(1) Filter(1) Filter(5) A(0) Op(1) C(92) T(1) C(93) T(1) V(8) Filter(5) A(0) Op(0) C(92) T(1) C(92) T(1) V(7)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "List the average time of observation r for each load version of photometric objects that have object type classification 3, a magnitude g at most of 22, a difference of magnitude u and g between -0.27 and 0.71, a difference of magnitude g and r between -0.24 and 0.35, a difference of magnitude r and i between -0.27 and 0.57, a difference of magnitude i and z between -0.35 and 0.7? List the result in descending order of the load version .",
    "sql_query": "SELECT T1.loadversion, avg( T1.tai_r) FROM photoobj AS T1 WHERE T1.type = 3 and T1.g <= 22 and T1.u - T1.g >= -0.27 and T1.u - T1.g < 0.71 and T1.g - T1.r >= -0.24 and T1.g - T1.r < 0.35 and T1.r - T1.i >= -0.27 and T1.r - T1.i < 0.57 and T1.i - T1.z >= -0.35 and T1.i - T1.z < 0.7 GROUP BY T1.loadversion   ORDER BY T1.loadversion DESC",
    "semql_query": "Root1(3) Root(1) Sel(0) N(1) A(0) Op(0) C(91) T(1) C(91) T(1) A(5) Op(0) C(104) T(1) C(104) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(7) Filter(0) Filter(6) A(0) Op(0) C(93) T(1) C(93) T(1) V(12) Filter(0) Filter(7) A(0) Op(1) C(92) T(1) C(93) T(1) V(2) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(1) Filter(0) Filter(7) A(0) Op(1) C(93) T(1) C(94) T(1) V(3) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(6) Filter(0) Filter(7) A(0) Op(1) C(94) T(1) C(95) T(1) V(2) Filter(0) Filter(4) A(0) Op(1) C(94) T(1) C(95) T(1) V(5) Filter(0) Filter(7) A(0) Op(1) C(95) T(1) C(96) T(1) V(11) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(10) Order(0) A(0) Op(0) C(91) T(1) C(91) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average time of observation r for each load version of all objects with type classification 3, a magnitude g less than and equal to 22, a difference of magnitude u and g greater than or equal to -0.27 and less than or equal to 0.71, a difference of magnitude g and r greater than or equal to -0.24 and less than or equal to 0.35, a difference of magnitude r and i greater than or equal to -0.27 and less than or equal to 0.57, a difference of magnitude i and z greater than or equal to -0.35 and less than or equal to 0.7? Sort the result by load version in descending order.",
    "sql_query": "SELECT T1.loadversion, avg( T1.tai_r) FROM photoobj AS T1 WHERE T1.type = 3 and T1.g <= 22 and T1.u - T1.g >= -0.27 and T1.u - T1.g < 0.71 and T1.g - T1.r >= -0.24 and T1.g - T1.r < 0.35 and T1.r - T1.i >= -0.27 and T1.r - T1.i < 0.57 and T1.i - T1.z >= -0.35 and T1.i - T1.z < 0.7 GROUP BY T1.loadversion   ORDER BY T1.loadversion DESC",
    "semql_query": "Root1(3) Root(1) Sel(0) N(1) A(0) Op(0) C(91) T(1) C(91) T(1) A(5) Op(0) C(104) T(1) C(104) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(11) Filter(0) Filter(6) A(0) Op(0) C(93) T(1) C(93) T(1) V(0) Filter(0) Filter(7) A(0) Op(1) C(92) T(1) C(93) T(1) V(10) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(2) Filter(0) Filter(7) A(0) Op(1) C(93) T(1) C(94) T(1) V(4) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(9) Filter(0) Filter(7) A(0) Op(1) C(94) T(1) C(95) T(1) V(10) Filter(0) Filter(4) A(0) Op(1) C(94) T(1) C(95) T(1) V(1) Filter(0) Filter(7) A(0) Op(1) C(95) T(1) C(96) T(1) V(8) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(3) Order(0) A(0) Op(0) C(91) T(1) C(91) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of photometric objects for each extinction i with type classification 3, a magnitude g at most of 22, a difference of magnitude u and g between -0.27 and 0.71, a difference of magnitude g and r between -0.24 and 0.35, a difference of magnitude r and i between -0.27 and 0.57, a difference of magnitude i and z between -0.35 and 0.7? List the result by extinction i in descending order.",
    "sql_query": "SELECT T1.extinction_i, count( T1.tai_g) FROM photoobj AS T1 WHERE T1.type = 3 and T1.g <= 22 and T1.u - T1.g >= -0.27 and T1.u - T1.g < 0.71 and T1.g - T1.r >= -0.24 and T1.g - T1.r < 0.35 and T1.r - T1.i >= -0.27 and T1.r - T1.i < 0.57 and T1.i - T1.z >= -0.35 and T1.i - T1.z < 0.7 GROUP BY T1.extinction_i  ORDER BY T1.extinction_i DESC",
    "semql_query": "Root1(3) Root(1) Sel(0) N(1) A(0) Op(0) C(89) T(1) C(89) T(1) A(3) Op(0) C(103) T(1) C(103) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(6) A(0) Op(0) C(93) T(1) C(93) T(1) V(4) Filter(0) Filter(7) A(0) Op(1) C(92) T(1) C(93) T(1) V(12) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(3) Filter(0) Filter(7) A(0) Op(1) C(93) T(1) C(94) T(1) V(8) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(6) Filter(0) Filter(7) A(0) Op(1) C(94) T(1) C(95) T(1) V(12) Filter(0) Filter(4) A(0) Op(1) C(94) T(1) C(95) T(1) V(11) Filter(0) Filter(7) A(0) Op(1) C(95) T(1) C(96) T(1) V(2) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(5) Order(0) A(0) Op(0) C(89) T(1) C(89) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Get the count of photometric objects for each extinction i with classification 3, a magnitude g at most of 22, a difference of magnitude u and g between -0.27 and 0.71, a difference of magnitude g and r between -0.24 and 0.35, a difference of magnitude r and i between -0.27 and 0.57, a difference of magnitude i and z between -0.35 and 0.7? List the result by extinction i in descending order.",
    "sql_query": "SELECT T1.extinction_i, count( T1.tai_g) FROM photoobj AS T1 WHERE T1.type = 3 and T1.g <= 22 and T1.u - T1.g >= -0.27 and T1.u - T1.g < 0.71 and T1.g - T1.r >= -0.24 and T1.g - T1.r < 0.35 and T1.r - T1.i >= -0.27 and T1.r - T1.i < 0.57 and T1.i - T1.z >= -0.35 and T1.i - T1.z < 0.7 GROUP BY T1.extinction_i   ORDER BY T1.extinction_i DESC",
    "semql_query": "Root1(3) Root(1) Sel(0) N(1) A(0) Op(0) C(89) T(1) C(89) T(1) A(3) Op(0) C(103) T(1) C(103) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(12) Filter(0) Filter(6) A(0) Op(0) C(93) T(1) C(93) T(1) V(6) Filter(0) Filter(7) A(0) Op(1) C(92) T(1) C(93) T(1) V(0) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(9) Filter(0) Filter(7) A(0) Op(1) C(93) T(1) C(94) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(4) Filter(0) Filter(7) A(0) Op(1) C(94) T(1) C(95) T(1) V(0) Filter(0) Filter(4) A(0) Op(1) C(94) T(1) C(95) T(1) V(5) Filter(0) Filter(7) A(0) Op(1) C(95) T(1) C(96) T(1) V(7) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(8) Order(0) A(0) Op(0) C(89) T(1) C(89) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the average right ascension for each magnitude g of all the photometric objects with type classification 3, a magnitude g less than and equal to 22, a difference of magnitude u and g greater than or equal to -0.27 and less than or equal to 0.71, a difference of magnitude g and r greater than or equal to -0.24 and less than or equal to 0.35, a difference of magnitude r and i greater than or equal to -0.27 and less than or equal to 0.57, a difference of magnitude i and z greater than or equal to -0.35 and less than or equal to 0.7? Sort the result by magnitude g in descending order.",
    "sql_query": "SELECT avg( T1.ra), T1.g FROM photoobj AS T1 WHERE T1.type = 3 and T1.g <= 22 and T1.u - T1.g >= -0.27 and T1.u - T1.g < 0.71 and T1.g - T1.r >= -0.24 and T1.g - T1.r < 0.35 and T1.r - T1.i >= -0.27 and T1.r - T1.i < 0.57 and T1.i - T1.z >= -0.35 and T1.i - T1.z < 0.7 GROUP BY T1.g   ORDER BY T1.g DESC",
    "semql_query": "Root1(3) Root(1) Sel(0) N(1) A(5) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(93) T(1) C(93) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(6) Filter(0) Filter(6) A(0) Op(0) C(93) T(1) C(93) T(1) V(0) Filter(0) Filter(7) A(0) Op(1) C(92) T(1) C(93) T(1) V(10) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(3) Filter(0) Filter(7) A(0) Op(1) C(93) T(1) C(94) T(1) V(8) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(9) Filter(0) Filter(7) A(0) Op(1) C(94) T(1) C(95) T(1) V(10) Filter(0) Filter(4) A(0) Op(1) C(94) T(1) C(95) T(1) V(4) Filter(0) Filter(7) A(0) Op(1) C(95) T(1) C(96) T(1) V(5) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(12) Order(0) A(0) Op(0) C(93) T(1) C(93) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the average right ascension grouped by magnitude g for all photometric objects with an object type classification of 3, a magnitude g at most of 22, a difference of magnitude u and g between -0.27 and 0.71, a difference of magnitude g and r between -0.24 and 0.35, a difference of magnitude r and i between -0.27 and 0.57, a difference of magnitude i and z between -0.35 and 0.7? List the result by magnitude g in descending order.",
    "sql_query": "SELECT avg( T1.ra), T1.g FROM photoobj AS T1 WHERE T1.type = 3 and T1.g <= 22 and T1.u - T1.g >= -0.27 and T1.u - T1.g < 0.71 and T1.g - T1.r >= -0.24 and T1.g - T1.r < 0.35 and T1.r - T1.i >= -0.27 and T1.r - T1.i < 0.57 and T1.i - T1.z >= -0.35 and T1.i - T1.z < 0.7 GROUP BY T1.g   ORDER BY T1.g DESC",
    "semql_query": "Root1(3) Root(1) Sel(0) N(1) A(5) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(93) T(1) C(93) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(8) Filter(0) Filter(6) A(0) Op(0) C(93) T(1) C(93) T(1) V(4) Filter(0) Filter(7) A(0) Op(1) C(92) T(1) C(93) T(1) V(7) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(1) Filter(0) Filter(7) A(0) Op(1) C(93) T(1) C(94) T(1) V(9) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(10) Filter(0) Filter(7) A(0) Op(1) C(94) T(1) C(95) T(1) V(7) Filter(0) Filter(4) A(0) Op(1) C(94) T(1) C(95) T(1) V(6) Filter(0) Filter(7) A(0) Op(1) C(95) T(1) C(96) T(1) V(3) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(12) Order(0) A(0) Op(0) C(93) T(1) C(93) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the average right ascension for each magnitude of all photometric objects with a type classification as 3, a magnitude g less than and equal to 22, a difference of magnitude u and g greater than or equal to -0.27 and less than or equal to 0.71, a difference of magnitude g and r greater than or equal to -0.24 and less than or equal to 0.35, a difference of magnitude r and i greater than or equal to -0.27 and less than or equal to 0.57, a difference of magnitude i and z greater than or equal to -0.35 and less than or equal to 0.7? Sort the result by magnitude g in descending order.",
    "sql_query": "SELECT avg( T1.ra), T1.g FROM photoobj AS T1 WHERE T1.type = 3 and T1.g <= 22 and T1.u - T1.g >= -0.27 and T1.u - T1.g < 0.71 and T1.g - T1.r >= -0.24 and T1.g - T1.r < 0.35 and T1.r - T1.i >= -0.27 and T1.r - T1.i < 0.57 and T1.i - T1.z >= -0.35 and T1.i - T1.z < 0.7 GROUP BY T1.g   ORDER BY T1.g DESC",
    "semql_query": "Root1(3) Root(1) Sel(0) N(1) A(5) Op(0) C(83) T(1) C(83) T(1) A(0) Op(0) C(93) T(1) C(93) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(7) Filter(0) Filter(6) A(0) Op(0) C(93) T(1) C(93) T(1) V(12) Filter(0) Filter(7) A(0) Op(1) C(92) T(1) C(93) T(1) V(3) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(1) Filter(0) Filter(7) A(0) Op(1) C(93) T(1) C(94) T(1) V(4) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(6) Filter(0) Filter(7) A(0) Op(1) C(94) T(1) C(95) T(1) V(3) Filter(0) Filter(4) A(0) Op(1) C(94) T(1) C(95) T(1) V(5) Filter(0) Filter(7) A(0) Op(1) C(95) T(1) C(96) T(1) V(11) Filter(4) A(0) Op(1) C(95) T(1) C(96) T(1) V(10) Order(0) A(0) Op(0) C(93) T(1) C(93) T(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of photometric objects with magnitude r lower than 17, extinction r greater than 0.2 and object type classification of 3",
    "sql_query": "SELECT count( * ) FROM photoobj AS T1 WHERE T1.r < 17 and T1.extinction_r > 0.2 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(1) C(0) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(3) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many photometric objects have a magnitude r smaller than 17, an extinction r bigger than 0.2 and have an object type classification of 3?",
    "sql_query": "SELECT count( * ) FROM photoobj AS T1 WHERE T1.r < 17 and T1.extinction_r > 0.2 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(1) C(0) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(0) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(4) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Count the number of time of observation i for all objects whose magnitude r is below 17, extinction r is above 0.2, and object type classification of 3?",
    "sql_query": "SELECT count( * ) FROM photoobj AS T1 WHERE T1.r < 17 and T1.extinction_r > 0.2 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(1) C(0) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(1) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(2) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average galactic latitude for each photometric object with magnitude r below 17, extinction below 0.2 and type class equal to 3?",
    "sql_query": "SELECT avg( T1.b) FROM photoobj AS T1 WHERE T1.r < 17 and T1.extinction_r > 0.2 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(86) T(1) C(86) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(4) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average galactic latitude for objects with magnitude lower than 17, extinction r higher than 0.2 and type classification of 3?",
    "sql_query": "SELECT avg( T1.b) FROM photoobj AS T1 WHERE T1.r < 17 and T1.extinction_r > 0.2 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(86) T(1) C(86) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(2) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of photometric objects with magnitude r lesser than 17, extinction r smaller than 0.2, and object type classification of 3.",
    "sql_query": "SELECT count( * ) FROM photoobj AS T1 WHERE T1.r < 17 and T1.extinction_r > 0.2 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(1) C(0) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(0) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(4) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Count the number of the objects that have an magnitude r less than 17, an extinction r larger than 0.2, and the object type classification of 3.",
    "sql_query": "SELECT count( * ) FROM photoobj AS T1 WHERE T1.r < 17 and T1.extinction_r > 0.2 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(1) C(0) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(4) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many photometric objects have magnitude r below 17, extinction r above 0.2 and type classification of 3?",
    "sql_query": "SELECT count( * ) FROM photoobj AS T1 WHERE T1.r < 17 and T1.extinction_r > 0.2 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(1) C(0) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(1) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(2) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Count the number of photometric objects with magnitude r below 17, extinction r above 0.2 and type classification of 3.",
    "sql_query": "SELECT count( * ) FROM photoobj AS T1 WHERE T1.r < 17 and T1.extinction_r > 0.2 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(1) C(0) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(3) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average expmag z for all photometric objects whose magnitude r is lower than 17 with extinction r more than 0.2 and type classification of 3?",
    "sql_query": "SELECT avg( T1.expmag_z) FROM photoobj AS T1 WHERE T1.r < 17 and T1.extinction_r > 0.2 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(57) T(1) C(57) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(2) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "For each photometric objects whose magnitude r is below 17, extinction r is above 0 and whose object type classification is 3, tell me the average expmag z of those objects.",
    "sql_query": "SELECT avg( T1.expmag_z) FROM photoobj AS T1 WHERE T1.r < 17 and T1.extinction_r > 0.2 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(57) T(1) C(57) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(0) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(5) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average expmag z of the photometric objects with magnitude lower than 17, extinction smaller than 0.2, and object type classification of 3?",
    "sql_query": "SELECT avg( T1.expmag_z) FROM photoobj AS T1 WHERE T1.r < 17 and T1.extinction_r > 0.2 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(57) T(1) C(57) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(4) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Return the average expmag z of the objects whose magnitude r is less than 17, extinction r is greater than 0.2 and the object type classification is 3.",
    "sql_query": "SELECT avg( T1.expmag_z) FROM photoobj AS T1 WHERE T1.r < 17 and T1.extinction_r > 0.2 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(57) T(1) C(57) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(0) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(4) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average expmag z of objects whose magnitude r is smaller than 17, whose extinction r is greater than 0.2 and whose object type classification is 3?",
    "sql_query": "SELECT avg( T1.expmag_z) FROM photoobj AS T1 WHERE T1.r < 17 and T1.extinction_r > 0.2 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(57) T(1) C(57) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(1) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(2) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the total Petrosian radius containing 90% of flux among photometric objects whose magnitude r is below 17 and extinction r is higher than 0.2, and whose object type classification is 3?",
    "sql_query": "SELECT sum( T1.petror90_r) FROM photoobj AS T1 WHERE T1.r < 17 and T1.extinction_r > 0.2 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(4) Op(0) C(47) T(1) C(47) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(3) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is total petrosian radius containing 90% of flux for all photometric objects with magnitude r lower than 17 and extinction r greater than 0.2, and object type classification of 3?",
    "sql_query": "SELECT sum( T1.petror90_r) FROM photoobj AS T1 WHERE T1.r < 17 and T1.extinction_r > 0.2 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(4) Op(0) C(47) T(1) C(47) T(1) Filter(0) Filter(4) A(0) Op(0) C(94) T(1) C(94) T(1) V(2) Filter(0) Filter(5) A(0) Op(0) C(88) T(1) C(88) T(1) V(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(5)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum neighbor mode according to different fibermagnitude z of photometric objects that have a distance from center to neighbor smaller than 0.05, a type classification of 6, a neighbor type of 6, a difference of magnitude u and g less than 0.4, a difference of magnitude g and r less than 0.7, a difference of magnitude r and i greater than 0.4, and a difference of magnitude i and z greater than 0.4.",
    "sql_query": "SELECT min( T1.neighbormode), T2.fibermag_z FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.type = 6 and T2.type = 6 and T1.neighbortype = 6 and T1.distance < 0.05 and T2.u - T2.g < 0.4 and T2.g - T2.r < 0.7 and T2.r - T2.i > 0.4 and T2.i - T2.z > 0.4 GROUP BY T2.fibermag_z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(6) T(0) C(6) T(0) A(0) Op(0) C(36) T(1) C(36) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4) Filter(0) Filter(2) A(0) Op(0) C(5) T(0) C(5) T(0) V(4) Filter(0) Filter(4) A(0) Op(0) C(3) T(0) C(3) T(0) V(1) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(2) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(3) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(2) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the minimum neighbor mode for each fibermag z of the photometric objects with type classification of 6, neighbor type of 6 and a center-neighbor distance to a nearest neighbor below 0.05. Besides these objects have a difference of magnitude u and g less than 0.4, a difference of magnitude g and r less than 0.7, a difference of magnitude r and i greater than 0.4, and a difference of magnitude i and z greater than 0.4.",
    "sql_query": "SELECT min( T1.neighbormode), T2.fibermag_z FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.type = 6 and T2.type = 6 and T1.neighbortype = 6 and T1.distance < 0.05 and T2.u - T2.g < 0.4 and T2.g - T2.r < 0.7 and T2.r - T2.i > 0.4 and T2.i - T2.z > 0.4 GROUP BY T2.fibermag_z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(6) T(0) C(6) T(0) A(0) Op(0) C(36) T(1) C(36) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(2) A(0) Op(0) C(5) T(0) C(5) T(0) V(0) Filter(0) Filter(4) A(0) Op(0) C(3) T(0) C(3) T(0) V(2) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(3) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(5) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(3) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum neighbor modes for each fibermag z of objects with a center-neighbor distance smaller than 0.05, a type classification of 6, a neighbor type of 6, which have a difference of magnitude u and g below 0.4, a difference of magnitude g and r below 0.7, a difference of magnitude r and i above 0.4, and a difference of magnitude i and z above 0.4.",
    "sql_query": "SELECT min( T1.neighbormode), T2.fibermag_z FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.type = 6 and T2.type = 6 and T1.neighbortype = 6 and T1.distance < 0.05 and T2.u - T2.g < 0.4 and T2.g - T2.r < 0.7 and T2.r - T2.i > 0.4 and T2.i - T2.z > 0.4 GROUP BY T2.fibermag_z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(6) T(0) C(6) T(0) A(0) Op(0) C(36) T(1) C(36) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(0) Filter(2) A(0) Op(0) C(5) T(0) C(5) T(0) V(1) Filter(0) Filter(4) A(0) Op(0) C(3) T(0) C(3) T(0) V(4) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(3) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(2) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(3) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are center type and fiber magnitudes of objects whose nearest neighbor has a center-neighbor distance below 0.05, a type classification of 6 and a neighbor type of 6 as well. These objects also have a difference of magnitude u and g less than 0.4, a difference of magnitude g and r less than 0.7, a difference of magnitude r and i greater than 0.4, and a difference of magnitude i and z greater than 0.4.",
    "sql_query": "SELECT T1.type, T2.fibermag_i FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.type = 6 and T2.type = 6 and T1.neighbortype = 6 and T1.distance < 0.05 and T2.u - T2.g < 0.4 and T2.g - T2.r < 0.7 and T2.r - T2.i > 0.4 and T2.i - T2.z > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(4) T(0) C(4) T(0) A(0) Op(0) C(35) T(1) C(35) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(2) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(2) Filter(0) Filter(2) A(0) Op(0) C(5) T(0) C(5) T(0) V(2) Filter(0) Filter(4) A(0) Op(0) C(3) T(0) C(3) T(0) V(5) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(0) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(4) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(0) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the center type and fiber magnitude for the objects a the center-neighbor distance of under 0.05 and both type classification and neighbor type of 6, which have a difference of magnitude u and g less than 0.4, a difference of magnitude g and r less than 0.7, a difference of magnitude r and i greater than 0.4, and a difference of magnitude i and z greater than 0.4. ",
    "sql_query": "SELECT T1.type, T2.fibermag_i FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.type = 6 and T2.type = 6 and T1.neighbortype = 6 and T1.distance < 0.05 and T2.u - T2.g < 0.4 and T2.g - T2.r < 0.7 and T2.r - T2.i > 0.4 and T2.i - T2.z > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(4) T(0) C(4) T(0) A(0) Op(0) C(35) T(1) C(35) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(3) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(3) Filter(0) Filter(2) A(0) Op(0) C(5) T(0) C(5) T(0) V(3) Filter(0) Filter(4) A(0) Op(0) C(3) T(0) C(3) T(0) V(2) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(4) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(0) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(4) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What objects are nearest to a photometric object that has a center-neighbor distance less than 0.05 an object type classification of 6 and a neighbor type of 6 as well, which have a difference of magnitude u and g below 0.4, a difference of magnitude g and r below 0.7, a difference of magnitude r and i above 0.4, and a difference of magnitude i and z above 0.4.",
    "sql_query": "SELECT T1.type, T2.fibermag_i FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.type = 6 and T2.type = 6 and T1.neighbortype = 6 and T1.distance < 0.05 and T2.u - T2.g < 0.4 and T2.g - T2.r < 0.7 and T2.r - T2.i > 0.4 and T2.i - T2.z > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(4) T(0) C(4) T(0) A(0) Op(0) C(35) T(1) C(35) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(2) A(0) Op(0) C(5) T(0) C(5) T(0) V(0) Filter(0) Filter(4) A(0) Op(0) C(3) T(0) C(3) T(0) V(2) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(3) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(4) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(3) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the maximum 'row center position' among objects for each neighbor type having a nearby neighbor with a distance from center to neighbor below 0.05, with type classification of 6, neighbor type of 6, a difference of magnitude u and g less than 0.4, a difference of magnitude g and r less than 0.7, a difference of magnitude r and i greater than 0.4, and a difference of magnitude i and z greater than 0.4.",
    "sql_query": "SELECT T1.neighbortype, max( T2.rowc) FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.type = 6 and T2.type = 6 and T1.neighbortype = 6 and T1.distance < 0.05 and T2.u - T2.g < 0.4 and T2.g - T2.r < 0.7 and T2.r - T2.i > 0.4 and T2.i - T2.z > 0.4 GROUP BY T1.neighbortype",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(5) T(0) C(5) T(0) A(1) Op(0) C(16) T(1) C(16) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4) Filter(0) Filter(2) A(0) Op(0) C(5) T(0) C(5) T(0) V(4) Filter(0) Filter(4) A(0) Op(0) C(3) T(0) C(3) T(0) V(2) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(3) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(1) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum time of observation of objects for each neighbor mode belonging to a neighborhood with a distance from center to neighbor of under 0.05 with object type classification and neighbor type are both of 6, which have a a difference of magnitude u and g below 0.4, a difference of magnitude g and r below 0.7, a difference of magnitude r and i above 0.4, and a difference of magnitude i and z above 0.4?",
    "sql_query": "SELECT T1.neighbormode, max( T2.tai_i) FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.type = 6 and T2.type = 6 and T1.neighbortype = 6 and T1.distance < 0.05 and T2.u - T2.g < 0.4 and T2.g - T2.r < 0.7 and T2.r - T2.i > 0.4 and T2.i - T2.z > 0.4 GROUP BY T1.neighbormode",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(6) T(0) C(6) T(0) A(1) Op(0) C(105) T(1) C(105) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(2) A(0) Op(0) C(5) T(0) C(5) T(0) V(0) Filter(0) Filter(4) A(0) Op(0) C(3) T(0) C(3) T(0) V(2) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(3) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(4) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(3) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many photometric objects according to different petromag r have a distence from cetner to nearest neighbor of under 0.05, their type classification of 6 and their neighbor type of 6 as well, which also have a difference of magnitude u and g below 0.4, a difference of magnitude g and r below 0.7, a difference of magnitude r and i above 0.4, and a difference of magnitude i and z above 0.4.",
    "sql_query": "SELECT count( T1.objid), T2.petromag_r FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.type = 6 and T2.type = 6 and T1.neighbortype = 6 and T1.distance < 0.05 and T2.u - T2.g < 0.4 and T2.g - T2.r < 0.7 and T2.r - T2.i > 0.4 and T2.i - T2.z > 0.4 GROUP BY T2.petromag_r",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(3) Op(0) C(1) T(0) C(1) T(0) A(0) Op(0) C(39) T(1) C(39) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(0) Filter(2) A(0) Op(0) C(5) T(0) C(5) T(0) V(1) Filter(0) Filter(4) A(0) Op(0) C(3) T(0) C(3) T(0) V(4) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(3) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(2) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(3) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many photometric objects grouped by their petromag r can be found in a distance from center to neighbor below 0.05 with object type classification of 6 and neighbor type of 6, a difference of magnitude u and g below 0.4, a difference of magnitude g and r below 0.7, a difference of magnitude r and i above 0.4, and a difference of magnitude i and z above 0.4.",
    "sql_query": "SELECT count( T1.objid), T2.petromag_r FROM neighbors AS T1 JOIN photoobj AS T2 ON T1.objid = T2.objid WHERE T2.type = 6 and T2.type = 6 and T1.neighbortype = 6 and T1.distance < 0.05 and T2.u - T2.g < 0.4 and T2.g - T2.r < 0.7 and T2.r - T2.i > 0.4 and T2.i - T2.z > 0.4 GROUP BY T2.petromag_r",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(3) Op(0) C(1) T(0) C(1) T(0) A(0) Op(0) C(39) T(1) C(39) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(2) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(2) Filter(0) Filter(2) A(0) Op(0) C(5) T(0) C(5) T(0) V(2) Filter(0) Filter(4) A(0) Op(0) C(3) T(0) C(3) T(0) V(4) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(0) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(3) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(0) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the total gallactic latitude across all the photometric objects classed as 6 with a difference of magnitude u and g less than 0.4, a difference of magnitude g and magnitude r less than 0.7, a difference of magnitude r and magnitude i greater than 0.4, and a difference of magnitude i and magnitude z greater than 0.4??",
    "sql_query": "SELECT sum( T1.b) FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.4 and T1.g - T1.r < 0.7 and T1.r - T1.i > 0.4 and T1.i - T1.z > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(4) Op(0) C(86) T(1) C(86) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(2) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(0) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(2) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the sum of composite model magnitude error i for objects with type classification 6, a difference of magnitude u and g less than 0.4, a difference of magnitude g and magnitude r less than 0.7, a difference of magnitude r and magnitude i greater than 0.4, and a difference of magnitude i and magnitude z greater than 0.4?.",
    "sql_query": "SELECT sum( T1.cmodelmagerr_i) FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.4 and T1.g - T1.r < 0.7 and T1.r - T1.i > 0.4 and T1.i - T1.z > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(4) Op(0) C(81) T(1) C(81) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(3) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(1) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is total composite model magnitude error i for all the photometric objects with classification 6, a difference of magnitude g and r smaller than 0.7, a difference of magnitude r and i greater than 0.4, and a difference of magnitude i and z greater than 0.4??",
    "sql_query": "SELECT sum( T1.cmodelmagerr_i) FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.4 and T1.g - T1.r < 0.7 and T1.r - T1.i > 0.4 and T1.i - T1.z > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(4) Op(0) C(81) T(1) C(81) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(2) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(3) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(2) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Return the sum of the composite model magnitude error i of photometric objects whose type classification is 6 and which have a difference of magnitude g and magnitude r less than 0.7, a difference of magnitude r and magnitude i greater than 0.4, and a difference of magnitude i and magnitude z greater than 0.4?",
    "sql_query": "SELECT sum( T1.cmodelmagerr_i) FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.4 and T1.g - T1.r < 0.7 and T1.r - T1.i > 0.4 and T1.i - T1.z > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(4) Op(0) C(81) T(1) C(81) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(2) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(0) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(1) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many photometric objects are of the type class 6 and have a difference of magnitude u and g less than 0.4, a difference of magnitude g and magnitude r less than 0.7, a difference of magnitude r and magnitude i greater than 0.4, and a difference of magnitude i and magnitude z greater than 0.4?",
    "sql_query": "SELECT count( * ) FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.4 and T1.g - T1.r < 0.7 and T1.r - T1.i > 0.4 and T1.i - T1.z > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(1) C(0) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(0) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(3) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(0) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many photometric objects have type classification 6a difference of magnitude u and g smaller than 0.4, a difference of magnitude g and r smaller than 0.7, a difference of magnitude r and i greater than 0.4, and a difference of magnitude i and z greater than 0.4?",
    "sql_query": "SELECT count( * ) FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.4 and T1.g - T1.r < 0.7 and T1.r - T1.i > 0.4 and T1.i - T1.z > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(1) C(0) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(3) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(0) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(4) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(0) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of photometric objects with object type classification of 6, a difference of magnitude u and g below 0.4, a difference of magnitude g and r below 0.7, a difference of magnitude r and i above 0.4, and a difference of magnitude i and z above 0.4?",
    "sql_query": "SELECT count( * ) FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.4 and T1.g - T1.r < 0.7 and T1.r - T1.i > 0.4 and T1.i - T1.z > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(1) C(0) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(2) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(0) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(1) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum psfmagnitude z for objects with type classification 6, a difference of magnitude u and g less than 0.4, a difference of magnitude g and magnitude r less than 0.7, a difference of magnitude r and magnitude i greater than 0.4, and a difference of magnitude i and magnitude z greater than 0.4?",
    "sql_query": "SELECT max( T1.psfmag_z) FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.4 and T1.g - T1.r < 0.7 and T1.r - T1.i > 0.4 and T1.i - T1.z > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(26) T(1) C(26) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(3) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(1) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum psfmag_z of all objects with object type classification 6 a difference of magnitude u and g smaller than 0.4, a difference of magnitude g and r smaller than 0.7, a difference of magnitude r and i greater than 0.4, and a difference of magnitude i and z greater than 0.4?",
    "sql_query": "SELECT max( T1.psfmag_z) FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.4 and T1.g - T1.r < 0.7 and T1.r - T1.i > 0.4 and T1.i - T1.z > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(26) T(1) C(26) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(2) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(3) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(2) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum psf magnitude z for all objects with type classification 6,  the difference of magnitude u and g below 0.4, difference of magnitude g and r below 0.7, difference of magnitude r and i above 0.4 and difference of magnitude i and z above 0.4?",
    "sql_query": "SELECT max( T1.psfmag_z) FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.4 and T1.g - T1.r < 0.7 and T1.r - T1.i > 0.4 and T1.i - T1.z > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(26) T(1) C(26) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(2) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(0) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(1) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the total column center position g of photometric objects with classification 6, the difference of magnitude u and g below 0.4, difference of magnitude g and r below 0.7, difference of magnitude r and i above 0.4 and difference of magnitude i and z above 0.4?",
    "sql_query": "SELECT sum( T1.colc_g) FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.4 and T1.g - T1.r < 0.7 and T1.r - T1.i > 0.4 and T1.i - T1.z > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(4) Op(0) C(20) T(1) C(20) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(0) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(3) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(0) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the total column center position g of photometric objects whose object type classification is 6 and the difference of magnitude u and g is less than 0.4 and difference of magnitude g and r is less than 0.7 and difference of magnitude r and i is higher than 0.4 and difference of magnitude i and z is higher than 0.4",
    "sql_query": "SELECT sum( T1.colc_g) FROM photoobj AS T1 WHERE T1.type = 6 and T1.u - T1.g < 0.4 and T1.g - T1.r < 0.7 and T1.r - T1.i > 0.4 and T1.i - T1.z > 0.4",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(4) Op(0) C(20) T(1) C(20) T(1) Filter(0) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1) Filter(0) Filter(4) A(0) Op(1) C(92) T(1) C(93) T(1) V(0) Filter(0) Filter(4) A(0) Op(1) C(93) T(1) C(94) T(1) V(2) Filter(0) Filter(5) A(0) Op(1) C(94) T(1) C(95) T(1) V(0) Filter(5) A(0) Op(1) C(95) T(1) C(96) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the maximum right ascension of spectrocopic objects for each segue2 primary object whose class is STAR and whose subclass contains either L or T?",
    "sql_query": "SELECT T1.segue2_target1, max( T1.ra) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%L%' or T1.subclass like '%T%' GROUP BY T1.segue2_target1",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(117) T(4) C(117) T(4) A(1) Op(0) C(83) T(4) C(83) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "List the modified julien date and the declination of spectroscopic objects for which the class is STAR and belong to a subclass containing either L or T.",
    "sql_query": "SELECT T1.mjd, T1.dec FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%L%' or T1.subclass like '%T%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(90) T(4) C(90) T(4) A(0) Op(0) C(84) T(4) C(84) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the modified julian dates and declinations of objects in STAR class and in spectroscopic subclass containing 'L' or 'T'?",
    "sql_query": "SELECT T1.mjd, T1.dec FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%L%' or T1.subclass like '%T%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(90) T(4) C(90) T(4) A(0) Op(0) C(84) T(4) C(84) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the modified julien dates and declinations of objects in the class 'STAR' and in a spectroscopic subclass like 'L' or 'T'?",
    "sql_query": "SELECT T1.mjd, T1.dec FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%L%' or T1.subclass like '%T%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(90) T(4) C(90) T(4) A(0) Op(0) C(84) T(4) C(84) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the program names and redshifts for spectroscopic objects in class STAR that have a subclass containing L or T?",
    "sql_query": "SELECT T1.programname, T1.z FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%L%' or T1.subclass like '%T%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(113) T(4) C(113) T(4) A(0) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the program name and redshift for all spectroscopic objects whose class is STAR and whose subclass contains either L or T.",
    "sql_query": "SELECT T1.programname, T1.z FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%L%' or T1.subclass like '%T%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(113) T(4) C(113) T(4) A(0) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the program names, redshifts of the spectroscopic objects in the class STAR and in the subclass containing either L or T?",
    "sql_query": "SELECT T1.programname, T1.z FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%L%' or T1.subclass like '%T%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(113) T(4) C(113) T(4) A(0) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the minimum segue2 object type for each redshift warning of all spectroscopic objects in class 'STAR' and in subclass contianing L or T.",
    "sql_query": "SELECT min( T1.segue2primary), T1.zwarning FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%L%' or T1.subclass like '%T%' GROUP BY T1.zwarning",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(111) T(4) C(111) T(4) A(0) Op(0) C(122) T(4) C(122) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are ids and classes of objects whose class is \"STAR\" and have 'L' or 'T' in its subclass?",
    "sql_query": "SELECT T1.specobjid, T1.class FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%L%' or T1.subclass like '%T%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the ids and classes for objects that belong to STAR class and have either L or T in their spectroscopic subclass?",
    "sql_query": "SELECT T1.specobjid, T1.class FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%L%' or T1.subclass like '%T%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the id and class of the spectroscopic objects that are in class of STAR and have either L or T in spectroscopic subclass?",
    "sql_query": "SELECT T1.specobjid, T1.class FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%L%' or T1.subclass like '%T%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the total velocity dispersion for each load version of the objects in the STAR class and in the subclass that contains M?",
    "sql_query": "SELECT T1.veldisp, sum( T1.loadversion) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%M%' GROUP BY T1.veldisp",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(125) T(4) C(125) T(4) A(4) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the total velocity errors for each redshift error of objects with class STAR and subclass containing M?",
    "sql_query": "SELECT T1.zerr, sum( T1.veldisperr) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%M%' GROUP BY T1.zerr",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(121) T(4) C(121) T(4) A(4) Op(0) C(126) T(4) C(126) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the total velocity dispersion error grouped by redshift errors of the spectroscopic objects with STAR class and subclass that contains M?",
    "sql_query": "SELECT T1.zerr, sum( T1.veldisperr) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%M%' GROUP BY T1.zerr",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(121) T(4) C(121) T(4) A(4) Op(0) C(126) T(4) C(126) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the total velocity dispersion errors for each redshift error of all spectroscopic objects in class STAR and in subclass containing M.",
    "sql_query": "SELECT T1.zerr, sum( T1.veldisperr) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%M%' GROUP BY T1.zerr",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(121) T(4) C(121) T(4) A(4) Op(0) C(126) T(4) C(126) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum declination for each redshift warning of spectroscopic objects of class STAR which belong to the subclass containg M as well?",
    "sql_query": "SELECT min( T1.dec), T1.zwarning FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%M%' GROUP BY T1.zwarning",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(84) T(4) C(84) T(4) A(0) Op(0) C(122) T(4) C(122) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the minimum declination for each redshift warning of spectroscopic objects whose class is STAR and subclass contains M?",
    "sql_query": "SELECT min( T1.dec), T1.zwarning FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%M%' GROUP BY T1.zwarning",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(84) T(4) C(84) T(4) A(0) Op(0) C(122) T(4) C(122) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum right ascension and velocity dispersion error of all spectroscopic objects with class 'STAR' and with subclass like 'M'?",
    "sql_query": "SELECT max( T1.ra), T1.veldisperr FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%M%' GROUP BY T1.veldisperr",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(83) T(4) C(83) T(4) A(0) Op(0) C(126) T(4) C(126) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the highest right ascension grouped by velocity dispersion errors for the spectroscopic objects of class 'STAR' and subclass containing 'M'.",
    "sql_query": "SELECT max( T1.ra), T1.veldisperr FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%M%' GROUP BY T1.veldisperr",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(83) T(4) C(83) T(4) A(0) Op(0) C(126) T(4) C(126) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the maximum right ascension corresponding to each velocity dispersion error for all the spectroscopic objects whose class is STAR and whose subclass is like M.",
    "sql_query": "SELECT max( T1.ra), T1.veldisperr FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%M%' GROUP BY T1.veldisperr",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(83) T(4) C(83) T(4) A(0) Op(0) C(126) T(4) C(126) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the maximum right ascendance for each velocity dispersion error of the objects of class STAR and subclass containing 'M'?",
    "sql_query": "SELECT max( T1.ra), T1.veldisperr FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%M%' GROUP BY T1.veldisperr",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(83) T(4) C(83) T(4) A(0) Op(0) C(126) T(4) C(126) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the best object id and modified julien date for object whose class is 'STAR' and whose subclass is like 'M'?",
    "sql_query": "SELECT T1.bestobjid, T1.mjd FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%M%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(90) T(4) C(90) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Which objects belong to the class 'STAR' and belong to a spectroscopic subclass containing 'M'? List the best object id and modified julien date.",
    "sql_query": "SELECT T1.bestobjid, T1.mjd FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%M%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(90) T(4) C(90) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the best object ids and modified julien dates for the objects with class STAR and subclass containing M?",
    "sql_query": "SELECT T1.bestobjid, T1.mjd FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%M%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(90) T(4) C(90) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average load version for each redshift error of spectroscopic objects in the class STAR and subclass containing K? Return each redshift error as well.",
    "sql_query": "SELECT T1.zerr, avg( T1.loadversion) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%K%' GROUP BY T1.zerr",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(121) T(4) C(121) T(4) A(5) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the redshift, class of objects in class STAR and subclass containing K.",
    "sql_query": "SELECT T1.z, T1.class FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%K%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(120) T(4) C(120) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show all the redshifts and class of objects in the class 'STAR' and in subclass that contains 'K'.",
    "sql_query": "SELECT T1.z, T1.class FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%K%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(120) T(4) C(120) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average declination of spectroscopic objects with class \"STAR\" and subclass containing \"K\" within each modified julien date?",
    "sql_query": "SELECT T1.mjd, avg( T1.dec) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%K%' GROUP BY T1.mjd",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(90) T(4) C(90) T(4) A(5) Op(0) C(84) T(4) C(84) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the average declination of spectroscopic objects of class STAR and subclass containing K for each modified julien date.",
    "sql_query": "SELECT T1.mjd, avg( T1.dec) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%K%' GROUP BY T1.mjd",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(90) T(4) C(90) T(4) A(5) Op(0) C(84) T(4) C(84) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many spectroscopic objects are in class Star and in the subclass like K according to different groups of load version?",
    "sql_query": "SELECT count( T1.bestobjid), T1.loadversion FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%K%' GROUP BY T1.loadversion",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(3) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many objects have class of STAR and subclass like K for each load version? List the count of best object ID and corresponding load version.",
    "sql_query": "SELECT count( T1.bestobjid), T1.loadversion FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%K%' GROUP BY T1.loadversion",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(3) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many objects have class STAR and subclass containing K in different load versions?",
    "sql_query": "SELECT count( T1.bestobjid), T1.loadversion FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%K%' GROUP BY T1.loadversion",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(3) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the ids and redshifts of objects that have a class 'STAR' and a subclass like 'K'?",
    "sql_query": "SELECT T1.specobjid, T1.z FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%K%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show object ids for all objects that are in class STAR and in spectroscopic subclass that contains K. Also show the object redshift of each object.",
    "sql_query": "SELECT T1.specobjid, T1.z FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%K%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the id and redshift of objects whose class is STAR and whose subclass is like K.",
    "sql_query": "SELECT T1.specobjid, T1.z FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%K%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the ids and redshifts of objects whose class is 'STAR' and have subclass containing 'K'.",
    "sql_query": "SELECT T1.specobjid, T1.z FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%K%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum redshift error of the spectroscopical objects in class STAR and subclass containing G?",
    "sql_query": "SELECT min( T1.zerr), T1.class FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%G%' GROUP BY T1.class",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(121) T(4) C(121) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the total number of segue2 secondary objects in each spectroscopic subclass for all spectroscopic objects of class STAR and subclass like G?",
    "sql_query": "SELECT sum( T1.segue2_target2), T1.subclass FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%G%' GROUP BY T1.subclass",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(118) T(4) C(118) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Which spectroscopic objects have class of STAR and subclasses containing G? List the total number of segue2 secondary objects for each subclass.",
    "sql_query": "SELECT sum( T1.segue2_target2), T1.subclass FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%G%' GROUP BY T1.subclass",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(118) T(4) C(118) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "List the maximum segue2 secondary objects grouped by redshift error for all objects with class 'STAR' and subclass containing 'G'.",
    "sql_query": "SELECT max( T1.segue2_target2), T1.zerr FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%G%' GROUP BY T1.zerr",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(118) T(4) C(118) T(4) A(0) Op(0) C(121) T(4) C(121) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the survey and BOSS ancillary program target of spectroscopic objects with class 'STAR' and subclass containing 'G'?",
    "sql_query": "SELECT T1.survey, T1.ancillary_target1 FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%G%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(112) T(4) C(112) T(4) A(0) Op(0) C(119) T(4) C(119) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum redshift of the spectroscopic objects class \"STAR\" and whose subclass like \"G\" corresponding to each plate id.",
    "sql_query": "SELECT T1.plateid, max( T1.z) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%G%' GROUP BY T1.plateid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(109) T(4) C(109) T(4) A(1) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the total number of BOSS ancillary program targets corresponding to each redshift errors of all the spectroscopic objects that are in class Star and in subclass containing an F?",
    "sql_query": "SELECT sum( T1.ancillary_target1), T1.zerr FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%F%' GROUP BY T1.zerr",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(119) T(4) C(119) T(4) A(0) Op(0) C(121) T(4) C(121) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the total number of BOSS ancillary program target according to each redshift error in the 'STAR' class and subclass containing an 'F' for all spectroscopic object?",
    "sql_query": "SELECT sum( T1.ancillary_target1), T1.zerr FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%F%' GROUP BY T1.zerr",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(119) T(4) C(119) T(4) A(0) Op(0) C(121) T(4) C(121) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the largest number of SDSS special program targets due to each segue2 secondary objects of the class STAR and subclass containing an F.",
    "sql_query": "SELECT max( T1.special_target1), T1.segue2_target2 FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%F%' GROUP BY T1.segue2_target2",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(116) T(4) C(116) T(4) A(0) Op(0) C(118) T(4) C(118) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the maximum number of SDSS special program targets grouped by segue2 secondary objects in class of STAR and in subclass containing an F?",
    "sql_query": "SELECT max( T1.special_target1), T1.segue2_target2 FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%F%' GROUP BY T1.segue2_target2",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(116) T(4) C(116) T(4) A(0) Op(0) C(118) T(4) C(118) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the maximum number of SDSS special program targets and secondary object in class 'STAR' and an letter 'F' in subclass?",
    "sql_query": "SELECT max( T1.special_target1), T1.segue2_target2 FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%F%' GROUP BY T1.segue2_target2",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(116) T(4) C(116) T(4) A(0) Op(0) C(118) T(4) C(118) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the maximum number of SDSS special program targets grouped by the segue2 secondary objects which have classes STAR and subclasses containing an F?",
    "sql_query": "SELECT max( T1.special_target1), T1.segue2_target2 FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%F%' GROUP BY T1.segue2_target2",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(116) T(4) C(116) T(4) A(0) Op(0) C(118) T(4) C(118) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show program names and redshift errors of all spectroscopic objects whose class is STAR and subclass contains an F.",
    "sql_query": "SELECT T1.programname, T1.zerr FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%F%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(113) T(4) C(113) T(4) A(0) Op(0) C(121) T(4) C(121) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the program name and redshift error for the object whose class is 'STAR' and subclass contains an \"F\".",
    "sql_query": "SELECT T1.programname, T1.zerr FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%F%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(113) T(4) C(113) T(4) A(0) Op(0) C(121) T(4) C(121) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "List the best object ids and average SDSS special programme targets for each best object with class STAR and spectroscopic subclass containing an F.",
    "sql_query": "SELECT T1.bestobjid, avg( T1.special_target1) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%F%' GROUP BY T1.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(108) T(4) C(108) T(4) A(5) Op(0) C(116) T(4) C(116) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "how many spectroscopic objects corresponding to each fiber id are in the class (STAR) and in the subclass containing F?",
    "sql_query": "SELECT count( T1.specobjid), T1.fiberid FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%F%' GROUP BY T1.fiberid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(3) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(115) T(4) C(115) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of objects in class STAR and in subclass that contains an F, grouped by fiber id.",
    "sql_query": "SELECT count( T1.specobjid), T1.fiberid FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%F%' GROUP BY T1.fiberid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(3) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(115) T(4) C(115) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of objects for each fiber id, whose class is 'STAR' and the subclass contains an 'F'.",
    "sql_query": "SELECT count( T1.specobjid), T1.fiberid FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%F%' GROUP BY T1.fiberid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(3) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(115) T(4) C(115) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the total redshift grouped by BOSS ancillary program targets for all spectroscopic objects in class STAR and subclass containing  an 'A'.",
    "sql_query": "SELECT T1.ancillary_target1, sum( T1.z) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%A%' GROUP BY T1.ancillary_target1",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(119) T(4) C(119) T(4) A(4) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the total redshift according to each BOSS ancillary program target of the objects in class STAR and spectroscopic subclass containing an A.",
    "sql_query": "SELECT T1.ancillary_target1, sum( T1.z) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%A%' GROUP BY T1.ancillary_target1",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(119) T(4) C(119) T(4) A(4) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the fiber ids and spectroscopic subclasses of objects that belong to the class STAR and their subclass contain an A?",
    "sql_query": "SELECT T1.fiberid, T1.subclass FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%A%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(115) T(4) C(115) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the fiber id and subclass of spectroscopic objects whose class is STAR and subclass containing an A.",
    "sql_query": "SELECT T1.fiberid, T1.subclass FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%A%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(115) T(4) C(115) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the fiber id and the spectroscopic subclass of objects whose subclass contains an 'A' and in class of stars?",
    "sql_query": "SELECT T1.fiberid, T1.subclass FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%A%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(115) T(4) C(115) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the minimum redshifts according to the modified julien date for all objects class 'STAR' and spectroscopic subclass containing an 'A' ?",
    "sql_query": "SELECT T1.mjd, min( T1.z) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%A%' GROUP BY T1.mjd",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(90) T(4) C(90) T(4) A(2) Op(0) C(120) T(4) C(120) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Which object belongs to class 'STAR' and belongs to subclass that contains an 'A'? Give me the best object id and the BOSS ancillary program target.",
    "sql_query": "SELECT T1.bestobjid, T1.ancillary_target1 FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%A%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(119) T(4) C(119) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the best object ids and BOSS ancillary program targets for the spectroscopic objects of class 'STAR' and of subclass containing an 'A'?",
    "sql_query": "SELECT T1.bestobjid, T1.ancillary_target1 FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%A%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(119) T(4) C(119) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the ids and the BOSS auxiliary program targets of the spectroscopic object with class 'STAR' and subclass that contains an A?",
    "sql_query": "SELECT T1.bestobjid, T1.ancillary_target1 FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%A%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(119) T(4) C(119) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the id and total of the best spectroscopic objects found in class STAR and subclass containing A?",
    "sql_query": "SELECT T1.bestobjid, sum( T1.scienceprimary) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%A%' GROUP BY T1.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(108) T(4) C(108) T(4) A(4) Op(0) C(110) T(4) C(110) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Return the total redshift error of all the objects with class of STAR and subclass containing B with the respect to grouped BOSS ancillary programs.",
    "sql_query": "SELECT T1.ancillary_target1, sum( T1.zerr) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%B%' GROUP BY T1.ancillary_target1",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(119) T(4) C(119) T(4) A(4) Op(0) C(121) T(4) C(121) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Return the total redshift error of all the spectroscopic objects of class of STAR and subclass containing B according to each same group of BOSS ancillary program targets.",
    "sql_query": "SELECT T1.ancillary_target1, sum( T1.zerr) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%B%' GROUP BY T1.ancillary_target1",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(119) T(4) C(119) T(4) A(4) Op(0) C(121) T(4) C(121) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average redshift warning for the different SDSS special program targets, whose objects have class in STAR and spectroscopic subclass containing B?",
    "sql_query": "SELECT T1.special_target1, avg( T1.zwarning) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%B%' GROUP BY T1.special_target1",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(116) T(4) C(116) T(4) A(5) Op(0) C(122) T(4) C(122) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Give me the average redshift warning of all the objects from the class STAR and spectroscopic subclass that contains B, according to each SDSS spectroscopic program target.",
    "sql_query": "SELECT T1.special_target1, avg( T1.zwarning) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%B%' GROUP BY T1.special_target1",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(116) T(4) C(116) T(4) A(5) Op(0) C(122) T(4) C(122) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average redshift warning size of objects for each group of SDSS special program targets whose class is STAR and subclass contains B?",
    "sql_query": "SELECT T1.special_target1, avg( T1.zwarning) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%B%' GROUP BY T1.special_target1",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(116) T(4) C(116) T(4) A(5) Op(0) C(122) T(4) C(122) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the plate numbers and subclasses of spectroscopic objects that belong both to class STAR and subclass that contains B.",
    "sql_query": "SELECT T1.plate, T1.subclass FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%B%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(114) T(4) C(114) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the plate numbers and spectroscopic subclasses of objects with class 'STAR' and subclass like 'B'?",
    "sql_query": "SELECT T1.plate, T1.subclass FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%B%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(114) T(4) C(114) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the plate numbers and spectroscopic subclasses for all the objects in the STAR class and subclass containing B?",
    "sql_query": "SELECT T1.plate, T1.subclass FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%B%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(114) T(4) C(114) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the plate numbers and spectroscopic subclass for objects of class STAR and subclass like B?",
    "sql_query": "SELECT T1.plate, T1.subclass FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%B%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(114) T(4) C(114) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the plate id and minimum load version for each of plate id of all objects of class of STAR and subclass containing B.",
    "sql_query": "SELECT T1.plateid, min( T1.loadversion) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%B%' GROUP BY T1.plateid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(109) T(4) C(109) T(4) A(2) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the minimum load versions grouped by plate id for the spectroscopic objects of class STAR and subclass like B?",
    "sql_query": "SELECT T1.plateid, min( T1.loadversion) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%B%' GROUP BY T1.plateid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(109) T(4) C(109) T(4) A(2) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the plate ids and average plate numbers grouped by plate ids for all the objects in class of STAR and in subclass like B?",
    "sql_query": "SELECT T1.plateid, avg( T1.plate) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%B%' GROUP BY T1.plateid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(109) T(4) C(109) T(4) A(5) Op(0) C(114) T(4) C(114) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average plate numbers of spectroscopic objects in class STAR and subclass containing B of each same gourp of plate id?",
    "sql_query": "SELECT T1.plateid, avg( T1.plate) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%B%' GROUP BY T1.plateid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(109) T(4) C(109) T(4) A(5) Op(0) C(114) T(4) C(114) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the plate ids and average plate numbers of objects in the class of STAR and subclass like B?",
    "sql_query": "SELECT T1.plateid, avg( T1.plate) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%B%' GROUP BY T1.plateid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(109) T(4) C(109) T(4) A(5) Op(0) C(114) T(4) C(114) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Which plate id and the average plate number belong to a spectroscopic object with class of STAR and subclass containing B?",
    "sql_query": "SELECT T1.plateid, avg( T1.plate) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%B%' GROUP BY T1.plateid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(109) T(4) C(109) T(4) A(5) Op(0) C(114) T(4) C(114) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the count of spectroscopic objects are in class 'STAR' and subclass containing 'O', which is grouped by the redshift warnings?",
    "sql_query": "SELECT count( * ), T1.zwarning FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%O%' GROUP BY T1.zwarning",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(3) Op(0) C(0) T(4) C(0) T(4) A(0) Op(0) C(122) T(4) C(122) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the SDSS special program target and spectroscopic subclass of the object with class of STAR and subclass that has a pattern of O?",
    "sql_query": "SELECT T1.special_target1, T1.subclass FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%O%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(116) T(4) C(116) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(3) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the SDSS special program targets and class of objects in class 'STAR' and in subclass like 'O'.",
    "sql_query": "SELECT T1.special_target1, T1.class FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%O%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(116) T(4) C(116) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the SDSS special program targets and class for all spectroscopic objects with subclass that contains O and the class of STAR?",
    "sql_query": "SELECT T1.special_target1, T1.class FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%O%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(116) T(4) C(116) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are SDSS special program targets whose spectroscopic object belongs to a class \u201cSTAR\u201d and a subclass containing \u201cO\u201d? Give me the corresponding class as well. ",
    "sql_query": "SELECT T1.special_target1, T1.class FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%O%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(116) T(4) C(116) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(4) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the minimum plate number with respect to the segue2 object type for all spectroscopic objects with class of STAR and subclass containing O.",
    "sql_query": "SELECT T1.segue2primary, min( T1.plate) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%O%' GROUP BY T1.segue2primary",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(111) T(4) C(111) T(4) A(2) Op(0) C(114) T(4) C(114) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the total best spectrum with respect to the program name for all the objects in class STAR and in subclass like O.",
    "sql_query": "SELECT sum( T1.scienceprimary), T1.programname FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%O%' GROUP BY T1.programname",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(110) T(4) C(110) T(4) A(0) Op(0) C(113) T(4) C(113) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the total best spectrum grouped by the different program names for the objects with class of STAR and the spectroscopic subclass of O?",
    "sql_query": "SELECT sum( T1.scienceprimary), T1.programname FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%O%' GROUP BY T1.programname",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(110) T(4) C(110) T(4) A(0) Op(0) C(113) T(4) C(113) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "List the program names, segue2 primary objects, segue2 secondary objects, redshift warning, and classes for all objects that have class 'STAR' and subclass like 'WD'.",
    "sql_query": "SELECT T1.programname, T1.segue2_target1, T1.segue2_target2, T1.zwarning, T1.class FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%WD%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(113) T(4) C(113) T(4) A(0) Op(0) C(117) T(4) C(117) T(4) A(0) Op(0) C(118) T(4) C(118) T(4) A(0) Op(0) C(122) T(4) C(122) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the the program names, segue2 primary and secondary objects, redshift warnings, and class of the spectroscopic objects in class 'STAR' and subclass containing 'WD'?",
    "sql_query": "SELECT T1.programname, T1.segue2_target1, T1.segue2_target2, T1.zwarning, T1.class FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%WD%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(113) T(4) C(113) T(4) A(0) Op(0) C(117) T(4) C(117) T(4) A(0) Op(0) C(118) T(4) C(118) T(4) A(0) Op(0) C(122) T(4) C(122) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the program name, segue2 primary object, segue2 secondary object, redshift warning, class of the spectroscopic object with the class STAR and the subclass like WD?",
    "sql_query": "SELECT T1.programname, T1.segue2_target1, T1.segue2_target2, T1.zwarning, T1.class FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%WD%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(113) T(4) C(113) T(4) A(0) Op(0) C(117) T(4) C(117) T(4) A(0) Op(0) C(118) T(4) C(118) T(4) A(0) Op(0) C(122) T(4) C(122) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the program name, segue2 primary and secondary objects, redshift warnings, and class for spectroscopic objects containing class 'STAR' and subclass like 'WD'.",
    "sql_query": "SELECT T1.programname, T1.segue2_target1, T1.segue2_target2, T1.zwarning, T1.class FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%WD%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(113) T(4) C(113) T(4) A(0) Op(0) C(117) T(4) C(117) T(4) A(0) Op(0) C(118) T(4) C(118) T(4) A(0) Op(0) C(122) T(4) C(122) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "For each spectroscopic object that has a class 'STAR' and a subclass containing the pattern WD, what are the segue2 object types, modified julien dates, segue2 primary objects, redshift and redshift warnings for the objects of these classes?",
    "sql_query": "SELECT T1.segue2primary, T1.mjd, T1.segue2_target1, T1.z, T1.zwarning FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%WD%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(111) T(4) C(111) T(4) A(0) Op(0) C(90) T(4) C(90) T(4) A(0) Op(0) C(117) T(4) C(117) T(4) A(0) Op(0) C(120) T(4) C(120) T(4) A(0) Op(0) C(122) T(4) C(122) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the segue2 object type, modified julien date, segue2 primary object, redshift and redshift warning of spectroscopic objects of class of 'STAR' and with subclass 'WD'",
    "sql_query": "SELECT T1.segue2primary, T1.mjd, T1.segue2_target1, T1.z, T1.zwarning FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%WD%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(111) T(4) C(111) T(4) A(0) Op(0) C(90) T(4) C(90) T(4) A(0) Op(0) C(117) T(4) C(117) T(4) A(0) Op(0) C(120) T(4) C(120) T(4) A(0) Op(0) C(122) T(4) C(122) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the best spectrum, survey, plate number, right ascension, and velocity of spectroscopic objects in class 'STAR' and subclass containing 'WD'?",
    "sql_query": "SELECT T1.scienceprimary, T1.survey, T1.plate, T1.ra, T1.veldisp FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%WD%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(110) T(4) C(110) T(4) A(0) Op(0) C(112) T(4) C(112) T(4) A(0) Op(0) C(114) T(4) C(114) T(4) A(0) Op(0) C(83) T(4) C(83) T(4) A(0) Op(0) C(125) T(4) C(125) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the best spectrum, survey, plate number, right ascension and velocity dispersion for spectroscopic objects who have class of 'STAR' and subclass like 'WD'?",
    "sql_query": "SELECT T1.scienceprimary, T1.survey, T1.plate, T1.ra, T1.veldisp FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%WD%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(110) T(4) C(110) T(4) A(0) Op(0) C(112) T(4) C(112) T(4) A(0) Op(0) C(114) T(4) C(114) T(4) A(0) Op(0) C(83) T(4) C(83) T(4) A(0) Op(0) C(125) T(4) C(125) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the best spectrum, survey, plate number, right ascension and velocity dispersion for the objects with class Star and subclass containing \"WD\"?",
    "sql_query": "SELECT T1.scienceprimary, T1.survey, T1.plate, T1.ra, T1.veldisp FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%WD%'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(4) A(0) Op(0) C(110) T(4) C(110) T(4) A(0) Op(0) C(112) T(4) C(112) T(4) A(0) Op(0) C(114) T(4) C(114) T(4) A(0) Op(0) C(83) T(4) C(83) T(4) A(0) Op(0) C(125) T(4) C(125) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the total number of plates grouped by redshift error for each spectroscopic object that belongs to class of 'STAR' and subclass containing 'WD'?",
    "sql_query": "SELECT sum( T1.plate), T1.zerr FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%WD%' GROUP BY T1.zerr",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(114) T(4) C(114) T(4) A(0) Op(0) C(121) T(4) C(121) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the sum of plate numbers of the class of STAR and subclass containing WD grouped by redshift error?",
    "sql_query": "SELECT sum( T1.plate), T1.zerr FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%WD%' GROUP BY T1.zerr",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(114) T(4) C(114) T(4) A(0) Op(0) C(121) T(4) C(121) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the maximum sequence 2 primary objects for all objects with class of STAR and subclass like WD grouped by velocity dispersion?",
    "sql_query": "SELECT max( T1.segue2_target1), T1.veldisp FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%WD%' GROUP BY T1.veldisp",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(117) T(4) C(117) T(4) A(0) Op(0) C(125) T(4) C(125) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "List the maximum segue2 primary objects corresponding to different velocity dispersion for the objects with the class STAR and subclass containing WD.",
    "sql_query": "SELECT max( T1.segue2_target1), T1.veldisp FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass like '%WD%' GROUP BY T1.veldisp",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(117) T(4) C(117) T(4) A(0) Op(0) C(125) T(4) C(125) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(9) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many spectroscopic objects in class of 'STAR' and in subclass of 'Carbon' or of 'Carbon lines'?",
    "sql_query": "SELECT count( * ) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass = 'Carbon' or T1.subclass = 'Carbon_lines'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(4) C(0) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(1) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(3) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "For each object in class STAR and in subclass of Carbon or of Carbon Lines, what is its velocity dispersion?",
    "sql_query": "SELECT T1.veldisp FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass = 'Carbon' or T1.subclass = 'Carbon_lines'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(125) T(4) C(125) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(1) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(2) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the velocity differsions of the objects of class STAR and under subclass Carbon or under subclass Carbon Lines?",
    "sql_query": "SELECT T1.veldisp FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass = 'Carbon' or T1.subclass = 'Carbon_lines'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(125) T(4) C(125) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(1) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(3) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum redshift warning of all the objects in class of STAR whose subclass is either Carbon or Carbon lines?",
    "sql_query": "SELECT max( T1.zwarning) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass = 'Carbon' or T1.subclass = 'Carbon_lines'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(122) T(4) C(122) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(1) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum redshift warning for objects in class STAR and in subclass Carbon or Carbon lines?",
    "sql_query": "SELECT max( T1.zwarning) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass = 'Carbon' or T1.subclass = 'Carbon_lines'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(122) T(4) C(122) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(1) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the total plate number of objects classified by class STAR and spectroscopic subclass Carbon lines.",
    "sql_query": "SELECT sum( T1.plate) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass = 'Carbon' or T1.subclass = 'Carbon_lines'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(4) Op(0) C(114) T(4) C(114) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1) Filter(1) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(2) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Return the total plate numbers of all objects in class STAR and spectroscopic subclass Carbon or Carbon lines.",
    "sql_query": "SELECT sum( T1.plate) FROM specobj AS T1 WHERE T1.class = 'STAR' and T1.subclass = 'Carbon' or T1.subclass = 'Carbon_lines'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(4) Op(0) C(114) T(4) C(114) T(4) Filter(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0) Filter(1) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the maximum load versions of the spectroscopic objects whose subclass is 'OB' and class is 'STAR'.",
    "sql_query": "SELECT max( T1.loadversion) FROM specobj AS T1 WHERE T1.subclass = 'OB' and T1.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the maximum load version of the objects in the spectroscopic subclass OB and the STAR class.",
    "sql_query": "SELECT max( T1.loadversion) FROM specobj AS T1 WHERE T1.subclass = 'OB' and T1.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the maximum load versions of spectroscopic objects in subclass OB and class STAR.",
    "sql_query": "SELECT max( T1.loadversion) FROM specobj AS T1 WHERE T1.subclass = 'OB' and T1.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the velocity dispersion errors for objects in the spectroscopic subclass OB and class STAR?",
    "sql_query": "SELECT T1.veldisperr FROM specobj AS T1 WHERE T1.subclass = 'OB' and T1.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(126) T(4) C(126) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find all the velocity dispersion errors of the objects of the subclass OB and class STAR.",
    "sql_query": "SELECT T1.veldisperr FROM specobj AS T1 WHERE T1.subclass = 'OB' and T1.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(126) T(4) C(126) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the velocity dispersion error of the spectroscopic objects of subclass OB and class STAR.",
    "sql_query": "SELECT T1.veldisperr FROM specobj AS T1 WHERE T1.subclass = 'OB' and T1.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(126) T(4) C(126) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the velocity dispersion error of the spectroscopic objects from the subclass OB and class STAR?",
    "sql_query": "SELECT T1.veldisperr FROM specobj AS T1 WHERE T1.subclass = 'OB' and T1.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(126) T(4) C(126) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the minimum velocity dispersion of spectroscopic objects belonging to subclass OB and class STAR.",
    "sql_query": "SELECT min( T1.veldisp) FROM specobj AS T1 WHERE T1.subclass = 'OB' and T1.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(2) Op(0) C(125) T(4) C(125) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum velocity dispersion of objects in the spectroscopic subclass OB and class STAR?",
    "sql_query": "SELECT min( T1.veldisp) FROM specobj AS T1 WHERE T1.subclass = 'OB' and T1.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(2) Op(0) C(125) T(4) C(125) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average best spectrum for the spectroscopic objects in subclass OB and class STAR?",
    "sql_query": "SELECT avg( T1.scienceprimary) FROM specobj AS T1 WHERE T1.subclass = 'OB' and T1.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(110) T(4) C(110) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the average bestspectrum of objects in different spectroscopic subclass OB and in STAR class.",
    "sql_query": "SELECT avg( T1.scienceprimary) FROM specobj AS T1 WHERE T1.subclass = 'OB' and T1.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(110) T(4) C(110) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Count the number of best objects in the spectroscopic subclass OB and class STAR.",
    "sql_query": "SELECT count( T1.bestobjid) FROM specobj AS T1 WHERE T1.subclass = 'OB' and T1.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(108) T(4) C(108) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many objects are in a subclass of OB and a class of STAR?",
    "sql_query": "SELECT count( T1.bestobjid) FROM specobj AS T1 WHERE T1.subclass = 'OB' and T1.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(108) T(4) C(108) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum load version of the spectroscopic objects in class QSO?",
    "sql_query": "SELECT max( T1.loadversion) FROM specobj AS T1 WHERE T1.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(91) T(4) C(91) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum load version for all objects in QSO class?",
    "sql_query": "SELECT max( T1.loadversion) FROM specobj AS T1 WHERE T1.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(91) T(4) C(91) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum load version of the objects that have class QSO?",
    "sql_query": "SELECT max( T1.loadversion) FROM specobj AS T1 WHERE T1.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(91) T(4) C(91) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum load version of spectroscopic objects in class QSO?",
    "sql_query": "SELECT max( T1.loadversion) FROM specobj AS T1 WHERE T1.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(91) T(4) C(91) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum load version of the spectroscopy objects in QSO class?",
    "sql_query": "SELECT min( T1.loadversion) FROM specobj AS T1 WHERE T1.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(2) Op(0) C(91) T(4) C(91) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the total redshift for spectroscopic objects that belong to class QSO?",
    "sql_query": "SELECT sum( T1.z) FROM specobj AS T1 WHERE T1.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(4) Op(0) C(120) T(4) C(120) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the total redshifts of the spectroscopic objects in the class 'QSO'.",
    "sql_query": "SELECT sum( T1.z) FROM specobj AS T1 WHERE T1.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(4) Op(0) C(120) T(4) C(120) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average right ascension of spectroscopic objects of class 'QSO'?",
    "sql_query": "SELECT avg( T1.ra) FROM specobj AS T1 WHERE T1.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(83) T(4) C(83) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average right ascension of all spectroscopic objects in QSO class?",
    "sql_query": "SELECT avg( T1.ra) FROM specobj AS T1 WHERE T1.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(83) T(4) C(83) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average of right ascension for the objects whose class name is QSO?",
    "sql_query": "SELECT avg( T1.ra) FROM specobj AS T1 WHERE T1.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(83) T(4) C(83) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the average right ascension value of spectroscopic objects whose class is QSO.",
    "sql_query": "SELECT avg( T1.ra) FROM specobj AS T1 WHERE T1.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(83) T(4) C(83) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the ids of the objects in the QSO class?",
    "sql_query": "SELECT T1.specobjid FROM specobj AS T1 WHERE T1.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the ids of spectroscopic objects belonging to class QSO?",
    "sql_query": "SELECT T1.specobjid FROM specobj AS T1 WHERE T1.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the ids of the objects that belong to the QSO class?",
    "sql_query": "SELECT T1.specobjid FROM specobj AS T1 WHERE T1.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the object IDs of the spectroscopic objects in the QSO class?",
    "sql_query": "SELECT T1.specobjid FROM specobj AS T1 WHERE T1.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Which spectroscopic objects have a QSO class? Give me the object id.",
    "sql_query": "SELECT T1.specobjid FROM specobj AS T1 WHERE T1.class = 'QSO'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(7) T(4) C(7) T(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the number of spectroscopic objects in subclass AGN BROADLINE and in class GALAXY for each different redshift ? ",
    "sql_query": "SELECT T1.z, count( T1.zerr) FROM specobj AS T1 WHERE T1.subclass = 'AGN BROADLINE' and T1.class = 'GALAXY' GROUP BY T1.z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(120) T(4) C(120) T(4) A(3) Op(0) C(121) T(4) C(121) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the counts of spectroscopic object for each different redshift which belongs to the AGN BROADLINE subclass and the GALAXY class ? ",
    "sql_query": "SELECT T1.z, count( T1.zerr) FROM specobj AS T1 WHERE T1.subclass = 'AGN BROADLINE' and T1.class = 'GALAXY' GROUP BY T1.z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(120) T(4) C(120) T(4) A(3) Op(0) C(121) T(4) C(121) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How are the average redshift errors for each redshift of the spectroscopic objects in the subclass of  'AGN BROADLINE' and class of 'GALAXY' ? ",
    "sql_query": "SELECT T1.z, avg( T1.zerr) FROM specobj AS T1 WHERE T1.subclass = 'AGN BROADLINE' and T1.class = 'GALAXY' GROUP BY T1.z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(120) T(4) C(120) T(4) A(5) Op(0) C(121) T(4) C(121) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(2) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the program name, right ascension and class for the spectroscopic objects that are in AMGN BROADLINE subclass and GALAXY class?",
    "sql_query": "SELECT T1.programname, T1.ra, T1.class FROM specobj AS T1 WHERE T1.subclass = 'AGN BROADLINE' and T1.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(113) T(4) C(113) T(4) A(0) Op(0) C(83) T(4) C(83) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the program name, right ascension and class of the spectroscopic objects that are in AGN BROADLINE subclass and GALAXY class.",
    "sql_query": "SELECT T1.programname, T1.ra, T1.class FROM specobj AS T1 WHERE T1.subclass = 'AGN BROADLINE' and T1.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(113) T(4) C(113) T(4) A(0) Op(0) C(83) T(4) C(83) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the program name, right-ascension and class of the spectroscopical object with subclass AGN BROADLINE and class GALAXY.",
    "sql_query": "SELECT T1.programname, T1.ra, T1.class FROM specobj AS T1 WHERE T1.subclass = 'AGN BROADLINE' and T1.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(113) T(4) C(113) T(4) A(0) Op(0) C(83) T(4) C(83) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Give the program name, right ascension, and class for all the objects in spectroscopic subclass \"AGN BROADLINE\" and class \"GALAXY\".",
    "sql_query": "SELECT T1.programname, T1.ra, T1.class FROM specobj AS T1 WHERE T1.subclass = 'AGN BROADLINE' and T1.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(113) T(4) C(113) T(4) A(0) Op(0) C(83) T(4) C(83) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the program names, right ascensions, and classes which are applied to the spectroscopic objects whose subclass is 'AGN BROADLINE' and which have class 'GALAXY'?",
    "sql_query": "SELECT T1.programname, T1.ra, T1.class FROM specobj AS T1 WHERE T1.subclass = 'AGN BROADLINE' and T1.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(113) T(4) C(113) T(4) A(0) Op(0) C(83) T(4) C(83) T(4) A(0) Op(0) C(123) T(4) C(123) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the total number of segue2 secondary objects for each subclass of all spectroscopic objects with subclass AGN BROADLINE and GALAXY?",
    "sql_query": "SELECT sum( T1.segue2_target2), T1.subclass FROM specobj AS T1 WHERE T1.subclass = 'AGN BROADLINE' and T1.class = 'GALAXY' GROUP BY T1.subclass",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(118) T(4) C(118) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the sum of all the segue2 secondary objects and subclass for spectroscopic objects with subclass of AGN BROADLINE and class of GALAXY?",
    "sql_query": "SELECT sum( T1.segue2_target2), T1.subclass FROM specobj AS T1 WHERE T1.subclass = 'AGN BROADLINE' and T1.class = 'GALAXY' GROUP BY T1.subclass",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(118) T(4) C(118) T(4) A(0) Op(0) C(124) T(4) C(124) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(2) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the maximum of BOSS ancillary program targets for each redshift warning of spectroscopic objects with subclass of AGN BROADLINE and class of GALAXY.",
    "sql_query": "SELECT max( T1.ancillary_target1), T1.zwarning FROM specobj AS T1 WHERE T1.subclass = 'AGN BROADLINE' and T1.class = 'GALAXY' GROUP BY T1.zwarning",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(119) T(4) C(119) T(4) A(0) Op(0) C(122) T(4) C(122) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "For all spectroscopic object with both an AGN BROADLINE subclass and an AGLARY class, show the maximum BOSS ancillary program target grouped by the redshift warning.",
    "sql_query": "SELECT max( T1.ancillary_target1), T1.zwarning FROM specobj AS T1 WHERE T1.subclass = 'AGN BROADLINE' and T1.class = 'GALAXY' GROUP BY T1.zwarning",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(119) T(4) C(119) T(4) A(0) Op(0) C(122) T(4) C(122) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(6)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the ids, surveys, and program names of all the spectroscopy objects of the AGN BROADLINE subclass and GALAXY class?",
    "sql_query": "SELECT T1.specobjid, T1.survey, T1.programname FROM specobj AS T1 WHERE T1.subclass = 'AGN BROADLINE' and T1.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(112) T(4) C(112) T(4) A(0) Op(0) C(113) T(4) C(113) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the id, survey, and program name for the objects in a spectroscopic subclass 'AGN BROADLINE' and in the class 'GALAXY'.",
    "sql_query": "SELECT T1.specobjid, T1.survey, T1.programname FROM specobj AS T1 WHERE T1.subclass = 'AGN BROADLINE' and T1.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(112) T(4) C(112) T(4) A(0) Op(0) C(113) T(4) C(113) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(2) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the object ids, survey number, and program names for all objects in AGN BROADLINE subclass and GALAXY class?",
    "sql_query": "SELECT T1.specobjid, T1.survey, T1.programname FROM specobj AS T1 WHERE T1.subclass = 'AGN BROADLINE' and T1.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(112) T(4) C(112) T(4) A(0) Op(0) C(113) T(4) C(113) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(2) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(3)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the ids, surveys, and program names of each of the spectroscopic objects whose subclass is AGN BROADLINE and class is GALAXY?",
    "sql_query": "SELECT T1.specobjid, T1.survey, T1.programname FROM specobj AS T1 WHERE T1.subclass = 'AGN BROADLINE' and T1.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(7) T(4) C(7) T(4) A(0) Op(0) C(112) T(4) C(112) T(4) A(0) Op(0) C(113) T(4) C(113) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many BOSS ancillary program targets grouped by the segue2 secondary objects are there for each spectroscopic object belonging to the AGN subclass and the GALAXY class?",
    "sql_query": "SELECT T1.segue2_target2, sum( T1.ancillary_target1) FROM specobj AS T1 WHERE T1.subclass = 'AGN' and T1.class = 'GALAXY' GROUP BY T1.segue2_target2",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(118) T(4) C(118) T(4) A(4) Op(0) C(119) T(4) C(119) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(2) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Which spectroscopic objects belong both to the AGN subclass and to the GALAXY class? Give me the surveys, the declinations, and the velocity dispersion data of the objects.",
    "sql_query": "SELECT T1.survey, T1.dec, T1.veldisp FROM specobj AS T1 WHERE T1.subclass = 'AGN' and T1.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(112) T(4) C(112) T(4) A(0) Op(0) C(84) T(4) C(84) T(4) A(0) Op(0) C(125) T(4) C(125) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(2) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Return the survey data, declination data and velocity dispersion of the objects in the AGN subclass and GALAXY class.",
    "sql_query": "SELECT T1.survey, T1.dec, T1.veldisp FROM specobj AS T1 WHERE T1.subclass = 'AGN' and T1.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(112) T(4) C(112) T(4) A(0) Op(0) C(84) T(4) C(84) T(4) A(0) Op(0) C(125) T(4) C(125) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Showthe maximum BOSS ancillary program targets corresponding to different SDSS special program targets for the spectroscopic objects of the AGN subclass and GALAXY class.",
    "sql_query": "SELECT T1.special_target1, max( T1.ancillary_target1) FROM specobj AS T1 WHERE T1.subclass = 'AGN' and T1.class = 'GALAXY' GROUP BY T1.special_target1",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(116) T(4) C(116) T(4) A(1) Op(0) C(119) T(4) C(119) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Where is the maximum BOSS ancillary program target corresponding to different SDSS special program targets for the spectroscopic object with subclass of AGN and class GALAXY? ",
    "sql_query": "SELECT T1.special_target1, max( T1.ancillary_target1) FROM specobj AS T1 WHERE T1.subclass = 'AGN' and T1.class = 'GALAXY' GROUP BY T1.special_target1",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(116) T(4) C(116) T(4) A(1) Op(0) C(119) T(4) C(119) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the max of BOSS ancillary program targets grouped by SDSS special program targets of the spectroscopic objects with subclass of AGN and class of GALAXY?",
    "sql_query": "SELECT T1.special_target1, max( T1.ancillary_target1) FROM specobj AS T1 WHERE T1.subclass = 'AGN' and T1.class = 'GALAXY' GROUP BY T1.special_target1",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(116) T(4) C(116) T(4) A(1) Op(0) C(119) T(4) C(119) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(5) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the maximum plate id for each load version among the spectroscopic objects of AGN subclass and GALAXY class.",
    "sql_query": "SELECT max( T1.plateid), T1.loadversion FROM specobj AS T1 WHERE T1.subclass = 'AGN' and T1.class = 'GALAXY' GROUP BY T1.loadversion",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(109) T(4) C(109) T(4) A(0) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the highest plate ids grouped by different load versions of the spectroscopic objects with subclass AGN and class GALAXY?",
    "sql_query": "SELECT max( T1.plateid), T1.loadversion FROM specobj AS T1 WHERE T1.subclass = 'AGN' and T1.class = 'GALAXY' GROUP BY T1.loadversion",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(109) T(4) C(109) T(4) A(0) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average redshift warning in the spectroscopic subclass STARBURST?",
    "sql_query": "SELECT avg( T1.zwarning) FROM specobj AS T1 WHERE T1.subclass = 'STARBURST'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(122) T(4) C(122) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "For each speckoscopic object which is in class STARBURST, find the sum of those redshift warnings.",
    "sql_query": "SELECT sum( T1.zwarning) FROM specobj AS T1 WHERE T1.subclass = 'STARBURST'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(4) Op(0) C(122) T(4) C(122) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average redshift for the spectroscopic objects in STARBURST subclass?",
    "sql_query": "SELECT avg( T1.z) FROM specobj AS T1 WHERE T1.subclass = 'STARBURST'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(120) T(4) C(120) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average redshift of the spectroscopic objects in the STARBURST subclass?",
    "sql_query": "SELECT avg( T1.z) FROM specobj AS T1 WHERE T1.subclass = 'STARBURST'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(120) T(4) C(120) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Return the average redshift of objects in the spectroscopic subclass Starburst.",
    "sql_query": "SELECT avg( T1.z) FROM specobj AS T1 WHERE T1.subclass = 'STARBURST'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(120) T(4) C(120) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average redshift of spectroscopic objects belonging to category Starburst?",
    "sql_query": "SELECT avg( T1.z) FROM specobj AS T1 WHERE T1.subclass = 'STARBURST'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(120) T(4) C(120) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average redshift of those spectroscopic objects in class 'STARBURST'?",
    "sql_query": "SELECT avg( T1.z) FROM specobj AS T1 WHERE T1.subclass = 'STARBURST'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(5) Op(0) C(120) T(4) C(120) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the name of the program that has a spectroscopic subclass STARBURST.",
    "sql_query": "SELECT T1.programname FROM specobj AS T1 WHERE T1.subclass = 'STARBURST'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(113) T(4) C(113) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the program name of spectroscopic objects that belong to the class Starburst.",
    "sql_query": "SELECT T1.programname FROM specobj AS T1 WHERE T1.subclass = 'STARBURST'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(113) T(4) C(113) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "List the program names for spectroscopic objects in class Starburst.",
    "sql_query": "SELECT T1.programname FROM specobj AS T1 WHERE T1.subclass = 'STARBURST'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(113) T(4) C(113) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the minimum of plate id that have the spectroscopic subclass 'STARBURST'.",
    "sql_query": "SELECT min( T1.plateid) FROM specobj AS T1 WHERE T1.subclass = 'STARBURST'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(2) Op(0) C(109) T(4) C(109) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many spectroscopic objects are in the Starburst class?",
    "sql_query": "SELECT count( * ) FROM specobj AS T1 WHERE T1.subclass = 'STARBURST'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(4) C(0) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many of these spectroscopic objects belong to the class of Starburst?",
    "sql_query": "SELECT count( * ) FROM specobj AS T1 WHERE T1.subclass = 'STARBURST'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(4) C(0) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many best objects is there in the spectroscopic subclass Starburst?",
    "sql_query": "SELECT count(DISTINCT T1.bestobjid) FROM specobj AS T1 WHERE T1.subclass = 'STARBURST'",
    "semql_query": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(108) T(4) C(108) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many spectroscopic objects are not in the subclass Starburst?",
    "sql_query": "SELECT count( * ) FROM specobj AS T1 WHERE T1.subclass != 'STARBURST'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(4) C(0) T(4) Filter(3) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum redshift warning of the spectroscopic object Starforming?",
    "sql_query": "SELECT min( T1.zwarning) FROM specobj AS T1 WHERE T1.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(2) Op(0) C(122) T(4) C(122) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum redshift warning for objects of the spectroscopic subclass STARFORMING?",
    "sql_query": "SELECT min( T1.zwarning) FROM specobj AS T1 WHERE T1.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(2) Op(0) C(122) T(4) C(122) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the minimum redshift warning of spectroscopic objects of the class STARFORMING.",
    "sql_query": "SELECT min( T1.zwarning) FROM specobj AS T1 WHERE T1.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(2) Op(0) C(122) T(4) C(122) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum redshift warning for the spectroscopic objects in the STARTFORMING subclass?",
    "sql_query": "SELECT min( T1.zwarning) FROM specobj AS T1 WHERE T1.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(2) Op(0) C(122) T(4) C(122) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum redshift warning in the class Starforming?",
    "sql_query": "SELECT min( T1.zwarning) FROM specobj AS T1 WHERE T1.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(2) Op(0) C(122) T(4) C(122) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the declination of the objects in the STARFORMING subclass?",
    "sql_query": "SELECT T1.dec FROM specobj AS T1 WHERE T1.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(84) T(4) C(84) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the declination of the spectroscopic object Starforming?",
    "sql_query": "SELECT T1.dec FROM specobj AS T1 WHERE T1.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(84) T(4) C(84) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the declination of the spectroscopic objects in the STARFORMING subclass.",
    "sql_query": "SELECT T1.dec FROM specobj AS T1 WHERE T1.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(84) T(4) C(84) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Give the declination for all spectroscopic objects that belong to the subclass STARFORMING.",
    "sql_query": "SELECT T1.dec FROM specobj AS T1 WHERE T1.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(84) T(4) C(84) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the declination of spectroscopic object Starforming?",
    "sql_query": "SELECT T1.dec FROM specobj AS T1 WHERE T1.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(84) T(4) C(84) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many different plate numbers are found in the spectroscopic with subclass Starforming?",
    "sql_query": "SELECT count(DISTINCT T1.plate) FROM specobj AS T1 WHERE T1.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(114) T(4) C(114) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the corresponding program name in that spectroscopic subclass starforming?",
    "sql_query": "SELECT T1.programname FROM specobj AS T1 WHERE T1.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(113) T(4) C(113) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the program name for the spectroscopic subclass STARFORMING?",
    "sql_query": "SELECT T1.programname FROM specobj AS T1 WHERE T1.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(113) T(4) C(113) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the program names in the STARFORMING spectroscopic subclass?",
    "sql_query": "SELECT T1.programname FROM specobj AS T1 WHERE T1.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(0) Op(0) C(113) T(4) C(113) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the number of objects that belong to spectroscopic subclass 'STARFORMING'.",
    "sql_query": "SELECT count( * ) FROM specobj AS T1 WHERE T1.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(4) C(0) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many spectroscopic objects is in STARFORMING subclass?",
    "sql_query": "SELECT count( * ) FROM specobj AS T1 WHERE T1.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(0) T(4) C(0) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of different best objects in the starforming class.",
    "sql_query": "SELECT count(DISTINCT T1.bestobjid) FROM specobj AS T1 WHERE T1.subclass = 'STARFORMING'",
    "semql_query": "Root1(3) Root(3) Sel(1) N(0) A(3) Op(0) C(108) T(4) C(108) T(4) Filter(2) A(0) Op(0) C(124) T(4) C(124) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the ids, time of observation g, best object ids and surveys for objects with right ascension bigger than 185 and less than 186, and declination is larger than 15 and less than 16 and have class 'GALAXY'?",
    "sql_query": "SELECT T1.objid, T1.tai_g, T2.bestobjid, T2.survey FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(103) T(1) C(103) T(1) A(0) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(112) T(4) C(112) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(8) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(4) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(0) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(5) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the object ids, time of observationg, best object ids, and surveys of photometric objects with right ascension greater than 185 and less than 186, with declination greater than 15 and below 16 and with spectroscopic class GALAXY.",
    "sql_query": "SELECT T1.objid, T1.tai_g, T2.bestobjid, T2.survey FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(103) T(1) C(103) T(1) A(0) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(112) T(4) C(112) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(5) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(0) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(1) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(6) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Which photometric object has 'GALAXY' as spectroscopic class when its right ascension is above 185 and below 186, declination above 15 and below 16? Give me the object id, time of observation, best object id, and survey.",
    "sql_query": "SELECT T1.objid, T1.tai_g, T2.bestobjid, T2.survey FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(7) T(1) C(7) T(1) A(0) Op(0) C(103) T(1) C(103) T(1) A(0) Op(0) C(108) T(4) C(108) T(4) A(0) Op(0) C(112) T(4) C(112) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(2) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(5) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(7) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(6) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the minimum load versions for each best object of photometric objects with right ascension greater than 185 and lower than 186, with declination greater than 15 and lower than 16 and belonging to class 'GALAXY'?",
    "sql_query": "SELECT min( T2.loadversion) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'GALAXY' GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(2) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(18) A(0) Op(0) C(108) T(4) C(108) T(4) Root(5) Sel(0) N(0) A(0) Op(0) C(7) T(1) C(7) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(1) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(6) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(0) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(5) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Which photometric objects have a right ascension greater than 185 and lower than 186 and declination higher than 15 and lower than 16 and have class 'GALAXY'? Find their minimum load version for each corresponding bestobjid.",
    "sql_query": "SELECT max( T2.loadversion) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'GALAXY' GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(18) A(0) Op(0) C(108) T(4) C(108) T(4) Root(5) Sel(0) N(0) A(0) Op(0) C(7) T(1) C(7) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(7) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(3) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(6) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the maximum composite model magnitude u for each best object among the photometry objects that has right ascension greater than 185 and lower than 186 and with declinations greater than 15 and lower than 16 and has the class GALAXY?",
    "sql_query": "SELECT max( T1.cmodelmag_u) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'GALAXY' GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(73) T(1) C(73) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(1) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(6) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(4) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(5) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the number of photometric objects for each best object, which have right ascension higher than 185 and lower than 186, declination higher than 15 and lower than 16 and have spectroscopic class GALAXY.",
    "sql_query": "SELECT count( T1.objid) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'GALAXY' GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(3) Op(0) C(7) T(1) C(7) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(1) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(6) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(0) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(5) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "List the mode of photo observation, error size, modified julien date, and load version for the objects with right ascension greater than 185 and less than 186, with declination greater than 15 and lower than 16 and class 'GALAXY'.",
    "sql_query": "SELECT T1.mode, T1.expmagerr_i, T2.mjd, T2.loadversion FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(12) T(1) C(12) T(1) A(0) Op(0) C(61) T(1) C(61) T(1) A(0) Op(0) C(90) T(4) C(90) T(4) A(0) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(8) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(4) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(0) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(5) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the mode of observation, extended error i, modified julien date, and loadversion for the photometric objects with right ascension higher than 185 and lower than 186, with declination higher than 15 and lower than 16 and class 'GALAXY'.",
    "sql_query": "SELECT T1.mode, T1.expmagerr_i, T2.mjd, T2.loadversion FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'GALAXY'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(12) T(1) C(12) T(1) A(0) Op(0) C(61) T(1) C(61) T(1) A(0) Op(0) C(90) T(4) C(90) T(4) A(0) Op(0) C(91) T(4) C(91) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(6) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(2) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(5) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum mode of photo observation grouped by the best spectroscopic object for the photometric object with right ascension above 185 and below 186, with declination above 15 and below 185,  and with corresponding class 'STAR'?",
    "sql_query": "SELECT min( T1.mode) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'STAR' GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(2) Op(0) C(12) T(1) C(12) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(3) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(0) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(1) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(6) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(5)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the minimum mode of photo observation for each best object from all spectroscopic objects whose right ascension angle is above 185 and lower than 186 and with declination above 15 and lower than 16 and with STAR class.",
    "sql_query": "SELECT min( T1.mode) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'STAR' GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(2) Op(0) C(12) T(1) C(12) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(1) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(4) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(6) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(5) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the minimum modes of photo observation grouped by each best spectroscopic object for the objects with right ascension of greater than 185 and lower than 18, with declination of higher than 15 and lower than 16, and with class is 'STAR'.",
    "sql_query": "SELECT min( T1.mode) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'STAR' GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(2) Op(0) C(12) T(1) C(12) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(2) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(8) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(5) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(6) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the object type classification, psfmagnitude error i,devmag_z and declination, for all photometric objects with right ascension higher than 185 and lower than 186, declination higher than 15 and lower than 16 and of class 'STAR'.",
    "sql_query": "SELECT T1.type, T1.psfmagerr_i, T1.devmag_z, T2.dec FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(13) T(1) C(13) T(1) A(0) Op(0) C(30) T(1) C(30) T(1) A(0) Op(0) C(52) T(1) C(52) T(1) A(0) Op(0) C(84) T(4) C(84) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(1) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(5) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(0) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(6)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Which objects have a right ascension between 185 and 186 and declination above 15 and below 16 with spectroscopic class of 'STAR'? Give me the photometric object type classification, their psfmagnitude error i, devmag z and declination.",
    "sql_query": "SELECT T1.type, T1.psfmagerr_i, T1.devmag_z, T2.dec FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(13) T(1) C(13) T(1) A(0) Op(0) C(30) T(1) C(30) T(1) A(0) Op(0) C(52) T(1) C(52) T(1) A(0) Op(0) C(84) T(4) C(84) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(5) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(1) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(2) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(6) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(8)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Give the photometric object class classification and the psfmagnitude error i, devmag z, and the declination of the associated spectroscopic object with right ascension higher than 185 and lower than 186 and with declination higher than 15 and lower than 16 and with class STAR.",
    "sql_query": "SELECT T1.type, T1.psfmagerr_i, T1.devmag_z, T2.dec FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(13) T(1) C(13) T(1) A(0) Op(0) C(30) T(1) C(30) T(1) A(0) Op(0) C(52) T(1) C(52) T(1) A(0) Op(0) C(84) T(4) C(84) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(6) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(1) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(4) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(5)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the classification, psfmagnitude error i, devmag z of the photometric object and declination of corresponding best spectroscopic object that has the right ascension higher than 185 and lower than 186,  the declination higher than 15 and lower than 16, and class 'STAR'.",
    "sql_query": "SELECT T1.type, T1.psfmagerr_i, T1.devmag_z, T2.dec FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(13) T(1) C(13) T(1) A(0) Op(0) C(30) T(1) C(30) T(1) A(0) Op(0) C(52) T(1) C(52) T(1) A(0) Op(0) C(84) T(4) C(84) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(1) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(6) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(4) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(5) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the field number, row center positions, magnitude of photometric objects and redshift errors of the corresponding best spectroscopic objects, which have right ascension greater than 185 and less than 186, with declination greater than 15 and less than 186, with class 'STAR'?",
    "sql_query": "SELECT T1.field, T1.rowc, T1.i, T2.zerr FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(11) T(1) C(11) T(1) A(0) Op(0) C(16) T(1) C(16) T(1) A(0) Op(0) C(95) T(1) C(95) T(1) A(0) Op(0) C(121) T(4) C(121) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(1) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(3) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(4) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(7) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the field number, row center position, magnitude i of photometric object, and redshift error associated with the corresponding best spectroscopic object with right ascension more than 185 and less than 186, declination more than 15 and less than 16,  and with spectroscopic class of 'STAR'.",
    "sql_query": "SELECT T1.field, T1.rowc, T1.i, T2.zerr FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(11) T(1) C(11) T(1) A(0) Op(0) C(16) T(1) C(16) T(1) A(0) Op(0) C(95) T(1) C(95) T(1) A(0) Op(0) C(121) T(4) C(121) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(8) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(4) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(1) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(5) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the field number, row center position, the magnitude of photometric object, and the redshift error of the corresponding best spectroscopic object whose right ascension is above 185 and below 186,  declination between 15 and 16, and spectroscopic object class is 'STAR'?",
    "sql_query": "SELECT T1.field, T1.rowc, T1.i, T2.zerr FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'STAR'",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(11) T(1) C(11) T(1) A(0) Op(0) C(16) T(1) C(16) T(1) A(0) Op(0) C(95) T(1) C(95) T(1) A(0) Op(0) C(121) T(4) C(121) T(4) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(1) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(5) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(0) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(4) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(6)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the highest psfmagnitude error g grouped by corresponding best spectroscopic object of the photometric objects with right ascension of greater than 185 and lower than 186,  with declination greater than 15 and lower than 16 and with class 'STAR'?",
    "sql_query": "SELECT max( T1.psfmagerr_g) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'STAR' GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(28) T(1) C(28) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(1) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(6) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(4) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(5) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the maximum psf magnitude error g grouped by corresponding best spectroscopic object among the photometric objects with right ascension between 185 and 186, with declination between 15 and 16 and spectroscopic object class of  'STAR'?",
    "sql_query": "SELECT max( T1.psfmagerr_g) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'STAR' GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(28) T(1) C(28) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(6) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(1) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(4) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(0) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(5)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum extinction i grouped by corresponding best spectroscopic object with right ascension higher than 185 and lower than 186, with declination higher than 15 and lower than 16, and spectroscopic object class of 'STAR'?",
    "sql_query": "SELECT max( T1.extinction_i) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'STAR' GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(89) T(1) C(89) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(4) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(0) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(1) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(5) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(7)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the maximum of extinction i grouped by the corresponding best spectroscopic object id for all the objects with right ascension greater than 185 and lower than 186 and declination larger than 15 and lower than 16 and having a class of 'STAR'.",
    "sql_query": "SELECT max( T1.extinction_i) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'STAR' GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(89) T(1) C(89) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(1) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(4) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(6) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(5) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the maximum extinction i grouped by best object id for all photometric objects with right ascension above 185 and below 186, and with declination above 15 and below 16 and with class of 'STAR'?",
    "sql_query": "SELECT max( T1.extinction_i) FROM photoobj AS T1 JOIN specobj AS T2 ON T1.objid = T2.bestobjid WHERE T2.ra > 185 and T2.ra < 186 and T2.dec > 15 and T2.dec < 16 and T2.class = 'STAR' GROUP BY T2.bestobjid",
    "semql_query": "Root1(3) Root(3) Sel(0) N(0) A(1) Op(0) C(89) T(1) C(89) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(4) C(83) T(4) V(8) Filter(0) Filter(4) A(0) Op(0) C(83) T(4) C(83) T(4) V(4) Filter(0) Filter(5) A(0) Op(0) C(84) T(4) C(84) T(4) V(1) Filter(0) Filter(4) A(0) Op(0) C(84) T(4) C(84) T(4) V(5) Filter(2) A(0) Op(0) C(123) T(4) C(123) T(4) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the expmagnitude error u, composite modelmagnitude r and g for those photometric objects with a right ascension above 185 and below 186, declination in a range from 15 to 16, and object type classification of 6.",
    "sql_query": "SELECT T1.expmagerr_u, T1.cmodelmag_r, T1.cmodelmagerr_g FROM photoobj AS T1 WHERE T1.ra > 185 and T1.ra < 186 and T1.dec > 15 and T1.dec < 16 and T1.type = 6",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(58) T(1) C(58) T(1) A(0) Op(0) C(75) T(1) C(75) T(1) A(0) Op(0) C(79) T(1) C(79) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(2) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(7) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(5) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(6) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(8)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the minimum expmagnitude error g grouped by the modelmagnitude error i for photometric objects having a right ascension higher than 185 and lower than 186, a declination between 15 and 16,  and an object type with classification  of 6?",
    "sql_query": "SELECT min( T1.expmagerr_g), T1.modelmagerr_i FROM photoobj AS T1 WHERE T1.ra > 185 and T1.ra < 186 and T1.dec > 15 and T1.dec < 16 and T1.type = 6 GROUP BY T1.modelmagerr_i",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(59) T(1) C(59) T(1) A(0) Op(0) C(71) T(1) C(71) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(6) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(0) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(2) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(7) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the maximum modelmag r grouped by expmagnitude error u for all the photometric objects with right ascending degree above 185 and below 186, declination higher than 15 and lower than 16, and with object type classification of 6. List also corresponding petromag u .",
    "sql_query": "SELECT T1.expmagerr_u, max( T1.modelmag_r) FROM photoobj AS T1 WHERE T1.ra > 185 and T1.ra < 186 and T1.dec > 15 and T1.dec < 16 and T1.type = 6 GROUP BY T1.expmagerr_u",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(58) T(1) C(58) T(1) A(1) Op(0) C(65) T(1) C(65) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(7) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(3) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(6) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "How many different photometric objects are there whose right ascension between 185 and 186 and  declination between 15 and 16 and object type classification of 3? Give me the number of devmag z grouped by petromag g.",
    "sql_query": "SELECT T1.petromag_g, count( * ) FROM photoobj AS T1 WHERE T1.ra > 185 and T1.ra < 186 and T1.dec > 15 and T1.dec < 16 and T1.type = 6 GROUP BY T1.petromag_g",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(38) T(1) C(38) T(1) A(3) Op(0) C(0) T(1) C(0) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(2) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(8) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(5) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(6) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(9)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the run number and total number of petronical radius i grouped by composite modelmagnitude error r for photometric objects that have right ascension greater than 185 and lesser than 186 and declination more than 15 and less than 16 and object type classification of 6.",
    "sql_query": "SELECT sum( T1.petrorad_i), T1.cmodelmagerr_r FROM photoobj AS T1 WHERE T1.ra > 185 and T1.ra < 186 and T1.dec > 15 and T1.dec < 16 and T1.type = 6 GROUP BY T1.cmodelmagerr_r",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(45) T(1) C(45) T(1) A(0) Op(0) C(80) T(1) C(80) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(6) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(0) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(1) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(7) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(2)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the minimum modelmagnitude corrected for extinction z grouped by composite modelmagnitude error i for all photometric objects with right ascending larger than 180 lower than 15, declination larger than 15 and smaller than 16, and having object type classification 3?",
    "sql_query": "SELECT T1.cmodelmagerr_i, min( T1.dered_z) FROM photoobj AS T1 WHERE T1.ra > 185 and T1.ra < 186 and T1.dec > 15 and T1.dec < 16 and T1.type = 3 GROUP BY T1.cmodelmagerr_i",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(81) T(1) C(81) T(1) A(2) Op(0) C(101) T(1) C(101) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(7) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(8) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(5) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(2) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(6)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the highest devmag z grouped by composite modelmagnitude error z for different photometric objects with right ascension larger than 185 and right ascension smaller than 186 and declination larger than 15 and declination smaller than 16 and object type classification of 3?",
    "sql_query": "SELECT max( T1.devmag_z), T1.cmodelmagerr_z FROM photoobj AS T1 WHERE T1.ra > 185 and T1.ra < 186 and T1.dec > 15 and T1.dec < 16 and T1.type = 3 GROUP BY T1.cmodelmagerr_z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(52) T(1) C(52) T(1) A(0) Op(0) C(82) T(1) C(82) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(3) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(7) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(2) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(6) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the maximum devmag z grouped by composite modelmagnitude error z of any photometric object that has right ascendance between 185 and 186 and declination greater than 15 and less than 16 and have object type classification of 3.",
    "sql_query": "SELECT max( T1.devmag_z), T1.cmodelmagerr_z FROM photoobj AS T1 WHERE T1.ra > 185 and T1.ra < 186 and T1.dec > 15 and T1.dec < 16 and T1.type = 3 GROUP BY T1.cmodelmagerr_z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(52) T(1) C(52) T(1) A(0) Op(0) C(82) T(1) C(82) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(2) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(7) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(5) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(6) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the psfmagnitude errors u, z and composite modelmagnitude z corresponding to all photometric objects, with right ascending height higher than 185 and lower than 186 and declination greater than 15 and less than 16  and object type classification 3?",
    "sql_query": "SELECT T1.psfmagerr_u, T1.psfmagerr_z, T1.cmodelmag_z FROM photoobj AS T1 WHERE T1.ra > 185 and T1.ra < 186 and T1.dec > 15 and T1.dec < 16 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(27) T(1) C(27) T(1) A(0) Op(0) C(31) T(1) C(31) T(1) A(0) Op(0) C(77) T(1) C(77) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(9) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(5) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(1) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(6) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(4)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the psfmagnitude error u, psfmagnitude error z, and composite modelmagnitude z of any photometric object with right ascendances more than 185 and  less than186 and declination greater than 15 and less than 16 and object type classification equal to 3?",
    "sql_query": "SELECT T1.psfmagerr_u, T1.psfmagerr_z, T1.cmodelmag_z FROM photoobj AS T1 WHERE T1.ra > 185 and T1.ra < 186 and T1.dec > 15 and T1.dec < 16 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(27) T(1) C(27) T(1) A(0) Op(0) C(31) T(1) C(31) T(1) A(0) Op(0) C(77) T(1) C(77) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(4) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(7) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(1) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(6) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(5)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the maximum mode of photo observation grouped by petromag r of photometric objects with right ascension greater than 185 and lower than 186,  declination smaller than 16 and bigger than 15,  and object type classification equal to 3.",
    "sql_query": "SELECT max( T1.mode), T1.petromag_r FROM photoobj AS T1 WHERE T1.ra > 185 and T1.ra < 186 and T1.dec > 15 and T1.dec < 16 and T1.type = 3 GROUP BY T1.petromag_r",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(12) T(1) C(12) T(1) A(0) Op(0) C(39) T(1) C(39) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(6) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(2) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(5) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(7)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the minimum mode of photo observation grouped by petromag r of all the photometric objects whose the right ascends from 185 to 186, a declination above 15 and below 16 and object type classification 3.",
    "sql_query": "SELECT min( T1.mode), T1.petromag_r FROM photoobj AS T1 WHERE T1.ra > 185 and T1.ra < 186 and T1.dec > 15 and T1.dec < 16 and T1.type = 3 GROUP BY T1.petromag_r",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(12) T(1) C(12) T(1) A(0) Op(0) C(39) T(1) C(39) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(3) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(7) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(2) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(6) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the camera column, devmag g and magnitude r for all photometric objects with right ascending angle greater than 185 and lower than 186, delination between 15 and 16, and object type classification of 3?",
    "sql_query": "SELECT T1.camcol, T1.devmag_g, T1.r FROM photoobj AS T1 WHERE T1.ra > 185 and T1.ra < 186 and T1.dec > 15 and T1.dec < 16 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(10) T(1) C(10) T(1) A(0) Op(0) C(49) T(1) C(49) T(1) A(0) Op(0) C(94) T(1) C(94) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(1) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(4) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(6) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(5) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(9)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the camera column, devmag g and magnitude r for photometric objects with right ascension more than 185 and smaller than 186, delination greater than 15 and smaller than 16, and object type classification equal to 3?",
    "sql_query": "SELECT T1.camcol, T1.devmag_g, T1.r FROM photoobj AS T1 WHERE T1.ra > 185 and T1.ra < 186 and T1.dec > 15 and T1.dec < 16 and T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(2) A(0) Op(0) C(10) T(1) C(10) T(1) A(0) Op(0) C(49) T(1) C(49) T(1) A(0) Op(0) C(94) T(1) C(94) T(1) Filter(0) Filter(5) A(0) Op(0) C(83) T(1) C(83) T(1) V(2) Filter(0) Filter(4) A(0) Op(0) C(83) T(1) C(83) T(1) V(7) Filter(0) Filter(5) A(0) Op(0) C(84) T(1) C(84) T(1) V(5) Filter(0) Filter(4) A(0) Op(0) C(84) T(1) C(84) T(1) V(6) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Return the average time of observation u grouped by modified julien date of all the photometric objects with classification '3'.",
    "sql_query": "SELECT T1.mjd, avg( T1.tai_u) FROM photoobj AS T1 WHERE T1.type = 3 GROUP BY T1.mjd",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(90) T(1) C(90) T(1) A(5) Op(0) C(102) T(1) C(102) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the average time of observation for each modified julien date in the photometric objects whose object type class is 3?",
    "sql_query": "SELECT T1.mjd, avg( T1.tai_u) FROM photoobj AS T1 WHERE T1.type = 3 GROUP BY T1.mjd",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(90) T(1) C(90) T(1) A(5) Op(0) C(102) T(1) C(102) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the mininum of the petrocian radius r grouped by expmagnitude error i of each photometric object whose classification is three?",
    "sql_query": "SELECT min( T1.petrorad_r), T1.expmagerr_i FROM photoobj AS T1 WHERE T1.type = 3 GROUP BY T1.expmagerr_i",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(44) T(1) C(44) T(1) A(0) Op(0) C(61) T(1) C(61) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the average ranges of colc r of the photometric objects that have type class 3 and grouped by corresponding magnitude i.",
    "sql_query": "SELECT avg( T1.colc_r), T1.i FROM photoobj AS T1 WHERE T1.type = 3 GROUP BY T1.i",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(5) Op(0) C(21) T(1) C(21) T(1) A(0) Op(0) C(95) T(1) C(95) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average colc r for each magnitudes i in all photometric objects with type classification 3?",
    "sql_query": "SELECT avg( T1.colc_r), T1.i FROM photoobj AS T1 WHERE T1.type = 3 GROUP BY T1.i",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(5) Op(0) C(21) T(1) C(21) T(1) A(0) Op(0) C(95) T(1) C(95) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "For each photometric object you have, give me the average model magnitude corrected for extinction i grouped by the composite modelmagnitude u, when its object type class is 3.",
    "sql_query": "SELECT T1.cmodelmag_u, avg( T1.dered_i) FROM photoobj AS T1 WHERE T1.type = 3 GROUP BY T1.cmodelmag_u",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(0) Op(0) C(73) T(1) C(73) T(1) A(5) Op(0) C(100) T(1) C(100) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Return the field number, center position, colc r and fibermag i for photometric objects with type class 3.",
    "sql_query": "SELECT T1.field, T1.colc, T1.colc_r, T1.fibermag_i FROM photoobj AS T1 WHERE T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(11) T(1) C(11) T(1) A(0) Op(0) C(17) T(1) C(17) T(1) A(0) Op(0) C(21) T(1) C(21) T(1) A(0) Op(0) C(35) T(1) C(35) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the field numbers, center positions, colc r and fibermag i for the photometric objects with type classification 3?",
    "sql_query": "SELECT T1.field, T1.colc, T1.colc_r, T1.fibermag_i FROM photoobj AS T1 WHERE T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(11) T(1) C(11) T(1) A(0) Op(0) C(17) T(1) C(17) T(1) A(0) Op(0) C(21) T(1) C(21) T(1) A(0) Op(0) C(35) T(1) C(35) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Show the petrocian radius u, expmagnitude error i, composite modelmagnitude u and modelmagnitude corrected for extinction r of the photometric object with the classification 3.",
    "sql_query": "SELECT T1.petrorad_u, T1.expmagerr_i, T1.cmodelmag_u, T1.dered_r FROM photoobj AS T1 WHERE T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(42) T(1) C(42) T(1) A(0) Op(0) C(61) T(1) C(61) T(1) A(0) Op(0) C(73) T(1) C(73) T(1) A(0) Op(0) C(99) T(1) C(99) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "For objects with type classification 3, show the petrocian radius u, expmagnitude.error i, composite modelmagnitude u, and modelmagnitude corrected for extinction r..",
    "sql_query": "SELECT T1.petrorad_u, T1.expmagerr_i, T1.cmodelmag_u, T1.dered_r FROM photoobj AS T1 WHERE T1.type = 3",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(42) T(1) C(42) T(1) A(0) Op(0) C(61) T(1) C(61) T(1) A(0) Op(0) C(73) T(1) C(73) T(1) A(0) Op(0) C(99) T(1) C(99) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average psfmagnitude error r of objects with type class of object 3 grouped by magnitude z ?",
    "sql_query": "SELECT avg( T1.psfmagerr_r), T1.z FROM photoobj AS T1 WHERE T1.type = 3 GROUP BY T1.z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(5) Op(0) C(29) T(1) C(29) T(1) A(0) Op(0) C(96) T(1) C(96) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What is the average psfmagnitude error r for each magnitude z of photometric objects with object type classification 3 ?",
    "sql_query": "SELECT avg( T1.psfmagerr_r), T1.z FROM photoobj AS T1 WHERE T1.type = 3 GROUP BY T1.z",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(5) Op(0) C(29) T(1) C(29) T(1) A(0) Op(0) C(96) T(1) C(96) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the maximum camera columns for the objects with classification 3 grouped by modelmag r?",
    "sql_query": "SELECT max( T1.camcol), T1.modelmag_r FROM photoobj AS T1 WHERE T1.type = 3 GROUP BY T1.modelmag_r",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(10) T(1) C(10) T(1) A(0) Op(0) C(65) T(1) C(65) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the sum of the perosinian radius containing 90% of flux from all photometric objects with object type classification = 6 grouped by different magnitude u?",
    "sql_query": "SELECT sum( T1.petror90_r), T1.u FROM photoobj AS T1 WHERE T1.type = 6 GROUP BY T1.u",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(4) Op(0) C(47) T(1) C(47) T(1) A(0) Op(0) C(92) T(1) C(92) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(1)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the classifications, petromagz, modelmagr and modified julien dates for the photometric object with class classification 6?",
    "sql_query": "SELECT T1.type, T1.petromag_z, T1.modelmag_r, T1.mjd FROM photoobj AS T1 WHERE T1.type = 6",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(13) T(1) C(13) T(1) A(0) Op(0) C(41) T(1) C(41) T(1) A(0) Op(0) C(65) T(1) C(65) T(1) A(0) Op(0) C(90) T(1) C(90) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Give me the object type classification, the petromegaz, modelmagr, and the modified julien dates for the photometric objects whose type classification is 6.",
    "sql_query": "SELECT T1.type, T1.petromag_z, T1.modelmag_r, T1.mjd FROM photoobj AS T1 WHERE T1.type = 6",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(13) T(1) C(13) T(1) A(0) Op(0) C(41) T(1) C(41) T(1) A(0) Op(0) C(65) T(1) C(65) T(1) A(0) Op(0) C(90) T(1) C(90) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the average row center position for each modelmag r in all objects that are classified as 6 ?",
    "sql_query": "SELECT avg( T1.rowc), T1.modelmag_r FROM photoobj AS T1 WHERE T1.type = 6 GROUP BY T1.modelmag_r",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(5) Op(0) C(16) T(1) C(16) T(1) A(0) Op(0) C(65) T(1) C(65) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the average rows center positions of the photometric objects with type classification of 6 with respect to different modelmag r?",
    "sql_query": "SELECT avg( T1.rowc), T1.modelmag_r FROM photoobj AS T1 WHERE T1.type = 6 GROUP BY T1.modelmag_r",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(5) Op(0) C(16) T(1) C(16) T(1) A(0) Op(0) C(65) T(1) C(65) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Give the minimum column velocity of the photometric objects with classification 6 grouped by the corresponding magnitude g.",
    "sql_query": "SELECT min( T1.colv), T1.g FROM photoobj AS T1 WHERE T1.type = 6 GROUP BY T1.g",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(2) Op(0) C(19) T(1) C(19) T(1) A(0) Op(0) C(93) T(1) C(93) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the clean photometry flags, psfmagnitude errors u, r and model magnitude error r values for the objects with type classification 6?",
    "sql_query": "SELECT T1.clean, T1.psfmagerr_u, T1.psfmagerr_r, T1.modelmagerr_r FROM photoobj AS T1 WHERE T1.type = 6",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(14) T(1) C(14) T(1) A(0) Op(0) C(27) T(1) C(27) T(1) A(0) Op(0) C(29) T(1) C(29) T(1) A(0) Op(0) C(70) T(1) C(70) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the clean photometry flags, psfmagnitude errors u, r, and modelmagnitude errors u in the photometric objects with object type classification equal to 6?",
    "sql_query": "SELECT T1.clean, T1.psfmagerr_u, T1.psfmagerr_r, T1.modelmagerr_r FROM photoobj AS T1 WHERE T1.type = 6",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(14) T(1) C(14) T(1) A(0) Op(0) C(27) T(1) C(27) T(1) A(0) Op(0) C(29) T(1) C(29) T(1) A(0) Op(0) C(70) T(1) C(70) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "List the clean photometric flag, the psfmagnitude error u, the psfmagnitude error r, and the model magnitude error r for the corresponding object with classification 6.",
    "sql_query": "SELECT T1.clean, T1.psfmagerr_u, T1.psfmagerr_r, T1.modelmagerr_r FROM photoobj AS T1 WHERE T1.type = 6",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(14) T(1) C(14) T(1) A(0) Op(0) C(27) T(1) C(27) T(1) A(0) Op(0) C(29) T(1) C(29) T(1) A(0) Op(0) C(70) T(1) C(70) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Find the clean photometry flag, the corresponding psfmagnitude error u, psfmagnitude error r, and model magnitude error r for all the data whose object type classification is 6.",
    "sql_query": "SELECT T1.clean, T1.psfmagerr_u, T1.psfmagerr_r, T1.modelmagerr_r FROM photoobj AS T1 WHERE T1.type = 6",
    "semql_query": "Root1(3) Root(3) Sel(0) N(3) A(0) Op(0) C(14) T(1) C(14) T(1) A(0) Op(0) C(27) T(1) C(27) T(1) A(0) Op(0) C(29) T(1) C(29) T(1) A(0) Op(0) C(70) T(1) C(70) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "What are the average petrocian for objects classified as 6 grouped by time of observation u?",
    "sql_query": "SELECT avg( T1.petrorad_r), T1.tai_u FROM photoobj AS T1 WHERE T1.type = 6 GROUP BY T1.tai_u",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(5) Op(0) C(44) T(1) C(44) T(1) A(0) Op(0) C(102) T(1) C(102) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  },
  {
    "db_id": "skyserver_dr16_2020_11_30",
    "question": "Waht is the maximum camera column of photometric objects have classification 6 for each declination? ",
    "sql_query": "SELECT max( T1.camcol), T1.dec FROM photoobj AS T1 WHERE T1.type = 6 GROUP BY T1.dec",
    "semql_query": "Root1(3) Root(3) Sel(0) N(1) A(1) Op(0) C(10) T(1) C(10) T(1) A(0) Op(0) C(84) T(1) C(84) T(1) Filter(2) A(0) Op(0) C(13) T(1) C(13) T(1) V(0)",
    "sparql_query": ""
  }
]