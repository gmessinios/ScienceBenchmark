[
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_0_1",
    "user": "gpt-3",
    "question": "Show me all name of anatomical entities where the description is 'Anatomical system that has as its parts the organs devoted to the ingestion, digestion, and assimilation of food and the discharge of residual wastes.'",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.description = 'Anatomical system that has as its parts the organs devoted to the ingestion, digestion, and assimilation of food and the discharge of residual wastes.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_0_2",
    "user": "gpt-3",
    "question": "Show me the name of anatomical entities that have a description starting with 'Anatomical system that has as its parts the organs devoted to the ingestion, digestion, and assimilation of food and the discharge of residual wastes.'",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.description = 'Anatomical system that has as its parts the organs devoted to the ingestion, digestion, and assimilation of food and the discharge of residual wastes.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_1_1",
    "user": "gpt-3",
    "question": "Show me the description for biomarker with symbol IL18",
    "query": "SELECT biomarker.biomarker_description FROM biomarker WHERE biomarker.gene_symbol = 'IL18'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_1_2",
    "user": "gpt-3",
    "question": "Show me the description of biomarker with symbol IL18",
    "query": "SELECT biomarker.biomarker_description FROM biomarker WHERE biomarker.gene_symbol = 'IL18'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_10_1",
    "user": "gpt-3",
    "question": "Show evidence for FDA tests with adoption evidence for tumors in single or multiple segments of the colon, rectosigmoid, rectum",
    "query": "SELECT biomarker_fda_test.test_adoption_evidence FROM biomarker_fda_test WHERE biomarker_fda_test.histological_type = 'C209 Tumors may be present in a single or multiple segments of the colon, rectosigmoid, rectum.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_10_2",
    "user": "gpt-3",
    "question": "What is the adoption evidence for FDA test where tumours may be present in a single or multiple segments of the colon, rectosigmoid, rectum?",
    "query": "SELECT biomarker_fda_test.test_adoption_evidence FROM biomarker_fda_test WHERE biomarker_fda_test.histological_type = 'C209 Tumors may be present in a single or multiple segments of the colon, rectosigmoid, rectum.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_11_1",
    "user": "gpt-3",
    "question": "Show me the site prediction for disease mutation impact predictions with a probability of 0.0",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.probability = 0.0"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_11_2",
    "user": "gpt-3",
    "question": "Show me the site predictions for disease mutation impact predictions with a probability of 0.",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.probability = 0.0"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_12_1",
    "user": "gpt-3",
    "question": "What is the trade name of FDA tests with specimen type Paraffin block?",
    "query": "SELECT biomarker_fda_test.test_trade_name FROM biomarker_fda_test WHERE biomarker_fda_test.specimen_type = 'Paraffin block'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_12_2",
    "user": "gpt-3",
    "question": "What is the trade name of FDA tests using paraffin block as specimen type?",
    "query": "SELECT biomarker_fda_test.test_trade_name FROM biomarker_fda_test WHERE biomarker_fda_test.specimen_type = 'Paraffin block'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_13_1",
    "user": "gpt-3",
    "question": "What are the names of all anatomical entities with identifier UBERON:0001891?",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0001891'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_13_2",
    "user": "gpt-3",
    "question": "Show me the name of all anatomical entities with identifier UBERON:0001891",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0001891'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_14_1",
    "user": "gpt-3",
    "question": "Show approved indications for FDA test uses with actual use 'prognostic'",
    "query": "SELECT biomarker_fda_test_use.approved_indication FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.actual_use = 'prognostic'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_14_2",
    "user": "gpt-3",
    "question": "Show approved indication for FDA test use with actual use 'prognostic'",
    "query": "SELECT biomarker_fda_test_use.approved_indication FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.actual_use = 'prognostic'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_15_1",
    "user": "gpt-3",
    "question": "Show me all tools for disease mutation impact prediction with site prediction 'possibly damaging'",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.site_prediction = 'possibly damaging'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_15_2",
    "user": "gpt-3",
    "question": "Give me all tools for disease mutation impact predictions with a site prediction of possibly damaging",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.site_prediction = 'possibly damaging'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_16_1",
    "user": "gpt-3",
    "question": "Show me the name of anatomical entities with uberon identifier UBERON:0003911",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0003911'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_16_2",
    "user": "gpt-3",
    "question": "Show the name of anatomical entities with uberon identifier UBERON:0003911",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0003911'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_17_1",
    "user": "gpt-3",
    "question": "Show the amino acids position uniprot kb for disease mutations with nucleotide base variation G?",
    "query": "SELECT disease_mutation.aa_pos_uniprotkb FROM disease_mutation WHERE disease_mutation.alt_nt = 'G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_17_2",
    "user": "gpt-3",
    "question": "Show disease mutation amino acids position uniprot kb where nucleotide base variation is G",
    "query": "SELECT disease_mutation.aa_pos_uniprotkb FROM disease_mutation WHERE disease_mutation.alt_nt = 'G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_18_1",
    "user": "gpt-3",
    "question": "Show me all biomarkers at EDRN in QA state 'Under Review'",
    "query": "SELECT biomarker_edrn.phase FROM biomarker_edrn WHERE biomarker_edrn.qa_state = 'Under Review'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_18_2",
    "user": "gpt-3",
    "question": "Show me the biomarker on the EDRN platform in QA state 'Under Review'",
    "query": "SELECT biomarker_edrn.phase FROM biomarker_edrn WHERE biomarker_edrn.qa_state = 'Under Review'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_19_1",
    "user": "gpt-3",
    "question": "Show me the FDA test identifier for tests with platform method D",
    "query": "SELECT biomarker_fda_test.doid FROM biomarker_fda_test WHERE biomarker_fda_test.platform_method = 'D'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_19_2",
    "user": "gpt-3",
    "question": "Show me the id of FDA tests with platform method D",
    "query": "SELECT biomarker_fda_test.doid FROM biomarker_fda_test WHERE biomarker_fda_test.platform_method = 'D'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_2_1",
    "user": "gpt-3",
    "question": "Show the FDA test id for cancer tests with a histological type of either '8500/2 (ductal carcinoma in situ) OR 8520/2 (lobular carcinoma in situ)'.",
    "query": "SELECT biomarker_fda_test.doid FROM biomarker_fda_test WHERE biomarker_fda_test.histological_type = '8500/2 (ductal carcinoma in situ) OR 8520/2 (lobular carcinoma in situ)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_2_2",
    "user": "gpt-3",
    "question": "Show the FDA test id of cancer tests with histological type 8500/2 (ductal carcinoma in situ) or 8520/2 (lobular carcinoma in situ)?",
    "query": "SELECT biomarker_fda_test.doid FROM biomarker_fda_test WHERE biomarker_fda_test.histological_type = '8500/2 (ductal carcinoma in situ) OR 8520/2 (lobular carcinoma in situ)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_20_1",
    "user": "gpt-3",
    "question": "What is the expression change direction for differential expression with subjects no change of 15?",
    "query": "SELECT differential_expression.expression_change_direction FROM differential_expression WHERE differential_expression.subjects_nochange = 15"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_20_2",
    "user": "gpt-3",
    "question": "What is the expression change direction for differential expression where the subjects no change is 15?",
    "query": "SELECT differential_expression.expression_change_direction FROM differential_expression WHERE differential_expression.subjects_nochange = 15"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_21_1",
    "user": "gpt-3",
    "question": "What is the trade name of FDA tests with submission 'K080252'?",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda WHERE biomarker_fda.test_submission = 'K080252'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_21_2",
    "user": "gpt-3",
    "question": "What is the trade name of biomarker FDA tests with submission K080252?",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda WHERE biomarker_fda.test_submission = 'K080252'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_22_1",
    "user": "gpt-3",
    "question": "Show me the description of biomarkers which are not in a panel",
    "query": "SELECT biomarker.biomarker_description FROM biomarker WHERE biomarker.test_is_a_panel = 'False'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_22_2",
    "user": "gpt-3",
    "question": "Show me the description of biomarkers which are not in a panel.",
    "query": "SELECT biomarker.biomarker_description FROM biomarker WHERE biomarker.test_is_a_panel = 'False'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_23_1",
    "user": "gpt-3",
    "question": "Show me the expression rank score of healthy expressions with expression level anatomical relative 'MEDIUM'",
    "query": "SELECT healthy_expression.expression_rank_score FROM healthy_expression WHERE healthy_expression.expression_level_anatomical_relative = 'MEDIUM'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_23_2",
    "user": "gpt-3",
    "question": "Show me the expression rank score for healthy expressions with an expression level anatomical relative of 'MEDIUM'",
    "query": "SELECT healthy_expression.expression_rank_score FROM healthy_expression WHERE healthy_expression.expression_level_anatomical_relative = 'MEDIUM'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_24_1",
    "user": "gpt-3",
    "question": "Show me the title of biomarkers on the EDRN platform with anatomical id 'UBERON:0002367'",
    "query": "SELECT biomarker_edrn.biomarker_title FROM biomarker_edrn WHERE biomarker_edrn.uberon_anatomical_id = 'UBERON:0002367'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_24_2",
    "user": "gpt-3",
    "question": "Show me the title of biomarkers in the EDRN platform with anatomical id 'UBERON:0002367'",
    "query": "SELECT biomarker_edrn.biomarker_title FROM biomarker_edrn WHERE biomarker_edrn.uberon_anatomical_id = 'UBERON:0002367'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_25_1",
    "user": "gpt-3",
    "question": "Show me the trade name of FDA tests for indication 'prognosis'",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.approved_indication = 'prognosis'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_25_2",
    "user": "gpt-3",
    "question": "Show me the trade name for FDA tests where the indication is 'prognosis'",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.approved_indication = 'prognosis'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_26_1",
    "user": "gpt-3",
    "question": "What is the predicted site prediction for disease mutation impact predictions using polyphen as tool?",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.tool = 'polyphen'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_26_2",
    "user": "gpt-3",
    "question": "Show me the prediction for site predictions of disease mutation impact predictions using polyphen as tool",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.tool = 'polyphen'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_27_1",
    "user": "gpt-3",
    "question": "Show me the feature key of disease mutation site annotations with description 'Omega-N-methylarginine'",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.description = 'Omega-N-methylarginine'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_27_2",
    "user": "gpt-3",
    "question": "Show the feature key of disease mutation site annotations with description 'Omega-N-methylarginine'",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.description = 'Omega-N-methylarginine'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_28_1",
    "user": "gpt-3",
    "question": "Show me all species with genus sapiens",
    "query": "SELECT species.genus FROM species WHERE species.species = 'sapiens'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_28_2",
    "user": "gpt-3",
    "question": "List the genus for species 'sapiens'",
    "query": "SELECT species.genus FROM species WHERE species.species = 'sapiens'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_29_1",
    "user": "gpt-3",
    "question": "What is the test trade name for FDA tests submissions with test submission 'K130010'?",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda WHERE biomarker_fda.test_submission = 'K130010'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_29_2",
    "user": "gpt-3",
    "question": "What is the trade name for FDA tests with submission 'K130010'?",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda WHERE biomarker_fda.test_submission = 'K130010'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_3_1",
    "user": "gpt-3",
    "question": "What is the probability for disease mutation impact predictions with site prediction 'benign'?",
    "query": "SELECT disease_mutation_impact_prediction.probability FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.site_prediction = 'benign'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_3_2",
    "user": "gpt-3",
    "question": "Show me the probability for disease mutation impact predictions with site prediction 'benign'",
    "query": "SELECT disease_mutation_impact_prediction.probability FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.site_prediction = 'benign'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_30_1",
    "user": "gpt-3",
    "question": "What is the genus of species musculus?",
    "query": "SELECT species.genus FROM species WHERE species.species = 'musculus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_30_2",
    "user": "gpt-3",
    "question": "List the genus of species with species equal to 'musculus'",
    "query": "SELECT species.genus FROM species WHERE species.species = 'musculus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_31_1",
    "user": "gpt-3",
    "question": "Get the expression level anatomical relative expression for expression with rank score 3.60",
    "query": "SELECT healthy_expression.expression_level_anatomical_relative FROM healthy_expression WHERE healthy_expression.expression_rank_score = 3.60"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_31_2",
    "user": "gpt-3",
    "question": "Show expression level anatomical relative for expression with rank score of 3.60",
    "query": "SELECT healthy_expression.expression_level_anatomical_relative FROM healthy_expression WHERE healthy_expression.expression_rank_score = 3.60"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_32_1",
    "user": "gpt-3",
    "question": "Show me the identifier of anatomical entities with name 'tibia'",
    "query": "SELECT anatomical_entity.id FROM anatomical_entity WHERE anatomical_entity.name = 'tibia'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_32_2",
    "user": "gpt-3",
    "question": "Show me the Uberon identifier for anatomical entities with name 'tibia'",
    "query": "SELECT anatomical_entity.id FROM anatomical_entity WHERE anatomical_entity.name = 'tibia'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_33_1",
    "user": "gpt-3",
    "question": "Show me the species with common name human",
    "query": "SELECT species.species FROM species WHERE species.speciescommonname = 'human'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_33_2",
    "user": "gpt-3",
    "question": "Show species common name of species with species name human",
    "query": "SELECT species.species FROM species WHERE species.speciescommonname = 'human'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_34_1",
    "user": "gpt-3",
    "question": "Show me the name of anatomical entities with identifier UBERON:0000017",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0000017'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_34_2",
    "user": "gpt-3",
    "question": "Show me the name of all anatomical entities with identifier 'UBERON:0000017'",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0000017'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_35_1",
    "user": "gpt-3",
    "question": "Show test is a panel for biomarker GLOD4",
    "query": "SELECT biomarker.test_is_a_panel FROM biomarker WHERE biomarker.biomarker_description = 'GLOD4 belongs to the glyoxalase I family. It is expressed in heart, brain, liver, kidney, pancreas and placenta; it is not expressed in skeletal muscle and lung. There is evidence that GLOD4 expression is decreased in hepatocellular carcinoma samples as compared to adjacent non-cancerous liver tissues from the same patients. Transfection in hepatocellular carcinoma cells and overexpression can inhibit the cell growth.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_35_2",
    "user": "gpt-3",
    "question": "Show me the test that is a panel for biomarker GLOD4",
    "query": "SELECT biomarker.test_is_a_panel FROM biomarker WHERE biomarker.biomarker_description = 'GLOD4 belongs to the glyoxalase I family. It is expressed in heart, brain, liver, kidney, pancreas and placenta; it is not expressed in skeletal muscle and lung. There is evidence that GLOD4 expression is decreased in hepatocellular carcinoma samples as compared to adjacent non-cancerous liver tissues from the same patients. Transfection in hepatocellular carcinoma cells and overexpression can inhibit the cell growth.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_36_1",
    "user": "gpt-3",
    "question": "Show me the name of all anatomical entities where the description is 'Cardiac chamber in which blood enters the heart.'",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.description = 'Cardiac chamber in which blood enters the heart.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_36_2",
    "user": "gpt-3",
    "question": "Show me the name of all anatomical entities which description is 'Cardiac chamber in which blood enters the heart.'",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.description = 'Cardiac chamber in which blood enters the heart.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_37_1",
    "user": "gpt-3",
    "question": "Show me evidence for adoption of FDA test with id 1612",
    "query": "SELECT biomarker_fda_test.test_adoption_evidence FROM biomarker_fda_test WHERE biomarker_fda_test.doid = 1612"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_37_2",
    "user": "gpt-3",
    "question": "Show me evidence adoption for FDA test with id 1612",
    "query": "SELECT biomarker_fda_test.test_adoption_evidence FROM biomarker_fda_test WHERE biomarker_fda_test.doid = 1612"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_38_1",
    "user": "gpt-3",
    "question": "Give me the description for biomarker with symbol SLC5A7",
    "query": "SELECT biomarker.biomarker_description FROM biomarker WHERE biomarker.gene_symbol = 'SLC5A7'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_38_2",
    "user": "gpt-3",
    "question": "Show me the description for biomarker with symbol SLC5A7",
    "query": "SELECT biomarker.biomarker_description FROM biomarker WHERE biomarker.gene_symbol = 'SLC5A7'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_39_1",
    "user": "gpt-3",
    "question": "How many total subjects are there for a differential expression with a subject up-regulation of 8?",
    "query": "SELECT differential_expression.subjects_total FROM differential_expression WHERE differential_expression.subjects_up = 8"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_39_2",
    "user": "gpt-3",
    "question": "How many total subjects are there for differential expression with subjects up (upregulated) at eight?",
    "query": "SELECT differential_expression.subjects_total FROM differential_expression WHERE differential_expression.subjects_up = 8"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_4_1",
    "user": "gpt-3",
    "question": "Show me the description for anatomical entity with identifier CL:0002138",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.id = 'CL:0002138'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_4_2",
    "user": "gpt-3",
    "question": "Give me the description for anatomical entity with identifier CL:0002138",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.id = 'CL:0002138'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_40_1",
    "user": "gpt-3",
    "question": "Give me the description of disease mutation site annotations with disulfide bond as feature key",
    "query": "SELECT disease_mutation_site_annotation.description FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.feature_key = 'disulfide bond'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_40_2",
    "user": "gpt-3",
    "question": "List the description of disease mutation site annotations with 'disulfide bond' as feature key",
    "query": "SELECT disease_mutation_site_annotation.description FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.feature_key = 'disulfide bond'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_41_1",
    "user": "gpt-3",
    "question": "What is the biomarker type for biomarker with anatomical id UBERON:0002367?",
    "query": "SELECT biomarker_edrn.biomarker_type FROM biomarker_edrn WHERE biomarker_edrn.uberon_anatomical_id = 'UBERON:0002367'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_41_2",
    "user": "gpt-3",
    "question": "Show me the biomarker type for biomarker with anatomical id UBERON:0002367",
    "query": "SELECT biomarker_edrn.biomarker_type FROM biomarker_edrn WHERE biomarker_edrn.uberon_anatomical_id = 'UBERON:0002367'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_42_1",
    "user": "gpt-3",
    "question": "Show the gene symbol of expressions with a log2 fold change of 0.98",
    "query": "SELECT differential_expression.gene_symbol FROM differential_expression WHERE differential_expression.log2fc = 0.98"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_42_2",
    "user": "gpt-3",
    "question": "List the gene symbols of expressions with a log2 fold change of 0.98",
    "query": "SELECT differential_expression.gene_symbol FROM differential_expression WHERE differential_expression.log2fc = 0.98"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_43_1",
    "user": "gpt-3",
    "question": "Show me the clinical significance of FDA tests with test study design Pro",
    "query": "SELECT biomarker_fda_test.clinical_significance FROM biomarker_fda_test WHERE biomarker_fda_test.test_study_design = 'Pro'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_43_2",
    "user": "gpt-3",
    "question": "Show me the clinical significance of FDA tests with test study design 'Pro'",
    "query": "SELECT biomarker_fda_test.clinical_significance FROM biomarker_fda_test WHERE biomarker_fda_test.test_study_design = 'Pro'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_44_1",
    "user": "gpt-3",
    "question": "Show me the QA state for biomarker with title ZNF510 on the EDRN platform",
    "query": "SELECT biomarker_edrn.qa_state FROM biomarker_edrn WHERE biomarker_edrn.biomarker_title = 'ZNF510'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_44_2",
    "user": "gpt-3",
    "question": "What is the QA state for biomarker with title 'ZNF510' on the EDRN platform?",
    "query": "SELECT biomarker_edrn.qa_state FROM biomarker_edrn WHERE biomarker_edrn.biomarker_title = 'ZNF510'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_45_1",
    "user": "gpt-3",
    "question": "Show me the name of all anatomical entities with uberon identifier 'UBERON:0003428'",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0003428'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_45_2",
    "user": "gpt-3",
    "question": "Show me the name of all anatomical entities with identifier 'UBERON:0003428'",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0003428'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_46_1",
    "user": "gpt-3",
    "question": "What is the trade name of a FDA test use with submission K062695?",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_submission = 'K062695'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_46_2",
    "user": "gpt-3",
    "question": "What is the test trade name for FDA test use with test submission K062695?",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_submission = 'K062695'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_47_1",
    "user": "gpt-3",
    "question": "What is the QA state for the biomarker 'L1CAM' on the EDRN platform?",
    "query": "SELECT biomarker_edrn.qa_state FROM biomarker_edrn WHERE biomarker_edrn.biomarker_title = 'L1CAM'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_47_2",
    "user": "gpt-3",
    "question": "What is the QA state for biomarker on the EDRN platform with title L1CAM?",
    "query": "SELECT biomarker_edrn.qa_state FROM biomarker_edrn WHERE biomarker_edrn.biomarker_title = 'L1CAM'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_48_1",
    "user": "gpt-3",
    "question": "Show me the amino acids position uniprot kb for disease mutations where the reference amino acid residue is A",
    "query": "SELECT disease_mutation.aa_pos_uniprotkb FROM disease_mutation WHERE disease_mutation.ref_aa = 'A'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_48_2",
    "user": "gpt-3",
    "question": "Show me the disease mutation amino acids position in uniprot kb for a reference amino acid residue of A",
    "query": "SELECT disease_mutation.aa_pos_uniprotkb FROM disease_mutation WHERE disease_mutation.ref_aa = 'A'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_49_1",
    "user": "gpt-3",
    "question": "What is the QA state for biomarker with title SLC4A4 on the EDRN platform?",
    "query": "SELECT biomarker_edrn.qa_state FROM biomarker_edrn WHERE biomarker_edrn.biomarker_title = 'SLC4A4'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_49_2",
    "user": "gpt-3",
    "question": "Show me the QA state for biomarker with title SLC4A4 on the EDRN platform",
    "query": "SELECT biomarker_edrn.qa_state FROM biomarker_edrn WHERE biomarker_edrn.biomarker_title = 'SLC4A4'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_5_1",
    "user": "gpt-3",
    "question": "What is the trade name of FDA tests that are actually used for prognosis?",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.actual_use = 'prognostic'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_5_2",
    "user": "gpt-3",
    "question": "What is the trade name of FDA tests which are actually used for prognostic?",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.actual_use = 'prognostic'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_50_1",
    "user": "gpt-3",
    "question": "Show submissions for FDA test with trade name 'MammaPrint'",
    "query": "SELECT biomarker_fda_test_use.test_submission FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_50_2",
    "user": "gpt-3",
    "question": "Show submissions for FDA test use with trade name 'MammaPrint'",
    "query": "SELECT biomarker_fda_test_use.test_submission FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_51_1",
    "user": "gpt-3",
    "question": "Show me the description of adipose tissue of abdominal region",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.name = 'adipose tissue of abdominal region'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_51_2",
    "user": "gpt-3",
    "question": "Show me the description of adipose tissue in the abdominal region",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.name = 'adipose tissue of abdominal region'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_52_1",
    "user": "gpt-3",
    "question": "Show me the uberon identifier for anatomical entities with name 'chest wall'",
    "query": "SELECT anatomical_entity.id FROM anatomical_entity WHERE anatomical_entity.name = 'chest wall'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_52_2",
    "user": "gpt-3",
    "question": "Show me the uberon identifier of anatomical entities with name 'chest wall'",
    "query": "SELECT anatomical_entity.id FROM anatomical_entity WHERE anatomical_entity.name = 'chest wall'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_53_1",
    "user": "gpt-3",
    "question": "What is the test number genes for FDA tests with specimen type human stool?",
    "query": "SELECT biomarker_fda_test.test_number_genes FROM biomarker_fda_test WHERE biomarker_fda_test.specimen_type = 'human stool'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_53_2",
    "user": "gpt-3",
    "question": "What is the test number for FDA tests with genes in human stool?",
    "query": "SELECT biomarker_fda_test.test_number_genes FROM biomarker_fda_test WHERE biomarker_fda_test.specimen_type = 'human stool'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_54_1",
    "user": "gpt-3",
    "question": "Show biomarker with identifier of biomarkers that have a description 'CD248 is a 165-kD cell surface glycoprotein  expressed in tumor endothelial cells but absent or barely detectable in normal endothelial cells. There is also evidence that CD248 is expressed in metastatic lesions of the liver and during angiogenesis of corpus luteum formation and wound healing, in vascular endothelial cells of malignant tumors but not in normal blood vessels, and in stromal fibroblasts.'",
    "query": "SELECT biomarker.biomarker_id FROM biomarker WHERE biomarker.biomarker_description = 'CD248 is a 165-kD cell surface glycoprotein  expressed in tumor endothelial cells but absent or barely detectable in normal endothelial cells. There is also evidence that CD248 is expressed in metastatic lesions of the liver and during angiogenesis of corpus luteum formation and wound healing, in vascular endothelial cells of malignant tumors but not in normal blood vessels, and in stromal fibroblasts.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_54_2",
    "user": "gpt-3",
    "question": "Show biomarker with biomarker description 'CD248 is a 165-kD cell surface glycoprotein expressed in tumor endothelial cells but absent or barely detectable in normal endothelial cells. There is also evidence that CD248 is expressed in metastatic lesions of the liver and during angiogenesis of corpus luteum formation and wound healing, in vascular endothelial cells of malignant tumors but not in normal blood vessels, and in stromal fibroblasts.'",
    "query": "SELECT biomarker.biomarker_id FROM biomarker WHERE biomarker.biomarker_description = 'CD248 is a 165-kD cell surface glycoprotein  expressed in tumor endothelial cells but absent or barely detectable in normal endothelial cells. There is also evidence that CD248 is expressed in metastatic lesions of the liver and during angiogenesis of corpus luteum formation and wound healing, in vascular endothelial cells of malignant tumors but not in normal blood vessels, and in stromal fibroblasts.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_55_1",
    "user": "gpt-3",
    "question": "Show the mutation frequency of disease mutations at chromosome position 46388126?",
    "query": "SELECT disease_mutation.mutation_freq FROM disease_mutation WHERE disease_mutation.chromosome_pos = 46388126"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_55_2",
    "user": "gpt-3",
    "question": "Show disease mutation frequency for disease mutation with chromosome position 46388126",
    "query": "SELECT disease_mutation.mutation_freq FROM disease_mutation WHERE disease_mutation.chromosome_pos = 46388126"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_56_1",
    "user": "gpt-3",
    "question": "What is the trade name of FDA tests with experimental adoption evidence?",
    "query": "SELECT biomarker_fda_test.test_trade_name FROM biomarker_fda_test WHERE biomarker_fda_test.test_adoption_evidence = 'experimental'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_56_2",
    "user": "gpt-3",
    "question": "What is the trade name of FDA tests with evidence adoption 'experimental'?",
    "query": "SELECT biomarker_fda_test.test_trade_name FROM biomarker_fda_test WHERE biomarker_fda_test.test_adoption_evidence = 'experimental'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_57_1",
    "user": "gpt-3",
    "question": "Show me the gene symbol of biomarkers with description 'H2B histone family, member H'",
    "query": "SELECT biomarker.gene_symbol FROM biomarker WHERE biomarker.biomarker_description = 'H2B histone family, member H'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_57_2",
    "user": "gpt-3",
    "question": "Show me the gene symbol for biomarkers with description H2B histone family, member H",
    "query": "SELECT biomarker.gene_symbol FROM biomarker WHERE biomarker.biomarker_description = 'H2B histone family, member H'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_58_1",
    "user": "gpt-3",
    "question": "Show statistical significance of differential expression with adjusted p-value 0.344",
    "query": "SELECT differential_expression.statistical_significance FROM differential_expression WHERE differential_expression.adjpvalue = 0.344"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_58_2",
    "user": "gpt-3",
    "question": "Show statistical significance of differential expression with adjusted p-value of 0.344",
    "query": "SELECT differential_expression.statistical_significance FROM differential_expression WHERE differential_expression.adjpvalue = 0.344"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_59_1",
    "user": "gpt-3",
    "question": "What is the gene relative expression level for expression with expression rank score 15.60?",
    "query": "SELECT healthy_expression.expression_level_gene_relative FROM healthy_expression WHERE healthy_expression.expression_rank_score = 15.60"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_59_2",
    "user": "gpt-3",
    "question": "List the expression level gene relative for expression rank score 15.60",
    "query": "SELECT healthy_expression.expression_level_gene_relative FROM healthy_expression WHERE healthy_expression.expression_rank_score = 15.60"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_6_1",
    "user": "gpt-3",
    "question": "Show submissions for the test with trade name 'MammaPrint'",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_6_2",
    "user": "gpt-3",
    "question": "Show me FDA test submissions for test with trade name 'MammaPrint'",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_60_1",
    "user": "gpt-3",
    "question": "What tool is used for disease mutation impact predictions with site predictions 'benign'?",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.site_prediction = 'benign'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_60_2",
    "user": "gpt-3",
    "question": "Which tool can be used for disease mutation impact predictions with site prediction benign?",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.site_prediction = 'benign'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_7_1",
    "user": "gpt-3",
    "question": "Show me the test number genes for FDA test submission K062743",
    "query": "SELECT biomarker_fda_test.test_number_genes FROM biomarker_fda_test WHERE biomarker_fda_test.test_submission = 'K062743'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_7_2",
    "user": "gpt-3",
    "question": "Show me the FDA test number genes for test submission 'K062743'",
    "query": "SELECT biomarker_fda_test.test_number_genes FROM biomarker_fda_test WHERE biomarker_fda_test.test_submission = 'K062743'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_8_1",
    "user": "gpt-3",
    "question": "Show me the call quality for healthy expressions with a relative anatomical expression level of LOW",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression WHERE healthy_expression.expression_level_anatomical_relative = 'LOW'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_8_2",
    "user": "gpt-3",
    "question": "Show me the call quality for healthy expressions with expression level anatomical relative 'LOW'",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression WHERE healthy_expression.expression_level_anatomical_relative = 'LOW'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_9_1",
    "user": "gpt-3",
    "question": "Show me all biomarker types for biomarker with title 'UBA52' on the EDRN platform",
    "query": "SELECT biomarker_edrn.biomarker_type FROM biomarker_edrn WHERE biomarker_edrn.biomarker_title = 'UBA52'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "0_9_2",
    "user": "gpt-3",
    "question": "Show biomarker types for biomarker EDRN with title UBA52",
    "query": "SELECT biomarker_edrn.biomarker_type FROM biomarker_edrn WHERE biomarker_edrn.biomarker_title = 'UBA52'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_0_1",
    "user": "gpt-3",
    "question": "Show the pmid of biomarker article with biomarker id 1005",
    "query": "SELECT biomarker_article.pmid FROM biomarker_article JOIN biomarker ON biomarker_article.biomarker_internal_id = biomarker.id WHERE biomarker.biomarker_id = 'urn:edrn:bmdb:biomarker:1005'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_0_2",
    "user": "gpt-3",
    "question": "Show me the pmid of all biomarker articles about biomarker with id 1005",
    "query": "SELECT biomarker_article.pmid FROM biomarker_article JOIN biomarker ON biomarker_article.biomarker_internal_id = biomarker.id WHERE biomarker.biomarker_id = 'urn:edrn:bmdb:biomarker:1005'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_1_1",
    "user": "gpt-3",
    "question": "Show me the PMID of disease mutation articles where the nucleotide base variation is T",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.alt_nt = 'T'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_1_2",
    "user": "gpt-3",
    "question": "Show me the PMID of disease mutation article which nucleotide base variation is T",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.alt_nt = 'T'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_10_1",
    "user": "gpt-3",
    "question": "Show me the name of all anatomical entities on the EDRN platform with QA state 'Under Review'",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity JOIN biomarker_edrn ON anatomical_entity.id = biomarker_edrn.uberon_anatomical_id WHERE biomarker_edrn.qa_state = 'Under Review'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_10_2",
    "user": "gpt-3",
    "question": "Show me the name of all anatomical entities which have a QA state of 'Under Review' on the EDRN platform",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity JOIN biomarker_edrn ON anatomical_entity.id = biomarker_edrn.uberon_anatomical_id WHERE biomarker_edrn.qa_state = 'Under Review'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_11_1",
    "user": "gpt-3",
    "question": "Show approved indication for FDA tests with biomarker origin 'amplification'",
    "query": "SELECT biomarker_fda_test_use.approved_indication FROM biomarker_fda_test_use JOIN biomarker_fda_test ON biomarker_fda_test_use.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.biomarker_origin = 'amplification'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_11_2",
    "user": "gpt-3",
    "question": "Show approved indication for fda test uses with biomarker origin 'amplification'",
    "query": "SELECT biomarker_fda_test_use.approved_indication FROM biomarker_fda_test_use JOIN biomarker_fda_test ON biomarker_fda_test_use.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.biomarker_origin = 'amplification'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_12_1",
    "user": "gpt-3",
    "question": "Show me the description for anatomical entities on the EDRN platform in phase one.",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity JOIN biomarker_edrn ON anatomical_entity.id = biomarker_edrn.uberon_anatomical_id WHERE biomarker_edrn.phase = 'One'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_12_2",
    "user": "gpt-3",
    "question": "List the descriptions for anatomical entities on the EDRN platform with phase One",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity JOIN biomarker_edrn ON anatomical_entity.id = biomarker_edrn.uberon_anatomical_id WHERE biomarker_edrn.phase = 'One'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_13_1",
    "user": "gpt-3",
    "question": "Show me all biomarker types for biomarkers in the anatomical entity 'medial dorsal nucleus of thalamus'",
    "query": "SELECT biomarker_edrn.biomarker_type FROM biomarker_edrn JOIN anatomical_entity ON biomarker_edrn.uberon_anatomical_id = anatomical_entity.id WHERE anatomical_entity.name = 'medial dorsal nucleus of thalamus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_13_2",
    "user": "gpt-3",
    "question": "Show me all biomarker types for the anatomical entity 'medial dorsal nucleus of thalamus'",
    "query": "SELECT biomarker_edrn.biomarker_type FROM biomarker_edrn JOIN anatomical_entity ON biomarker_edrn.uberon_anatomical_id = anatomical_entity.id WHERE anatomical_entity.name = 'medial dorsal nucleus of thalamus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_14_1",
    "user": "gpt-3",
    "question": "Show an expression level for the anatomical entity 'tendon'",
    "query": "SELECT healthy_expression.expression_level_anatomical_relative FROM healthy_expression JOIN anatomical_entity ON healthy_expression.uberon_anatomical_id = anatomical_entity.id WHERE anatomical_entity.name = 'tendon'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_14_2",
    "user": "gpt-3",
    "question": "Show the expression level for anatomical entity 'tendon'",
    "query": "SELECT healthy_expression.expression_level_anatomical_relative FROM healthy_expression JOIN anatomical_entity ON healthy_expression.uberon_anatomical_id = anatomical_entity.id WHERE anatomical_entity.name = 'tendon'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_15_1",
    "user": "gpt-3",
    "question": "Show the disease ontology identifier for differential expression of brain cancer",
    "query": "SELECT differential_expression.doid FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name = 'brain cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_15_2",
    "user": "gpt-3",
    "question": "Show the disease ontology identifier of differential expression with disease name brain cancer",
    "query": "SELECT differential_expression.doid FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name = 'brain cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_16_1",
    "user": "gpt-3",
    "question": "Show the pmid of biomarker article with biomarker id 227",
    "query": "SELECT biomarker_article.pmid FROM biomarker_article JOIN biomarker ON biomarker_article.biomarker_internal_id = biomarker.id WHERE biomarker.biomarker_id = '227'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_16_2",
    "user": "gpt-3",
    "question": "Show the PMID of biomarker article with biomarker id 227",
    "query": "SELECT biomarker_article.pmid FROM biomarker_article JOIN biomarker ON biomarker_article.biomarker_internal_id = biomarker.id WHERE biomarker.biomarker_id = '227'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_17_1",
    "user": "gpt-3",
    "question": "Show names of diseases which do not have a differential expression with a zero expression score in subjects.",
    "query": "SELECT disease.name FROM disease JOIN differential_expression ON disease.id = differential_expression.doid WHERE differential_expression.subjects_up = 0"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_17_2",
    "user": "gpt-3",
    "question": "What are the name of diseases where there is zero expression for?",
    "query": "SELECT disease.name FROM disease JOIN differential_expression ON disease.id = differential_expression.doid WHERE differential_expression.subjects_up = 0"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_18_1",
    "user": "gpt-3",
    "question": "Show me the PMID of biomarker articles that are not a panel",
    "query": "SELECT biomarker_article.pmid FROM biomarker_article JOIN biomarker ON biomarker_article.biomarker_internal_id = biomarker.id WHERE biomarker.test_is_a_panel = 'False'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_18_2",
    "user": "gpt-3",
    "question": "Show me the pmid of biomarker articles that are not a panel",
    "query": "SELECT biomarker_article.pmid FROM biomarker_article JOIN biomarker ON biomarker_article.biomarker_internal_id = biomarker.id WHERE biomarker.test_is_a_panel = 'False'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_19_1",
    "user": "gpt-3",
    "question": "Show disease mutation coding sequence positions for thymus cancer",
    "query": "SELECT disease_mutation.cds_pos FROM disease_mutation JOIN disease ON disease_mutation.doid = disease.id WHERE disease.name = 'thymus cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_19_2",
    "user": "gpt-3",
    "question": "Show coding sequence positions of disease mutations of thymus cancer",
    "query": "SELECT disease_mutation.cds_pos FROM disease_mutation JOIN disease ON disease_mutation.doid = disease.id WHERE disease.name = 'thymus cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_2_1",
    "user": "gpt-3",
    "question": "Show me the title of biomarkers for the biomarker with id 173 on the EDRN platform",
    "query": "SELECT biomarker_edrn.biomarker_title FROM biomarker_edrn JOIN biomarker ON biomarker_edrn.id = biomarker.id WHERE biomarker.biomarker_id = 'urn:edrn:bmdb:biomarker:173'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_2_2",
    "user": "gpt-3",
    "question": "Show me the title of biomarkers with biomarker id 173 on the EDRN platform",
    "query": "SELECT biomarker_edrn.biomarker_title FROM biomarker_edrn JOIN biomarker ON biomarker_edrn.id = biomarker.id WHERE biomarker.biomarker_id = 'urn:edrn:bmdb:biomarker:173'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_20_1",
    "user": "gpt-3",
    "question": "Show the adjusted p-value for differential expression of adrenal gland cancer",
    "query": "SELECT differential_expression.adjpvalue FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name = 'adrenal gland cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_20_2",
    "user": "gpt-3",
    "question": "Show the adjusted p-value of differential expression of adrenal gland cancer",
    "query": "SELECT differential_expression.adjpvalue FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name = 'adrenal gland cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_21_1",
    "user": "gpt-3",
    "question": "Show me all species for gene ensemble with symbol 'TYMP'",
    "query": "SELECT species.species FROM species JOIN xref_gene_ensembl ON species.speciesid = xref_gene_ensembl.speciesid WHERE xref_gene_ensembl.gene_symbol = 'TYMP'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_21_2",
    "user": "gpt-3",
    "question": "Species of gene ensemble with symbol 'TYMP'",
    "query": "SELECT species.species FROM species JOIN xref_gene_ensembl ON species.speciesid = xref_gene_ensembl.speciesid WHERE xref_gene_ensembl.gene_symbol = 'TYMP'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_22_1",
    "user": "gpt-3",
    "question": "Show FDA test platform methods for tests with the indication 'companion diagnosis'",
    "query": "SELECT biomarker_fda_test.platform_method FROM biomarker_fda_test JOIN biomarker_fda_test_use ON biomarker_fda_test.test_trade_name = biomarker_fda_test_use.test_trade_name WHERE biomarker_fda_test_use.approved_indication = 'companion diagnosis'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_22_2",
    "user": "gpt-3",
    "question": "Show me all FDA test platform methods for FDA tests with an approved indication of companion diagnosis",
    "query": "SELECT biomarker_fda_test.platform_method FROM biomarker_fda_test JOIN biomarker_fda_test_use ON biomarker_fda_test.test_trade_name = biomarker_fda_test_use.test_trade_name WHERE biomarker_fda_test_use.approved_indication = 'companion diagnosis'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_23_1",
    "user": "gpt-3",
    "question": "Show me the alias for biomarkers that are not a panel",
    "query": "SELECT biomarker_alias.alias FROM biomarker_alias JOIN biomarker ON biomarker_alias.biomarker_internal_id = biomarker.id WHERE biomarker.test_is_a_panel = 'False'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_23_2",
    "user": "gpt-3",
    "question": "Show me the alias for biomarkers with panel test = false",
    "query": "SELECT biomarker_alias.alias FROM biomarker_alias JOIN biomarker ON biomarker_alias.biomarker_internal_id = biomarker.id WHERE biomarker.test_is_a_panel = 'False'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_24_1",
    "user": "gpt-3",
    "question": "Show me the gene symbol of healthy expression ensembles with an expression rank score of 17.9",
    "query": "SELECT xref_gene_ensembl.gene_symbol FROM xref_gene_ensembl JOIN healthy_expression ON xref_gene_ensembl.ensembl_gene_id = healthy_expression.ensembl_gene_id WHERE healthy_expression.expression_rank_score = 17.90"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_24_2",
    "user": "gpt-3",
    "question": "Get the gene symbol of gene ensembles with an expression rank score of 17.9",
    "query": "SELECT xref_gene_ensembl.gene_symbol FROM xref_gene_ensembl JOIN healthy_expression ON xref_gene_ensembl.ensembl_gene_id = healthy_expression.ensembl_gene_id WHERE healthy_expression.expression_rank_score = 17.90"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_25_1",
    "user": "gpt-3",
    "question": "Show me the symbol of gene ensembles for species with common name human",
    "query": "SELECT xref_gene_ensembl.gene_symbol FROM xref_gene_ensembl JOIN species ON xref_gene_ensembl.speciesid = species.speciesid WHERE species.speciescommonname = 'human'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_25_2",
    "user": "gpt-3",
    "question": "Show the gene symbol of gene ensembles with species common name 'human'",
    "query": "SELECT xref_gene_ensembl.gene_symbol FROM xref_gene_ensembl JOIN species ON xref_gene_ensembl.speciesid = species.speciesid WHERE species.speciescommonname = 'human'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_26_1",
    "user": "gpt-3",
    "question": "Show biomarker drugs of a fda drug with trade name 'Prosigna Breast Cancer Prognostic Gene Signature Assay'",
    "query": "SELECT biomarker_fda_drug.biomarker_drug FROM biomarker_fda_drug JOIN biomarker_fda ON biomarker_fda_drug.biomarker_fda_id = biomarker_fda.id WHERE biomarker_fda.test_trade_name = 'Prosigna Breast Cancer Prognostic Gene Signature Assay'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_26_2",
    "user": "gpt-3",
    "question": "Show biomarker FDA drug for 'Prosigna Breast Cancer Prognostic Gene Signature Assay'",
    "query": "SELECT biomarker_fda_drug.biomarker_drug FROM biomarker_fda_drug JOIN biomarker_fda ON biomarker_fda_drug.biomarker_fda_id = biomarker_fda.id WHERE biomarker_fda.test_trade_name = 'Prosigna Breast Cancer Prognostic Gene Signature Assay'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_27_1",
    "user": "gpt-3",
    "question": "List the different tools for disease mutation impact predictions where the reference nucleotide base is G",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction JOIN disease_mutation ON disease_mutation_impact_prediction.disease_mutation_id = disease_mutation.id WHERE disease_mutation.ref_nt = 'G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_27_2",
    "user": "gpt-3",
    "question": "List the tools for predicting impact of disease mutations with reference nucleotide base G",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction JOIN disease_mutation ON disease_mutation_impact_prediction.disease_mutation_id = disease_mutation.id WHERE disease_mutation.ref_nt = 'G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_28_1",
    "user": "gpt-3",
    "question": "What is the NCIt term for biomarkers FDA submission P160045?",
    "query": "SELECT biomarker_fda_ncit_term.ncit_biomarker FROM biomarker_fda_ncit_term JOIN biomarker_fda ON biomarker_fda_ncit_term.biomarker_fda_id = biomarker_fda.id WHERE biomarker_fda.test_submission = 'P160045'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_28_2",
    "user": "gpt-3",
    "question": "What are the NCIt terms for biomarkers in FDA submission P160045?",
    "query": "SELECT biomarker_fda_ncit_term.ncit_biomarker FROM biomarker_fda_ncit_term JOIN biomarker_fda ON biomarker_fda_ncit_term.biomarker_fda_id = biomarker_fda.id WHERE biomarker_fda.test_submission = 'P160045'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_29_1",
    "user": "gpt-3",
    "question": "What is the histological type for FDA tests with submission P190001?",
    "query": "SELECT biomarker_fda_test.histological_type FROM biomarker_fda_test JOIN biomarker_fda_test_use ON biomarker_fda_test.test_trade_name = biomarker_fda_test_use.test_trade_name WHERE biomarker_fda_test_use.test_submission = 'P190001'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_29_2",
    "user": "gpt-3",
    "question": "Show histological type of FDA tests with submission P190001",
    "query": "SELECT biomarker_fda_test.histological_type FROM biomarker_fda_test JOIN biomarker_fda_test_use ON biomarker_fda_test.test_trade_name = biomarker_fda_test_use.test_trade_name WHERE biomarker_fda_test_use.test_submission = 'P190001'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_3_1",
    "user": "gpt-3",
    "question": "Show me all diseases which have a FDA test with platform method D",
    "query": "SELECT disease.name FROM disease JOIN biomarker_fda_test ON disease.id = biomarker_fda_test.doid WHERE biomarker_fda_test.platform_method = 'D'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_3_2",
    "user": "gpt-3",
    "question": "List the name of diseases which have a FDA test with platform method D",
    "query": "SELECT disease.name FROM disease JOIN biomarker_fda_test ON disease.id = biomarker_fda_test.doid WHERE biomarker_fda_test.platform_method = 'D'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_30_1",
    "user": "gpt-3",
    "question": "Show the identifier of anatomical entities with a healthy expression rank score of 33.9",
    "query": "SELECT anatomical_entity.id FROM anatomical_entity JOIN healthy_expression ON anatomical_entity.id = healthy_expression.uberon_anatomical_id WHERE healthy_expression.expression_rank_score = 33.90"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_30_2",
    "user": "gpt-3",
    "question": "Get the identifier of anatomical entities with a healthy expression rank score of 33.90",
    "query": "SELECT anatomical_entity.id FROM anatomical_entity JOIN healthy_expression ON anatomical_entity.id = healthy_expression.uberon_anatomical_id WHERE healthy_expression.expression_rank_score = 33.90"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_31_1",
    "user": "gpt-3",
    "question": "Show subjects of differential expression of kidney cancer",
    "query": "SELECT differential_expression.subjects_up FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name = 'kidney cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_31_2",
    "user": "gpt-3",
    "question": "List the different subjects of differential expression of kidney cancer",
    "query": "SELECT differential_expression.subjects_up FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name = 'kidney cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_32_1",
    "user": "gpt-3",
    "question": "Show me the test trial id of FDA test trials with three genes",
    "query": "SELECT biomarker_fda_test_trial.test_trial_id FROM biomarker_fda_test_trial JOIN biomarker_fda_test ON biomarker_fda_test_trial.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.test_number_genes = 3"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_32_2",
    "user": "gpt-3",
    "question": "Show FDA test trial id for test trials with three genes",
    "query": "SELECT biomarker_fda_test_trial.test_trial_id FROM biomarker_fda_test_trial JOIN biomarker_fda_test ON biomarker_fda_test_trial.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.test_number_genes = 3"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_33_1",
    "user": "gpt-3",
    "question": "Show me if a biomarker test is a panel or not?",
    "query": "SELECT biomarker.test_is_a_panel FROM biomarker JOIN biomarker_article ON biomarker.id = biomarker_article.biomarker_internal_id WHERE biomarker_article.pmid = '20977275'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_33_2",
    "user": "gpt-3",
    "question": "Show me when the biomarker test is a panel?",
    "query": "SELECT biomarker.test_is_a_panel FROM biomarker JOIN biomarker_article ON biomarker.id = biomarker_article.biomarker_internal_id WHERE biomarker_article.pmid = '20977275'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_34_1",
    "user": "gpt-3",
    "question": "Show me the name of all anatomical entities on the EDRN platform with biomarker phase One",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity JOIN biomarker_edrn ON anatomical_entity.id = biomarker_edrn.uberon_anatomical_id WHERE biomarker_edrn.phase = 'One'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_34_2",
    "user": "gpt-3",
    "question": "Show me the names of anatomical entities on the EDRN platform with biomarker phase One",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity JOIN biomarker_edrn ON anatomical_entity.id = biomarker_edrn.uberon_anatomical_id WHERE biomarker_edrn.phase = 'One'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_35_1",
    "user": "gpt-3",
    "question": "What is the feature key for disease mutation site annotations where the amino acid residue variation is Q?",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.alt_aa = 'Q'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_35_2",
    "user": "gpt-3",
    "question": "Get the feature key for disease mutation site annotations where the amino acid residue variation is 'Q'",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.alt_aa = 'Q'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_36_1",
    "user": "gpt-3",
    "question": "Show biomarker FDA NCIt term for test submission K101454",
    "query": "SELECT biomarker_fda_ncit_term.ncit_biomarker FROM biomarker_fda_ncit_term JOIN biomarker_fda ON biomarker_fda_ncit_term.biomarker_fda_id = biomarker_fda.id WHERE biomarker_fda.test_submission = 'K101454'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_36_2",
    "user": "gpt-3",
    "question": "Show me all biomarker FDA NCIt terms for test submission K101454",
    "query": "SELECT biomarker_fda_ncit_term.ncit_biomarker FROM biomarker_fda_ncit_term JOIN biomarker_fda ON biomarker_fda_ncit_term.biomarker_fda_id = biomarker_fda.id WHERE biomarker_fda.test_submission = 'K101454'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_37_1",
    "user": "gpt-3",
    "question": "What is the trade name of FDA tests with biomarker Keratin 14 Gene?",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda JOIN biomarker_fda_ncit_term ON biomarker_fda.id = biomarker_fda_ncit_term.biomarker_fda_id WHERE biomarker_fda_ncit_term.ncit_biomarker = 'Keratin 14 Gene'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_37_2",
    "user": "gpt-3",
    "question": "Give me the trade name of FDA tests with Keratin 14 Gene as biomarker",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda JOIN biomarker_fda_ncit_term ON biomarker_fda.id = biomarker_fda_ncit_term.biomarker_fda_id WHERE biomarker_fda_ncit_term.ncit_biomarker = 'Keratin 14 Gene'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_38_1",
    "user": "gpt-3",
    "question": "What is the common name for a species with gene ensemble symbol F7?",
    "query": "SELECT species.speciescommonname FROM species JOIN xref_gene_ensembl ON species.speciesid = xref_gene_ensembl.speciesid WHERE xref_gene_ensembl.gene_symbol = 'F7'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_38_2",
    "user": "gpt-3",
    "question": "What is the common name for species with gene ensemble with symbol F7?",
    "query": "SELECT species.speciescommonname FROM species JOIN xref_gene_ensembl ON species.speciesid = xref_gene_ensembl.speciesid WHERE xref_gene_ensembl.gene_symbol = 'F7'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_39_1",
    "user": "gpt-3",
    "question": "Show test trial id of FDA tests for biomarker origin 'multigene prediction'",
    "query": "SELECT biomarker_fda_test_trial.test_trial_id FROM biomarker_fda_test_trial JOIN biomarker_fda_test ON biomarker_fda_test_trial.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.biomarker_origin = 'multigene prediction'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_39_2",
    "user": "gpt-3",
    "question": "Show test trial id of FDA test trials with biomarker origin 'multigene prediction'",
    "query": "SELECT biomarker_fda_test_trial.test_trial_id FROM biomarker_fda_test_trial JOIN biomarker_fda_test ON biomarker_fda_test_trial.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.biomarker_origin = 'multigene prediction'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_4_1",
    "user": "gpt-3",
    "question": "Show me the trade name of FDA test uses with test study design 'RetObs'",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use JOIN biomarker_fda_test ON biomarker_fda_test_use.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.test_study_design = 'RetObs'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_4_2",
    "user": "gpt-3",
    "question": "Show test trade name for FDA test uses with test study design 'RetObs'",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use JOIN biomarker_fda_test ON biomarker_fda_test_use.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.test_study_design = 'RetObs'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_40_1",
    "user": "gpt-3",
    "question": "List the PMID of disease mutations with disease ontology identifier 10534",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.doid = 10534"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_40_2",
    "user": "gpt-3",
    "question": "What is the PMID of disease mutations with disease ontology identifier 10534?",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.doid = 10534"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_41_1",
    "user": "gpt-3",
    "question": "Show the pmid of biomarker article with biomarker id 150",
    "query": "SELECT biomarker_article.pmid FROM biomarker_article JOIN biomarker ON biomarker_article.biomarker_internal_id = biomarker.id WHERE biomarker.biomarker_id = 'urn:edrn:bmdb:biomarker:150'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_41_2",
    "user": "gpt-3",
    "question": "Show the pmid of articles about biomarker with id 150",
    "query": "SELECT biomarker_article.pmid FROM biomarker_article JOIN biomarker ON biomarker_article.biomarker_internal_id = biomarker.id WHERE biomarker.biomarker_id = 'urn:edrn:bmdb:biomarker:150'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_42_1",
    "user": "gpt-3",
    "question": "Show the pmid of biomarker articles with gene symbol 'PCCA'",
    "query": "SELECT biomarker_article.pmid FROM biomarker_article JOIN biomarker ON biomarker_article.biomarker_internal_id = biomarker.id WHERE biomarker.gene_symbol = 'PCCA'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_42_2",
    "user": "gpt-3",
    "question": "Show the pmid of biomarker articles for the gene symbol PCCA",
    "query": "SELECT biomarker_article.pmid FROM biomarker_article JOIN biomarker ON biomarker_article.biomarker_internal_id = biomarker.id WHERE biomarker.gene_symbol = 'PCCA'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_43_1",
    "user": "gpt-3",
    "question": "What is the test submission for biomarker with description 'major histocompatibility complex, class I, G'?",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda JOIN biomarker ON biomarker_fda.id = biomarker.id WHERE biomarker.biomarker_description = 'major histocompatibility complex, class I, G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_43_2",
    "user": "gpt-3",
    "question": "What is the test submission for biomarkers with description 'major histocompatibility complex, class I, G'?",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda JOIN biomarker ON biomarker_fda.id = biomarker.id WHERE biomarker.biomarker_description = 'major histocompatibility complex, class I, G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_44_1",
    "user": "gpt-3",
    "question": "Show the total number of different expression subjects for the disease malignant mesothelioma",
    "query": "SELECT differential_expression.subjects_total FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name = 'malignant mesothelioma'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_44_2",
    "user": "gpt-3",
    "question": "Show total number of expression subjects for 'malignant mesothelioma'",
    "query": "SELECT differential_expression.subjects_total FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name = 'malignant mesothelioma'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_45_1",
    "user": "gpt-3",
    "question": "Show stage names of healthy expressions with relative gene expression level HIGH",
    "query": "SELECT stage.name FROM stage JOIN healthy_expression ON stage.id = healthy_expression.uberon_developmental_id WHERE healthy_expression.expression_level_gene_relative = 'HIGH'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_45_2",
    "user": "gpt-3",
    "question": "What are the names of stages with a healthy expression with relative gene expression level 'HIGH'",
    "query": "SELECT stage.name FROM stage JOIN healthy_expression ON stage.id = healthy_expression.uberon_developmental_id WHERE healthy_expression.expression_level_gene_relative = 'HIGH'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_46_1",
    "user": "gpt-3",
    "question": "Show me the description of disease mutation site annotations for the data source tcga",
    "query": "SELECT disease_mutation_site_annotation.description FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.data_source = 'tcga'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_46_2",
    "user": "gpt-3",
    "question": "Show me the description of disease mutation site annotations for data source tcga",
    "query": "SELECT disease_mutation_site_annotation.description FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.data_source = 'tcga'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_47_1",
    "user": "gpt-3",
    "question": "Show test trial id for FDA test trials with histological type 8500/2 (ductal carcinoma in situ) or 8520/2 (lobular carcinoma in situ)",
    "query": "SELECT biomarker_fda_test_trial.test_trial_id FROM biomarker_fda_test_trial JOIN biomarker_fda_test ON biomarker_fda_test_trial.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.histological_type = '8500/2 (ductal carcinoma in situ) OR 8520/2 (lobular carcinoma in situ)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_47_2",
    "user": "gpt-3",
    "question": "Show test trial id for FDA test trials with histological type 8500/2 (ductal carcinoma in situ) OR 8520/2 (lobular carcinoma in situ)",
    "query": "SELECT biomarker_fda_test_trial.test_trial_id FROM biomarker_fda_test_trial JOIN biomarker_fda_test ON biomarker_fda_test_trial.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.histological_type = '8500/2 (ductal carcinoma in situ) OR 8520/2 (lobular carcinoma in situ)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_48_1",
    "user": "gpt-3",
    "question": "Show the feature key of disease mutation site annotations for mutations with frequency of 1",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.mutation_freq = 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_48_2",
    "user": "gpt-3",
    "question": "Show feature key of disease mutation site annotations in which the mutation frequency is 1",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.mutation_freq = 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_49_1",
    "user": "gpt-3",
    "question": "Show the description of disease mutation site annotations with a coding sequence position of 404",
    "query": "SELECT disease_mutation_site_annotation.description FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.cds_pos = 404"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_49_2",
    "user": "gpt-3",
    "question": "Show me the description of disease mutation site annotations where the coding sequence position is 404",
    "query": "SELECT disease_mutation_site_annotation.description FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.cds_pos = 404"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_5_1",
    "user": "gpt-3",
    "question": "What is the alias for biomarker with symbol TUBB6?",
    "query": "SELECT biomarker_alias.alias FROM biomarker_alias JOIN biomarker ON biomarker_alias.biomarker_internal_id = biomarker.id WHERE biomarker.gene_symbol = 'TUBB6'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_5_2",
    "user": "gpt-3",
    "question": "What's the alias for biomarker with symbol TUBB6?",
    "query": "SELECT biomarker_alias.alias FROM biomarker_alias JOIN biomarker ON biomarker_alias.biomarker_internal_id = biomarker.id WHERE biomarker.gene_symbol = 'TUBB6'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_6_1",
    "user": "gpt-3",
    "question": "Show me the healthy expression call quality for the stage 5 month-old stage (mouse)",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression JOIN stage ON healthy_expression.uberon_developmental_id = stage.id WHERE stage.name = '5 month-old stage (mouse)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_6_2",
    "user": "gpt-3",
    "question": "Show the healthy expression call quality for the 5 month-old stage (mouse)",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression JOIN stage ON healthy_expression.uberon_developmental_id = stage.id WHERE stage.name = '5 month-old stage (mouse)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_7_1",
    "user": "gpt-3",
    "question": "List the FDA test submissions for biomarker PRC1",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda JOIN biomarker_fda_ncit_term ON biomarker_fda.id = biomarker_fda_ncit_term.biomarker_fda_id WHERE biomarker_fda_ncit_term.ncit_biomarker = 'PRC1'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_7_2",
    "user": "gpt-3",
    "question": "Show submissions for the test of biomarker PRC1",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda JOIN biomarker_fda_ncit_term ON biomarker_fda.id = biomarker_fda_ncit_term.biomarker_fda_id WHERE biomarker_fda_ncit_term.ncit_biomarker = 'PRC1'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_8_1",
    "user": "gpt-3",
    "question": "Show me the biomarker EDRN phase for the anatomical entity with identifier UBERON:0001844",
    "query": "SELECT biomarker_edrn.phase FROM biomarker_edrn JOIN anatomical_entity ON biomarker_edrn.uberon_anatomical_id = anatomical_entity.id WHERE anatomical_entity.id = 'UBERON:0001844'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_8_2",
    "user": "gpt-3",
    "question": "Show biomarker EDRN in phase for anatomical entity with identifier UBERON:0001844",
    "query": "SELECT biomarker_edrn.phase FROM biomarker_edrn JOIN anatomical_entity ON biomarker_edrn.uberon_anatomical_id = anatomical_entity.id WHERE anatomical_entity.id = 'UBERON:0001844'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_9_1",
    "user": "gpt-3",
    "question": "What are the aliases for the biomarker with description 'The FoundationFocusTM CDxBRCA is a next generation sequencing based in vitro diagnostic device for qualitative detection of BRCA1 and BRCA2 alterations in formalin- fixed paraffin-embedded (FFPE) ovarian tumor tissue. The FoundationFocus CDxBRCA assay detects sequence alterations in BRCA1 and BRCA2 (BRCA1/2) genes.'",
    "query": "SELECT biomarker_alias.alias FROM biomarker_alias JOIN biomarker ON biomarker_alias.biomarker_internal_id = biomarker.id WHERE biomarker.biomarker_description = 'The FoundationFocusTM CDxBRCA is a next generation sequencing based in vitro diagnostic device for qualitative detection of BRCA1 and BRCA2 alterations in formalin- fixed paraffin-embedded (FFPE) ovarian tumor tissue. The FoundationFocus CDxBRCA assay detects sequence alterations in BRCA1 and BRCA2 (BRCA1/2) genes.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "1_9_2",
    "user": "gpt-3",
    "question": "What are the alias of the biomarker with alias The FoundationFocusTM CDxBRCA is a next generation sequencing based in vitro diagnostic device for qualitative detection of BRCA1 and BRCA2 alterations in formalin- fixed paraffin-embedded (FFPE) ovarian tumor tissue. The FoundationFocus CDxBRCA assay detects sequence alterations in BRCA1 and BRCA2 (BRCA1/2) genes.",
    "query": "SELECT biomarker_alias.alias FROM biomarker_alias JOIN biomarker ON biomarker_alias.biomarker_internal_id = biomarker.id WHERE biomarker.biomarker_description = 'The FoundationFocusTM CDxBRCA is a next generation sequencing based in vitro diagnostic device for qualitative detection of BRCA1 and BRCA2 alterations in formalin- fixed paraffin-embedded (FFPE) ovarian tumor tissue. The FoundationFocus CDxBRCA assay detects sequence alterations in BRCA1 and BRCA2 (BRCA1/2) genes.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_0_1",
    "user": "gpt-3",
    "question": "Show the gene symbol and the number of gene ensembles for each gene symbol",
    "query": "SELECT xref_gene_ensembl.gene_symbol, count( *) FROM xref_gene_ensembl  GROUP BY xref_gene_ensembl.gene_symbol"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_0_2",
    "user": "gpt-3",
    "question": "Show the gene symbol and number of gene ensembles for each gene symbol",
    "query": "SELECT xref_gene_ensembl.gene_symbol, count( *) FROM xref_gene_ensembl  GROUP BY xref_gene_ensembl.gene_symbol"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_1_1",
    "user": "gpt-3",
    "question": "Show me all FDA NCIt terms for biomarkers",
    "query": "SELECT biomarker_fda_ncit_term.ncit_biomarker, count( *) FROM biomarker_fda_ncit_term  GROUP BY biomarker_fda_ncit_term.ncit_biomarker"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_1_2",
    "user": "gpt-3",
    "question": "What's the NCIt term for biomarkers on FDA?",
    "query": "SELECT biomarker_fda_ncit_term.ncit_biomarker, count( *) FROM biomarker_fda_ncit_term  GROUP BY biomarker_fda_ncit_term.ncit_biomarker"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_10_1",
    "user": "gpt-3",
    "question": "Show me the description and the number of disease mutation site annotations",
    "query": "SELECT disease_mutation_site_annotation.description, count( *) FROM disease_mutation_site_annotation  GROUP BY disease_mutation_site_annotation.description"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_10_2",
    "user": "gpt-3",
    "question": "Show me the description and how many disease mutation site annotations there are",
    "query": "SELECT disease_mutation_site_annotation.description, count( *) FROM disease_mutation_site_annotation  GROUP BY disease_mutation_site_annotation.description"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_11_1",
    "user": "gpt-3",
    "question": "Show clinical significance of FDA tests and the number of them",
    "query": "SELECT biomarker_fda_test.clinical_significance, count( *) FROM biomarker_fda_test  GROUP BY biomarker_fda_test.clinical_significance"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_11_2",
    "user": "gpt-3",
    "question": "Show the clinical significance of FDA tests and the number of tests with each significance",
    "query": "SELECT biomarker_fda_test.clinical_significance, count( *) FROM biomarker_fda_test  GROUP BY biomarker_fda_test.clinical_significance"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_12_1",
    "user": "gpt-3",
    "question": "Show the expression rank score and the number of expressions for each expression rank score",
    "query": "SELECT healthy_expression.expression_rank_score, count( *) FROM healthy_expression  GROUP BY healthy_expression.expression_rank_score"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_12_2",
    "user": "gpt-3",
    "question": "Get the expression rank score and the number of expressions for each expression rank score",
    "query": "SELECT healthy_expression.expression_rank_score, count( *) FROM healthy_expression  GROUP BY healthy_expression.expression_rank_score"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_13_1",
    "user": "gpt-3",
    "question": "Show me the pmid and the number of disease mutation articles",
    "query": "SELECT disease_mutation_article.pmid, count( *) FROM disease_mutation_article  GROUP BY disease_mutation_article.pmid"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_13_2",
    "user": "gpt-3",
    "question": "Show me the PMID and number of disease mutation articles",
    "query": "SELECT disease_mutation_article.pmid, count( *) FROM disease_mutation_article  GROUP BY disease_mutation_article.pmid"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_14_1",
    "user": "gpt-3",
    "question": "Show the number of subjects for differential expression with subject down",
    "query": "SELECT differential_expression.subjects_down, count( *) FROM differential_expression  GROUP BY differential_expression.subjects_down"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_14_2",
    "user": "gpt-3",
    "question": "Show the number of different subjects in differential expression",
    "query": "SELECT differential_expression.subjects_down, count( *) FROM differential_expression  GROUP BY differential_expression.subjects_down"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_15_1",
    "user": "gpt-3",
    "question": "Show me the probability of disease mutation impact predictions",
    "query": "SELECT disease_mutation_impact_prediction.probability, count( *) FROM disease_mutation_impact_prediction  GROUP BY disease_mutation_impact_prediction.probability"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_15_2",
    "user": "gpt-3",
    "question": "Show the probability and number of disease mutation impact predictions",
    "query": "SELECT disease_mutation_impact_prediction.probability, count( *) FROM disease_mutation_impact_prediction  GROUP BY disease_mutation_impact_prediction.probability"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_16_1",
    "user": "gpt-3",
    "question": "Show me the name and number of anatomical entities",
    "query": "SELECT anatomical_entity.name, count( *) FROM anatomical_entity  GROUP BY anatomical_entity.name"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_16_2",
    "user": "gpt-3",
    "question": "Show me the name of all anatomical entities and the number of them",
    "query": "SELECT anatomical_entity.name, count( *) FROM anatomical_entity  GROUP BY anatomical_entity.name"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_17_1",
    "user": "gpt-3",
    "question": "Show me the id and number of test trials for FDA tests",
    "query": "SELECT biomarker_fda_test_trial.test_trial_id, count( *) FROM biomarker_fda_test_trial  GROUP BY biomarker_fda_test_trial.test_trial_id"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_17_2",
    "user": "gpt-3",
    "question": "Show me the id of fda test trials and the number of test trials",
    "query": "SELECT biomarker_fda_test_trial.test_trial_id, count( *) FROM biomarker_fda_test_trial  GROUP BY biomarker_fda_test_trial.test_trial_id"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_18_1",
    "user": "gpt-3",
    "question": "Show me the number of tests which are a panel",
    "query": "SELECT biomarker.test_is_a_panel, count( *) FROM biomarker  GROUP BY biomarker.test_is_a_panel"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_18_2",
    "user": "gpt-3",
    "question": "Show me all test is a panels information and number of tests per panel",
    "query": "SELECT biomarker.test_is_a_panel, count( *) FROM biomarker  GROUP BY biomarker.test_is_a_panel"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_19_1",
    "user": "gpt-3",
    "question": "Show me the alias and the number of biomarker alias'",
    "query": "SELECT biomarker_alias.alias, count( *) FROM biomarker_alias  GROUP BY biomarker_alias.alias"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_19_2",
    "user": "gpt-3",
    "question": "Show me the alias and the count of biomarker alias",
    "query": "SELECT biomarker_alias.alias, count( *) FROM biomarker_alias  GROUP BY biomarker_alias.alias"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_2_1",
    "user": "gpt-3",
    "question": "Show me all tools for disease mutation impact predictions and how many there are",
    "query": "SELECT disease_mutation_impact_prediction.tool, count( *) FROM disease_mutation_impact_prediction  GROUP BY disease_mutation_impact_prediction.tool"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_2_2",
    "user": "gpt-3",
    "question": "Show me all tools for disease mutation impact predictions, and how many there are in each tool",
    "query": "SELECT disease_mutation_impact_prediction.tool, count( *) FROM disease_mutation_impact_prediction  GROUP BY disease_mutation_impact_prediction.tool"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_20_1",
    "user": "gpt-3",
    "question": "Show number of FDA drugs with a biomarker",
    "query": "SELECT biomarker_fda_drug.biomarker_drug, count( *) FROM biomarker_fda_drug  GROUP BY biomarker_fda_drug.biomarker_drug"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_20_2",
    "user": "gpt-3",
    "question": "Show number of FDA drug biomarkers",
    "query": "SELECT biomarker_fda_drug.biomarker_drug, count( *) FROM biomarker_fda_drug  GROUP BY biomarker_fda_drug.biomarker_drug"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_21_1",
    "user": "gpt-3",
    "question": "What are the different test study designs for FDA tests?",
    "query": "SELECT biomarker_fda_test.test_study_design, count( *) FROM biomarker_fda_test  GROUP BY biomarker_fda_test.test_study_design"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_21_2",
    "user": "gpt-3",
    "question": "Show me all FDA test study designs and the number of them",
    "query": "SELECT biomarker_fda_test.test_study_design, count( *) FROM biomarker_fda_test  GROUP BY biomarker_fda_test.test_study_design"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_22_1",
    "user": "gpt-3",
    "question": "Show the healthy expression call quality and the number of expressions with that quality",
    "query": "SELECT healthy_expression.call_quality, count( *) FROM healthy_expression  GROUP BY healthy_expression.call_quality"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_22_2",
    "user": "gpt-3",
    "question": "Show me the healthy expression call quality and the number of occurrences",
    "query": "SELECT healthy_expression.call_quality, count( *) FROM healthy_expression  GROUP BY healthy_expression.call_quality"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_23_1",
    "user": "gpt-3",
    "question": "Show me the evidence of adoption for FDA tests",
    "query": "SELECT biomarker_fda_test.test_adoption_evidence, count( *) FROM biomarker_fda_test  GROUP BY biomarker_fda_test.test_adoption_evidence"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_23_2",
    "user": "gpt-3",
    "question": "Show the evidence for adoption of FDA tests",
    "query": "SELECT biomarker_fda_test.test_adoption_evidence, count( *) FROM biomarker_fda_test  GROUP BY biomarker_fda_test.test_adoption_evidence"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_24_1",
    "user": "gpt-3",
    "question": "Give the test trade name and the number of tests with that name",
    "query": "SELECT biomarker_fda.test_trade_name, count( *) FROM biomarker_fda  GROUP BY biomarker_fda.test_trade_name"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_24_2",
    "user": "gpt-3",
    "question": "Get the test trade name and the number of tests for it",
    "query": "SELECT biomarker_fda.test_trade_name, count( *) FROM biomarker_fda  GROUP BY biomarker_fda.test_trade_name"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_25_1",
    "user": "gpt-3",
    "question": "Show me all approved indications for FDA tests",
    "query": "SELECT biomarker_fda_test_use.approved_indication, count( *) FROM biomarker_fda_test_use  GROUP BY biomarker_fda_test_use.approved_indication"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_25_2",
    "user": "gpt-3",
    "question": "Give me the approved indication for all FDA test uses",
    "query": "SELECT biomarker_fda_test_use.approved_indication, count( *) FROM biomarker_fda_test_use  GROUP BY biomarker_fda_test_use.approved_indication"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_26_1",
    "user": "gpt-3",
    "question": "Show the mutation frequency and how many mutations there are for diseases",
    "query": "SELECT disease_mutation.mutation_freq, count( *) FROM disease_mutation  GROUP BY disease_mutation.mutation_freq"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_26_2",
    "user": "gpt-3",
    "question": "Show me all disease mutations with an mutation frequency and how many there are",
    "query": "SELECT disease_mutation.mutation_freq, count( *) FROM disease_mutation  GROUP BY disease_mutation.mutation_freq"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_27_1",
    "user": "gpt-3",
    "question": "Show me the FDA test histological type and the number of tests with this histological type",
    "query": "SELECT biomarker_fda_test.histological_type, count( *) FROM biomarker_fda_test  GROUP BY biomarker_fda_test.histological_type"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_27_2",
    "user": "gpt-3",
    "question": "Show FDA test with histological type and number of tests",
    "query": "SELECT biomarker_fda_test.histological_type, count( *) FROM biomarker_fda_test  GROUP BY biomarker_fda_test.histological_type"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_28_1",
    "user": "gpt-3",
    "question": "Show the amino acids position and the number of uniprot-kb for all disease mutations",
    "query": "SELECT disease_mutation.aa_pos_uniprotkb, count( *) FROM disease_mutation  GROUP BY disease_mutation.aa_pos_uniprotkb"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_28_2",
    "user": "gpt-3",
    "question": "Show disease mutation amino acids position uniprot kb and number of mutations",
    "query": "SELECT disease_mutation.aa_pos_uniprotkb, count( *) FROM disease_mutation  GROUP BY disease_mutation.aa_pos_uniprotkb"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_29_1",
    "user": "gpt-3",
    "question": "Show the trade name for FDA tests used",
    "query": "SELECT biomarker_fda_test_use.test_trade_name, count( *) FROM biomarker_fda_test_use  GROUP BY biomarker_fda_test_use.test_trade_name"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_29_2",
    "user": "gpt-3",
    "question": "Show me the trade name of FDA test uses",
    "query": "SELECT biomarker_fda_test_use.test_trade_name, count( *) FROM biomarker_fda_test_use  GROUP BY biomarker_fda_test_use.test_trade_name"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_3_1",
    "user": "gpt-3",
    "question": "Show name of diseases and how many there are?",
    "query": "SELECT disease.name, count( *) FROM disease  GROUP BY disease.name"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_3_2",
    "user": "gpt-3",
    "question": "Show name and number of diseases",
    "query": "SELECT disease.name, count( *) FROM disease  GROUP BY disease.name"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_30_1",
    "user": "gpt-3",
    "question": "Show the pvalue and number of differential expression",
    "query": "SELECT differential_expression.pvalue, count( *) FROM differential_expression  GROUP BY differential_expression.pvalue"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_30_2",
    "user": "gpt-3",
    "question": "Show the pvalue and number of differential expressions for each pvalue",
    "query": "SELECT differential_expression.pvalue, count( *) FROM differential_expression  GROUP BY differential_expression.pvalue"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_31_1",
    "user": "gpt-3",
    "question": "Show me the pmid and number of biomarker articles",
    "query": "SELECT biomarker_article.pmid, count( *) FROM biomarker_article  GROUP BY biomarker_article.pmid"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_31_2",
    "user": "gpt-3",
    "question": "Show me the PMID and number of biomarker articles for each biomarker",
    "query": "SELECT biomarker_article.pmid, count( *) FROM biomarker_article  GROUP BY biomarker_article.pmid"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_32_1",
    "user": "gpt-3",
    "question": "What are the stage names and how many are there?",
    "query": "SELECT stage.name, count( *) FROM stage  GROUP BY stage.name"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_32_2",
    "user": "gpt-3",
    "question": "What are the names of all stages and how many are there?",
    "query": "SELECT stage.name, count( *) FROM stage  GROUP BY stage.name"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_33_1",
    "user": "gpt-3",
    "question": "What is the genus of all species and how many have species?",
    "query": "SELECT species.genus, count( *) FROM species  GROUP BY species.genus"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_33_2",
    "user": "gpt-3",
    "question": "What is the genus of all species and how many species have a genus?",
    "query": "SELECT species.genus, count( *) FROM species  GROUP BY species.genus"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_34_1",
    "user": "gpt-3",
    "question": "Show the FDA test id and the number of tests for each biomarker DOID",
    "query": "SELECT biomarker_fda_test.doid, count( *) FROM biomarker_fda_test  GROUP BY biomarker_fda_test.doid"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_34_2",
    "user": "gpt-3",
    "question": "Show me the doid and number of FDA tests for each biomarker",
    "query": "SELECT biomarker_fda_test.doid, count( *) FROM biomarker_fda_test  GROUP BY biomarker_fda_test.doid"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_35_1",
    "user": "gpt-3",
    "question": "Show me the description of all anatomical entities and the number of them.",
    "query": "SELECT anatomical_entity.description, count( *) FROM anatomical_entity  GROUP BY anatomical_entity.description"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_35_2",
    "user": "gpt-3",
    "question": "Show me the description and the number of anatomical entities with that description",
    "query": "SELECT anatomical_entity.description, count( *) FROM anatomical_entity  GROUP BY anatomical_entity.description"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_36_1",
    "user": "gpt-3",
    "question": "Show the biomarker id and the number of biomarkers with each id",
    "query": "SELECT biomarker.biomarker_id, count( *) FROM biomarker  GROUP BY biomarker.biomarker_id"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_36_2",
    "user": "gpt-3",
    "question": "Show biomarker identifier and number of biomarkers for each one",
    "query": "SELECT biomarker.biomarker_id, count( *) FROM biomarker  GROUP BY biomarker.biomarker_id"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_37_1",
    "user": "gpt-3",
    "question": "Show the expression score and the number of expressions for healthy expressions.",
    "query": "SELECT healthy_expression.expression_score, count( *) FROM healthy_expression  GROUP BY healthy_expression.expression_score"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_37_2",
    "user": "gpt-3",
    "question": "Show me the expression score and the number of expressions with that score",
    "query": "SELECT healthy_expression.expression_score, count( *) FROM healthy_expression  GROUP BY healthy_expression.expression_score"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_38_1",
    "user": "gpt-3",
    "question": "Show the reference amino acid residue and number of disease mutations for it",
    "query": "SELECT disease_mutation.ref_aa, count( *) FROM disease_mutation  GROUP BY disease_mutation.ref_aa"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_38_2",
    "user": "gpt-3",
    "question": "Show the reference amino acid residue and the number of disease mutations in each amino acid residue",
    "query": "SELECT disease_mutation.ref_aa, count( *) FROM disease_mutation  GROUP BY disease_mutation.ref_aa"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_39_1",
    "user": "gpt-3",
    "question": "Get the gene symbol and the number of expressions for each gene symbol",
    "query": "SELECT differential_expression.gene_symbol, count( *) FROM differential_expression  GROUP BY differential_expression.gene_symbol"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_39_2",
    "user": "gpt-3",
    "question": "Get the symbol and number of genes expressed",
    "query": "SELECT differential_expression.gene_symbol, count( *) FROM differential_expression  GROUP BY differential_expression.gene_symbol"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_4_1",
    "user": "gpt-3",
    "question": "Show me the gene symbol and number of biomarkers with that gene symbol",
    "query": "SELECT biomarker.gene_symbol, count( *) FROM biomarker  GROUP BY biomarker.gene_symbol"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_4_2",
    "user": "gpt-3",
    "question": "Show the gene symbol and number of biomarkers with that gene symbol",
    "query": "SELECT biomarker.gene_symbol, count( *) FROM biomarker  GROUP BY biomarker.gene_symbol"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_40_1",
    "user": "gpt-3",
    "question": "Show me the state of biomarker QA on edrn and how many biomarkers are in that state",
    "query": "SELECT biomarker_edrn.qa_state, count( *) FROM biomarker_edrn  GROUP BY biomarker_edrn.qa_state"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_40_2",
    "user": "gpt-3",
    "question": "Get the QA state and number of biomarkers for the EDRN platform",
    "query": "SELECT biomarker_edrn.qa_state, count( *) FROM biomarker_edrn  GROUP BY biomarker_edrn.qa_state"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_5_1",
    "user": "gpt-3",
    "question": "Show me the platform method for FDA tests",
    "query": "SELECT biomarker_fda_test.platform_method, count( *) FROM biomarker_fda_test  GROUP BY biomarker_fda_test.platform_method"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_5_2",
    "user": "gpt-3",
    "question": "Show the FDA test platform method and the number of tests for it",
    "query": "SELECT biomarker_fda_test.platform_method, count( *) FROM biomarker_fda_test  GROUP BY biomarker_fda_test.platform_method"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_6_1",
    "user": "gpt-3",
    "question": "Show me the key and the number of features in disease mutation site annotations",
    "query": "SELECT disease_mutation_site_annotation.feature_key, count( *) FROM disease_mutation_site_annotation  GROUP BY disease_mutation_site_annotation.feature_key"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_6_2",
    "user": "gpt-3",
    "question": "Show me the key and the number of distinct features of disease mutation site annotations",
    "query": "SELECT disease_mutation_site_annotation.feature_key, count( *) FROM disease_mutation_site_annotation  GROUP BY disease_mutation_site_annotation.feature_key"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_7_1",
    "user": "gpt-3",
    "question": "Show me the phase and the number of biomarkers on the EDRN platform",
    "query": "SELECT biomarker_edrn.phase, count( *) FROM biomarker_edrn  GROUP BY biomarker_edrn.phase"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_7_2",
    "user": "gpt-3",
    "question": "Show me the phase of biomarkers on the EDRN platform and how many there are",
    "query": "SELECT biomarker_edrn.phase, count( *) FROM biomarker_edrn  GROUP BY biomarker_edrn.phase"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_8_1",
    "user": "gpt-3",
    "question": "Show the number of subjects with no change in differential expression",
    "query": "SELECT differential_expression.subjects_nochange, count( *) FROM differential_expression  GROUP BY differential_expression.subjects_nochange"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_8_2",
    "user": "gpt-3",
    "question": "Show the number of subjects with no change expression in differential expression",
    "query": "SELECT differential_expression.subjects_nochange, count( *) FROM differential_expression  GROUP BY differential_expression.subjects_nochange"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_9_1",
    "user": "gpt-3",
    "question": "Show disease mutation chromosome positions, number of mutations per position",
    "query": "SELECT disease_mutation.chromosome_pos, count( *) FROM disease_mutation  GROUP BY disease_mutation.chromosome_pos"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "2_9_2",
    "user": "gpt-3",
    "question": "Show disease mutation chromosome positions and the count of mutations having these positions",
    "query": "SELECT disease_mutation.chromosome_pos, count( *) FROM disease_mutation  GROUP BY disease_mutation.chromosome_pos"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_0_1",
    "user": "gpt-3",
    "question": "How many disease mutations are there?",
    "query": "SELECT count( *) FROM disease_mutation_article"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_0_2",
    "user": "gpt-3",
    "question": "How many disease mutations articles are there?",
    "query": "SELECT count( *) FROM disease_mutation_article"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_1_1",
    "user": "gpt-3",
    "question": "How many FDA test trials are there?",
    "query": "SELECT count( *) FROM biomarker_fda_test_trial"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_1_2",
    "user": "gpt-3",
    "question": "How many test trials are there?",
    "query": "SELECT count( *) FROM biomarker_fda_test_trial"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_10_1",
    "user": "gpt-3",
    "question": "How many biomarker articles are there?",
    "query": "SELECT count( *) FROM biomarker_article"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_11_1",
    "user": "gpt-3",
    "question": "How many FDA tests are there?",
    "query": "SELECT count( *) FROM biomarker_fda_test"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_11_2",
    "user": "gpt-3",
    "question": "How many FDA test are there?",
    "query": "SELECT count( *) FROM biomarker_fda_test"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_12_1",
    "user": "gpt-3",
    "question": "How many gene ensembles are there?",
    "query": "SELECT count( *) FROM xref_gene_ensembl"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_12_2",
    "user": "gpt-3",
    "question": "How many gene ensembles are there",
    "query": "SELECT count( *) FROM xref_gene_ensembl"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_13_1",
    "user": "gpt-3",
    "question": "How many FDA biomarkers are there?",
    "query": "SELECT count( *) FROM biomarker_fda"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_13_2",
    "user": "gpt-3",
    "question": "How many biomarkers are there?",
    "query": "SELECT count( *) FROM biomarker_fda"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_14_1",
    "user": "gpt-3",
    "question": "How many anatomical entities are there?",
    "query": "SELECT count( *) FROM anatomical_entity"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_14_2",
    "user": "gpt-3",
    "question": "How many anatomical entities are there",
    "query": "SELECT count( *) FROM anatomical_entity"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_15_1",
    "user": "gpt-3",
    "question": "How many stages are there?",
    "query": "SELECT count( *) FROM stage"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_15_2",
    "user": "gpt-3",
    "question": "How many stages are there",
    "query": "SELECT count( *) FROM stage"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_16_1",
    "user": "gpt-3",
    "question": "How many disease mutation site annotations are there?",
    "query": "SELECT count( *) FROM disease_mutation_site_annotation"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_17_1",
    "user": "gpt-3",
    "question": "How many disease mutation impact predictions are there?",
    "query": "SELECT count( *) FROM disease_mutation_impact_prediction"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_17_2",
    "user": "gpt-3",
    "question": "How many mutation impact predictions are there?",
    "query": "SELECT count( *) FROM disease_mutation_impact_prediction"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_18_1",
    "user": "gpt-3",
    "question": "How many species are there?",
    "query": "SELECT count( *) FROM species"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_18_2",
    "user": "gpt-3",
    "question": "How many species are there",
    "query": "SELECT count( *) FROM species"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_19_1",
    "user": "gpt-3",
    "question": "How many expressions are there",
    "query": "SELECT count( *) FROM differential_expression"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_19_2",
    "user": "gpt-3",
    "question": "How many expressions are there?",
    "query": "SELECT count( *) FROM differential_expression"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_2_1",
    "user": "gpt-3",
    "question": "How many biomarker alias are there",
    "query": "SELECT count( *) FROM biomarker_alias"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_2_2",
    "user": "gpt-3",
    "question": "How many biomarker alias do exist",
    "query": "SELECT count( *) FROM biomarker_alias"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_3_1",
    "user": "gpt-3",
    "question": "How many diseases are there",
    "query": "SELECT count( *) FROM disease"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_3_2",
    "user": "gpt-3",
    "question": "How many diseases are there?",
    "query": "SELECT count( *) FROM disease"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_4_1",
    "user": "gpt-3",
    "question": "How many biomarkers are there",
    "query": "SELECT count( *) FROM biomarker"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_4_2",
    "user": "gpt-3",
    "question": "How many biomarkers are there?",
    "query": "SELECT count( *) FROM biomarker"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_5_1",
    "user": "gpt-3",
    "question": "How many FDA drugs are there?",
    "query": "SELECT count( *) FROM biomarker_fda_drug"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_5_2",
    "user": "gpt-3",
    "question": "How many FDA drug biomarkers are there?",
    "query": "SELECT count( *) FROM biomarker_fda_drug"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_6_1",
    "user": "gpt-3",
    "question": "How many FDA NCIt terms are there?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_6_2",
    "user": "gpt-3",
    "question": "How many biomarker FDA NCIt terms are there?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_7_1",
    "user": "gpt-3",
    "question": "How many disease mutations are there?",
    "query": "SELECT count( *) FROM disease_mutation"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_7_2",
    "user": "gpt-3",
    "question": "How many disease mutations are there",
    "query": "SELECT count( *) FROM disease_mutation"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_8_1",
    "user": "gpt-3",
    "question": "How many FDA test uses are there?",
    "query": "SELECT count( *) FROM biomarker_fda_test_use"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_8_2",
    "user": "gpt-3",
    "question": "In how many FDA test uses were count(*) genes involved?",
    "query": "SELECT count( *) FROM biomarker_fda_test_use"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_9_1",
    "user": "gpt-3",
    "question": "How many biomarkers are there on the EDRN platform?",
    "query": "SELECT count( *) FROM biomarker_edrn"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "3_9_2",
    "user": "gpt-3",
    "question": "How many biomarkers are on the EDRN platform?",
    "query": "SELECT count( *) FROM biomarker_edrn"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_0_1",
    "user": "gpt-3",
    "question": "In how many FDA tests was platform method D used?",
    "query": "SELECT count( *) FROM biomarker_fda_test WHERE biomarker_fda_test.platform_method = 'D'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_0_2",
    "user": "gpt-3",
    "question": "How many FDA tests were run using platform method D?",
    "query": "SELECT count( *) FROM biomarker_fda_test WHERE biomarker_fda_test.platform_method = 'D'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_1_1",
    "user": "gpt-3",
    "question": "How many biomarker articles have pmid 21170350?",
    "query": "SELECT count( *) FROM biomarker_article WHERE biomarker_article.pmid = '21170350'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_1_2",
    "user": "gpt-3",
    "question": "How many biomarker articles have pmid '21170350'?",
    "query": "SELECT count( *) FROM biomarker_article WHERE biomarker_article.pmid = '21170350'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_10_1",
    "user": "gpt-3",
    "question": "How many biomarkers are in QA state 'Under Review' on the EDRN platform?",
    "query": "SELECT count( *) FROM biomarker_edrn WHERE biomarker_edrn.qa_state = 'Under Review'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_10_2",
    "user": "gpt-3",
    "question": "How many biomarkers are currently in QA state 'Under Review' on the EDRN platform?",
    "query": "SELECT count( *) FROM biomarker_edrn WHERE biomarker_edrn.qa_state = 'Under Review'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_11_1",
    "user": "gpt-3",
    "question": "How many disease mutations have data source 'icgc'?",
    "query": "SELECT count( *) FROM disease_mutation WHERE disease_mutation.data_source = 'icgc'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_11_2",
    "user": "gpt-3",
    "question": "How many disease mutations are there with icgc as data source?",
    "query": "SELECT count( *) FROM disease_mutation WHERE disease_mutation.data_source = 'icgc'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_12_1",
    "user": "gpt-3",
    "question": "How many diseases have the name 'hematologic cancer'?",
    "query": "SELECT count( *) FROM disease WHERE disease.name = 'hematologic cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_12_2",
    "user": "gpt-3",
    "question": "In how many diseases is the name 'hematologic cancer'?",
    "query": "SELECT count( *) FROM disease WHERE disease.name = 'hematologic cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_13_1",
    "user": "gpt-3",
    "question": "How many biomarkers have symbol SC5D?",
    "query": "SELECT count( *) FROM biomarker WHERE biomarker.gene_symbol = 'SC5D'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_13_2",
    "user": "gpt-3",
    "question": "How many biomarkers are there with gene symbol SC5D?",
    "query": "SELECT count( *) FROM biomarker WHERE biomarker.gene_symbol = 'SC5D'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_14_1",
    "user": "gpt-3",
    "question": "How many biomarker articles have pmid 21459804?",
    "query": "SELECT count( *) FROM biomarker_article WHERE biomarker_article.pmid = '21459804'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_14_2",
    "user": "gpt-3",
    "question": "How many biomarker articles have PMID 21459804?",
    "query": "SELECT count( *) FROM biomarker_article WHERE biomarker_article.pmid = '21459804'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_15_1",
    "user": "gpt-3",
    "question": "In how many FDA test uses was the trade name 'HER2 CISH pharmDxTM Kit' involved?",
    "query": "SELECT count( *) FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_trade_name = 'HER2\u00a0CISH pharmDxTM Kit'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_15_2",
    "user": "gpt-3",
    "question": "How many FDA tests with trade name 'HER2 CISH pharmDxTM Kit' are there?",
    "query": "SELECT count( *) FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_trade_name = 'HER2\u00a0CISH pharmDxTM Kit'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_16_1",
    "user": "gpt-3",
    "question": "How many disease mutation articles have pmid 9500446?",
    "query": "SELECT count( *) FROM disease_mutation_article WHERE disease_mutation_article.pmid = 9500446"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_16_2",
    "user": "gpt-3",
    "question": "How many disease mutation articles have a PMID of 9500446?",
    "query": "SELECT count( *) FROM disease_mutation_article WHERE disease_mutation_article.pmid = 9500446"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_17_1",
    "user": "gpt-3",
    "question": "In how many disease mutation site annotations is the description 'Phosphoserine'?",
    "query": "SELECT count( *) FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.description = 'Phosphoserine'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_17_2",
    "user": "gpt-3",
    "question": "How many disease mutation site annotations have description 'Phosphoserine'?",
    "query": "SELECT count( *) FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.description = 'Phosphoserine'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_18_1",
    "user": "gpt-3",
    "question": "How many FDA tests have a clinical significance of 70-gene-panel gene signature predicts likelihood of distant metastases and prognosis in profiles designated as high risk or low risk?",
    "query": "SELECT count( *) FROM biomarker_fda_test WHERE biomarker_fda_test.clinical_significance = '70-gene-panel gene signature predicts likelihood of distant metastases and prognosis in profiles designated as high risk or low risk'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_18_2",
    "user": "gpt-3",
    "question": "How many FDA test have a '70-gene-panel gene signature predicts likelihood of distant metastases and prognosis in profiles designated as high risk or low risk' clinical significance?",
    "query": "SELECT count( *) FROM biomarker_fda_test WHERE biomarker_fda_test.clinical_significance = '70-gene-panel gene signature predicts likelihood of distant metastases and prognosis in profiles designated as high risk or low risk'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_19_1",
    "user": "gpt-3",
    "question": "How many disease mutation site annotations have description 'Zinc; catalytic'?",
    "query": "SELECT count( *) FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.description = 'Zinc; catalytic'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_19_2",
    "user": "gpt-3",
    "question": "How many disease mutation site annotations have the description 'Zinc; catalytic'?",
    "query": "SELECT count( *) FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.description = 'Zinc; catalytic'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_2_1",
    "user": "gpt-3",
    "question": "How many biomarker aliases are there for 'arginine/serine-rich 18'?",
    "query": "SELECT count( *) FROM biomarker_alias WHERE biomarker_alias.alias = 'arginine/serine-rich 18'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_2_2",
    "user": "gpt-3",
    "question": "How many biomarker alias are there for 'arginine/serine-rich 18'?",
    "query": "SELECT count( *) FROM biomarker_alias WHERE biomarker_alias.alias = 'arginine/serine-rich 18'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_20_1",
    "user": "gpt-3",
    "question": "How many biomarker alias are there for 'AHUS5'?",
    "query": "SELECT count( *) FROM biomarker_alias WHERE biomarker_alias.alias = 'AHUS5'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_20_2",
    "user": "gpt-3",
    "question": "How many biomarker alias are there for AHUS5?",
    "query": "SELECT count( *) FROM biomarker_alias WHERE biomarker_alias.alias = 'AHUS5'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_21_1",
    "user": "gpt-3",
    "question": "How many gene ensembles have symbol BRD9?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'BRD9'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_21_2",
    "user": "gpt-3",
    "question": "How many gene ensembles have the gene symbol BRD9?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'BRD9'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_22_1",
    "user": "gpt-3",
    "question": "In how many FDA tests was manufacturer Agendia BV involved?",
    "query": "SELECT count( *) FROM biomarker_fda_test WHERE biomarker_fda_test.test_manufacturer = 'Agendia BV'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_22_2",
    "user": "gpt-3",
    "question": "How many FDA tests did manufacturer Agendia BV?",
    "query": "SELECT count( *) FROM biomarker_fda_test WHERE biomarker_fda_test.test_manufacturer = 'Agendia BV'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_23_1",
    "user": "gpt-3",
    "question": "How many disease mutations have a reference amino acid residue equal to E?",
    "query": "SELECT count( *) FROM disease_mutation WHERE disease_mutation.ref_aa = 'E'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_23_2",
    "user": "gpt-3",
    "question": "How many disease mutations have a reference amino acid residue of E?",
    "query": "SELECT count( *) FROM disease_mutation WHERE disease_mutation.ref_aa = 'E'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_24_1",
    "user": "gpt-3",
    "question": "How many gene ensembles have symbol TNIP3?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'TNIP3'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_24_2",
    "user": "gpt-3",
    "question": "How many gene ensembles have symbol 'TNIP3'?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'TNIP3'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_25_1",
    "user": "gpt-3",
    "question": "How many stages are there for 4 month-old stage (mouse)?",
    "query": "SELECT count( *) FROM stage WHERE stage.name = '4 month-old stage (mouse)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_25_2",
    "user": "gpt-3",
    "question": "How many stages are there for 4 month old stage (mouse)?",
    "query": "SELECT count( *) FROM stage WHERE stage.name = '4 month-old stage (mouse)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_26_1",
    "user": "gpt-3",
    "question": "How many biomarkers are there on the EDRN platform with biomarker type Protein?",
    "query": "SELECT count( *) FROM biomarker_edrn WHERE biomarker_edrn.biomarker_type = 'Protein'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_26_2",
    "user": "gpt-3",
    "question": "How many biomarkers are there on the EDRN platform with biomarker type protein?",
    "query": "SELECT count( *) FROM biomarker_edrn WHERE biomarker_edrn.biomarker_type = 'Protein'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_27_1",
    "user": "gpt-3",
    "question": "How many healthy expressions have an expression level anatomical relative of HIGH?",
    "query": "SELECT count( *) FROM healthy_expression WHERE healthy_expression.expression_level_anatomical_relative = 'HIGH'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_27_2",
    "user": "gpt-3",
    "question": "How many healthy expressions have an anatomical relative expression level of HIGH?",
    "query": "SELECT count( *) FROM healthy_expression WHERE healthy_expression.expression_level_anatomical_relative = 'HIGH'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_28_1",
    "user": "gpt-3",
    "question": "How many FDA test trials have test trial id NCT00433589?",
    "query": "SELECT count( *) FROM biomarker_fda_test_trial WHERE biomarker_fda_test_trial.test_trial_id = 'NCT00433589'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_28_2",
    "user": "gpt-3",
    "question": "In how many FDA test trials was test trial id NCT00433589?",
    "query": "SELECT count( *) FROM biomarker_fda_test_trial WHERE biomarker_fda_test_trial.test_trial_id = 'NCT00433589'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_29_1",
    "user": "gpt-3",
    "question": "How many expression have an adjusted p-value of 2.7e-10?",
    "query": "SELECT count( *) FROM differential_expression WHERE differential_expression.adjpvalue = 2.7e-10"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_29_2",
    "user": "gpt-3",
    "question": "How many expression are there with an adjusted p-value of 2.7e-10?",
    "query": "SELECT count( *) FROM differential_expression WHERE differential_expression.adjpvalue = 2.7e-10"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_3_1",
    "user": "gpt-3",
    "question": "How many FDA submissions had the trade name 'MammaPrint'?",
    "query": "SELECT count( *) FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_3_2",
    "user": "gpt-3",
    "question": "In how many FDA submissions was the trade name 'MammaPrint' used?",
    "query": "SELECT count( *) FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_30_1",
    "user": "gpt-3",
    "question": "How many disease mutation articles have pmid 9331080?",
    "query": "SELECT count( *) FROM disease_mutation_article WHERE disease_mutation_article.pmid = 9331080"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_30_2",
    "user": "gpt-3",
    "question": "How many disease mutation articles has pmid 9331080?",
    "query": "SELECT count( *) FROM disease_mutation_article WHERE disease_mutation_article.pmid = 9331080"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_31_1",
    "user": "gpt-3",
    "question": "How many FDA test uses have an approved indication of companion diagnosis?",
    "query": "SELECT count( *) FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.approved_indication = 'companion diagnosis'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_31_2",
    "user": "gpt-3",
    "question": "How many FDA test uses have an approved indication 'companion diagnosis'?",
    "query": "SELECT count( *) FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.approved_indication = 'companion diagnosis'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_32_1",
    "user": "gpt-3",
    "question": "How many diseases have the name 'breast cancer'?",
    "query": "SELECT count( *) FROM disease WHERE disease.name = 'breast cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_32_2",
    "user": "gpt-3",
    "question": "How many diseases are there with name 'breast cancer'?",
    "query": "SELECT count( *) FROM disease WHERE disease.name = 'breast cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_33_1",
    "user": "gpt-3",
    "question": "How many anatomical entities have the name middle temporal gyrus?",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.name = 'middle temporal gyrus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_33_2",
    "user": "gpt-3",
    "question": "How many anatomical entities have name middle temporal gyrus?",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.name = 'middle temporal gyrus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_34_1",
    "user": "gpt-3",
    "question": "How many biomarker aliases have the alias 'Androgen receptor coactivator 55 kDa protein'?",
    "query": "SELECT count( *) FROM biomarker_alias WHERE biomarker_alias.alias = 'Androgen receptor coactivator 55 kDa protein'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_34_2",
    "user": "gpt-3",
    "question": "How many biomarker alias are there for 'Androgen receptor coactivator 55 kDa protein'?",
    "query": "SELECT count( *) FROM biomarker_alias WHERE biomarker_alias.alias = 'Androgen receptor coactivator 55 kDa protein'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_35_1",
    "user": "gpt-3",
    "question": "How many FDA drugs have biomarker drug '178103510 (SID)'?",
    "query": "SELECT count( *) FROM biomarker_fda_drug WHERE biomarker_fda_drug.biomarker_drug = '178103510 (SID)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_35_2",
    "user": "gpt-3",
    "question": "How many FDA drug with biomarker drug '178103510 (SID)' are there?",
    "query": "SELECT count( *) FROM biomarker_fda_drug WHERE biomarker_fda_drug.biomarker_drug = '178103510 (SID)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_36_1",
    "user": "gpt-3",
    "question": "How many FDA NCIt terms have biomarker 'NEU'?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term WHERE biomarker_fda_ncit_term.ncit_biomarker = 'NEU'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_36_2",
    "user": "gpt-3",
    "question": "How many FDA NCIt terms have biomarker NEU?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term WHERE biomarker_fda_ncit_term.ncit_biomarker = 'NEU'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_37_1",
    "user": "gpt-3",
    "question": "How many expressions have a log2 fold change of 0.61?",
    "query": "SELECT count( *) FROM differential_expression WHERE differential_expression.log2fc = 0.61"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_37_2",
    "user": "gpt-3",
    "question": "How many expression have a log2-fold change of 0.61?",
    "query": "SELECT count( *) FROM differential_expression WHERE differential_expression.log2fc = 0.61"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_38_1",
    "user": "gpt-3",
    "question": "How many FDA submissions are there for test submission 'K080252'?",
    "query": "SELECT count( *) FROM biomarker_fda WHERE biomarker_fda.test_submission = 'K080252'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_38_2",
    "user": "gpt-3",
    "question": "How many FDA submissions were there with test submission 'K080252'?",
    "query": "SELECT count( *) FROM biomarker_fda WHERE biomarker_fda.test_submission = 'K080252'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_39_1",
    "user": "gpt-3",
    "question": "How many species have the common name human?",
    "query": "SELECT count( *) FROM species WHERE species.speciescommonname = 'human'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_39_2",
    "user": "gpt-3",
    "question": "How many species have a common name of human?",
    "query": "SELECT count( *) FROM species WHERE species.speciescommonname = 'human'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_4_1",
    "user": "gpt-3",
    "question": "In how many FDA tests was the trade name 'MammaPrint' used?",
    "query": "SELECT count( *) FROM biomarker_fda_test WHERE biomarker_fda_test.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_4_2",
    "user": "gpt-3",
    "question": "How many FDA tests have trade name 'MammaPrint'?",
    "query": "SELECT count( *) FROM biomarker_fda_test WHERE biomarker_fda_test.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_40_1",
    "user": "gpt-3",
    "question": "How many FDA drugs have biomarker drug NA?",
    "query": "SELECT count( *) FROM biomarker_fda_drug WHERE biomarker_fda_drug.biomarker_drug = 'NA'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_40_2",
    "user": "gpt-3",
    "question": "How many FDA drugs have biomarker drug 'NA'?",
    "query": "SELECT count( *) FROM biomarker_fda_drug WHERE biomarker_fda_drug.biomarker_drug = 'NA'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_41_1",
    "user": "gpt-3",
    "question": "How many biomarkers have test is a panel set to false?",
    "query": "SELECT count( *) FROM biomarker WHERE biomarker.test_is_a_panel = 'False'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_41_2",
    "user": "gpt-3",
    "question": "How many biomarkers have test panel set to false?",
    "query": "SELECT count( *) FROM biomarker WHERE biomarker.test_is_a_panel = 'False'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_42_1",
    "user": "gpt-3",
    "question": "How many FDA biomarker FDA trade name 'Prosigna Breast Cancer Prognostic Gene Signature Assay' have?",
    "query": "SELECT count( *) FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'Prosigna Breast Cancer Prognostic Gene Signature Assay'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_42_2",
    "user": "gpt-3",
    "question": "How many FDA biomarker FDA trade name 'Prosigna Breast Cancer Prognostic Gene Signature Assay' are there?",
    "query": "SELECT count( *) FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'Prosigna Breast Cancer Prognostic Gene Signature Assay'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_43_1",
    "user": "gpt-3",
    "question": "How many stages are there for 'aged adult stage (mouse)'?",
    "query": "SELECT count( *) FROM stage WHERE stage.name = 'aged adult stage (mouse)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_43_2",
    "user": "gpt-3",
    "question": "How many stages are there for the 'aged adult stage (mouse)'?",
    "query": "SELECT count( *) FROM stage WHERE stage.name = 'aged adult stage (mouse)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_44_1",
    "user": "gpt-3",
    "question": "How many disease mutations have a mutation frequency of 2?",
    "query": "SELECT count( *) FROM disease_mutation WHERE disease_mutation.mutation_freq = 2"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_44_2",
    "user": "gpt-3",
    "question": "How many disease mutations have a frequency of 2?",
    "query": "SELECT count( *) FROM disease_mutation WHERE disease_mutation.mutation_freq = 2"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_45_1",
    "user": "gpt-3",
    "question": "How many anatomical entities have the identifier UBERON:0002197",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0002197'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_45_2",
    "user": "gpt-3",
    "question": "How many anatomical entities have identifier UBERON:0002197?",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0002197'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_46_1",
    "user": "gpt-3",
    "question": "How many anatomical entities are there with a description of 'A fluid that is composed of blood plasma and erythrocytes.'?",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.description = 'A fluid that is composed of blood plasma and erythrocytes.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_46_2",
    "user": "gpt-3",
    "question": "How many anatomical entities are there with description 'A fluid that is composed of blood plasma and erythrocytes.'?",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.description = 'A fluid that is composed of blood plasma and erythrocytes.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_47_1",
    "user": "gpt-3",
    "question": "How many disease mutations have an amino acid residue variation?",
    "query": "SELECT count( *) FROM disease_mutation WHERE disease_mutation.alt_aa = 'P'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_47_2",
    "user": "gpt-3",
    "question": "How many disease mutations have amino acid residue variation P?",
    "query": "SELECT count( *) FROM disease_mutation WHERE disease_mutation.alt_aa = 'P'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_48_1",
    "user": "gpt-3",
    "question": "How many gene ensembles have symbol HOMER3?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'HOMER3'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_48_2",
    "user": "gpt-3",
    "question": "How many gene ensembles have symbol 'HOMER3'?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'HOMER3'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_49_1",
    "user": "gpt-3",
    "question": "How many disease mutation articles have a pmid of 9065403?",
    "query": "SELECT count( *) FROM disease_mutation_article WHERE disease_mutation_article.pmid = 9065403"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_49_2",
    "user": "gpt-3",
    "question": "How many disease mutation articles have a PMID of 9065403?",
    "query": "SELECT count( *) FROM disease_mutation_article WHERE disease_mutation_article.pmid = 9065403"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_5_1",
    "user": "gpt-3",
    "question": "How many FDA drug with biomarker drug '50067185 (SID)' are there?",
    "query": "SELECT count( *) FROM biomarker_fda_drug WHERE biomarker_fda_drug.biomarker_drug = '50067185 (SID)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_5_2",
    "user": "gpt-3",
    "question": "How many FDA drugs have biomarker drug 50067185 (SID)?",
    "query": "SELECT count( *) FROM biomarker_fda_drug WHERE biomarker_fda_drug.biomarker_drug = '50067185 (SID)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_50_1",
    "user": "gpt-3",
    "question": "How many biomarkers are there with id 'urn:edrn:bmdb:biomarker:844'?",
    "query": "SELECT count( *) FROM biomarker WHERE biomarker.biomarker_id = 'urn:edrn:bmdb:biomarker:844'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_50_2",
    "user": "gpt-3",
    "question": "How many biomarkers are there with biomarker id 'urn:edrn:bmdb:biomarker:844'",
    "query": "SELECT count( *) FROM biomarker WHERE biomarker.biomarker_id = 'urn:edrn:bmdb:biomarker:844'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_51_1",
    "user": "gpt-3",
    "question": "How many biomarker alias are there for biomarker with alias '3-Methyladenine DNA Glycosidase'?",
    "query": "SELECT count( *) FROM biomarker_alias WHERE biomarker_alias.alias = '3-Methyladenine DNA Glycosidase'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_51_2",
    "user": "gpt-3",
    "question": "How many biomarker alias are there for biomarker alias '3-Methyladenine DNA Glycosidase'?",
    "query": "SELECT count( *) FROM biomarker_alias WHERE biomarker_alias.alias = '3-Methyladenine DNA Glycosidase'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_52_1",
    "user": "gpt-3",
    "question": "How many FDA submissions were made for test trade name 'Praxis Extended RAS Panel'?",
    "query": "SELECT count( *) FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'Praxis Extended RAS Panel'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_52_2",
    "user": "gpt-3",
    "question": "How many FDA submissions exist for a test trade name 'Praxis Extended RAS Panel'?",
    "query": "SELECT count( *) FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'Praxis Extended RAS Panel'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_53_1",
    "user": "gpt-3",
    "question": "How many FDA submissions were there for biomarker K101454?",
    "query": "SELECT count( *) FROM biomarker_fda WHERE biomarker_fda.test_submission = 'K101454'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_53_2",
    "user": "gpt-3",
    "question": "In how many FDA submissions was biomarker K101454 involved?",
    "query": "SELECT count( *) FROM biomarker_fda WHERE biomarker_fda.test_submission = 'K101454'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_54_1",
    "user": "gpt-3",
    "question": "How many gene ensembles have symbol RFXANK?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'RFXANK'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_54_2",
    "user": "gpt-3",
    "question": "How many gene ensembles have symbol 'RFXANK'?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'RFXANK'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_55_1",
    "user": "gpt-3",
    "question": "How many disease mutations have disease ontology identifier 9256?",
    "query": "SELECT count( *) FROM disease_mutation WHERE disease_mutation.doid = 9256"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_55_2",
    "user": "gpt-3",
    "question": "How many mutations have disease ontology identifier 9256?",
    "query": "SELECT count( *) FROM disease_mutation WHERE disease_mutation.doid = 9256"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_56_1",
    "user": "gpt-3",
    "question": "How many stages are there with name '9 weeks (mouse)'?",
    "query": "SELECT count( *) FROM stage WHERE stage.name = '9 weeks (mouse)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_56_2",
    "user": "gpt-3",
    "question": "How many stages are there with name '9 weeks (mouse)?",
    "query": "SELECT count( *) FROM stage WHERE stage.name = '9 weeks (mouse)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_57_1",
    "user": "gpt-3",
    "question": "How many disease mutation articles have a pmid of 9490783?",
    "query": "SELECT count( *) FROM disease_mutation_article WHERE disease_mutation_article.pmid = 9490783"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_57_2",
    "user": "gpt-3",
    "question": "How many disease mutation articles have pmid 9490783?",
    "query": "SELECT count( *) FROM disease_mutation_article WHERE disease_mutation_article.pmid = 9490783"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_58_1",
    "user": "gpt-3",
    "question": "How many stages are there for the human early adulthood stage?",
    "query": "SELECT count( *) FROM stage WHERE stage.name = 'human early adulthood stage (human)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_58_2",
    "user": "gpt-3",
    "question": "How many stages are there for the human early adulthood stage (human)?",
    "query": "SELECT count( *) FROM stage WHERE stage.name = 'human early adulthood stage (human)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_59_1",
    "user": "gpt-3",
    "question": "How many anatomical entities have identifier UBERON:0001904?",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0001904'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_59_2",
    "user": "gpt-3",
    "question": "In how many anatomical entities is the identifier UBERON:0001904 present?",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0001904'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_6_1",
    "user": "gpt-3",
    "question": "How many biomarker alias are there for ATF1?",
    "query": "SELECT count( *) FROM biomarker_alias WHERE biomarker_alias.alias = 'ATF1'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_6_2",
    "user": "gpt-3",
    "question": "How many alias are there for biomarker ATF1?",
    "query": "SELECT count( *) FROM biomarker_alias WHERE biomarker_alias.alias = 'ATF1'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_60_1",
    "user": "gpt-3",
    "question": "In how many anatomical entities is the Uberon identifier UBERON:0000989 present?",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0000989'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_60_2",
    "user": "gpt-3",
    "question": "In how many anatomical entities the Uberon identifier is equal to 'UBERON:0000989'?",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0000989'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_61_1",
    "user": "gpt-3",
    "question": "How many disease mutation site annotations have feature key 'modified residue'?",
    "query": "SELECT count( *) FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.feature_key = 'modified residue'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_61_2",
    "user": "gpt-3",
    "question": "How many disease mutation site annotations have a feature key 'modified residue'?",
    "query": "SELECT count( *) FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.feature_key = 'modified residue'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_62_1",
    "user": "gpt-3",
    "question": "How many disease mutation articles have pmid 8665501?",
    "query": "SELECT count( *) FROM disease_mutation_article WHERE disease_mutation_article.pmid = 8665501"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_62_2",
    "user": "gpt-3",
    "question": "How many disease mutation articles have a pmid of 8665501?",
    "query": "SELECT count( *) FROM disease_mutation_article WHERE disease_mutation_article.pmid = 8665501"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_63_1",
    "user": "gpt-3",
    "question": "How many FDA test uses have an approved indication of 'prognosis'?",
    "query": "SELECT count( *) FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.approved_indication = 'prognosis'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_63_2",
    "user": "gpt-3",
    "question": "In how many FDA tests was an indication 'prognosis' approved?",
    "query": "SELECT count( *) FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.approved_indication = 'prognosis'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_64_1",
    "user": "gpt-3",
    "question": "How many diseases have the name malignant glioma?",
    "query": "SELECT count( *) FROM disease WHERE disease.name = 'malignant glioma'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_64_2",
    "user": "gpt-3",
    "question": "How many diseases have name malignant glioma?",
    "query": "SELECT count( *) FROM disease WHERE disease.name = 'malignant glioma'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_65_1",
    "user": "gpt-3",
    "question": "How many biomarkers are there on the EDRN platform with anatomical id 'UBERON:0000992'?",
    "query": "SELECT count( *) FROM biomarker_edrn WHERE biomarker_edrn.uberon_anatomical_id = 'UBERON:0000992'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_65_2",
    "user": "gpt-3",
    "question": "How many biomarkers are on the EDRN platform with anatomical id 'UBERON:0000992'?",
    "query": "SELECT count( *) FROM biomarker_edrn WHERE biomarker_edrn.uberon_anatomical_id = 'UBERON:0000992'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_66_1",
    "user": "gpt-3",
    "question": "How many healthy expressions have call quality SILVER?",
    "query": "SELECT count( *) FROM healthy_expression WHERE healthy_expression.call_quality = 'SILVER'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_66_2",
    "user": "gpt-3",
    "question": "How many healthy expressions have call quality silver?",
    "query": "SELECT count( *) FROM healthy_expression WHERE healthy_expression.call_quality = 'SILVER'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_67_1",
    "user": "gpt-3",
    "question": "How many anatomical entities have identifier 'UBERON:0002369'?",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0002369'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_67_2",
    "user": "gpt-3",
    "question": "How many anatomical entities have identifier UBERON:0002369?",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0002369'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_68_1",
    "user": "gpt-3",
    "question": "What is the count of biomarkers with description containing 'ZFP36L1 is a member of the TIS11 family of early response genes'",
    "query": "SELECT count( *) FROM biomarker WHERE biomarker.biomarker_description = 'ZFP36L1 is a member of the TIS11 family of early response genes, which are induced by various agonists such as the phorbol ester TPA and the polypeptide mitogen EGF.  The ZFP36L1 gene is well conserved across species and has a promoter that contains motifs seen in other early-response genes. ZFP36L1 contains a putative zinc finger domain with a repeating cys-his motif. ZFP36L1 is believed to be a nuclear transcription factor most likely functioning in regulating the response to growth factors. Different isoforms encoded by alternatively spliced transcript variants have been isolated.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_68_2",
    "user": "gpt-3",
    "question": "How many biomarkers have description with 'ZFP36L1 is a member of the TIS11 family of early response genes'?",
    "query": "SELECT count( *) FROM biomarker WHERE biomarker.biomarker_description = 'ZFP36L1 is a member of the TIS11 family of early response genes, which are induced by various agonists such as the phorbol ester TPA and the polypeptide mitogen EGF.  The ZFP36L1 gene is well conserved across species and has a promoter that contains motifs seen in other early-response genes. ZFP36L1 contains a putative zinc finger domain with a repeating cys-his motif. ZFP36L1 is believed to be a nuclear transcription factor most likely functioning in regulating the response to growth factors. Different isoforms encoded by alternatively spliced transcript variants have been isolated.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_69_1",
    "user": "gpt-3",
    "question": "In how many FDA test uses was test submission K062710 involved?",
    "query": "SELECT count( *) FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_submission = 'K062710'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_69_2",
    "user": "gpt-3",
    "question": "How many FDA test uses were there for test submission K062710?",
    "query": "SELECT count( *) FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_submission = 'K062710'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_7_1",
    "user": "gpt-3",
    "question": "How many FDA drug with biomarker drug '644241' are there?",
    "query": "SELECT count( *) FROM biomarker_fda_drug WHERE biomarker_fda_drug.biomarker_drug = '644241'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_7_2",
    "user": "gpt-3",
    "question": "How many FDA drug with biomarker drug '644241'?",
    "query": "SELECT count( *) FROM biomarker_fda_drug WHERE biomarker_fda_drug.biomarker_drug = '644241'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_70_1",
    "user": "gpt-3",
    "question": "How many gene ensembles have symbol SH3YL1?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'SH3YL1'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_70_2",
    "user": "gpt-3",
    "question": "How many gene ensembles have symbol 'SH3YL1'?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'SH3YL1'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_71_1",
    "user": "gpt-3",
    "question": "Show all biomarkers with description LPAR3",
    "query": "SELECT count( *) FROM biomarker WHERE biomarker.biomarker_description = 'LPAR3, a multi-pass cell membrane protein, is a receptor for lysophosphatidic acid (LPA), a mediator of diverse cellular activities. LPAR3 seems to be coupled to the G(i)/G(o) and G(q) families of heteromeric G proteins. LPAR3 may play a role in the development of ovarian cancer. This protein is most abundantly expressed in prostate, testes, pancreas, and heart, with moderate levels in lung and ovary. There is no detectable expression in brain, placenta, liver, skeletal muscle, kidney, spleen, thymus, small intestine, colon, or peripheral blood leukocytes.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_71_2",
    "user": "gpt-3",
    "question": "COUNT(biomarker_description) FROM biomarker WHERE biomarker.gene_symbol = 'LPAR3' -> How many biomarkers has 'LPAR3' as a description?",
    "query": "SELECT count( *) FROM biomarker WHERE biomarker.biomarker_description = 'LPAR3, a multi-pass cell membrane protein, is a receptor for lysophosphatidic acid (LPA), a mediator of diverse cellular activities. LPAR3 seems to be coupled to the G(i)/G(o) and G(q) families of heteromeric G proteins. LPAR3 may play a role in the development of ovarian cancer. This protein is most abundantly expressed in prostate, testes, pancreas, and heart, with moderate levels in lung and ovary. There is no detectable expression in brain, placenta, liver, skeletal muscle, kidney, spleen, thymus, small intestine, colon, or peripheral blood leukocytes.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_72_1",
    "user": "gpt-3",
    "question": "How many FDA NCIt terms have biomarker FLT1 Gene?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term WHERE biomarker_fda_ncit_term.ncit_biomarker = 'FLT1 Gene'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_72_2",
    "user": "gpt-3",
    "question": "How many FDA NCIT terms have biomarker FLT1 gene?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term WHERE biomarker_fda_ncit_term.ncit_biomarker = 'FLT1 Gene'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_73_1",
    "user": "gpt-3",
    "question": "How many FDA NCIt terms have biomarker MKI67?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term WHERE biomarker_fda_ncit_term.ncit_biomarker = 'MKI67'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_73_2",
    "user": "gpt-3",
    "question": "How many FDA NCIt terms are there with biomarker 'MKI67'?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term WHERE biomarker_fda_ncit_term.ncit_biomarker = 'MKI67'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_74_1",
    "user": "gpt-3",
    "question": "How many FDA NCIt terms are there for biomarker V-Kit Hardy-Zuckerman 4 Feline Sarcoma Viral Oncogene Homolog Gene?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term WHERE biomarker_fda_ncit_term.ncit_biomarker = 'V-Kit Hardy-Zuckerman 4 Feline Sarcoma Viral Oncogene Homolog Gene'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_74_2",
    "user": "gpt-3",
    "question": "How many FDA NCIt terms have biomarker 'V-Kit Hardy-Zuckerman 4 Feline Sarcoma Viral Oncogene Homolog Gene'?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term WHERE biomarker_fda_ncit_term.ncit_biomarker = 'V-Kit Hardy-Zuckerman 4 Feline Sarcoma Viral Oncogene Homolog Gene'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_75_1",
    "user": "gpt-3",
    "question": "How many FDA NCIt terms have biomarker CDK4?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term WHERE biomarker_fda_ncit_term.ncit_biomarker = 'CDK4'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_75_2",
    "user": "gpt-3",
    "question": "In how many FDA NCIt term with biomarker CDK4 there is a NCIt biomarker?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term WHERE biomarker_fda_ncit_term.ncit_biomarker = 'CDK4'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_76_1",
    "user": "gpt-3",
    "question": "How many gene ensembles have gene symbol ITGA2B?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'ITGA2B'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_76_2",
    "user": "gpt-3",
    "question": "How many gene ensembles have symbol ITGA2B?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'ITGA2B'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_77_1",
    "user": "gpt-3",
    "question": "How many anatomical entities have a description 'The lobe of the left lung that is closest to the head.'?",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.description = 'The lobe of the left lung that is closest to the head.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_77_2",
    "user": "gpt-3",
    "question": "How many anatomical entities have a description like this?",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.description = 'The lobe of the left lung that is closest to the head.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_78_1",
    "user": "gpt-3",
    "question": "How many FDA drug with biomarker drug '6918223' are there?",
    "query": "SELECT count( *) FROM biomarker_fda_drug WHERE biomarker_fda_drug.biomarker_drug = '6918223'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_78_2",
    "user": "gpt-3",
    "question": "How many FDA drugs have biomarker drug '6918223'?",
    "query": "SELECT count( *) FROM biomarker_fda_drug WHERE biomarker_fda_drug.biomarker_drug = '6918223'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_79_1",
    "user": "gpt-3",
    "question": "How many gene ensembles have symbol GCLC?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'GCLC'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_79_2",
    "user": "gpt-3",
    "question": "In how many gene ensembles is the symbol GCLC?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'GCLC'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_8_1",
    "user": "gpt-3",
    "question": "How many species are there with species musculus?",
    "query": "SELECT count( *) FROM species WHERE species.species = 'musculus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_8_2",
    "user": "gpt-3",
    "question": "How many species are there for species musculus?",
    "query": "SELECT count( *) FROM species WHERE species.species = 'musculus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_80_1",
    "user": "gpt-3",
    "question": "How many biomarkers have symbol CENPA?",
    "query": "SELECT count( *) FROM biomarker WHERE biomarker.gene_symbol = 'CENPA'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_80_2",
    "user": "gpt-3",
    "question": "How many biomarkers have symbol 'CENPA'?",
    "query": "SELECT count( *) FROM biomarker WHERE biomarker.gene_symbol = 'CENPA'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_81_1",
    "user": "gpt-3",
    "question": "How many disease mutation impact predictions are there where the tool is polyphen?",
    "query": "SELECT count( *) FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.tool = 'polyphen'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_81_2",
    "user": "gpt-3",
    "question": "How many disease mutation impact predictions have tool 'polyphen'?",
    "query": "SELECT count( *) FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.tool = 'polyphen'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_82_1",
    "user": "gpt-3",
    "question": "How many FDA drugs have biomarker drug 148673?",
    "query": "SELECT count( *) FROM biomarker_fda_drug WHERE biomarker_fda_drug.biomarker_drug = '148673'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_82_2",
    "user": "gpt-3",
    "question": "How many FDA drug with biomarker drug '148673' are there?",
    "query": "SELECT count( *) FROM biomarker_fda_drug WHERE biomarker_fda_drug.biomarker_drug = '148673'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_83_1",
    "user": "gpt-3",
    "question": "How many healthy expressions have an expression rank score of 26.30?",
    "query": "SELECT count( *) FROM healthy_expression WHERE healthy_expression.expression_rank_score = 26.30"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_83_2",
    "user": "gpt-3",
    "question": "How many healthy expressions have expression rank score 26.30?",
    "query": "SELECT count( *) FROM healthy_expression WHERE healthy_expression.expression_rank_score = 26.30"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_84_1",
    "user": "gpt-3",
    "question": "How many expressions have a log2 fold change of 0.29?",
    "query": "SELECT count( *) FROM differential_expression WHERE differential_expression.log2fc = 0.29"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_84_2",
    "user": "gpt-3",
    "question": "How many expression have a log2 fold change of 0.29?",
    "query": "SELECT count( *) FROM differential_expression WHERE differential_expression.log2fc = 0.29"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_85_1",
    "user": "gpt-3",
    "question": "How many FDA submissions have a test submission of P120019?",
    "query": "SELECT count( *) FROM biomarker_fda WHERE biomarker_fda.test_submission = 'P120019'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_85_2",
    "user": "gpt-3",
    "question": "How many FDA submissions are there with test submission P120019?",
    "query": "SELECT count( *) FROM biomarker_fda WHERE biomarker_fda.test_submission = 'P120019'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_86_1",
    "user": "gpt-3",
    "question": "How many disease mutation articles have a pmid of 8187091?",
    "query": "SELECT count( *) FROM disease_mutation_article WHERE disease_mutation_article.pmid = 8187091"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_86_2",
    "user": "gpt-3",
    "question": "How many disease mutation articles have pmid 8187091?",
    "query": "SELECT count( *) FROM disease_mutation_article WHERE disease_mutation_article.pmid = 8187091"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_87_1",
    "user": "gpt-3",
    "question": "How many FDA NCIt terms have biomarker IGFBP5?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term WHERE biomarker_fda_ncit_term.ncit_biomarker = 'IGFBP5'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_87_2",
    "user": "gpt-3",
    "question": "How many FDA NCIt terms contain a biomarker with the biomarker name IGFBP5?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term WHERE biomarker_fda_ncit_term.ncit_biomarker = 'IGFBP5'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_88_1",
    "user": "gpt-3",
    "question": "How many healthy expressions have an expression rank score of 5.20?",
    "query": "SELECT count( *) FROM healthy_expression WHERE healthy_expression.expression_rank_score = 5.20"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_88_2",
    "user": "gpt-3",
    "question": "How many healthy expressions have expression rank score 5.20?",
    "query": "SELECT count( *) FROM healthy_expression WHERE healthy_expression.expression_rank_score = 5.20"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_89_1",
    "user": "gpt-3",
    "question": "How many FDA test uses have actual use 'prognostic'?",
    "query": "SELECT count( *) FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.actual_use = 'prognostic'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_89_2",
    "user": "gpt-3",
    "question": "In how many FDA test uses was actual use 'prognostic'?",
    "query": "SELECT count( *) FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.actual_use = 'prognostic'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_9_1",
    "user": "gpt-3",
    "question": "How many FDA Ncit terms with biomarker GTPase Gene are there?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term WHERE biomarker_fda_ncit_term.ncit_biomarker = 'GTPase Gene'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_9_2",
    "user": "gpt-3",
    "question": "How many FDA NCIt terms have the NCIt biomarker 'GTPase Gene'?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term WHERE biomarker_fda_ncit_term.ncit_biomarker = 'GTPase Gene'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_90_1",
    "user": "gpt-3",
    "question": "How many stages are there in which the name is sexually immature stage?",
    "query": "SELECT count( *) FROM stage WHERE stage.name = 'sexually immature stage'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_90_2",
    "user": "gpt-3",
    "question": "How many stages are there with name 'sexually immature stage'?",
    "query": "SELECT count( *) FROM stage WHERE stage.name = 'sexually immature stage'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_91_1",
    "user": "gpt-3",
    "question": "How many biomarker articles have pmid 21586622?",
    "query": "SELECT count( *) FROM biomarker_article WHERE biomarker_article.pmid = '21586622'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_91_2",
    "user": "gpt-3",
    "question": "How many biomarker articles have a pmid of 21586622?",
    "query": "SELECT count( *) FROM biomarker_article WHERE biomarker_article.pmid = '21586622'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_92_1",
    "user": "gpt-3",
    "question": "How many FDA drug with biomarker drug TAGRISSOTM (osimertinib) are there?",
    "query": "SELECT count( *) FROM biomarker_fda_drug WHERE biomarker_fda_drug.biomarker_drug = 'TAGRISSOTM (osimertinib)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_92_2",
    "user": "gpt-3",
    "question": "How many FDA drug are there with biomarker drug 'TAGRISSOTM (osimertinib)'?",
    "query": "SELECT count( *) FROM biomarker_fda_drug WHERE biomarker_fda_drug.biomarker_drug = 'TAGRISSOTM (osimertinib)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_93_1",
    "user": "gpt-3",
    "question": "How many FDA NCIT terms are there with biomarker DNA Repair Associated Gene?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term WHERE biomarker_fda_ncit_term.ncit_biomarker = 'DNA Repair Associated Gene'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_93_2",
    "user": "gpt-3",
    "question": "How many FDA NCIt terms are there for biomarker DNA Repair Associated Gene?",
    "query": "SELECT count( *) FROM biomarker_fda_ncit_term WHERE biomarker_fda_ncit_term.ncit_biomarker = 'DNA Repair Associated Gene'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_94_1",
    "user": "gpt-3",
    "question": "How many anatomical entities have an uberon identifier of 'UBERON:0002298'?",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0002298'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_94_2",
    "user": "gpt-3",
    "question": "In how many anatomical entities the identifier 'UBERON:0002298' is known?",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0002298'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_95_1",
    "user": "gpt-3",
    "question": "How many stages are there for 'young adult stage (human)'?",
    "query": "SELECT count( *) FROM stage WHERE stage.name = 'young adult stage (human)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_95_2",
    "user": "gpt-3",
    "question": "How many stages are there for the 'young adult stage (human)?",
    "query": "SELECT count( *) FROM stage WHERE stage.name = 'young adult stage (human)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_96_1",
    "user": "gpt-3",
    "question": "How many gene ensembles have symbol LYPLA2?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'LYPLA2'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_96_2",
    "user": "gpt-3",
    "question": "How many gene ensembles contain the gene symbol 'LYPLA2'?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'LYPLA2'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_97_1",
    "user": "gpt-3",
    "question": "How many healthy expressions have an expression score of 3.42?",
    "query": "SELECT count( *) FROM healthy_expression WHERE healthy_expression.expression_score = 3.42000"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_97_2",
    "user": "gpt-3",
    "question": "How many healthy expression have an expression score of 3.42?",
    "query": "SELECT count( *) FROM healthy_expression WHERE healthy_expression.expression_score = 3.42000"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_98_1",
    "user": "gpt-3",
    "question": "How many gene ensembles have gene symbol ASB4?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'ASB4'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_98_2",
    "user": "gpt-3",
    "question": "How many gene ensembles have the gene symbol ASB4?",
    "query": "SELECT count( *) FROM xref_gene_ensembl WHERE xref_gene_ensembl.gene_symbol = 'ASB4'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_99_1",
    "user": "gpt-3",
    "question": "How many anatomical entities are there with a description equal to 'Dense regular connective tissue that connects muscle to bone[VSAO].'?",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.description = 'Dense regular connective tissue that connects muscle to bone[VSAO].'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "4_99_2",
    "user": "gpt-3",
    "question": "How many anatomical entities are there with description starting with 'Dense regular connective tissue that connects muscle to bone[VSAO].'?",
    "query": "SELECT count( *) FROM anatomical_entity WHERE anatomical_entity.description = 'Dense regular connective tissue that connects muscle to bone[VSAO].'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_0_1",
    "user": "gpt-3",
    "question": "Show me the tool for disease mutation impact prediction with the highest probability?",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction    ORDER BY disease_mutation_impact_prediction.probability DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_0_2",
    "user": "gpt-3",
    "question": "Show me the tool for disease mutation impact prediction with the lowest probability?",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction    ORDER BY disease_mutation_impact_prediction.probability DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_1_1",
    "user": "gpt-3",
    "question": "Get the expression rank score for the expression with highest score",
    "query": "SELECT healthy_expression.expression_rank_score FROM healthy_expression    ORDER BY healthy_expression.expression_score DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_1_2",
    "user": "gpt-3",
    "question": "Show me the expression rank score of healthy expressions with a score of expression rank 1",
    "query": "SELECT healthy_expression.expression_rank_score FROM healthy_expression    ORDER BY healthy_expression.expression_score DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_2_1",
    "user": "gpt-3",
    "question": "Get the healthy expression with relative expression level gene with the lowest expression score",
    "query": "SELECT healthy_expression.expression_level_gene_relative FROM healthy_expression    ORDER BY healthy_expression.expression_score DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_2_2",
    "user": "gpt-3",
    "question": "What is the relative expression level gene expression level for expression with score that is lowest?",
    "query": "SELECT healthy_expression.expression_level_gene_relative FROM healthy_expression    ORDER BY healthy_expression.expression_score DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_3_1",
    "user": "gpt-3",
    "question": "Show me the platform method of the FDA test with the highest number of genes?",
    "query": "SELECT biomarker_fda_test.platform_method FROM biomarker_fda_test    ORDER BY biomarker_fda_test.test_number_genes DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_3_2",
    "user": "gpt-3",
    "question": "Show me the platform method for the FDA test with the highest number of genes?",
    "query": "SELECT biomarker_fda_test.platform_method FROM biomarker_fda_test    ORDER BY biomarker_fda_test.test_number_genes DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_4_1",
    "user": "gpt-3",
    "question": "Show me the biomarker origin of the FDA test with the highest number of genes?",
    "query": "SELECT biomarker_fda_test.biomarker_origin FROM biomarker_fda_test    ORDER BY biomarker_fda_test.test_number_genes DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_4_2",
    "user": "gpt-3",
    "question": "What is the biomarker origin for the FDA test with the highest number of genes?",
    "query": "SELECT biomarker_fda_test.biomarker_origin FROM biomarker_fda_test    ORDER BY biomarker_fda_test.test_number_genes DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_5_1",
    "user": "gpt-3",
    "question": "Show me the amino acids position uniprot kb for disease mutations with the highest mutation frequency",
    "query": "SELECT disease_mutation.aa_pos_uniprotkb FROM disease_mutation    ORDER BY disease_mutation.mutation_freq DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_5_2",
    "user": "gpt-3",
    "question": "Show me the amino acids position uniprot kb for disease mutations with a frequency of less than 1?",
    "query": "SELECT disease_mutation.aa_pos_uniprotkb FROM disease_mutation    ORDER BY disease_mutation.mutation_freq DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_6_1",
    "user": "gpt-3",
    "question": "What is the clinical significance for the FDA test with the highest number of genes?",
    "query": "SELECT biomarker_fda_test.clinical_significance FROM biomarker_fda_test    ORDER BY biomarker_fda_test.test_number_genes DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_6_2",
    "user": "gpt-3",
    "question": "What is the clinical significance of the FDA test with the highest number of genes?",
    "query": "SELECT biomarker_fda_test.clinical_significance FROM biomarker_fda_test    ORDER BY biomarker_fda_test.test_number_genes DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_7_1",
    "user": "gpt-3",
    "question": "Show me the healthy expression with the best (lowest) call quality",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression    ORDER BY healthy_expression.expression_rank_score DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_7_2",
    "user": "gpt-3",
    "question": "Show me the call quality expression for the top healthy expression",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression    ORDER BY healthy_expression.expression_rank_score DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_8_1",
    "user": "gpt-3",
    "question": "What is the test manufacturer of the FDA test with the highest number of genes?",
    "query": "SELECT biomarker_fda_test.test_manufacturer FROM biomarker_fda_test    ORDER BY biomarker_fda_test.test_number_genes DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_8_2",
    "user": "gpt-3",
    "question": "What is the test manufacturer for the FDA test with the highest number of genes?",
    "query": "SELECT biomarker_fda_test.test_manufacturer FROM biomarker_fda_test    ORDER BY biomarker_fda_test.test_number_genes DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_9_1",
    "user": "gpt-3",
    "question": "What is the approval status for FDA tests with the highest number of genes?",
    "query": "SELECT biomarker_fda_test.test_approval_status FROM biomarker_fda_test    ORDER BY biomarker_fda_test.test_number_genes DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "5_9_2",
    "user": "gpt-3",
    "question": "Show approval status of FDA tests with the highest number of genes",
    "query": "SELECT biomarker_fda_test.test_approval_status FROM biomarker_fda_test    ORDER BY biomarker_fda_test.test_number_genes DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_0_1",
    "user": "gpt-3",
    "question": "Show disease mutation reference nucleotide base for coding sequence position 551 and reference amino acid residue H",
    "query": "SELECT disease_mutation.ref_nt FROM disease_mutation WHERE disease_mutation.cds_pos = 551 and disease_mutation.ref_aa = 'H'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_0_2",
    "user": "gpt-3",
    "question": "List the reference nucleotide bases for disease mutations with coding sequence position 551 and reference amino acid residue H",
    "query": "SELECT disease_mutation.ref_nt FROM disease_mutation WHERE disease_mutation.cds_pos = 551 and disease_mutation.ref_aa = 'H'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_1_1",
    "user": "gpt-3",
    "question": "What is the test submission for FDA tests with a 70-gene panel gene signature that predicts likelihood of distant metastases and prognosis in profiles designated as high risk or low risk?",
    "query": "SELECT biomarker_fda_test.test_submission FROM biomarker_fda_test WHERE biomarker_fda_test.clinical_significance = '70-gene-panel gene signature predicts likelihood of distant metastases and prognosis in profiles designated as high risk or low risk' and biomarker_fda_test.test_number_genes = 70"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_1_2",
    "user": "gpt-3",
    "question": "Show the test submission for FDA tests where the 70-gene-panel gene signature predicts the likelihood of distant metastases and prognosis in profiles designated as high risk or low risk",
    "query": "SELECT biomarker_fda_test.test_submission FROM biomarker_fda_test WHERE biomarker_fda_test.clinical_significance = '70-gene-panel gene signature predicts likelihood of distant metastases and prognosis in profiles designated as high risk or low risk' and biomarker_fda_test.test_number_genes = 70"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_10_1",
    "user": "gpt-3",
    "question": "Show me all FDA tests with a histological type of 'cancer' and an adoption evidence of 'clinical use' with a clinical significance of 'amplified HER2 indicates a candidate for trastuzumab or pertuzumab treatment, clinical test use prognosis for patients with invasive breast cancer'",
    "query": "SELECT biomarker_fda_test.histological_type FROM biomarker_fda_test WHERE biomarker_fda_test.test_adoption_evidence = 'clinical use' and biomarker_fda_test.clinical_significance = 'amplified HER2 indicates a candidate for trastuzumab or pertuzumab treatment, clinical test use prognosis for patients with invasive breast cancer,'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_10_2",
    "user": "gpt-3",
    "question": "Show me the histological type of FDA tests with adoption evidence 'clinical use' and clinical significance 'amplified HER2 indicates a candidate for trastuzumab or pertuzumab treatment, clinical test use prognosis for patients with invasive breast cancer'.",
    "query": "SELECT biomarker_fda_test.histological_type FROM biomarker_fda_test WHERE biomarker_fda_test.test_adoption_evidence = 'clinical use' and biomarker_fda_test.clinical_significance = 'amplified HER2 indicates a candidate for trastuzumab or pertuzumab treatment, clinical test use prognosis for patients with invasive breast cancer,'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_11_1",
    "user": "gpt-3",
    "question": "Show me the site prediction for disease mutation impact predictions with tool 'polyphen' and a probability of 0.0.",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.tool = 'polyphen' and disease_mutation_impact_prediction.probability = 0.0"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_11_2",
    "user": "gpt-3",
    "question": "Show me a site prediction for disease mutation impact predictions with tool polyphen and a probability of 0.0",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.tool = 'polyphen' and disease_mutation_impact_prediction.probability = 0.0"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_12_1",
    "user": "gpt-3",
    "question": "Get the genus of species with species name 'musculus' and common name 'mouse'",
    "query": "SELECT species.genus FROM species WHERE species.species = 'musculus' and species.speciescommonname = 'mouse'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_12_2",
    "user": "gpt-3",
    "question": "List the genus of species with species 'musculus' having common name 'mouse'",
    "query": "SELECT species.genus FROM species WHERE species.species = 'musculus' and species.speciescommonname = 'mouse'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_13_1",
    "user": "gpt-3",
    "question": "Show me the description for biomarker with id 1055 which is not a panel",
    "query": "SELECT biomarker.biomarker_description FROM biomarker WHERE biomarker.test_is_a_panel = 'False' and biomarker.biomarker_id = 'urn:edrn:bmdb:biomarker:1055'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_13_2",
    "user": "gpt-3",
    "question": "Show me the description of biomarker with id 1055 which is not a panel.",
    "query": "SELECT biomarker.biomarker_description FROM biomarker WHERE biomarker.test_is_a_panel = 'False' and biomarker.biomarker_id = 'urn:edrn:bmdb:biomarker:1055'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_14_1",
    "user": "gpt-3",
    "question": "Show me the description of the anatomical entity with name 'endothelial cell of lymphatic vessel' having an uberon identifier of 'UBERON:0001932'",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.name = 'endothelial cell of lymphatic vessel' and anatomical_entity.id = 'UBERON:0001932'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_14_2",
    "user": "gpt-3",
    "question": "Return the description of anatomical entities with name 'endothelial cell of lymphatic vessel' and uberon identifier 'UBERON:0001932'",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.name = 'endothelial cell of lymphatic vessel' and anatomical_entity.id = 'UBERON:0001932'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_15_1",
    "user": "gpt-3",
    "question": "Show me all subjects expression with a pvalue of 2.42e-08 and 17 no changes expressions",
    "query": "SELECT differential_expression.subjects_up FROM differential_expression WHERE differential_expression.pvalue = 2.42e-08 and differential_expression.subjects_nochange = 17"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_15_2",
    "user": "gpt-3",
    "question": "Give me the subjects for expression with a pvalue of 2.42e-08 who have no change (subjects_nochange)",
    "query": "SELECT differential_expression.subjects_up FROM differential_expression WHERE differential_expression.pvalue = 2.42e-08 and differential_expression.subjects_nochange = 17"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_16_1",
    "user": "gpt-3",
    "question": "Show all information about species species with a common name of human and a genus of Homo",
    "query": "SELECT species.species FROM species WHERE species.speciescommonname = 'human' and species.genus = 'Homo'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_16_2",
    "user": "gpt-3",
    "question": "Show all information about species with species common name human and genus Homo",
    "query": "SELECT species.species FROM species WHERE species.speciescommonname = 'human' and species.genus = 'Homo'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_17_1",
    "user": "gpt-3",
    "question": "Show manufacturer of FDA tests with platform method D and specimen type Paraffin block",
    "query": "SELECT biomarker_fda_test.test_manufacturer FROM biomarker_fda_test WHERE biomarker_fda_test.platform_method = 'D' and biomarker_fda_test.specimen_type = 'Paraffin block'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_17_2",
    "user": "gpt-3",
    "question": "Show FDA test manufacturer for tests with platform method D and specimen type Paraffin block",
    "query": "SELECT biomarker_fda_test.test_manufacturer FROM biomarker_fda_test WHERE biomarker_fda_test.platform_method = 'D' and biomarker_fda_test.specimen_type = 'Paraffin block'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_18_1",
    "user": "gpt-3",
    "question": "What is the chromosome id of disease mutations with ontology identifier 1793 and coding sequence position of 380?",
    "query": "SELECT disease_mutation.chromosome_id FROM disease_mutation WHERE disease_mutation.doid = 1793 and disease_mutation.cds_pos = 380"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_18_2",
    "user": "gpt-3",
    "question": "List the chromosome id's of disease mutations with disease ontology identifier 1793 and coding sequence position of 380.",
    "query": "SELECT disease_mutation.chromosome_id FROM disease_mutation WHERE disease_mutation.doid = 1793 and disease_mutation.cds_pos = 380"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_19_1",
    "user": "gpt-3",
    "question": "Show me the description of biomarker with id 845 which is not a panel.",
    "query": "SELECT biomarker.biomarker_description FROM biomarker WHERE biomarker.test_is_a_panel = 'False' and biomarker.biomarker_id = 'urn:edrn:bmdb:biomarker:845'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_19_2",
    "user": "gpt-3",
    "question": "Show me the description for biomarker with id 845 which is not a panel.",
    "query": "SELECT biomarker.biomarker_description FROM biomarker WHERE biomarker.test_is_a_panel = 'False' and biomarker.biomarker_id = 'urn:edrn:bmdb:biomarker:845'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_2_1",
    "user": "gpt-3",
    "question": "Show biomarker identifier of panel biomarkers with test is a panel False and biomarker description is 'ST14 protein is an epithelial-derived, integral membrane serine protease and is found to be activated by sphingosine 1-phosphate. The expression of this protease has been associated with breast, colon, prostate, and ovarian tumors, which implicates its role in cancer invasion, and metastasis.'",
    "query": "SELECT biomarker.biomarker_id FROM biomarker WHERE biomarker.test_is_a_panel = 'False' and biomarker.biomarker_description = 'ST14 protein is an epithelial-derived, integral membrane serine protease and is found to be activated by sphingosine 1-phosphate. The expression of this protease has been associated with breast, colon, prostate, and ovarian tumors, which implicates its role in cancer invasion, and metastasis.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_2_2",
    "user": "gpt-3",
    "question": "Show me the id of biomarkers with panel = False and description = 'ST14 protein is an epithelial-derived, integral membrane serine protease and is found to be activated by sphingosine 1-phosphate. The expression of this protease has been associated with breast, colon, prostate, and ovarian tumors, which implicates its role in cancer invasion, and metastasis.'",
    "query": "SELECT biomarker.biomarker_id FROM biomarker WHERE biomarker.test_is_a_panel = 'False' and biomarker.biomarker_description = 'ST14 protein is an epithelial-derived, integral membrane serine protease and is found to be activated by sphingosine 1-phosphate. The expression of this protease has been associated with breast, colon, prostate, and ovarian tumors, which implicates its role in cancer invasion, and metastasis.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_20_1",
    "user": "gpt-3",
    "question": "Show me the description for a lens of a camera-type eye with uberon identifier UBERON:0005200",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.name = 'lens of camera-type eye' and anatomical_entity.id = 'UBERON:0005200'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_20_2",
    "user": "gpt-3",
    "question": "Show me the description for lens of type eye with uberon identifier UBERON:0005200",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.name = 'lens of camera-type eye' and anatomical_entity.id = 'UBERON:0005200'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_21_1",
    "user": "gpt-3",
    "question": "Show me the genus of all species with species 'musculus' and species_common_name 'human'",
    "query": "SELECT species.genus FROM species WHERE species.species = 'musculus' and species.speciescommonname = 'human'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_21_2",
    "user": "gpt-3",
    "question": "Show me all species of genus musculus with a common name of human",
    "query": "SELECT species.genus FROM species WHERE species.species = 'musculus' and species.speciescommonname = 'human'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_22_1",
    "user": "gpt-3",
    "question": "What is the actual use for the FDA test trade name 'VYSIS ALK Break Apart FISH Probe Kit' for submissions S001-S004?",
    "query": "SELECT biomarker_fda_test_use.actual_use FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_trade_name = 'VYSIS ALK Break Apart FISH Probe Kit' and biomarker_fda_test_use.test_submission = 'P050045 S001-S004'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_22_2",
    "user": "gpt-3",
    "question": "Show the actual use of the FDA test with trade name VYSIS ALK Break Apart FISH Probe Kit that was submitted for test submissions P050045 S001-S004",
    "query": "SELECT biomarker_fda_test_use.actual_use FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_trade_name = 'VYSIS ALK Break Apart FISH Probe Kit' and biomarker_fda_test_use.test_submission = 'P050045 S001-S004'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_23_1",
    "user": "gpt-3",
    "question": "Show me biomarker id of biomarkers with symbol MIR21 that are not a panel",
    "query": "SELECT biomarker.biomarker_id FROM biomarker WHERE biomarker.test_is_a_panel = 'False' and biomarker.gene_symbol = 'MIR21'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_23_2",
    "user": "gpt-3",
    "question": "Show me the biomarker id of a biomarker with symbol MIR21 which is not a panel ?",
    "query": "SELECT biomarker.biomarker_id FROM biomarker WHERE biomarker.test_is_a_panel = 'False' and biomarker.gene_symbol = 'MIR21'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_24_1",
    "user": "gpt-3",
    "question": "Return clinical significance of FDA tests with a test adoption evidence of clinical use and a histological type of either ductal carcinoma in situ (8500/2) or lobular carcinoma in situ (8520/2)",
    "query": "SELECT biomarker_fda_test.clinical_significance FROM biomarker_fda_test WHERE biomarker_fda_test.test_adoption_evidence = 'clinical use' and biomarker_fda_test.histological_type = '8500/2 (ductal carcinoma in situ) OR 8520/2 (lobular carcinoma in situ)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_24_2",
    "user": "gpt-3",
    "question": "Return the clinical significance of FDA tests with adoption evidence clinical use and histological type either 8500 or 8520 which are in situ.",
    "query": "SELECT biomarker_fda_test.clinical_significance FROM biomarker_fda_test WHERE biomarker_fda_test.test_adoption_evidence = 'clinical use' and biomarker_fda_test.histological_type = '8500/2 (ductal carcinoma in situ) OR 8520/2 (lobular carcinoma in situ)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_25_1",
    "user": "gpt-3",
    "question": "What is the gene symbol for the biomarker with ID 493 in the EDRN (European Drug Research and Innovation) biomarker database with a biomarker description containing 'GDF15'?",
    "query": "SELECT biomarker.gene_symbol FROM biomarker WHERE biomarker.biomarker_id = 'urn:edrn:bmdb:biomarker:493' and biomarker.biomarker_description = 'GDF15, also known as macrophage inhibitory cytokine 1, or MIC1, is a bone morphogenetic protein (BMP) belonging to the transforming growth factor-beta (TGF-beta) superfamily.  The bone morphogenetic proteins regulate tissue differentiation and maintenance.  GDF15 is a secreted protein that is highly expressed in placenta, with lower levels in prostate and colon and some expression in kidney.  Bone morphogenetic protein precursor molecules are cleaved at a dibasic site to release C-terminal domains with 7 conserved cysteines in the mature protein.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_25_2",
    "user": "gpt-3",
    "question": "Show biomarker gene symbol for gene with symbol 'GDF15' and description 'GDF15, also known as macrophage inhibitory cytokine 1, or MIC1, is a bone morphogenetic protein (BMP) belonging to the transforming growth factor-beta (TGF-beta) superfamily. The bone morphogenetic proteins regulate tissue differentiation and maintenance.'",
    "query": "SELECT biomarker.gene_symbol FROM biomarker WHERE biomarker.biomarker_id = 'urn:edrn:bmdb:biomarker:493' and biomarker.biomarker_description = 'GDF15, also known as macrophage inhibitory cytokine 1, or MIC1, is a bone morphogenetic protein (BMP) belonging to the transforming growth factor-beta (TGF-beta) superfamily.  The bone morphogenetic proteins regulate tissue differentiation and maintenance.  GDF15 is a secreted protein that is highly expressed in placenta, with lower levels in prostate and colon and some expression in kidney.  Bone morphogenetic protein precursor molecules are cleaved at a dibasic site to release C-terminal domains with 7 conserved cysteines in the mature protein.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_26_1",
    "user": "gpt-3",
    "question": "Show me the title of biomarkers on the EDRN platform with type Gene and anatomical id UBERON:0000310",
    "query": "SELECT biomarker_edrn.biomarker_title FROM biomarker_edrn WHERE biomarker_edrn.biomarker_type = 'Gene' and biomarker_edrn.uberon_anatomical_id = 'UBERON:0000310'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_26_2",
    "user": "gpt-3",
    "question": "Show me the title of biomarkers with type Gene on anatomical id UBERON:0000310",
    "query": "SELECT biomarker_edrn.biomarker_title FROM biomarker_edrn WHERE biomarker_edrn.biomarker_type = 'Gene' and biomarker_edrn.uberon_anatomical_id = 'UBERON:0000310'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_27_1",
    "user": "gpt-3",
    "question": "Show me all tools for disease mutation impact predictions with a probability of 0.0 and a site prediction of 'benign'",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.probability = 0.0 and disease_mutation_impact_prediction.site_prediction = 'benign'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_27_2",
    "user": "gpt-3",
    "question": "Show me the tool for disease mutation impact predictions with a probability of 0.0 and a site prediction of 'benign'",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.probability = 0.0 and disease_mutation_impact_prediction.site_prediction = 'benign'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_28_2",
    "user": "gpt-3",
    "question": "Show me all test which have a panel with the biomarker SOD1 as part of the panel",
    "query": "SELECT biomarker.test_is_a_panel FROM biomarker WHERE biomarker.biomarker_id = 'urn:edrn:bmdb:biomarker:523' and biomarker.biomarker_description = 'SOD1, superoxide dismutase, is one of two isozymes that destroy free superoxide radicals that are normally produced within the cells and which are toxic to biological systems.  The SOD1 isozyme is a soluble homodimer found in the cytoplasm.  It converts naturally-occuring but harmful superoxide radicals to molecular oxygen and hydrogen peroxide. The other isozyme is a mitochondrial protein. Defects in SOD1 are the cause of amyotrophic lateral sclerosis type 1, a familial form of amyotrophic lateral sclerosis.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_29_1",
    "user": "gpt-3",
    "question": "Show disease mutation amino acid residue variations where the reference amino acid residue is equal to V and the mutation frequency is 2",
    "query": "SELECT disease_mutation.alt_aa FROM disease_mutation WHERE disease_mutation.ref_aa = 'V' and disease_mutation.mutation_freq = 2"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_29_2",
    "user": "gpt-3",
    "question": "Show disease mutation amino acid residue variations with a mutation frequency of 2 and a reference amino acid residue of V",
    "query": "SELECT disease_mutation.alt_aa FROM disease_mutation WHERE disease_mutation.ref_aa = 'V' and disease_mutation.mutation_freq = 2"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_3_1",
    "user": "gpt-3",
    "question": "Show the healthy expression call quality for expression level anatomical relative 'HIGH' with a rank score of 23.5",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression WHERE healthy_expression.expression_level_anatomical_relative = 'HIGH' and healthy_expression.expression_rank_score = 23.50"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_3_2",
    "user": "gpt-3",
    "question": "Show me the call quality of healthy expression with expression level relative anatomical of HIGH and an expression rank score of 23.5",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression WHERE healthy_expression.expression_level_anatomical_relative = 'HIGH' and healthy_expression.expression_rank_score = 23.50"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_30_1",
    "user": "gpt-3",
    "question": "Show me the uberon identifier of bone tissue that has a lattice-like or spongy structure and is part of aortic valve",
    "query": "SELECT anatomical_entity.id FROM anatomical_entity WHERE anatomical_entity.description = 'bone tissue that has a lattice-like or spongy structure; it is highly vascular and contains intercommunicating spaces filled with bone marrow' and anatomical_entity.name = 'aortic valve'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_30_2",
    "user": "gpt-3",
    "question": "Return the uberon identifier for aortic valve that has a lattice-like or spongy structure and is highly vascular",
    "query": "SELECT anatomical_entity.id FROM anatomical_entity WHERE anatomical_entity.description = 'bone tissue that has a lattice-like or spongy structure; it is highly vascular and contains intercommunicating spaces filled with bone marrow' and anatomical_entity.name = 'aortic valve'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_31_1",
    "user": "gpt-3",
    "question": "List the expression level anatomical relative expressions with a score of 2.63 and a rank score of 28.20",
    "query": "SELECT healthy_expression.expression_level_anatomical_relative FROM healthy_expression WHERE healthy_expression.expression_score = 2.63000 and healthy_expression.expression_rank_score = 28.20"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_31_2",
    "user": "gpt-3",
    "question": "Show expression level anatomical relative for expressions with a score of 2.63 and a rank score of 28.20",
    "query": "SELECT healthy_expression.expression_level_anatomical_relative FROM healthy_expression WHERE healthy_expression.expression_score = 2.63000 and healthy_expression.expression_rank_score = 28.20"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_32_1",
    "user": "gpt-3",
    "question": "What is the probability for a mutation impact prediction tool 'polyphen' on benign site predictions?",
    "query": "SELECT disease_mutation_impact_prediction.probability FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.tool = 'polyphen' and disease_mutation_impact_prediction.site_prediction = 'benign'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_32_2",
    "user": "gpt-3",
    "question": "What is the probability for a mutation impact prediction tool polyphen with a benign site prediction?",
    "query": "SELECT disease_mutation_impact_prediction.probability FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.tool = 'polyphen' and disease_mutation_impact_prediction.site_prediction = 'benign'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_33_1",
    "user": "gpt-3",
    "question": "Identify the expression level anatomical relative expression score for the expression which score is 2.63 and call quality is 'GOLD'",
    "query": "SELECT healthy_expression.expression_level_anatomical_relative FROM healthy_expression WHERE healthy_expression.expression_score = 2.63000 and healthy_expression.call_quality = 'GOLD'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_33_2",
    "user": "gpt-3",
    "question": "Show expression level anatomical relative for healthy expressions with a score of 2.63 (call quality GOLD) and expression score of 2.63000",
    "query": "SELECT healthy_expression.expression_level_anatomical_relative FROM healthy_expression WHERE healthy_expression.expression_score = 2.63000 and healthy_expression.call_quality = 'GOLD'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_34_1",
    "user": "gpt-3",
    "question": "Show me the histological type of FDA tests with biomarker origin 'multigene prediction' having test study design 'Pro'",
    "query": "SELECT biomarker_fda_test.histological_type FROM biomarker_fda_test WHERE biomarker_fda_test.test_study_design = 'Pro' and biomarker_fda_test.biomarker_origin = 'multigene prediction'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_34_2",
    "user": "gpt-3",
    "question": "Show histological types for FDA tests with study design 'Pro' having biomarker origin 'multigene prediction'",
    "query": "SELECT biomarker_fda_test.histological_type FROM biomarker_fda_test WHERE biomarker_fda_test.test_study_design = 'Pro' and biomarker_fda_test.biomarker_origin = 'multigene prediction'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_35_1",
    "user": "gpt-3",
    "question": "Show the expression level gene relative of healthy expressions with call quality SILVER and expression rank score of 40.5",
    "query": "SELECT healthy_expression.expression_level_gene_relative FROM healthy_expression WHERE healthy_expression.call_quality = 'SILVER' and healthy_expression.expression_rank_score = 40.50"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_35_2",
    "user": "gpt-3",
    "question": "Show the relative expression level for genes with call quality SILVER and expression rank score 40.5",
    "query": "SELECT healthy_expression.expression_level_gene_relative FROM healthy_expression WHERE healthy_expression.call_quality = 'SILVER' and healthy_expression.expression_rank_score = 40.50"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_36_1",
    "user": "gpt-3",
    "question": "Show the pvalue of differential expression with statistical significance 'No' and gene symbol AAAS",
    "query": "SELECT differential_expression.pvalue FROM differential_expression WHERE differential_expression.statistical_significance = 'No' and differential_expression.gene_symbol = 'AAAS'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_36_2",
    "user": "gpt-3",
    "question": "Show the pvalue of differential expression with statistical significance 'No' and gene symbol 'AAAS'",
    "query": "SELECT differential_expression.pvalue FROM differential_expression WHERE differential_expression.statistical_significance = 'No' and differential_expression.gene_symbol = 'AAAS'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_37_1",
    "user": "gpt-3",
    "question": "Show me all information about species 'Mus' with common name 'mouse'",
    "query": "SELECT species.species FROM species WHERE species.genus = 'Mus' and species.speciescommonname = 'mouse'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_37_2",
    "user": "gpt-3",
    "question": "Show me all species where genus is Mus and species common name is mouse",
    "query": "SELECT species.species FROM species WHERE species.genus = 'Mus' and species.speciescommonname = 'mouse'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_38_1",
    "user": "gpt-3",
    "question": "Show probability for disease mutation impact predictions with tool 'polyphen' and site prediction 'probably damaging'",
    "query": "SELECT disease_mutation_impact_prediction.probability FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.tool = 'polyphen' and disease_mutation_impact_prediction.site_prediction = 'probably damaging'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_38_2",
    "user": "gpt-3",
    "question": "Show me the probability for disease mutation impact predictions where the tool is polyphen and the site prediction is probably damaging",
    "query": "SELECT disease_mutation_impact_prediction.probability FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.tool = 'polyphen' and disease_mutation_impact_prediction.site_prediction = 'probably damaging'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_39_1",
    "user": "gpt-3",
    "question": "Show me the description of an anatomical entity with uberon identifier UBERON:0002581 having the name paraflocculus",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0002581' and anatomical_entity.name = 'paraflocculus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_39_2",
    "user": "gpt-3",
    "question": "Show me the description for anatomical entity with uberon identifier UBERON:0002581 and name paraflocculus",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0002581' and anatomical_entity.name = 'paraflocculus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_4_1",
    "user": "gpt-3",
    "question": "Show me the description for lower esophagus with uberon identifier UBERON:0000057",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.name = 'lower esophagus' and anatomical_entity.id = 'UBERON:0000057'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_4_2",
    "user": "gpt-3",
    "question": "Give me the description of lower esophagus with uberon identifier UBERON:0000057",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.name = 'lower esophagus' and anatomical_entity.id = 'UBERON:0000057'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_40_1",
    "user": "gpt-3",
    "question": "List the description for anatomical entities with uberon identifier UBERON:0001384 Where the name is 'craniocervical region'",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0001384' and anatomical_entity.name = 'craniocervical region'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_40_2",
    "user": "gpt-3",
    "question": "Return the description for the anatomical entity with uberon identifier UBERON:0001384 which name is 'craniocervical region'",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0001384' and anatomical_entity.name = 'craniocervical region'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_41_1",
    "user": "gpt-3",
    "question": "Get the call quality of healthy expressions with expression level relative gene = HIGH and expression score = 3.42000",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression WHERE healthy_expression.expression_level_gene_relative = 'HIGH' and healthy_expression.expression_score = 3.42000"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_41_2",
    "user": "gpt-3",
    "question": "List the call quality for healthy expressions with expression level gene relative HIGH and expression score 3.42000",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression WHERE healthy_expression.expression_level_gene_relative = 'HIGH' and healthy_expression.expression_score = 3.42000"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_42_1",
    "user": "gpt-3",
    "question": "Show biomarker origin for FDA test with approval status 'Class II 510(k)', evidence 'clinical use'",
    "query": "SELECT biomarker_fda_test.biomarker_origin FROM biomarker_fda_test WHERE biomarker_fda_test.test_approval_status = 'Class II 510(k)' and biomarker_fda_test.test_adoption_evidence = 'clinical use'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_42_2",
    "user": "gpt-3",
    "question": "Show biomarker origin for FDA tests with approval status 'Class II 510(k)', adoption evidence 'clinical use'",
    "query": "SELECT biomarker_fda_test.biomarker_origin FROM biomarker_fda_test WHERE biomarker_fda_test.test_approval_status = 'Class II 510(k)' and biomarker_fda_test.test_adoption_evidence = 'clinical use'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_43_1",
    "user": "gpt-3",
    "question": "List all biomarker types of biomarkers in QA state 'Under Review' for anatomical id 'UBERON:0000992'",
    "query": "SELECT biomarker_edrn.biomarker_type FROM biomarker_edrn WHERE biomarker_edrn.uberon_anatomical_id = 'UBERON:0000992' and biomarker_edrn.qa_state = 'Under Review'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_43_2",
    "user": "gpt-3",
    "question": "What is the type of biomarker for anatomical id UBERON:0000992 in QA state 'Under Review'?",
    "query": "SELECT biomarker_edrn.biomarker_type FROM biomarker_edrn WHERE biomarker_edrn.uberon_anatomical_id = 'UBERON:0000992' and biomarker_edrn.qa_state = 'Under Review'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_44_1",
    "user": "gpt-3",
    "question": "Show me the expression rank score of healthy expressions with gene relative level 'HIGH' and anatomical relative level 'HIGH'",
    "query": "SELECT healthy_expression.expression_rank_score FROM healthy_expression WHERE healthy_expression.expression_level_gene_relative = 'HIGH' and healthy_expression.expression_level_anatomical_relative = 'HIGH'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_44_2",
    "user": "gpt-3",
    "question": "Show expression rank score for healthy expressions with level relative gene expression of 'HIGH' and level relative expression in anatomical structure of 'HIGH'",
    "query": "SELECT healthy_expression.expression_rank_score FROM healthy_expression WHERE healthy_expression.expression_level_gene_relative = 'HIGH' and healthy_expression.expression_level_anatomical_relative = 'HIGH'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_45_1",
    "user": "gpt-3",
    "question": "Show me the probability for disease mutation impact predictions with tool polyphen and a site prediction of probably damaging?",
    "query": "SELECT disease_mutation_impact_prediction.probability FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.site_prediction = 'probably damaging' and disease_mutation_impact_prediction.tool = 'polyphen'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_45_2",
    "user": "gpt-3",
    "question": "Show me the probability for disease mutation impact predictions with site prediction 'probably damaging' and tool 'polyphen'",
    "query": "SELECT disease_mutation_impact_prediction.probability FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.site_prediction = 'probably damaging' and disease_mutation_impact_prediction.tool = 'polyphen'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_46_1",
    "user": "gpt-3",
    "question": "Show me the description for the anatomical entity with name 'pharyngeal mucosa' with uberon identifier 'UBERON:0002384'",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.name = 'pharyngeal mucosa' and anatomical_entity.id = 'UBERON:0002384'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_46_2",
    "user": "gpt-3",
    "question": "Show me the description for the anatomical entity 'pharyngeal mucosa' with uberon identifier UBERON:0002384",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.name = 'pharyngeal mucosa' and anatomical_entity.id = 'UBERON:0002384'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_47_1",
    "user": "gpt-3",
    "question": "Show submissions for FDA tests with evidence 'clinical use' using the ICH platform method",
    "query": "SELECT biomarker_fda_test.test_submission FROM biomarker_fda_test WHERE biomarker_fda_test.test_adoption_evidence = 'clinical use' and biomarker_fda_test.platform_method = 'ICH'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_47_2",
    "user": "gpt-3",
    "question": "Show submissions for FDA tests with evidence clinical use and a platform method of ICH",
    "query": "SELECT biomarker_fda_test.test_submission FROM biomarker_fda_test WHERE biomarker_fda_test.test_adoption_evidence = 'clinical use' and biomarker_fda_test.platform_method = 'ICH'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_48_1",
    "user": "gpt-3",
    "question": "Show me the site prediction for disease mutation impact predictions which have a probability of 0.0 and use the tool 'polyphen'",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.probability = 0.0 and disease_mutation_impact_prediction.tool = 'polyphen'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_48_2",
    "user": "gpt-3",
    "question": "Show me the site prediction for disease mutation impact predictions with a probability of 0.0 and using polyphen as tool.",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.probability = 0.0 and disease_mutation_impact_prediction.tool = 'polyphen'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_49_1",
    "user": "gpt-3",
    "question": "Show the adoption evidence for FDA tests from manufacturer Agendia BV with platform method C and E.",
    "query": "SELECT biomarker_fda_test.test_adoption_evidence FROM biomarker_fda_test WHERE biomarker_fda_test.test_manufacturer = 'Agendia BV' and biomarker_fda_test.platform_method = 'C and E'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_49_2",
    "user": "gpt-3",
    "question": "Show evidence adoption for FDA test with manufacturer Agendia BV using platform method C and E?",
    "query": "SELECT biomarker_fda_test.test_adoption_evidence FROM biomarker_fda_test WHERE biomarker_fda_test.test_manufacturer = 'Agendia BV' and biomarker_fda_test.platform_method = 'C and E'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_5_1",
    "user": "gpt-3",
    "question": "Show approved indications for FDA tests with trade name 'MammaPrint' where actual use is 'prognostic'",
    "query": "SELECT biomarker_fda_test_use.approved_indication FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_trade_name = 'MammaPrint' and biomarker_fda_test_use.actual_use = 'prognostic'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_5_2",
    "user": "gpt-3",
    "question": "Show approved indications for FDA tests with trade name 'MammaPrint' and actual use 'prognostic'",
    "query": "SELECT biomarker_fda_test_use.approved_indication FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_trade_name = 'MammaPrint' and biomarker_fda_test_use.actual_use = 'prognostic'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_6_1",
    "user": "gpt-3",
    "question": "Show disease mutation chromosome positions having disease mutation amino acid position uniprot kb = 240 and mutation frequency = 1",
    "query": "SELECT disease_mutation.chromosome_pos FROM disease_mutation WHERE disease_mutation.aa_pos_uniprotkb = 240 and disease_mutation.mutation_freq = 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_6_2",
    "user": "gpt-3",
    "question": "Show disease mutation chromosome position where the amino acids position uniprot kB is 240 and the mutation frequency is 1",
    "query": "SELECT disease_mutation.chromosome_pos FROM disease_mutation WHERE disease_mutation.aa_pos_uniprotkb = 240 and disease_mutation.mutation_freq = 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_7_1",
    "user": "gpt-3",
    "question": "What is the disease ontology identifier for differential expression with subjects no change 16 and a pvalue of 0.102?",
    "query": "SELECT differential_expression.doid FROM differential_expression WHERE differential_expression.subjects_nochange = 16 and differential_expression.pvalue = 0.102"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_7_2",
    "user": "gpt-3",
    "question": "What is the disease ontology identifier for differential expression with subjects no change of 16 and a pvalue of 0.102?",
    "query": "SELECT differential_expression.doid FROM differential_expression WHERE differential_expression.subjects_nochange = 16 and differential_expression.pvalue = 0.102"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_8_1",
    "user": "gpt-3",
    "question": "Show the expression level anatomical relative for healthy expressions with call quality 'SILVER' and expression score 3.42000",
    "query": "SELECT healthy_expression.expression_level_anatomical_relative FROM healthy_expression WHERE healthy_expression.call_quality = 'SILVER' and healthy_expression.expression_score = 3.42000"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_8_2",
    "user": "gpt-3",
    "question": "Return the expression level anatomical relative expression for healthy expressions with call quality SILVER and expression score 3.42000",
    "query": "SELECT healthy_expression.expression_level_anatomical_relative FROM healthy_expression WHERE healthy_expression.call_quality = 'SILVER' and healthy_expression.expression_score = 3.42000"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_9_1",
    "user": "gpt-3",
    "question": "Show me the trade name of FDA tests with DOID 1612 and specimen type 'Paraffin block'",
    "query": "SELECT biomarker_fda_test.test_trade_name FROM biomarker_fda_test WHERE biomarker_fda_test.doid = 1612 and biomarker_fda_test.specimen_type = 'Paraffin block'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "6_9_2",
    "user": "gpt-3",
    "question": "Show me the trade name of FDA tests with doid 1612 which are performed with 'Paraffin block' as specimen type",
    "query": "SELECT biomarker_fda_test.test_trade_name FROM biomarker_fda_test WHERE biomarker_fda_test.doid = 1612 and biomarker_fda_test.specimen_type = 'Paraffin block'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_0_1",
    "user": "gpt-3",
    "question": "Show me species of species with genus Mus or Mus",
    "query": "SELECT species.species FROM species WHERE species.genus = 'Mus' or species.genus = 'Mus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_0_2",
    "user": "gpt-3",
    "question": "Show species of species with genus either Mus or Mus",
    "query": "SELECT species.species FROM species WHERE species.genus = 'Mus' or species.genus = 'Mus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_1_1",
    "user": "gpt-3",
    "question": "What is the biomarker type for biomarkers with anatomical ID 'UBERON:0000992' or 'UBERON:0002367' on EDRN?",
    "query": "SELECT biomarker_edrn.biomarker_type FROM biomarker_edrn WHERE biomarker_edrn.uberon_anatomical_id = 'UBERON:0000992' or biomarker_edrn.uberon_anatomical_id = 'UBERON:0002367'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_1_2",
    "user": "gpt-3",
    "question": "Which biomarker type is there for anatomical identifier UBERON:0000992 or UBERON:0002367",
    "query": "SELECT biomarker_edrn.biomarker_type FROM biomarker_edrn WHERE biomarker_edrn.uberon_anatomical_id = 'UBERON:0000992' or biomarker_edrn.uberon_anatomical_id = 'UBERON:0002367'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_10_1",
    "user": "gpt-3",
    "question": "Get the common name for species with genus Mus or Homo",
    "query": "SELECT species.speciescommonname FROM species WHERE species.genus = 'Mus' or species.genus = 'Homo'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_10_2",
    "user": "gpt-3",
    "question": "Give me the common name for species with genus Mus or Homo",
    "query": "SELECT species.speciescommonname FROM species WHERE species.genus = 'Mus' or species.genus = 'Homo'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_11_1",
    "user": "gpt-3",
    "question": "Show me the disease mutation site annotations that have a feature key for either zinc or phosphothreonine",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.description = 'Zinc; catalytic' or disease_mutation_site_annotation.description = 'Phosphothreonine'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_11_2",
    "user": "gpt-3",
    "question": "Show me the disease mutation site annotations with feature key for zinc and phosphothreonine",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.description = 'Zinc; catalytic' or disease_mutation_site_annotation.description = 'Phosphothreonine'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_12_1",
    "user": "gpt-3",
    "question": "Show test manufacturers for FDA tests with specimen type Paraffin block or Paraffin block",
    "query": "SELECT biomarker_fda_test.test_manufacturer FROM biomarker_fda_test WHERE biomarker_fda_test.specimen_type = 'Paraffin block' or biomarker_fda_test.specimen_type = 'Paraffin block'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_12_2",
    "user": "gpt-3",
    "question": "Show test manufacturer for FDA tests with specimen type either 'Paraffin block' or 'Paraffin block'",
    "query": "SELECT biomarker_fda_test.test_manufacturer FROM biomarker_fda_test WHERE biomarker_fda_test.specimen_type = 'Paraffin block' or biomarker_fda_test.specimen_type = 'Paraffin block'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_13_1",
    "user": "gpt-3",
    "question": "Show me the test trade name for FDA tests where actual use is either 'prognostic' or 'prognostic'",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.actual_use = 'prognostic' or biomarker_fda_test_use.actual_use = 'prognostic'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_13_2",
    "user": "gpt-3",
    "question": "Show me all FDA trade names for test uses where actual use is either 'prognostic' or 'prognostic'",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.actual_use = 'prognostic' or biomarker_fda_test_use.actual_use = 'prognostic'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_14_1",
    "user": "gpt-3",
    "question": "Return the expression quality call_quality of healthy expressions with an expression score of 2.63 and 3.42",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression WHERE healthy_expression.expression_score = 2.63000 or healthy_expression.expression_score = 3.42000"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_14_2",
    "user": "gpt-3",
    "question": "Return the call quality of healthy expressions with expression score either 2.63 or 3.42",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression WHERE healthy_expression.expression_score = 2.63000 or healthy_expression.expression_score = 3.42000"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_15_1",
    "user": "gpt-3",
    "question": "Show me the title of all biomarkers on the EDRN platform in phase one or one",
    "query": "SELECT biomarker_edrn.biomarker_title FROM biomarker_edrn WHERE biomarker_edrn.phase = 'One' or biomarker_edrn.phase = 'One'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_15_2",
    "user": "gpt-3",
    "question": "Show me the title of all biomarkers on the EDRN platform in phase One or One",
    "query": "SELECT biomarker_edrn.biomarker_title FROM biomarker_edrn WHERE biomarker_edrn.phase = 'One' or biomarker_edrn.phase = 'One'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_16_1",
    "user": "gpt-3",
    "question": "Show submissions for FDA tests that are either actual use 'prognostic' or use 'prognostic'",
    "query": "SELECT biomarker_fda_test_use.test_submission FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.actual_use = 'prognostic' or biomarker_fda_test_use.actual_use = 'prognostic'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_16_2",
    "user": "gpt-3",
    "question": "Show submissions on FDA tests using either 'prognostic' or 'prognostic' as actual use",
    "query": "SELECT biomarker_fda_test_use.test_submission FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.actual_use = 'prognostic' or biomarker_fda_test_use.actual_use = 'prognostic'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_17_1",
    "user": "gpt-3",
    "question": "Show submissions for FDA tests with trade name Cobas EGFR MUTATION TEST v2 or trade name MammaPrint",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'Cobas EGFR MUTATION TEST v2' or biomarker_fda.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_17_2",
    "user": "gpt-3",
    "question": "Show submissions of biomarker FDA with trade name 'Cobas EGFR Mutation Test v2' or 'MammaPrint'",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'Cobas EGFR MUTATION TEST v2' or biomarker_fda.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_18_1",
    "user": "gpt-3",
    "question": "Return the expression score of healthy expressions with gene relative expression level 'HIGH' or 'MEDIUM'",
    "query": "SELECT healthy_expression.expression_score FROM healthy_expression WHERE healthy_expression.expression_level_gene_relative = 'HIGH' or healthy_expression.expression_level_gene_relative = 'MEDIUM'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_18_2",
    "user": "gpt-3",
    "question": "Return the expression score of healthy expressions with gene relative expression level HIGH or MEDIUM",
    "query": "SELECT healthy_expression.expression_score FROM healthy_expression WHERE healthy_expression.expression_level_gene_relative = 'HIGH' or healthy_expression.expression_level_gene_relative = 'MEDIUM'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_19_1",
    "user": "gpt-3",
    "question": "Show me the expression score for healthy expressions with gene relative expression level either HIGH or LOW.",
    "query": "SELECT healthy_expression.expression_score FROM healthy_expression WHERE healthy_expression.expression_level_gene_relative = 'HIGH' or healthy_expression.expression_level_gene_relative = 'LOW'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_19_2",
    "user": "gpt-3",
    "question": "Return the expression scores for healthy expressions with gene relative expression level 'HIGH' or 'LOW'",
    "query": "SELECT healthy_expression.expression_score FROM healthy_expression WHERE healthy_expression.expression_level_gene_relative = 'HIGH' or healthy_expression.expression_level_gene_relative = 'LOW'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_2_1",
    "user": "gpt-3",
    "question": "List the manufacturers of FDA tests with id '1612' or '9256'",
    "query": "SELECT biomarker_fda_test.test_manufacturer FROM biomarker_fda_test WHERE biomarker_fda_test.doid = 1612 or biomarker_fda_test.doid = 9256"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_2_2",
    "user": "gpt-3",
    "question": "Show me all test manufacturers for FDA tests with identifiers 1612 or 9256",
    "query": "SELECT biomarker_fda_test.test_manufacturer FROM biomarker_fda_test WHERE biomarker_fda_test.doid = 1612 or biomarker_fda_test.doid = 9256"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_20_1",
    "user": "gpt-3",
    "question": "Show me the common name for species musculus",
    "query": "SELECT species.speciescommonname FROM species WHERE species.species = 'musculus' or species.species = 'musculus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_20_2",
    "user": "gpt-3",
    "question": "What is the common name for species musculus?",
    "query": "SELECT species.speciescommonname FROM species WHERE species.species = 'musculus' or species.species = 'musculus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_21_1",
    "user": "gpt-3",
    "question": "Show me all names of the anatomical entities where the description is different from 'the tubules in the testes where spermatogenesis occurs' or 'A zone of skin that is part of a hindlimb stylopod.'",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.description = 'the tubules in the testes where spermatogenesis occurs' or anatomical_entity.description = 'A zone of skin that is part of a hindlimb stylopod [Automatically generated definition].'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_21_2",
    "user": "gpt-3",
    "question": "Show all names of anatomical entities where the description either is 'the tubules in the testes where spermatogenesis occurs' or 'A zone of skin that is part of a hindlimb stylopod'.",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.description = 'the tubules in the testes where spermatogenesis occurs' or anatomical_entity.description = 'A zone of skin that is part of a hindlimb stylopod [Automatically generated definition].'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_22_1",
    "user": "gpt-3",
    "question": "What is the common name for species with genus Mus?",
    "query": "SELECT species.speciescommonname FROM species WHERE species.genus = 'Mus' or species.genus = 'Mus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_22_2",
    "user": "gpt-3",
    "question": "What is the common name for species 'Mus'?",
    "query": "SELECT species.speciescommonname FROM species WHERE species.genus = 'Mus' or species.genus = 'Mus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_23_1",
    "user": "gpt-3",
    "question": "Show me a prediction of disease mutation impact where the tool is either polyphen or polyphen",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.tool = 'polyphen' or disease_mutation_impact_prediction.tool = 'polyphen'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_23_2",
    "user": "gpt-3",
    "question": "Identify all disease mutation impact predictions for which the tool is either polyphen or polyphen",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.tool = 'polyphen' or disease_mutation_impact_prediction.tool = 'polyphen'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_24_1",
    "user": "gpt-3",
    "question": "Show submissions for the FDA test with trade name 'MammaPrint' or 'MammaPrint'",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'MammaPrint' or biomarker_fda.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_24_2",
    "user": "gpt-3",
    "question": "Show submissions for FDA test with trade name 'MammaPrint' or 'MammaPrint'",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'MammaPrint' or biomarker_fda.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_25_1",
    "user": "gpt-3",
    "question": "Show biomarker origin for FDA test with platform method D or I",
    "query": "SELECT biomarker_fda_test.biomarker_origin FROM biomarker_fda_test WHERE biomarker_fda_test.platform_method = 'D' or biomarker_fda_test.platform_method = 'I'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_25_2",
    "user": "gpt-3",
    "question": "Show me all FDA test with biomarker origin D or I",
    "query": "SELECT biomarker_fda_test.biomarker_origin FROM biomarker_fda_test WHERE biomarker_fda_test.platform_method = 'D' or biomarker_fda_test.platform_method = 'I'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_26_1",
    "user": "gpt-3",
    "question": "Return the expression level gene relative expression where the call quality is either 'SILVER' or 'SILVER'",
    "query": "SELECT healthy_expression.expression_level_gene_relative FROM healthy_expression WHERE healthy_expression.call_quality = 'SILVER' or healthy_expression.call_quality = 'SILVER'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_26_2",
    "user": "gpt-3",
    "question": "Return the expression level gene relative for healthy expressions with call quality SILVER or SILVER",
    "query": "SELECT healthy_expression.expression_level_gene_relative FROM healthy_expression WHERE healthy_expression.call_quality = 'SILVER' or healthy_expression.call_quality = 'SILVER'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_27_1",
    "user": "gpt-3",
    "question": "What is the actual use for FDA tests with an approved indication of prognosis or early detection?",
    "query": "SELECT biomarker_fda_test_use.actual_use FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.approved_indication = 'prognosis' or biomarker_fda_test_use.approved_indication = 'early detection'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_27_2",
    "user": "gpt-3",
    "question": "What is the actual test use for FDA tests with an approved indication of either 'prognosis' or 'early detection'?",
    "query": "SELECT biomarker_fda_test_use.actual_use FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.approved_indication = 'prognosis' or biomarker_fda_test_use.approved_indication = 'early detection'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_28_1",
    "user": "gpt-3",
    "question": "Show submissions for FDA tests with trade names 'VENTANA ANTI-MSH2 (G219-1129) MOUSE MONOCLONAL PRIMARY ANTIBODY' or 'MammaPrint'",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'VENTANA ANTI-MSH2 (G219-1129) MOUSE MONOCLONAL PRIMARY ANTIBODY' or biomarker_fda.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_28_2",
    "user": "gpt-3",
    "question": "Show test submission for biomarkers FDA with trade name VENTANA ANTI-MSH2 (G219-1129) MOUSE MONOCLONAL PRIMARY ANTIBODY or trade name MammaPrint",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'VENTANA ANTI-MSH2 (G219-1129) MOUSE MONOCLONAL PRIMARY ANTIBODY' or biomarker_fda.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_29_1",
    "user": "gpt-3",
    "question": "Show me the probability for disease mutation impact predictions with site prediction 'probably damaging' or 'possibly damaging'",
    "query": "SELECT disease_mutation_impact_prediction.probability FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.site_prediction = 'probably damaging' or disease_mutation_impact_prediction.site_prediction = 'possibly damaging'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_29_2",
    "user": "gpt-3",
    "question": "Show me the probability for disease mutation impact predictions with site prediction either 'probably damaging' or 'possibly damaging'",
    "query": "SELECT disease_mutation_impact_prediction.probability FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.site_prediction = 'probably damaging' or disease_mutation_impact_prediction.site_prediction = 'possibly damaging'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_3_1",
    "user": "gpt-3",
    "question": "Show submissions for the FDA tests with trade names 'Prosigna Breast Cancer Prognostic Gene Signature Assay' and 'MammaPrint'",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'Prosigna Breast Cancer Prognostic Gene Signature Assay' or biomarker_fda.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_3_2",
    "user": "gpt-3",
    "question": "Show submissions for tests with either 'Prosigna Breast Cancer Prognostic Gene Signature Assay' or 'MammaPrint' as trade name",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'Prosigna Breast Cancer Prognostic Gene Signature Assay' or biomarker_fda.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_30_1",
    "user": "gpt-3",
    "question": "Show disease mutation site annotation feature keys for mutation sites with annotations 'Phosphoserine' or 'Zinc; catalytic'",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.description = 'Phosphoserine' or disease_mutation_site_annotation.description = 'Zinc; catalytic'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_30_2",
    "user": "gpt-3",
    "question": "Show me the key of all disease mutation site annotations which have a description either 'Phosphoserine' or 'Zinc; catalytic'",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.description = 'Phosphoserine' or disease_mutation_site_annotation.description = 'Zinc; catalytic'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_31_1",
    "user": "gpt-3",
    "question": "What is the common name for species Homo?",
    "query": "SELECT species.speciescommonname FROM species WHERE species.genus = 'Homo' or species.genus = 'Homo'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_31_2",
    "user": "gpt-3",
    "question": "Show me the common name for species Homo",
    "query": "SELECT species.speciescommonname FROM species WHERE species.genus = 'Homo' or species.genus = 'Homo'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_32_1",
    "user": "gpt-3",
    "question": "Show me the key for disease mutation site annotations which have a description of 'N-linked (GlcNAc...) asparagine' or 'N-linked (GlcNAc...) asparagine'",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.description = 'N-linked (GlcNAc...) asparagine' or disease_mutation_site_annotation.description = 'N-linked (GlcNAc...) asparagine'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_32_2",
    "user": "gpt-3",
    "question": "Show the key for disease mutation site annotations where the description is either 'N-linked (GlcNAc...) asparagine' or 'N-linked (GlcNAc...) asparagine'",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.description = 'N-linked (GlcNAc...) asparagine' or disease_mutation_site_annotation.description = 'N-linked (GlcNAc...) asparagine'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_33_1",
    "user": "gpt-3",
    "question": "Show approved indication for FDA tests with trade name '23andMe PGS Genetic Health Risk Report for BRCA1/BRCA2 (Selected Variants)' or 'Cobas EGFR MUTATION TEST v2'",
    "query": "SELECT biomarker_fda_test_use.approved_indication FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_trade_name = '23andMe PGS Genetic Health Risk Report for BRCA1/BRCA2 (Selected Variants)' or biomarker_fda_test_use.test_trade_name = 'Cobas EGFR MUTATION TEST v2'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_33_2",
    "user": "gpt-3",
    "question": "Show approved indication for FDA tests with trade name '23andMe PGS Genetic Health Risk Report for BRCA1/BRCA2 (Selected Variants)' or name 'Cobas EGFR MUTATION TEST v2'",
    "query": "SELECT biomarker_fda_test_use.approved_indication FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_trade_name = '23andMe PGS Genetic Health Risk Report for BRCA1/BRCA2 (Selected Variants)' or biomarker_fda_test_use.test_trade_name = 'Cobas EGFR MUTATION TEST v2'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_34_1",
    "user": "gpt-3",
    "question": "Show me the trade name of FDA tests with submissions 'K101454' or 'P140020'",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda WHERE biomarker_fda.test_submission = 'K101454' or biomarker_fda.test_submission = 'P140020'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_34_2",
    "user": "gpt-3",
    "question": "What is the trade name of FDA tests with submission K101454 or P140020?",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda WHERE biomarker_fda.test_submission = 'K101454' or biomarker_fda.test_submission = 'P140020'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_35_1",
    "user": "gpt-3",
    "question": "Show the actual use of FDA tests submissions P110027/P110030 and K062731",
    "query": "SELECT biomarker_fda_test_use.actual_use FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_submission = 'P110027/P110030' or biomarker_fda_test_use.test_submission = 'K062731'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_35_2",
    "user": "gpt-3",
    "question": "What is the actual use for the FDA test submissions P110027/P110030 and K062731?",
    "query": "SELECT biomarker_fda_test_use.actual_use FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_submission = 'P110027/P110030' or biomarker_fda_test_use.test_submission = 'K062731'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_36_1",
    "user": "gpt-3",
    "question": "Show me the prediction for disease mutation impact predictions with a probability of neither 0.0 nor 0.0",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.probability = 0.0 or disease_mutation_impact_prediction.probability = 0.0"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_36_2",
    "user": "gpt-3",
    "question": "Show site predictions for disease mutation impact predictions with either a probability of 0.0 or a probability of 0.0",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.probability = 0.0 or disease_mutation_impact_prediction.probability = 0.0"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_37_1",
    "user": "gpt-3",
    "question": "Show me the QA state for biomarker with type gene or protein on the EDRN platform",
    "query": "SELECT biomarker_edrn.qa_state FROM biomarker_edrn WHERE biomarker_edrn.biomarker_type = 'Gene' or biomarker_edrn.biomarker_type = 'Protein'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_37_2",
    "user": "gpt-3",
    "question": "Show me the QA state for biomarkers on the EDRN platform with biomarker type gene or protein.",
    "query": "SELECT biomarker_edrn.qa_state FROM biomarker_edrn WHERE biomarker_edrn.biomarker_type = 'Gene' or biomarker_edrn.biomarker_type = 'Protein'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_38_1",
    "user": "gpt-3",
    "question": "Show me the description of biomarkers which are not a panel or which are not a panel",
    "query": "SELECT biomarker.biomarker_description FROM biomarker WHERE biomarker.test_is_a_panel = 'False' or biomarker.test_is_a_panel = 'False'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_38_2",
    "user": "gpt-3",
    "question": "Show me the description of all biomarkers which are not a panel or not a panel",
    "query": "SELECT biomarker.biomarker_description FROM biomarker WHERE biomarker.test_is_a_panel = 'False' or biomarker.test_is_a_panel = 'False'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_39_1",
    "user": "gpt-3",
    "question": "Show me the anatomical ID for biomarkers on the EDRN platform in phase one",
    "query": "SELECT biomarker_edrn.uberon_anatomical_id FROM biomarker_edrn WHERE biomarker_edrn.phase = 'One' or biomarker_edrn.phase = 'One'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_39_2",
    "user": "gpt-3",
    "question": "Show me the anatomical id of biomarkers on the EDRN platform with phase One or One",
    "query": "SELECT biomarker_edrn.uberon_anatomical_id FROM biomarker_edrn WHERE biomarker_edrn.phase = 'One' or biomarker_edrn.phase = 'One'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_4_1",
    "user": "gpt-3",
    "question": "Show submissions for biomarker FDA tests with trade name 'VENTANA ANTI-MSH6 (SP 93) MOUSE MONOCLONAL PRIMARY ANTIBODY' or 'MammaPrint'",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'VENTANA ANTI-MSH6 (SP 93) MOUSE MONOCLONAL PRIMARY ANTIBODY' or biomarker_fda.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_4_2",
    "user": "gpt-3",
    "question": "Show biomarker FDA submissions with test trade name 'VENTANA ANTI-MSH6 (SP 93) MOUSE MONOCLONAL PRIMARY ANTIBODY' or 'MammaPrint'",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name = 'VENTANA ANTI-MSH6 (SP 93) MOUSE MONOCLONAL PRIMARY ANTIBODY' or biomarker_fda.test_trade_name = 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_40_1",
    "user": "gpt-3",
    "question": "Show me all data sources for disease mutations on chromosome X or chromosome 11?",
    "query": "SELECT disease_mutation.data_source FROM disease_mutation WHERE disease_mutation.chromosome_id = 'X' or disease_mutation.chromosome_id = '11'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_40_2",
    "user": "gpt-3",
    "question": "Show me all disease mutation data sources for disease mutations on chromosome X or chromosome 11",
    "query": "SELECT disease_mutation.data_source FROM disease_mutation WHERE disease_mutation.chromosome_id = 'X' or disease_mutation.chromosome_id = '11'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_41_1",
    "user": "gpt-3",
    "question": "Show all amino acid residue variations of disease mutations with a chromosome position of 13949277 or 172224590",
    "query": "SELECT disease_mutation.alt_aa FROM disease_mutation WHERE disease_mutation.chromosome_pos = 13949277 or disease_mutation.chromosome_pos = 172224590"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_41_2",
    "user": "gpt-3",
    "question": "Show me the amino acid residue variations of disease mutations on chromosome position 13949277 or 172224590",
    "query": "SELECT disease_mutation.alt_aa FROM disease_mutation WHERE disease_mutation.chromosome_pos = 13949277 or disease_mutation.chromosome_pos = 172224590"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_42_1",
    "user": "gpt-3",
    "question": "Show me the trade name for FDA tests with submission 'K080252' or 'K080252'",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda WHERE biomarker_fda.test_submission = 'K080252' or biomarker_fda.test_submission = 'K080252'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_42_2",
    "user": "gpt-3",
    "question": "Show me all valid test trade names for FDA submission K080252",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda WHERE biomarker_fda.test_submission = 'K080252' or biomarker_fda.test_submission = 'K080252'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_43_1",
    "user": "gpt-3",
    "question": "Show me the name of all anatomical entities that have a description with 'the inner portion of the kidney' or 'the subthalamic nucleus'",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.description = 'the inner portion of the kidney consisting of the renal pyramids' or anatomical_entity.description = 'The subthalamic nucleus is the lens-shaped nucleus located in the ventral part of the subthalamus on the inner aspect of the internal capsule that is concerned with the integration of somatic motor function[GO].'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_43_2",
    "user": "gpt-3",
    "question": "Show me the name of all anatomical entities where the description contains 'inner portion of the kidney' or 'subthalamic nucleus'.",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.description = 'the inner portion of the kidney consisting of the renal pyramids' or anatomical_entity.description = 'The subthalamic nucleus is the lens-shaped nucleus located in the ventral part of the subthalamus on the inner aspect of the internal capsule that is concerned with the integration of somatic motor function[GO].'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_44_1",
    "user": "gpt-3",
    "question": "Show the name of all anatomical entities with identifiers UBERON:0008948 or UBERON:0001954",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0008948' or anatomical_entity.id = 'UBERON:0001954'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_44_2",
    "user": "gpt-3",
    "question": "Show me the name of all anatomical entities with a UBERON identifier of either 'UBERON:0008948' or 'UBERON:0001954'",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.id = 'UBERON:0008948' or anatomical_entity.id = 'UBERON:0001954'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_45_1",
    "user": "gpt-3",
    "question": "Show me all subjects of expressions with statistical significance 'Yes' or 'Yes'",
    "query": "SELECT differential_expression.subjects_up FROM differential_expression WHERE differential_expression.statistical_significance = 'Yes' or differential_expression.statistical_significance = 'Yes'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_45_2",
    "user": "gpt-3",
    "question": "Show subjects up for expressions with statistical significance Yes or Yes",
    "query": "SELECT differential_expression.subjects_up FROM differential_expression WHERE differential_expression.statistical_significance = 'Yes' or differential_expression.statistical_significance = 'Yes'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_46_1",
    "user": "gpt-3",
    "question": "Show me the FDA test number genes for tests with study design RetObs or Pro",
    "query": "SELECT biomarker_fda_test.test_number_genes FROM biomarker_fda_test WHERE biomarker_fda_test.test_study_design = 'RetObs' or biomarker_fda_test.test_study_design = 'Pro'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_46_2",
    "user": "gpt-3",
    "question": "Show me the number of genes for FDA tests with study design retObs and pro",
    "query": "SELECT biomarker_fda_test.test_number_genes FROM biomarker_fda_test WHERE biomarker_fda_test.test_study_design = 'RetObs' or biomarker_fda_test.test_study_design = 'Pro'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_47_1",
    "user": "gpt-3",
    "question": "Show the log2 fold change for differential expression with pvalue between 1.27e-57 and 5.04e-66",
    "query": "SELECT differential_expression.log2fc FROM differential_expression WHERE differential_expression.pvalue = 1.27e-57 or differential_expression.pvalue = 5.04e-66"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_47_2",
    "user": "gpt-3",
    "question": "Show the log2 fold change for expressions with a pvalue between 1.27e-57 and 5.04e-66",
    "query": "SELECT differential_expression.log2fc FROM differential_expression WHERE differential_expression.pvalue = 1.27e-57 or differential_expression.pvalue = 5.04e-66"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_48_1",
    "user": "gpt-3",
    "question": "Show me the tool for disease mutation impact predictions with a probability of 0.0",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.probability = 0.0 or disease_mutation_impact_prediction.probability = 0.0"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_48_2",
    "user": "gpt-3",
    "question": "Show me the tool for disease mutation impact prediction with a probability of 0.0 or 0.0",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.probability = 0.0 or disease_mutation_impact_prediction.probability = 0.0"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_49_1",
    "user": "gpt-3",
    "question": "Show disease mutation site annotations where the feature key is either 'Interaction with E-box DNA' or 'Proton acceptor'",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.description = 'Interaction with E-box DNA' or disease_mutation_site_annotation.description = 'Proton acceptor'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_49_2",
    "user": "gpt-3",
    "question": "Show all key for disease mutation site annotation with description 'Interaction with E-box DNA' or 'Proton acceptor'",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation WHERE disease_mutation_site_annotation.description = 'Interaction with E-box DNA' or disease_mutation_site_annotation.description = 'Proton acceptor'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_5_1",
    "user": "gpt-3",
    "question": "Show subjects for differential expression with adjusted p-value of 2.5e-16 or 0.0552",
    "query": "SELECT differential_expression.subjects_down FROM differential_expression WHERE differential_expression.adjpvalue = 2.5e-16 or differential_expression.adjpvalue = 0.0552"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_5_2",
    "user": "gpt-3",
    "question": "List the subjects of differential expressions with an adjusted p-value of 2.5e-16 or 0.0552",
    "query": "SELECT differential_expression.subjects_down FROM differential_expression WHERE differential_expression.adjpvalue = 2.5e-16 or differential_expression.adjpvalue = 0.0552"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_6_1",
    "user": "gpt-3",
    "question": "Show me all nucleotide base variations of cancer mutations in 'tcga' or 'icgc'",
    "query": "SELECT disease_mutation.alt_nt FROM disease_mutation WHERE disease_mutation.data_source = 'tcga' or disease_mutation.data_source = 'icgc'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_6_2",
    "user": "gpt-3",
    "question": "Show me all nucleotide base variations of cancer mutations which were published by either tcga or icgc.",
    "query": "SELECT disease_mutation.alt_nt FROM disease_mutation WHERE disease_mutation.data_source = 'tcga' or disease_mutation.data_source = 'icgc'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_7_1",
    "user": "gpt-3",
    "question": "What is the phase of biomarkers on the EDRN platform with biomarker type Protein or Gene?",
    "query": "SELECT biomarker_edrn.phase FROM biomarker_edrn WHERE biomarker_edrn.biomarker_type = 'Protein' or biomarker_edrn.biomarker_type = 'Gene'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_7_2",
    "user": "gpt-3",
    "question": "What is the phase for biomarker with type Protein or Gene on the EDRN platform?",
    "query": "SELECT biomarker_edrn.phase FROM biomarker_edrn WHERE biomarker_edrn.biomarker_type = 'Protein' or biomarker_edrn.biomarker_type = 'Gene'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_8_1",
    "user": "gpt-3",
    "question": "Show the expression score for healthy expressions with call quality SILVER or GOLD.",
    "query": "SELECT healthy_expression.expression_score FROM healthy_expression WHERE healthy_expression.call_quality = 'SILVER' or healthy_expression.call_quality = 'GOLD'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_8_2",
    "user": "gpt-3",
    "question": "Show the expression score of healthy expressions with call quality SILVER or call quality GOLD",
    "query": "SELECT healthy_expression.expression_score FROM healthy_expression WHERE healthy_expression.call_quality = 'SILVER' or healthy_expression.call_quality = 'GOLD'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_9_1",
    "user": "gpt-3",
    "question": "Show me the trade name of FDA tests used for 'companion diagnosis' or 'prognosis'",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.approved_indication = 'companion diagnosis' or biomarker_fda_test_use.approved_indication = 'prognosis'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "7_9_2",
    "user": "gpt-3",
    "question": "Give me the trade name of FDA tests with indication 'companion diagnosis' or 'prognosis'",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.approved_indication = 'companion diagnosis' or biomarker_fda_test_use.approved_indication = 'prognosis'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_0_1",
    "user": "gpt-3",
    "question": "What is the biomarker type for EDRN biomarkers with a biomarker title different from 'proPSA'",
    "query": "SELECT biomarker_edrn.biomarker_type FROM biomarker_edrn WHERE biomarker_edrn.biomarker_title != 'proPSA'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_0_2",
    "user": "gpt-3",
    "question": "Show me all biomarker types on the EDRN platform that are not about proPSA",
    "query": "SELECT biomarker_edrn.biomarker_type FROM biomarker_edrn WHERE biomarker_edrn.biomarker_title != 'proPSA'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_1_1",
    "user": "gpt-3",
    "question": "Show me the healthy expression call quality of healthy expressions with an expression level anatomical relative of not high",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression WHERE healthy_expression.expression_level_anatomical_relative != 'HIGH'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_1_2",
    "user": "gpt-3",
    "question": "Show me the call quality of healthy expressions with an expression level anatomical relative different from HIGH",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression WHERE healthy_expression.expression_level_anatomical_relative != 'HIGH'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_10_1",
    "user": "gpt-3",
    "question": "Which expression level is anatomical relative for expressions with expression level gene relative 'MEDIUM'?",
    "query": "SELECT healthy_expression.expression_level_anatomical_relative FROM healthy_expression WHERE healthy_expression.expression_level_gene_relative != 'MEDIUM'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_10_2",
    "user": "gpt-3",
    "question": "List the expression level anatomical relative expression of expressions with expression level gene relative 'MEDIUM'",
    "query": "SELECT healthy_expression.expression_level_anatomical_relative FROM healthy_expression WHERE healthy_expression.expression_level_gene_relative != 'MEDIUM'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_11_1",
    "user": "gpt-3",
    "question": "Show me the id of biomarkers which are not a panel",
    "query": "SELECT biomarker.biomarker_id FROM biomarker WHERE biomarker.test_is_a_panel != 'False'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_11_2",
    "user": "gpt-3",
    "question": "Show me the biomarker id of biomarkers with a panel test.",
    "query": "SELECT biomarker.biomarker_id FROM biomarker WHERE biomarker.test_is_a_panel != 'False'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_12_1",
    "user": "gpt-3",
    "question": "Show me disease mutation impact prediction site predictions for disease mutations for which the tool is not polyphen?",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.tool != 'polyphen'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_12_2",
    "user": "gpt-3",
    "question": "Show me disease mutation impact predictions which are not based on the polyphen tool",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.tool != 'polyphen'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_13_1",
    "user": "gpt-3",
    "question": "What is the QA state for biomarkers on the EDRN platform with phase not equal to 'One'?",
    "query": "SELECT biomarker_edrn.qa_state FROM biomarker_edrn WHERE biomarker_edrn.phase != 'One'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_13_2",
    "user": "gpt-3",
    "question": "What is the QA state for biomarkers on the EDRN platform in phase other than 'One'?",
    "query": "SELECT biomarker_edrn.qa_state FROM biomarker_edrn WHERE biomarker_edrn.phase != 'One'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_14_1",
    "user": "gpt-3",
    "question": "Show all species which have a common name different from 'human'",
    "query": "SELECT species.species FROM species WHERE species.speciescommonname != 'human'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_14_2",
    "user": "gpt-3",
    "question": "Show all species which have a different common name than 'human'",
    "query": "SELECT species.species FROM species WHERE species.speciescommonname != 'human'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_15_1",
    "user": "gpt-3",
    "question": "Show me the name of all anatomical entities that are not a thermogenic form of adipose tissue that is composed of brown adipocytes",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.description != 'A thermogenic form of adipose tissue that is composed of brown adipocytes[MP,modified]'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_15_2",
    "user": "gpt-3",
    "question": "List the names of all anatomical entities that are different from 'A thermogenic form of adipose tissue that is composed of brown adipocytes'",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.description != 'A thermogenic form of adipose tissue that is composed of brown adipocytes[MP,modified]'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_16_1",
    "user": "gpt-3",
    "question": "Show me the coding sequence position of disease mutations with chromosome id different from 16",
    "query": "SELECT disease_mutation.cds_pos FROM disease_mutation WHERE disease_mutation.chromosome_id != '16'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_16_2",
    "user": "gpt-3",
    "question": "Show me the coding sequence position of disease mutations with chromosome id different from 16?",
    "query": "SELECT disease_mutation.cds_pos FROM disease_mutation WHERE disease_mutation.chromosome_id != '16'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_17_1",
    "user": "gpt-3",
    "question": "Show the disease ontology identifier of differential expression with log2 fold change different from 0.36",
    "query": "SELECT differential_expression.doid FROM differential_expression WHERE differential_expression.log2fc != 0.36"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_17_2",
    "user": "gpt-3",
    "question": "Show me all disease ontology identifiers in differential expression with a log2 fold change of less than 0.36",
    "query": "SELECT differential_expression.doid FROM differential_expression WHERE differential_expression.log2fc != 0.36"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_18_1",
    "user": "gpt-3",
    "question": "Show me disease mutation impact predictions where the site prediction has a probability different from zero.",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.probability != 0.0"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_18_2",
    "user": "gpt-3",
    "question": "Show me the site prediction for disease mutation impact predictions with a probability different from zero",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.probability != 0.0"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_19_1",
    "user": "gpt-3",
    "question": "Show submissions for biomarker FDA tests that have a trade name different from 'Oncomine Dx Target Test'",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name != 'Oncomine Dx Target Test'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_19_2",
    "user": "gpt-3",
    "question": "Show submissions of biomarker FDA tests with a trade name different from 'Oncomine Dx Target Test'",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name != 'Oncomine Dx Target Test'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_2_1",
    "user": "gpt-3",
    "question": "Show me the disease mutation impact prediction tools for disease mutations with site prediction of 'benign'",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.site_prediction != 'benign'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_2_2",
    "user": "gpt-3",
    "question": "Show me all disease mutation impact prediction tools which have a site prediction of 'benign'",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction WHERE disease_mutation_impact_prediction.site_prediction != 'benign'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_20_1",
    "user": "gpt-3",
    "question": "Show disease mutation chromosome id's which have a disease mutation peptide position different from 475",
    "query": "SELECT disease_mutation.chromosome_id FROM disease_mutation WHERE disease_mutation.peptide_pos != 475"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_20_2",
    "user": "gpt-3",
    "question": "Show disease mutation chromosome id's for disease mutations with a peptide position different from 475",
    "query": "SELECT disease_mutation.chromosome_id FROM disease_mutation WHERE disease_mutation.peptide_pos != 475"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_21_1",
    "user": "gpt-3",
    "question": "Show me the description of anatomical entities with a different UBERON identifier than 'UBERON:0001756'",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.id != 'UBERON:0001756'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_21_2",
    "user": "gpt-3",
    "question": "Show me the description of anatomical entities which have an Uberon identifier different from 'UBERON:0001756'",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity WHERE anatomical_entity.id != 'UBERON:0001756'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_22_1",
    "user": "gpt-3",
    "question": "Show all subjects without coverage in differential expression with a change of two (don't show differences with no change and two coverage)",
    "query": "SELECT differential_expression.subjects_nocoverage FROM differential_expression WHERE differential_expression.subjects_nochange != 2"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_22_2",
    "user": "gpt-3",
    "question": "Show me all subjects which have non-coverage in differential expression with no change set to 2",
    "query": "SELECT differential_expression.subjects_nocoverage FROM differential_expression WHERE differential_expression.subjects_nochange != 2"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_23_1",
    "user": "gpt-3",
    "question": "Show me the description of biomarkers which are different from biomarker with id 791",
    "query": "SELECT biomarker.biomarker_description FROM biomarker WHERE biomarker.biomarker_id != 'urn:edrn:bmdb:biomarker:791'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_23_2",
    "user": "gpt-3",
    "question": "Show me the description of biomarkers which are different than biomarker with id 791",
    "query": "SELECT biomarker.biomarker_description FROM biomarker WHERE biomarker.biomarker_id != 'urn:edrn:bmdb:biomarker:791'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_24_1",
    "user": "gpt-3",
    "question": "Show the expression rank score for healthy expressions that have a call quality of 'SILVER'",
    "query": "SELECT healthy_expression.expression_rank_score FROM healthy_expression WHERE healthy_expression.call_quality != 'SILVER'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_24_2",
    "user": "gpt-3",
    "question": "Show the expression rank score for healthy expressions that do not have call quality SILVER",
    "query": "SELECT healthy_expression.expression_rank_score FROM healthy_expression WHERE healthy_expression.call_quality != 'SILVER'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_25_1",
    "user": "gpt-3",
    "question": "Show the expression score for healthy expressions with a rank score different from 31.40",
    "query": "SELECT healthy_expression.expression_score FROM healthy_expression WHERE healthy_expression.expression_rank_score != 31.40"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_25_2",
    "user": "gpt-3",
    "question": "Show expression score of healthy expressions with a expression rank score different from 31.40",
    "query": "SELECT healthy_expression.expression_score FROM healthy_expression WHERE healthy_expression.expression_rank_score != 31.40"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_26_1",
    "user": "gpt-3",
    "question": "Show statistical significance of differential expression with adjusted p-value not equal to 0.000229",
    "query": "SELECT differential_expression.statistical_significance FROM differential_expression WHERE differential_expression.adjpvalue != 0.000229"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_26_2",
    "user": "gpt-3",
    "question": "Show the statistical significance of differential expression where the adjusted p-value is not equal to 0.000229",
    "query": "SELECT differential_expression.statistical_significance FROM differential_expression WHERE differential_expression.adjpvalue != 0.000229"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_27_1",
    "user": "gpt-3",
    "question": "Show me the QA state for biomarkers on the EDRN platform with anatomical ID different from UBERON:0002367",
    "query": "SELECT biomarker_edrn.qa_state FROM biomarker_edrn WHERE biomarker_edrn.uberon_anatomical_id != 'UBERON:0002367'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_27_2",
    "user": "gpt-3",
    "question": "What is the QA state for biomarkers on the EDRN platform with anatomical id different from UBERON:0002367?",
    "query": "SELECT biomarker_edrn.qa_state FROM biomarker_edrn WHERE biomarker_edrn.uberon_anatomical_id != 'UBERON:0002367'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_28_1",
    "user": "gpt-3",
    "question": "Show me all the names of anatomical entities which are different from the description 'either of the two small almond-shaped masses of lymph tissue found on either side of the oropharynx'",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.description != 'either of the two small almond-shaped masses of lymph tissue found on either side of the oropharynx'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_28_2",
    "user": "gpt-3",
    "question": "Show me the name of anatomical entities which are different from the description 'either of the two small almond-shaped masses of lymph tissue found on either side of the oropharynx'.",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity WHERE anatomical_entity.description != 'either of the two small almond-shaped masses of lymph tissue found on either side of the oropharynx'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_29_1",
    "user": "gpt-3",
    "question": "Show disease mutation amino acid residue variations where the reference nucleotide base is not G",
    "query": "SELECT disease_mutation.alt_aa FROM disease_mutation WHERE disease_mutation.ref_nt != 'G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_29_2",
    "user": "gpt-3",
    "question": "Show me all amino acid residue variations of disease mutations where the reference nucleotide base is not G",
    "query": "SELECT disease_mutation.alt_aa FROM disease_mutation WHERE disease_mutation.ref_nt != 'G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_3_1",
    "user": "gpt-3",
    "question": "Show the expression level anatomical relative for healthy expressions with call quality different from 'SILVER'",
    "query": "SELECT healthy_expression.expression_level_anatomical_relative FROM healthy_expression WHERE healthy_expression.call_quality != 'SILVER'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_3_2",
    "user": "gpt-3",
    "question": "Show me the expression level anatomical relative expression for healthy expressions with call quality != 'SILVER'",
    "query": "SELECT healthy_expression.expression_level_anatomical_relative FROM healthy_expression WHERE healthy_expression.call_quality != 'SILVER'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_30_1",
    "user": "gpt-3",
    "question": "Show me all FDA test platforms with test study design different from 'Pro'",
    "query": "SELECT biomarker_fda_test.platform_method FROM biomarker_fda_test WHERE biomarker_fda_test.test_study_design != 'Pro'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_30_2",
    "user": "gpt-3",
    "question": "Show me all FDA test platforms for test studies with test design 'Non-Pro'",
    "query": "SELECT biomarker_fda_test.platform_method FROM biomarker_fda_test WHERE biomarker_fda_test.test_study_design != 'Pro'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_31_1",
    "user": "gpt-3",
    "question": "What is the trade name of FDA tests with submission different from 'K062705'?",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_submission != 'K062705'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_31_2",
    "user": "gpt-3",
    "question": "What is the trade name of FDA test uses with a submission different from 'K062705'?",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_submission != 'K062705'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_32_1",
    "user": "gpt-3",
    "question": "Show me all biomarker types on the EDRN platform with a phase different from 'One'",
    "query": "SELECT biomarker_edrn.biomarker_type FROM biomarker_edrn WHERE biomarker_edrn.phase != 'One'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_32_2",
    "user": "gpt-3",
    "question": "Show me biomarker types on the EDRN platform which are not in phase one.",
    "query": "SELECT biomarker_edrn.biomarker_type FROM biomarker_edrn WHERE biomarker_edrn.phase != 'One'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_33_1",
    "user": "gpt-3",
    "question": "Show biomarker gene symbols for biomarkers which have an id different from 208",
    "query": "SELECT biomarker.gene_symbol FROM biomarker WHERE biomarker.biomarker_id != 'urn:edrn:bmdb:biomarker:208'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_33_2",
    "user": "gpt-3",
    "question": "Show me the symbol of biomarkers which have id different from 208",
    "query": "SELECT biomarker.gene_symbol FROM biomarker WHERE biomarker.biomarker_id != 'urn:edrn:bmdb:biomarker:208'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_34_1",
    "user": "gpt-3",
    "question": "Show me the trade name for FDA tests which have a submission different from 'K070675'",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda WHERE biomarker_fda.test_submission != 'K070675'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_34_2",
    "user": "gpt-3",
    "question": "Show me the trade name of FDA tests with submission different from 'K070675'",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda WHERE biomarker_fda.test_submission != 'K070675'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_35_1",
    "user": "gpt-3",
    "question": "Give me the trade name of FDA test uses with an approved indication different from 'prognosis'",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.approved_indication != 'prognosis'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_35_2",
    "user": "gpt-3",
    "question": "Show me all trade names for FDA tests which have an approved indication different from 'prognosis'",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.approved_indication != 'prognosis'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_36_1",
    "user": "gpt-3",
    "question": "Show submissions of biomarker FDA tests which have a different trade name than 'QIAGEN MANCHESTER LTD'",
    "query": "SELECT biomarker_fda_test_use.test_submission FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_trade_name != 'QIAGEN MANCHESTER LTD'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_36_2",
    "user": "gpt-3",
    "question": "Show me all submissions for FDA tests which have a different trade name than 'QIAGEN MANCHESTER LTD'",
    "query": "SELECT biomarker_fda_test_use.test_submission FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.test_trade_name != 'QIAGEN MANCHESTER LTD'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_37_1",
    "user": "gpt-3",
    "question": "What is the trade name of FDA tests that are not actually used for predictive purposes?",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.actual_use != 'predictive'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_37_2",
    "user": "gpt-3",
    "question": "What is the trade name of FDA tests which are not actually used for predictive purposes?",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use WHERE biomarker_fda_test_use.actual_use != 'predictive'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_38_1",
    "user": "gpt-3",
    "question": "Show me the reference amino acid residue in disease mutations where the nucleotide base is not G",
    "query": "SELECT disease_mutation.ref_aa FROM disease_mutation WHERE disease_mutation.ref_nt != 'G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_38_2",
    "user": "gpt-3",
    "question": "List the amino acid residue of disease mutations with a reference nucleotide base not equal to G",
    "query": "SELECT disease_mutation.ref_aa FROM disease_mutation WHERE disease_mutation.ref_nt != 'G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_39_1",
    "user": "gpt-3",
    "question": "Show me the trade name of FDA tests that have a submission different from K080252",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda WHERE biomarker_fda.test_submission != 'K080252'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_39_2",
    "user": "gpt-3",
    "question": "Give me the trade name of FDA tests with submission different from 'K080252'",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda WHERE biomarker_fda.test_submission != 'K080252'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_4_1",
    "user": "gpt-3",
    "question": "Show me all submissions of biomarker FDA tests with a different trade name than 'MammaPrint'?",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name != 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_4_2",
    "user": "gpt-3",
    "question": "Show me all submissions for biomarker FDA tests with a different trade name than 'MammaPrint'",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name != 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_40_1",
    "user": "gpt-3",
    "question": "List the nucleotide base variations of disease mutations which have a disease ontology identifier different from 4362",
    "query": "SELECT disease_mutation.alt_nt FROM disease_mutation WHERE disease_mutation.doid != 4362"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_40_2",
    "user": "gpt-3",
    "question": "List all nucleotide base variations in disease mutations whose disease ontology identifier is different from 4362?",
    "query": "SELECT disease_mutation.alt_nt FROM disease_mutation WHERE disease_mutation.doid != 4362"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_41_1",
    "user": "gpt-3",
    "question": "Show me the gene symbol of biomarkers with biomarker id different from 671",
    "query": "SELECT biomarker.gene_symbol FROM biomarker WHERE biomarker.biomarker_id != 'urn:edrn:bmdb:biomarker:671'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_41_2",
    "user": "gpt-3",
    "question": "Show me the gene symbol of biomarkers with biomarker id that is different from 671",
    "query": "SELECT biomarker.gene_symbol FROM biomarker WHERE biomarker.biomarker_id != 'urn:edrn:bmdb:biomarker:671'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_42_1",
    "user": "gpt-3",
    "question": "Show me the expression rank score of healthy expressions with expression level gene relative not equal to 'HIGH'",
    "query": "SELECT healthy_expression.expression_rank_score FROM healthy_expression WHERE healthy_expression.expression_level_gene_relative != 'HIGH'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_42_2",
    "user": "gpt-3",
    "question": "Show the expression rank score for healthy expressions with expression level gene relative other than HIGH",
    "query": "SELECT healthy_expression.expression_rank_score FROM healthy_expression WHERE healthy_expression.expression_level_gene_relative != 'HIGH'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_43_1",
    "user": "gpt-3",
    "question": "Show the call quality for healthy expressions with an expression rank score of not 9.57?",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression WHERE healthy_expression.expression_rank_score != 9.57"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_43_2",
    "user": "gpt-3",
    "question": "What is the call quality for expression with an expression rank score of not equal to 9.57?",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression WHERE healthy_expression.expression_rank_score != 9.57"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_44_1",
    "user": "gpt-3",
    "question": "What is the trade name of FDA tests that have a submission different from 'K101454'?",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda WHERE biomarker_fda.test_submission != 'K101454'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_44_2",
    "user": "gpt-3",
    "question": "What is the trade name of FDA tests with submission different from 'K101454'?",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda WHERE biomarker_fda.test_submission != 'K101454'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_45_1",
    "user": "gpt-3",
    "question": "Show me the uberon identifiers of anatomical entities where the name is not 'oviduct epithelium'",
    "query": "SELECT anatomical_entity.id FROM anatomical_entity WHERE anatomical_entity.name != 'oviduct epithelium'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_45_2",
    "user": "gpt-3",
    "question": "Show the uberon identifier of anatomical entities which have a different name than oviduct epithelium",
    "query": "SELECT anatomical_entity.id FROM anatomical_entity WHERE anatomical_entity.name != 'oviduct epithelium'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_46_1",
    "user": "gpt-3",
    "question": "Show me all FDA test study designs for FDA tests which have a submission different from 'K062695'",
    "query": "SELECT biomarker_fda_test.test_study_design FROM biomarker_fda_test WHERE biomarker_fda_test.test_submission != 'K062695'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_46_2",
    "user": "gpt-3",
    "question": "Show me all test study designs for FDA test submissions which are different from K062695",
    "query": "SELECT biomarker_fda_test.test_study_design FROM biomarker_fda_test WHERE biomarker_fda_test.test_submission != 'K062695'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_47_1",
    "user": "gpt-3",
    "question": "Is the test for biomarker with symbol LZTS1 a panel?",
    "query": "SELECT biomarker.test_is_a_panel FROM biomarker WHERE biomarker.gene_symbol != 'LZTS1'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_47_2",
    "user": "gpt-3",
    "question": "Show me all tests which are a panel",
    "query": "SELECT biomarker.test_is_a_panel FROM biomarker WHERE biomarker.gene_symbol != 'LZTS1'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_48_1",
    "user": "gpt-3",
    "question": "What is the common name for species which are not Homo?",
    "query": "SELECT species.speciescommonname FROM species WHERE species.genus != 'Homo'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_48_2",
    "user": "gpt-3",
    "question": "What is the common name for species which are not 'Homo'?",
    "query": "SELECT species.speciescommonname FROM species WHERE species.genus != 'Homo'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_49_1",
    "user": "gpt-3",
    "question": "Show me the description for biomarkers with symbol different from CDC42BPA",
    "query": "SELECT biomarker.biomarker_description FROM biomarker WHERE biomarker.gene_symbol != 'CDC42BPA'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_49_2",
    "user": "gpt-3",
    "question": "Show me the description for biomarkers with symbol different from 'CDC42BPA'",
    "query": "SELECT biomarker.biomarker_description FROM biomarker WHERE biomarker.gene_symbol != 'CDC42BPA'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_5_1",
    "user": "gpt-3",
    "question": "Show me the title of biomarkers on the EDRN platform with QA state 'Not Curated'",
    "query": "SELECT biomarker_edrn.biomarker_title FROM biomarker_edrn WHERE biomarker_edrn.qa_state != 'Curated'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_5_2",
    "user": "gpt-3",
    "question": "Show me the title of biomarkers on the EDRN platform with QA state not equal to 'Curated'",
    "query": "SELECT biomarker_edrn.biomarker_title FROM biomarker_edrn WHERE biomarker_edrn.qa_state != 'Curated'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_50_1",
    "user": "gpt-3",
    "question": "What is the common name for species which are not 'Mus'?",
    "query": "SELECT species.speciescommonname FROM species WHERE species.genus != 'Mus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_50_2",
    "user": "gpt-3",
    "question": "What is the common name for species where the genus is not Mus?",
    "query": "SELECT species.speciescommonname FROM species WHERE species.genus != 'Mus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_51_1",
    "user": "gpt-3",
    "question": "What is the trade name of FDA tests which have a submission different from K130010?",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda WHERE biomarker_fda.test_submission != 'K130010'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_51_2",
    "user": "gpt-3",
    "question": "What is the trade name of FDA tests which were not submitted under test identifier K130010?",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda WHERE biomarker_fda.test_submission != 'K130010'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_6_1",
    "user": "gpt-3",
    "question": "Show me the reference nucleotide base for disease mutations which are not from the tcga data source",
    "query": "SELECT disease_mutation.ref_nt FROM disease_mutation WHERE disease_mutation.data_source != 'tcga'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_6_2",
    "user": "gpt-3",
    "question": "Show me the reference nucleotide bases for disease mutations not from tcga",
    "query": "SELECT disease_mutation.ref_nt FROM disease_mutation WHERE disease_mutation.data_source != 'tcga'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_7_1",
    "user": "gpt-3",
    "question": "Show me all different test submissions for FDA tests with a test trade name different from 'GeneSearch Breast Lymph Node (BLN) Test Kit'",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name != 'GeneSearch Breast Lymph Node (BLN) Test Kit'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_7_2",
    "user": "gpt-3",
    "question": "Show submissions for biomarker FDA tests which have a different test trade name than 'GeneSearch Breast Lymph Node (BLN) Test Kit'",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda WHERE biomarker_fda.test_trade_name != 'GeneSearch Breast Lymph Node (BLN) Test Kit'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_8_1",
    "user": "gpt-3",
    "question": "Show the disease mutation chromosome id's which have a reference nucleotide base different from G",
    "query": "SELECT disease_mutation.chromosome_id FROM disease_mutation WHERE disease_mutation.ref_nt != 'G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_8_2",
    "user": "gpt-3",
    "question": "Show me the disease mutation chromosome id's with a reference nucleotide base that is not equal to G",
    "query": "SELECT disease_mutation.chromosome_id FROM disease_mutation WHERE disease_mutation.ref_nt != 'G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_9_1",
    "user": "gpt-3",
    "question": "Show species which have a different common name than 'mouse'",
    "query": "SELECT species.species FROM species WHERE species.speciescommonname != 'mouse'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "8_9_2",
    "user": "gpt-3",
    "question": "Show species with a different common name than 'mouse'",
    "query": "SELECT species.species FROM species WHERE species.speciescommonname != 'mouse'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_0_1",
    "user": "gpt-3",
    "question": "What diseases have a mutation where the reference amino acid residue is different from E?",
    "query": "SELECT disease.name FROM disease JOIN disease_mutation ON disease.id = disease_mutation.doid WHERE disease_mutation.ref_aa != 'E'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_0_2",
    "user": "gpt-3",
    "question": "What diseases have a mutation with a different amino acid residue than E?",
    "query": "SELECT disease.name FROM disease JOIN disease_mutation ON disease.id = disease_mutation.doid WHERE disease_mutation.ref_aa != 'E'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_1_1",
    "user": "gpt-3",
    "question": "Show me the description of disease mutation site annotations where the peptide position is not 223",
    "query": "SELECT disease_mutation_site_annotation.description FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.peptide_pos != 223"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_1_2",
    "user": "gpt-3",
    "question": "Show me the description of disease mutation site annotations where the peptide position differs from 223",
    "query": "SELECT disease_mutation_site_annotation.description FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.peptide_pos != 223"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_10_1",
    "user": "gpt-3",
    "question": "List the aliases for biomarkers with symbol different from KLHL14",
    "query": "SELECT biomarker_alias.alias FROM biomarker_alias JOIN biomarker ON biomarker_alias.biomarker_internal_id = biomarker.id WHERE biomarker.gene_symbol != 'KLHL14'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_10_2",
    "user": "gpt-3",
    "question": "Show me all biomarker aliases for biomarkers with gene symbol different from KLHL14",
    "query": "SELECT biomarker_alias.alias FROM biomarker_alias JOIN biomarker ON biomarker_alias.biomarker_internal_id = biomarker.id WHERE biomarker.gene_symbol != 'KLHL14'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_11_1",
    "user": "gpt-3",
    "question": "What is the total number of different expression subjects for disease 'pancreatic cancer'?",
    "query": "SELECT differential_expression.subjects_total FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name != 'pancreatic cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_11_2",
    "user": "gpt-3",
    "question": "How many total subjects are there for differential expression for 'not pancreatic cancer' disease?",
    "query": "SELECT differential_expression.subjects_total FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name != 'pancreatic cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_12_1",
    "user": "gpt-3",
    "question": "Give me the tool for disease mutation impact predictions for diseases with a mutation frequency of more than one",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction JOIN disease_mutation ON disease_mutation_impact_prediction.disease_mutation_id = disease_mutation.id WHERE disease_mutation.mutation_freq != 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_12_2",
    "user": "gpt-3",
    "question": "Show me the tool for disease mutation impact predictions which are not for mutations with frequency 1",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction JOIN disease_mutation ON disease_mutation_impact_prediction.disease_mutation_id = disease_mutation.id WHERE disease_mutation.mutation_freq != 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_13_1",
    "user": "gpt-3",
    "question": "Show me biomarker types of biomarkers which have a description different from 'histone cluster 1, H2bi'",
    "query": "SELECT biomarker_edrn.biomarker_type FROM biomarker_edrn JOIN biomarker ON biomarker_edrn.id = biomarker.id WHERE biomarker.biomarker_description != 'histone cluster 1, H2bi'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_13_2",
    "user": "gpt-3",
    "question": "Show me all biomarker types which are different from histone cluster 1, H2bi",
    "query": "SELECT biomarker_edrn.biomarker_type FROM biomarker_edrn JOIN biomarker ON biomarker_edrn.id = biomarker.id WHERE biomarker.biomarker_description != 'histone cluster 1, H2bi'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_14_1",
    "user": "gpt-3",
    "question": "Show the subjects of differential expression for hematologic cancer",
    "query": "SELECT differential_expression.subjects_down FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name != 'hematologic cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_14_2",
    "user": "gpt-3",
    "question": "Show all differential expression subjects for hematologic cancer",
    "query": "SELECT differential_expression.subjects_down FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name != 'hematologic cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_15_1",
    "user": "gpt-3",
    "question": "Show biomarker id of FDA submissions which are different from 'K080252'",
    "query": "SELECT biomarker.biomarker_id FROM biomarker JOIN biomarker_fda ON biomarker.id = biomarker_fda.id WHERE biomarker_fda.test_submission != 'K080252'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_15_2",
    "user": "gpt-3",
    "question": "Identify biomarker IDs of FDA submissions other than 'K080252'",
    "query": "SELECT biomarker.biomarker_id FROM biomarker JOIN biomarker_fda ON biomarker.id = biomarker_fda.id WHERE biomarker_fda.test_submission != 'K080252'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_16_1",
    "user": "gpt-3",
    "question": "What is the test submission for FDA biomarkers with a biomarker id different from 197?",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda JOIN biomarker ON biomarker_fda.id = biomarker.id WHERE biomarker.biomarker_id != 'urn:edrn:bmdb:biomarker:197'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_16_2",
    "user": "gpt-3",
    "question": "Show submissions for biomarker FDA tests where biomarker id is not 197",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda JOIN biomarker ON biomarker_fda.id = biomarker.id WHERE biomarker.biomarker_id != 'urn:edrn:bmdb:biomarker:197'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_17_1",
    "user": "gpt-3",
    "question": "Show me the QA state for biomarkers on the EDRN that are not about the anatomical entity with identifier 'UBERON:0002401'",
    "query": "SELECT biomarker_edrn.qa_state FROM biomarker_edrn JOIN anatomical_entity ON biomarker_edrn.uberon_anatomical_id = anatomical_entity.id WHERE anatomical_entity.id != 'UBERON:0002401'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_17_2",
    "user": "gpt-3",
    "question": "Show QA state for biomarkers on EDRN where the anatomical identifier is not 'UBERON:0002401'",
    "query": "SELECT biomarker_edrn.qa_state FROM biomarker_edrn JOIN anatomical_entity ON biomarker_edrn.uberon_anatomical_id = anatomical_entity.id WHERE anatomical_entity.id != 'UBERON:0002401'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_18_1",
    "user": "gpt-3",
    "question": "What are the names of all stages which have a healthy expression score different from 4.96?",
    "query": "SELECT stage.name FROM stage JOIN healthy_expression ON stage.id = healthy_expression.uberon_developmental_id WHERE healthy_expression.expression_score != 4.96000"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_18_2",
    "user": "gpt-3",
    "question": "Show me the names of all stages which have a healthy expression score different from 4.96000",
    "query": "SELECT stage.name FROM stage JOIN healthy_expression ON stage.id = healthy_expression.uberon_developmental_id WHERE healthy_expression.expression_score != 4.96000"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_19_1",
    "user": "gpt-3",
    "question": "Show the PMID of disease mutations articles where the amino acid residue variation is not G",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.alt_aa != 'G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_19_2",
    "user": "gpt-3",
    "question": "Show me the PMID of disease mutations with a amino acid residue variation != G",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.alt_aa != 'G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_2_1",
    "user": "gpt-3",
    "question": "Show the clinical significance of FDA tests for diseases other than 'oral cavity cancer'",
    "query": "SELECT biomarker_fda_test.clinical_significance FROM biomarker_fda_test JOIN disease ON biomarker_fda_test.doid = disease.id WHERE disease.name != 'oral cavity cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_2_2",
    "user": "gpt-3",
    "question": "Show me the clinical significance of FDA tests for diseases other than oral cavity cancer",
    "query": "SELECT biomarker_fda_test.clinical_significance FROM biomarker_fda_test JOIN disease ON biomarker_fda_test.doid = disease.id WHERE disease.name != 'oral cavity cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_20_1",
    "user": "gpt-3",
    "question": "Show me the key of all disease mutation site annotations with a coding sequence position different from 1809",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.cds_pos != 1809"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_20_2",
    "user": "gpt-3",
    "question": "Show me which disease mutation site annotations have different feature keys than coding sequence position 1809",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.cds_pos != 1809"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_21_1",
    "user": "gpt-3",
    "question": "What are the names of stages which have a healthy expression expression rank score which is not equal to 13.00?",
    "query": "SELECT stage.name FROM stage JOIN healthy_expression ON stage.id = healthy_expression.uberon_developmental_id WHERE healthy_expression.expression_rank_score != 13.00"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_21_2",
    "user": "gpt-3",
    "question": "What are the names of all stages which have a healthy expression expression rank score different from 13.00?",
    "query": "SELECT stage.name FROM stage JOIN healthy_expression ON stage.id = healthy_expression.uberon_developmental_id WHERE healthy_expression.expression_rank_score != 13.00"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_22_1",
    "user": "gpt-3",
    "question": "What is the trade name for FDA tests with a different test study design than 'Pro'?",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda JOIN biomarker_fda_test ON biomarker_fda.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.test_study_design != 'Pro'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_22_2",
    "user": "gpt-3",
    "question": "Show me all test trade names for FDA tests which have a different test study design than 'Pro'",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda JOIN biomarker_fda_test ON biomarker_fda.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.test_study_design != 'Pro'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_23_1",
    "user": "gpt-3",
    "question": "Show me the key of disease mutation site annotations which have a mutation frequency of not being 1",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.mutation_freq != 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_23_2",
    "user": "gpt-3",
    "question": "Show me the key of disease mutation site annotations which have a mutation frequency different from one.",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.mutation_freq != 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_24_1",
    "user": "gpt-3",
    "question": "Show the pvalue of differential expression for the disease 'neuroectodernal neoplasm'",
    "query": "SELECT differential_expression.pvalue FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name != 'neuroectodernal neoplasm'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_24_2",
    "user": "gpt-3",
    "question": "Show the pvalue of differential expression for disease 'neuroectodernal neoplasm'",
    "query": "SELECT differential_expression.pvalue FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name != 'neuroectodernal neoplasm'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_25_1",
    "user": "gpt-3",
    "question": "Show adoption evidence for FDA tests where the submission is not 'K080252'",
    "query": "SELECT biomarker_fda_test.test_adoption_evidence FROM biomarker_fda_test JOIN biomarker_fda ON biomarker_fda_test.test_trade_name = biomarker_fda.test_trade_name WHERE biomarker_fda.test_submission != 'K080252'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_25_2",
    "user": "gpt-3",
    "question": "Show adoption evidence for FDA tests which have not been submitted with test K080252",
    "query": "SELECT biomarker_fda_test.test_adoption_evidence FROM biomarker_fda_test JOIN biomarker_fda ON biomarker_fda_test.test_trade_name = biomarker_fda.test_trade_name WHERE biomarker_fda.test_submission != 'K080252'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_26_1",
    "user": "gpt-3",
    "question": "What is the symbol for gene ensembles with an expression rank score of less than 33.5",
    "query": "SELECT xref_gene_ensembl.gene_symbol FROM xref_gene_ensembl JOIN healthy_expression ON xref_gene_ensembl.ensembl_gene_id = healthy_expression.ensembl_gene_id WHERE healthy_expression.expression_rank_score != 33.50"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_26_2",
    "user": "gpt-3",
    "question": "What is the gene symbol for gene ensembles with expression rank score different from 33.5?",
    "query": "SELECT xref_gene_ensembl.gene_symbol FROM xref_gene_ensembl JOIN healthy_expression ON xref_gene_ensembl.ensembl_gene_id = healthy_expression.ensembl_gene_id WHERE healthy_expression.expression_rank_score != 33.50"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_27_1",
    "user": "gpt-3",
    "question": "What is a test panel of biomarkers which are not in an article with pmid 21459804",
    "query": "SELECT biomarker.test_is_a_panel FROM biomarker JOIN biomarker_article ON biomarker.id = biomarker_article.biomarker_internal_id WHERE biomarker_article.pmid != '21459804'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_27_2",
    "user": "gpt-3",
    "question": "What is the test is a panel for biomarkers which are not a pmid of 21459804",
    "query": "SELECT biomarker.test_is_a_panel FROM biomarker JOIN biomarker_article ON biomarker.id = biomarker_article.biomarker_internal_id WHERE biomarker_article.pmid != '21459804'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_28_1",
    "user": "gpt-3",
    "question": "Show disease mutation nucleotide base variations of cancer which are not germ cell cancer",
    "query": "SELECT disease_mutation.alt_nt FROM disease_mutation JOIN disease ON disease_mutation.doid = disease.id WHERE disease.name != 'germ cell cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_28_2",
    "user": "gpt-3",
    "question": "Show nucleotide base variations of disease mutations where the disease name is not germ cell cancer",
    "query": "SELECT disease_mutation.alt_nt FROM disease_mutation JOIN disease ON disease_mutation.doid = disease.id WHERE disease.name != 'germ cell cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_29_1",
    "user": "gpt-3",
    "question": "Show me the alias for biomarker with description different from 'APEX1 is the major endonuclease in human cells, playing a role in DNA repair and the celluar response to oxidative stress. APEX1 is an apurinic/apyrimidinic (AP) endodeoxyribonuclease in the DNA base excision repair (BER) pathway of DNA lesions induced by oxidative and alkylating agents. Several splice variants have been identified for this gene, all encoding the same protein.'",
    "query": "SELECT biomarker_alias.alias FROM biomarker_alias JOIN biomarker ON biomarker_alias.biomarker_internal_id = biomarker.id WHERE biomarker.biomarker_description != 'APEX1 is the major endonuclease in human cells, playing a role in DNA repair and the celluar response to oxidative stress.  APEX1 is an apurinic/apyrimidinic (AP) endodeoxyribonuclease in the DNA base excision repair (BER) pathway of DNA lesions induced by oxidative and alkylating agents. Several splice variants have been identified for this gene, all encoding the same protein.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_29_2",
    "user": "gpt-3",
    "question": "Show me all aliases for biomarker APEX1 with a description different from 'APEX1 is the major endonuclease in human cells, playing a role in DNA repair and the celluar response to oxidative stress.  APEX1 is an apurinic/apyrimidinic (AP) endodeoxyribonuclease in the DNA base excision repair (BER) pathway of DNA lesions induced by oxidative and alkylating agents. Several splice variants have been identified for this gene, all encoding the same protein.'",
    "query": "SELECT biomarker_alias.alias FROM biomarker_alias JOIN biomarker ON biomarker_alias.biomarker_internal_id = biomarker.id WHERE biomarker.biomarker_description != 'APEX1 is the major endonuclease in human cells, playing a role in DNA repair and the celluar response to oxidative stress.  APEX1 is an apurinic/apyrimidinic (AP) endodeoxyribonuclease in the DNA base excision repair (BER) pathway of DNA lesions induced by oxidative and alkylating agents. Several splice variants have been identified for this gene, all encoding the same protein.'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_3_1",
    "user": "gpt-3",
    "question": "Show actual use of FDA test use where the test manufacturer is not 'Agendia BV'",
    "query": "SELECT biomarker_fda_test_use.actual_use FROM biomarker_fda_test_use JOIN biomarker_fda_test ON biomarker_fda_test_use.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.test_manufacturer != 'Agendia BV'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_3_2",
    "user": "gpt-3",
    "question": "Show actual use of FDA test with test manufacturer different from Agendia BV",
    "query": "SELECT biomarker_fda_test_use.actual_use FROM biomarker_fda_test_use JOIN biomarker_fda_test ON biomarker_fda_test_use.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.test_manufacturer != 'Agendia BV'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_30_1",
    "user": "gpt-3",
    "question": "Show me the identifier of anatomical entities which have a healthy expression score different from 2.63",
    "query": "SELECT anatomical_entity.id FROM anatomical_entity JOIN healthy_expression ON anatomical_entity.id = healthy_expression.uberon_anatomical_id WHERE healthy_expression.expression_score != 2.63000"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_30_2",
    "user": "gpt-3",
    "question": "Return the identifier for anatomical entities which have a healthy expression score different from 2.63",
    "query": "SELECT anatomical_entity.id FROM anatomical_entity JOIN healthy_expression ON anatomical_entity.id = healthy_expression.uberon_anatomical_id WHERE healthy_expression.expression_score != 2.63000"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_31_1",
    "user": "gpt-3",
    "question": "What are the common names of species which have a different gene ensemble symbol than 'SFSWAP'?",
    "query": "SELECT species.speciescommonname FROM species JOIN xref_gene_ensembl ON species.speciesid = xref_gene_ensembl.speciesid WHERE xref_gene_ensembl.gene_symbol != 'SFSWAP'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_31_2",
    "user": "gpt-3",
    "question": "What is the common name for species which have a different gene ensemble symbol than SFSWAP?",
    "query": "SELECT species.speciescommonname FROM species JOIN xref_gene_ensembl ON species.speciesid = xref_gene_ensembl.speciesid WHERE xref_gene_ensembl.gene_symbol != 'SFSWAP'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_32_1",
    "user": "gpt-3",
    "question": "Show test trial id for FDA test trials from test manufacturer different from 'Agendia BV'",
    "query": "SELECT biomarker_fda_test_trial.test_trial_id FROM biomarker_fda_test_trial JOIN biomarker_fda_test ON biomarker_fda_test_trial.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.test_manufacturer != 'Agendia BV'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_32_2",
    "user": "gpt-3",
    "question": "Show FDA test trial with test manufacturer different from 'Agendia BV'",
    "query": "SELECT biomarker_fda_test_trial.test_trial_id FROM biomarker_fda_test_trial JOIN biomarker_fda_test ON biomarker_fda_test_trial.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.test_manufacturer != 'Agendia BV'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_33_1",
    "user": "gpt-3",
    "question": "What are the feature keys of disease mutation site annotations where the amino acid residue variation of the mutation is not 'L'?",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.alt_aa != 'L'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_33_2",
    "user": "gpt-3",
    "question": "Show me all disease mutation site annotations with a different feature key than L for mutations with amino acid residue variation different than L.",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.alt_aa != 'L'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_34_1",
    "user": "gpt-3",
    "question": "Show me all diseases which have mutations with a data source different from 'tcga'",
    "query": "SELECT disease.name FROM disease JOIN disease_mutation ON disease.id = disease_mutation.doid WHERE disease_mutation.data_source != 'tcga'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_34_2",
    "user": "gpt-3",
    "question": "Show all diseases which have mutations with a data source different from 'tcga'",
    "query": "SELECT disease.name FROM disease JOIN disease_mutation ON disease.id = disease_mutation.doid WHERE disease_mutation.data_source != 'tcga'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_35_1",
    "user": "gpt-3",
    "question": "Show me the description of disease mutation site annotations where the mutation frequency is not equal to one.",
    "query": "SELECT disease_mutation_site_annotation.description FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.mutation_freq != 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_35_2",
    "user": "gpt-3",
    "question": "Give me the description of disease mutation site annotations which have a mutation frequency different from 1?",
    "query": "SELECT disease_mutation_site_annotation.description FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.mutation_freq != 1"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_36_1",
    "user": "gpt-3",
    "question": "Show me the description for anatomical entities for which the QA state on the EDRN platform is not 'Curated'",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity JOIN biomarker_edrn ON anatomical_entity.id = biomarker_edrn.uberon_anatomical_id WHERE biomarker_edrn.qa_state != 'Curated'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_36_2",
    "user": "gpt-3",
    "question": "Give me the description of anatomical entities which have a QA state of 'Not Curated' on the EDRN platform",
    "query": "SELECT anatomical_entity.description FROM anatomical_entity JOIN biomarker_edrn ON anatomical_entity.id = biomarker_edrn.uberon_anatomical_id WHERE biomarker_edrn.qa_state != 'Curated'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_37_1",
    "user": "gpt-3",
    "question": "Show me the PMID for disease mutation articles where the reference nucleotide base is not T",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.ref_nt != 'T'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_37_2",
    "user": "gpt-3",
    "question": "List the pmid of disease mutation articles where the reference nucleotide base is not T",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.ref_nt != 'T'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_38_1",
    "user": "gpt-3",
    "question": "Show me the pmid of disease mutation articles which have a different chromosome id than 5",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.chromosome_id != '5'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_38_2",
    "user": "gpt-3",
    "question": "Show me the PMID of disease mutation articles with a different chromosome id than 5",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.chromosome_id != '5'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_39_1",
    "user": "gpt-3",
    "question": "Show the expression rank score for healthy expressions where the anatomical entity identifier is not 'UBERON:0006483'",
    "query": "SELECT healthy_expression.expression_rank_score FROM healthy_expression JOIN anatomical_entity ON healthy_expression.uberon_anatomical_id = anatomical_entity.id WHERE anatomical_entity.id != 'UBERON:0006483'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_39_2",
    "user": "gpt-3",
    "question": "Show healthy expression expression rank score for anatomical entities with a different identifier than 'UBERON:0006483'",
    "query": "SELECT healthy_expression.expression_rank_score FROM healthy_expression JOIN anatomical_entity ON healthy_expression.uberon_anatomical_id = anatomical_entity.id WHERE anatomical_entity.id != 'UBERON:0006483'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_4_1",
    "user": "gpt-3",
    "question": "Show biomarker FDA NCIt terms which have a different test submission than 'P160045'",
    "query": "SELECT biomarker_fda_ncit_term.ncit_biomarker FROM biomarker_fda_ncit_term JOIN biomarker_fda ON biomarker_fda_ncit_term.biomarker_fda_id = biomarker_fda.id WHERE biomarker_fda.test_submission != 'P160045'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_4_2",
    "user": "gpt-3",
    "question": "Show NCIt biomarker terms for FDA submissions that are not P160045",
    "query": "SELECT biomarker_fda_ncit_term.ncit_biomarker FROM biomarker_fda_ncit_term JOIN biomarker_fda ON biomarker_fda_ncit_term.biomarker_fda_id = biomarker_fda.id WHERE biomarker_fda.test_submission != 'P160045'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_40_1",
    "user": "gpt-3",
    "question": "Show FDA test trial id's where the test adoption evidence is not 'clinical use'",
    "query": "SELECT biomarker_fda_test_trial.test_trial_id FROM biomarker_fda_test_trial JOIN biomarker_fda_test ON biomarker_fda_test_trial.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.test_adoption_evidence != 'clinical use'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_40_2",
    "user": "gpt-3",
    "question": "Identify FDA test trials (test_trial_id) where the test adoption evidence is not 'clinical use'",
    "query": "SELECT biomarker_fda_test_trial.test_trial_id FROM biomarker_fda_test_trial JOIN biomarker_fda_test ON biomarker_fda_test_trial.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.test_adoption_evidence != 'clinical use'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_41_1",
    "user": "gpt-3",
    "question": "Show me the platform method for FDA tests for different diseases than 'oral cavity cancer'",
    "query": "SELECT biomarker_fda_test.platform_method FROM biomarker_fda_test JOIN disease ON biomarker_fda_test.doid = disease.id WHERE disease.name != 'oral cavity cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_41_2",
    "user": "gpt-3",
    "question": "Show me the platform method for FDA tests for different diseases than oral cavity cancer",
    "query": "SELECT biomarker_fda_test.platform_method FROM biomarker_fda_test JOIN disease ON biomarker_fda_test.doid = disease.id WHERE disease.name != 'oral cavity cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_42_1",
    "user": "gpt-3",
    "question": "List the submissions for FDA tests with biomarker origin different from 'multigene prediction'",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda JOIN biomarker_fda_test ON biomarker_fda.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.biomarker_origin != 'multigene prediction'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_42_2",
    "user": "gpt-3",
    "question": "Show submissions for biomarker FDA tests with genomic origin different from 'multigene prediction'",
    "query": "SELECT biomarker_fda.test_submission FROM biomarker_fda JOIN biomarker_fda_test ON biomarker_fda.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.biomarker_origin != 'multigene prediction'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_43_1",
    "user": "gpt-3",
    "question": "List the diseases which have mutations with a nucleotide base which is different from T",
    "query": "SELECT disease.name FROM disease JOIN disease_mutation ON disease.id = disease_mutation.doid WHERE disease_mutation.ref_nt != 'T'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_43_2",
    "user": "gpt-3",
    "question": "List all diseases which have mutations with a nucleotide base different from T",
    "query": "SELECT disease.name FROM disease JOIN disease_mutation ON disease.id = disease_mutation.doid WHERE disease_mutation.ref_nt != 'T'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_44_1",
    "user": "gpt-3",
    "question": "Show me the QA state for biomarkers on the EDRN platform with panel tests being false",
    "query": "SELECT biomarker_edrn.qa_state FROM biomarker_edrn JOIN biomarker ON biomarker_edrn.id = biomarker.id WHERE biomarker.test_is_a_panel != 'False'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_44_2",
    "user": "gpt-3",
    "question": "Show me the QA state for biomarkers on the EDRN platform which have a panel test.",
    "query": "SELECT biomarker_edrn.qa_state FROM biomarker_edrn JOIN biomarker ON biomarker_edrn.id = biomarker.id WHERE biomarker.test_is_a_panel != 'False'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_45_1",
    "user": "gpt-3",
    "question": "Show me all diseases for which the FDA test trade name is different from 'VYSIS ALK Break Apart FISH Probe Kit'",
    "query": "SELECT disease.name FROM disease JOIN biomarker_fda_test ON disease.id = biomarker_fda_test.doid WHERE biomarker_fda_test.test_trade_name != 'VYSIS ALK Break Apart FISH Probe Kit'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_45_2",
    "user": "gpt-3",
    "question": "List all diseases where the FDA test trade name is different from 'VYSIS ALK Break Apart FISH Probe Kit'",
    "query": "SELECT disease.name FROM disease JOIN biomarker_fda_test ON disease.id = biomarker_fda_test.doid WHERE biomarker_fda_test.test_trade_name != 'VYSIS ALK Break Apart FISH Probe Kit'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_46_1",
    "user": "gpt-3",
    "question": "Show me the pmid of biomarker articles that have a panel test",
    "query": "SELECT biomarker_article.pmid FROM biomarker_article JOIN biomarker ON biomarker_article.biomarker_internal_id = biomarker.id WHERE biomarker.test_is_a_panel != 'False'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_46_2",
    "user": "gpt-3",
    "question": "Show me the pmid of biomarker articles with panel tests",
    "query": "SELECT biomarker_article.pmid FROM biomarker_article JOIN biomarker ON biomarker_article.biomarker_internal_id = biomarker.id WHERE biomarker.test_is_a_panel != 'False'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_47_1",
    "user": "gpt-3",
    "question": "Show submissions for FDA tests (with study design not equal to 'Pro')",
    "query": "SELECT biomarker_fda_test_use.test_submission FROM biomarker_fda_test_use JOIN biomarker_fda_test ON biomarker_fda_test_use.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.test_study_design != 'Pro'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_47_2",
    "user": "gpt-3",
    "question": "Show submissions for FDA tests with a study design different from 'Pro'",
    "query": "SELECT biomarker_fda_test_use.test_submission FROM biomarker_fda_test_use JOIN biomarker_fda_test ON biomarker_fda_test_use.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.test_study_design != 'Pro'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_48_1",
    "user": "gpt-3",
    "question": "Show me the name of anatomical entities with a healthy expression score different from 2.63",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity JOIN healthy_expression ON anatomical_entity.id = healthy_expression.uberon_anatomical_id WHERE healthy_expression.expression_score != 2.63000"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_48_2",
    "user": "gpt-3",
    "question": "Show me the name of all anatomical entities which have a healthy expression score different from 2.63",
    "query": "SELECT anatomical_entity.name FROM anatomical_entity JOIN healthy_expression ON anatomical_entity.id = healthy_expression.uberon_anatomical_id WHERE healthy_expression.expression_score != 2.63000"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_49_1",
    "user": "gpt-3",
    "question": "Show me the gene symbol of gene ensembles where species common name is not mouse",
    "query": "SELECT xref_gene_ensembl.gene_symbol FROM xref_gene_ensembl JOIN species ON xref_gene_ensembl.speciesid = species.speciesid WHERE species.speciescommonname != 'mouse'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_49_2",
    "user": "gpt-3",
    "question": "List the symbols of gene ensembles for species with a different common name than mouse",
    "query": "SELECT xref_gene_ensembl.gene_symbol FROM xref_gene_ensembl JOIN species ON xref_gene_ensembl.speciesid = species.speciesid WHERE species.speciescommonname != 'mouse'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_5_1",
    "user": "gpt-3",
    "question": "Show the name of all stages which are healthy and whose expression relative gene expression is not HIGH",
    "query": "SELECT stage.name FROM stage JOIN healthy_expression ON stage.id = healthy_expression.uberon_developmental_id WHERE healthy_expression.expression_level_gene_relative != 'HIGH'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_5_2",
    "user": "gpt-3",
    "question": "Show all stages, where the relative expression level gene is NOT 'HIGH'",
    "query": "SELECT stage.name FROM stage JOIN healthy_expression ON stage.id = healthy_expression.uberon_developmental_id WHERE healthy_expression.expression_level_gene_relative != 'HIGH'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_50_1",
    "user": "gpt-3",
    "question": "What is the test is a panel for biomarker alias 'AT-1'?",
    "query": "SELECT biomarker.test_is_a_panel FROM biomarker JOIN biomarker_alias ON biomarker.id = biomarker_alias.biomarker_internal_id WHERE biomarker_alias.alias != 'AT-1'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_50_2",
    "user": "gpt-3",
    "question": "What is the test Is A Panel for biomarkers which have an alias other than AT-1?",
    "query": "SELECT biomarker.test_is_a_panel FROM biomarker JOIN biomarker_alias ON biomarker.id = biomarker_alias.biomarker_internal_id WHERE biomarker_alias.alias != 'AT-1'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_51_1",
    "user": "gpt-3",
    "question": "List the FDA test platform methods for tests with a disease different from 'ocular cancer'",
    "query": "SELECT biomarker_fda_test.platform_method FROM biomarker_fda_test JOIN disease ON biomarker_fda_test.doid = disease.id WHERE disease.name != 'ocular cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_51_2",
    "user": "gpt-3",
    "question": "Identify FDA test platform methods for different diseases than ocular cancer",
    "query": "SELECT biomarker_fda_test.platform_method FROM biomarker_fda_test JOIN disease ON biomarker_fda_test.doid = disease.id WHERE disease.name != 'ocular cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_52_1",
    "user": "gpt-3",
    "question": "What is the gene symbol for ensembles in species with genus other than Homo?",
    "query": "SELECT xref_gene_ensembl.gene_symbol FROM xref_gene_ensembl JOIN species ON xref_gene_ensembl.speciesid = species.speciesid WHERE species.genus != 'Homo'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_52_2",
    "user": "gpt-3",
    "question": "What is the gene symbol for ensembles of genes where species with genus 'Homo' are not involved?",
    "query": "SELECT xref_gene_ensembl.gene_symbol FROM xref_gene_ensembl JOIN species ON xref_gene_ensembl.speciesid = species.speciesid WHERE species.genus != 'Homo'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_53_1",
    "user": "gpt-3",
    "question": "Show submissions for FDA tests with clinical significance different from identifying breast cancer patients who may be eligible for treatment with PIQRAY (alpelisib) based on a PIK3CA Mutation",
    "query": "SELECT biomarker_fda_test_use.test_submission FROM biomarker_fda_test_use JOIN biomarker_fda_test ON biomarker_fda_test_use.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.clinical_significance != 'identifying breast cancer patients who may be eligible for treatment with PIQRAY (alpelisib) based on a PIK3CA Mutation'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_53_2",
    "user": "gpt-3",
    "question": "Show submissions for FDA tests with clinical significance 'identifying breast cancer patients who may be eligible for treatment with PIQRAY (alpelisib) based on a PIK3CA Mutation'.",
    "query": "SELECT biomarker_fda_test_use.test_submission FROM biomarker_fda_test_use JOIN biomarker_fda_test ON biomarker_fda_test_use.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.clinical_significance != 'identifying breast cancer patients who may be eligible for treatment with PIQRAY (alpelisib) based on a PIK3CA Mutation'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_54_1",
    "user": "gpt-3",
    "question": "Show disease mutation data source for cancer diseases which are not hematologic cancer",
    "query": "SELECT disease_mutation.data_source FROM disease_mutation JOIN disease ON disease_mutation.doid = disease.id WHERE disease.name != 'hematologic cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_54_2",
    "user": "gpt-3",
    "question": "Show disease mutation data sources for 'hematologic cancer'",
    "query": "SELECT disease_mutation.data_source FROM disease_mutation JOIN disease ON disease_mutation.doid = disease.id WHERE disease.name != 'hematologic cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_55_1",
    "user": "gpt-3",
    "question": "Show subjects with no coverage for expression about disease 'blastoma'",
    "query": "SELECT differential_expression.subjects_nocoverage FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name != 'blastoma'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_55_2",
    "user": "gpt-3",
    "question": "Show all subjects without coverage for disease other than 'blastoma'",
    "query": "SELECT differential_expression.subjects_nocoverage FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name != 'blastoma'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_56_1",
    "user": "gpt-3",
    "question": "Show me the platform method for FDA tests with submission different from 'DEN170030'",
    "query": "SELECT biomarker_fda_test.platform_method FROM biomarker_fda_test JOIN biomarker_fda_test_use ON biomarker_fda_test.test_trade_name = biomarker_fda_test_use.test_trade_name WHERE biomarker_fda_test_use.test_submission != 'DEN170030'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_56_2",
    "user": "gpt-3",
    "question": "What is the platform method for FDA test submissions which are not 'DEN170030'?",
    "query": "SELECT biomarker_fda_test.platform_method FROM biomarker_fda_test JOIN biomarker_fda_test_use ON biomarker_fda_test.test_trade_name = biomarker_fda_test_use.test_trade_name WHERE biomarker_fda_test_use.test_submission != 'DEN170030'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_57_1",
    "user": "gpt-3",
    "question": "Show disease mutation amino acid positions uniprot kB where disease mutation site annotation has feature key 'binding site'",
    "query": "SELECT disease_mutation.aa_pos_uniprotkb FROM disease_mutation JOIN disease_mutation_site_annotation ON disease_mutation.id = disease_mutation_site_annotation.disease_mutation_id WHERE disease_mutation_site_annotation.feature_key != 'binding site'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_57_2",
    "user": "gpt-3",
    "question": "Show disease mutation amino acid position uniprot KB for disease mutations which have different disease mutation site annotation feature key 'binding site'",
    "query": "SELECT disease_mutation.aa_pos_uniprotkb FROM disease_mutation JOIN disease_mutation_site_annotation ON disease_mutation.id = disease_mutation_site_annotation.disease_mutation_id WHERE disease_mutation_site_annotation.feature_key != 'binding site'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_58_1",
    "user": "gpt-3",
    "question": "Show me the description of biomarkers for FDA tests where the test trade name is not 'MammaPrint'",
    "query": "SELECT biomarker.biomarker_description FROM biomarker JOIN biomarker_fda ON biomarker.id = biomarker_fda.id WHERE biomarker_fda.test_trade_name != 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_58_2",
    "user": "gpt-3",
    "question": "Show me the description for biomarkers which have a different test trade name than 'MammaPrint'",
    "query": "SELECT biomarker.biomarker_description FROM biomarker JOIN biomarker_fda ON biomarker.id = biomarker_fda.id WHERE biomarker_fda.test_trade_name != 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_59_1",
    "user": "gpt-3",
    "question": "Show evidence of test adoption for FDA tests where the test submission is not 'P110012'",
    "query": "SELECT biomarker_fda_test.test_adoption_evidence FROM biomarker_fda_test JOIN biomarker_fda_test_use ON biomarker_fda_test.test_trade_name = biomarker_fda_test_use.test_trade_name WHERE biomarker_fda_test_use.test_submission != 'P110012'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_59_2",
    "user": "gpt-3",
    "question": "Show evidence for adoption of FDA tests where the test submission is not 'P110012'",
    "query": "SELECT biomarker_fda_test.test_adoption_evidence FROM biomarker_fda_test JOIN biomarker_fda_test_use ON biomarker_fda_test.test_trade_name = biomarker_fda_test_use.test_trade_name WHERE biomarker_fda_test_use.test_submission != 'P110012'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_6_1",
    "user": "gpt-3",
    "question": "What are the stages with a healthy expression which have an expression rank score of not 34.80?",
    "query": "SELECT stage.name FROM stage JOIN healthy_expression ON stage.id = healthy_expression.uberon_developmental_id WHERE healthy_expression.expression_rank_score != 34.80"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_6_2",
    "user": "gpt-3",
    "question": "Get the name of all stages which have a healthy expression expression rank score of 34.80 or less",
    "query": "SELECT stage.name FROM stage JOIN healthy_expression ON stage.id = healthy_expression.uberon_developmental_id WHERE healthy_expression.expression_rank_score != 34.80"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_60_1",
    "user": "gpt-3",
    "question": "Show feature key of disease mutation site annotations where the mutation's chromosome position is not 40049326",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.chromosome_pos != 40049326"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_60_2",
    "user": "gpt-3",
    "question": "Show disease mutation site annotation feature key for disease mutations not having a position on chromosome number 40049326",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.chromosome_pos != 40049326"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_61_1",
    "user": "gpt-3",
    "question": "Show me the name of disease mutation impact prediction tools that are not applicable for a mutation with chromosome position 227872065",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction JOIN disease_mutation ON disease_mutation_impact_prediction.disease_mutation_id = disease_mutation.id WHERE disease_mutation.chromosome_pos != 227872065"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_61_2",
    "user": "gpt-3",
    "question": "Show me the disease mutation impact prediction tools for disease mutations which have a chromosome position different from 227872065",
    "query": "SELECT disease_mutation_impact_prediction.tool FROM disease_mutation_impact_prediction JOIN disease_mutation ON disease_mutation_impact_prediction.disease_mutation_id = disease_mutation.id WHERE disease_mutation.chromosome_pos != 227872065"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_62_1",
    "user": "gpt-3",
    "question": "Show me the article for disease mutations where the reference nucleotide base is not C",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.ref_nt != 'C'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_62_2",
    "user": "gpt-3",
    "question": "Identify disease mutation articles with a reference nucleotide base different from C",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.ref_nt != 'C'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_63_1",
    "user": "gpt-3",
    "question": "Show me the call quality of healthy expressions with a different gene symbol than 'MYLIP'",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression JOIN xref_gene_ensembl ON healthy_expression.ensembl_gene_id = xref_gene_ensembl.ensembl_gene_id WHERE xref_gene_ensembl.gene_symbol != 'MYLIP'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_63_2",
    "user": "gpt-3",
    "question": "List the call qualities of healthy expressions which have a different gene symbol than 'MYLIP'",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression JOIN xref_gene_ensembl ON healthy_expression.ensembl_gene_id = xref_gene_ensembl.ensembl_gene_id WHERE xref_gene_ensembl.gene_symbol != 'MYLIP'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_64_1",
    "user": "gpt-3",
    "question": "Show me the description for biomarkers on the EDRN platform which have a biomarker title different from 'CHI3L1'",
    "query": "SELECT biomarker.biomarker_description FROM biomarker JOIN biomarker_edrn ON biomarker.id = biomarker_edrn.id WHERE biomarker_edrn.biomarker_title != 'CHI3L1'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_64_2",
    "user": "gpt-3",
    "question": "Show me the description for biomarkers on the EDRN platform with a biomarker title different from 'CHI3L1'",
    "query": "SELECT biomarker.biomarker_description FROM biomarker JOIN biomarker_edrn ON biomarker.id = biomarker_edrn.id WHERE biomarker_edrn.biomarker_title != 'CHI3L1'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_65_1",
    "user": "gpt-3",
    "question": "Show the identifier for anatomical entities having biomarkers on the EDRN platform in phase 'not one'",
    "query": "SELECT anatomical_entity.id FROM anatomical_entity JOIN biomarker_edrn ON anatomical_entity.id = biomarker_edrn.uberon_anatomical_id WHERE biomarker_edrn.phase != 'One'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_65_2",
    "user": "gpt-3",
    "question": "Give me the identifier for anatomical entities on EDRN platform with biomarker phase 'not one'",
    "query": "SELECT anatomical_entity.id FROM anatomical_entity JOIN biomarker_edrn ON anatomical_entity.id = biomarker_edrn.uberon_anatomical_id WHERE biomarker_edrn.phase != 'One'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_66_1",
    "user": "gpt-3",
    "question": "Show the trade name of FDA tests for drug '644241'",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda JOIN biomarker_fda_drug ON biomarker_fda.id = biomarker_fda_drug.biomarker_fda_id WHERE biomarker_fda_drug.biomarker_drug != '644241'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_66_2",
    "user": "gpt-3",
    "question": "Show me the trade name for FDA tests with drug id different from '644241'",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda JOIN biomarker_fda_drug ON biomarker_fda.id = biomarker_fda_drug.biomarker_fda_id WHERE biomarker_fda_drug.biomarker_drug != '644241'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_67_1",
    "user": "gpt-3",
    "question": "Show me the expression level gene relative for healthy expression where the anatomical entity is not 'superior colliculus'",
    "query": "SELECT healthy_expression.expression_level_gene_relative FROM healthy_expression JOIN anatomical_entity ON healthy_expression.uberon_anatomical_id = anatomical_entity.id WHERE anatomical_entity.name != 'superior colliculus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_67_2",
    "user": "gpt-3",
    "question": "Show expression level of genes relative to healthy expression in anatomical entities other than superior colliculus",
    "query": "SELECT healthy_expression.expression_level_gene_relative FROM healthy_expression JOIN anatomical_entity ON healthy_expression.uberon_anatomical_id = anatomical_entity.id WHERE anatomical_entity.name != 'superior colliculus'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_68_1",
    "user": "gpt-3",
    "question": "What's the NCIt term for biomarkers submitted to FDA different from K062744?",
    "query": "SELECT biomarker_fda_ncit_term.ncit_biomarker FROM biomarker_fda_ncit_term JOIN biomarker_fda ON biomarker_fda_ncit_term.biomarker_fda_id = biomarker_fda.id WHERE biomarker_fda.test_submission != 'K062744'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_68_2",
    "user": "gpt-3",
    "question": "What is the NCIt term for biomarkers submitted to FDA where the submission is not K062744?",
    "query": "SELECT biomarker_fda_ncit_term.ncit_biomarker FROM biomarker_fda_ncit_term JOIN biomarker_fda ON biomarker_fda_ncit_term.biomarker_fda_id = biomarker_fda.id WHERE biomarker_fda.test_submission != 'K062744'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_69_1",
    "user": "gpt-3",
    "question": "Show approval status for FDA tests with a different trial id than NCT02042379",
    "query": "SELECT biomarker_fda_test.test_approval_status FROM biomarker_fda_test JOIN biomarker_fda_test_trial ON biomarker_fda_test.test_trade_name = biomarker_fda_test_trial.test_trade_name WHERE biomarker_fda_test_trial.test_trial_id != 'NCT02042379'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_69_2",
    "user": "gpt-3",
    "question": "Show me all approval status for FDA tests which have a different test trial id than 'NCT02042379'",
    "query": "SELECT biomarker_fda_test.test_approval_status FROM biomarker_fda_test JOIN biomarker_fda_test_trial ON biomarker_fda_test.test_trade_name = biomarker_fda_test_trial.test_trade_name WHERE biomarker_fda_test_trial.test_trial_id != 'NCT02042379'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_7_1",
    "user": "gpt-3",
    "question": "What diseases have an expression with no change in subjects?",
    "query": "SELECT disease.name FROM disease JOIN differential_expression ON disease.id = differential_expression.doid WHERE differential_expression.subjects_nochange != 0"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_7_2",
    "user": "gpt-3",
    "question": "What disease names are there with an expression with a number of subjects with no change?",
    "query": "SELECT disease.name FROM disease JOIN differential_expression ON disease.id = differential_expression.doid WHERE differential_expression.subjects_nochange != 0"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_70_1",
    "user": "gpt-3",
    "question": "Show me the healthy expression call quality for anatomical entities with a different identifier than 'UBERON:0010414'",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression JOIN anatomical_entity ON healthy_expression.uberon_anatomical_id = anatomical_entity.id WHERE anatomical_entity.id != 'UBERON:0010414'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_70_2",
    "user": "gpt-3",
    "question": "Show the call quality for healthy expressions which have an anatomical entity with identifier 'UBERON:0010414'",
    "query": "SELECT healthy_expression.call_quality FROM healthy_expression JOIN anatomical_entity ON healthy_expression.uberon_anatomical_id = anatomical_entity.id WHERE anatomical_entity.id != 'UBERON:0010414'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_71_1",
    "user": "gpt-3",
    "question": "Show me the coding sequence positions of disease mutations which are not for oral cavity cancer",
    "query": "SELECT disease_mutation.cds_pos FROM disease_mutation JOIN disease ON disease_mutation.doid = disease.id WHERE disease.name != 'oral cavity cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_71_2",
    "user": "gpt-3",
    "question": "Show me the coding sequence positions of disease mutations which are not for oral cavity cancer.",
    "query": "SELECT disease_mutation.cds_pos FROM disease_mutation JOIN disease ON disease_mutation.doid = disease.id WHERE disease.name != 'oral cavity cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_72_1",
    "user": "gpt-3",
    "question": "Show the gene symbol of ensembles with a relative expression level anatomical expression level of 'not high'",
    "query": "SELECT xref_gene_ensembl.gene_symbol FROM xref_gene_ensembl JOIN healthy_expression ON xref_gene_ensembl.ensembl_gene_id = healthy_expression.ensembl_gene_id WHERE healthy_expression.expression_level_anatomical_relative != 'HIGH'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_72_2",
    "user": "gpt-3",
    "question": "What is the symbol of a gene ensemble with a healthy expression level anatomical relative of 'NOT HIGH'",
    "query": "SELECT xref_gene_ensembl.gene_symbol FROM xref_gene_ensembl JOIN healthy_expression ON xref_gene_ensembl.ensembl_gene_id = healthy_expression.ensembl_gene_id WHERE healthy_expression.expression_level_anatomical_relative != 'HIGH'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_73_1",
    "user": "gpt-3",
    "question": "Give me all trade names of FDA tests where the DOID is not 1612",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use JOIN biomarker_fda_test ON biomarker_fda_test_use.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.doid != 1612"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_73_2",
    "user": "gpt-3",
    "question": "Show me all trade names for fda test uses where the DOI (test id) is not equal to 1612",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use JOIN biomarker_fda_test ON biomarker_fda_test_use.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.doid != 1612"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_74_1",
    "user": "gpt-3",
    "question": "Show biomarker drug for FDA submissions that are not 'K062699'",
    "query": "SELECT biomarker_fda_drug.biomarker_drug FROM biomarker_fda_drug JOIN biomarker_fda ON biomarker_fda_drug.biomarker_fda_id = biomarker_fda.id WHERE biomarker_fda.test_submission != 'K062699'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_74_2",
    "user": "gpt-3",
    "question": "List FDA drugs with biomarkers where the test submission is not 'K062699'",
    "query": "SELECT biomarker_fda_drug.biomarker_drug FROM biomarker_fda_drug JOIN biomarker_fda ON biomarker_fda_drug.biomarker_fda_id = biomarker_fda.id WHERE biomarker_fda.test_submission != 'K062699'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_75_1",
    "user": "gpt-3",
    "question": "Show me all trade names for FDA tests which have a clinical significance of '70-gene-panel gene signature predicts likelihood of distant metastases and prognosis in profiles designated as high risk or low risk' different from '70-gene-panel gene signature predicts likelihood of distant metastases and prognosis in profiles designated as high risk or low risk'",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use JOIN biomarker_fda_test ON biomarker_fda_test_use.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.clinical_significance != '70-gene-panel gene signature predicts likelihood of distant metastases and prognosis in profiles designated as high risk or low risk'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_75_2",
    "user": "gpt-3",
    "question": "Show me FDA trade names for tests (fda_test_use) that have test clinical significance of '70-gene-panel gene signature predicts likelihood of distant metastases and prognosis in profiles designated as high risk or low risk'",
    "query": "SELECT biomarker_fda_test_use.test_trade_name FROM biomarker_fda_test_use JOIN biomarker_fda_test ON biomarker_fda_test_use.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.clinical_significance != '70-gene-panel gene signature predicts likelihood of distant metastases and prognosis in profiles designated as high risk or low risk'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_76_1",
    "user": "gpt-3",
    "question": "Show test trial id of FDA approved tests for cancer types other than Ductal Carcinoma In Situ (histological type 8500) or Lobular Carcinoid In Situ (histological type 8520)",
    "query": "SELECT biomarker_fda_test_trial.test_trial_id FROM biomarker_fda_test_trial JOIN biomarker_fda_test ON biomarker_fda_test_trial.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.histological_type != '8500/2 (ductal carcinoma in situ) OR 8520/2 (lobular carcinoma in situ)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_76_2",
    "user": "gpt-3",
    "question": "Show test trial id of FDA test trials with histological type different from '8500/2 (ductal carcinoma in situ) OR 8520/2 (lobular carcinoma in situ)'.",
    "query": "SELECT biomarker_fda_test_trial.test_trial_id FROM biomarker_fda_test_trial JOIN biomarker_fda_test ON biomarker_fda_test_trial.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.histological_type != '8500/2 (ductal carcinoma in situ) OR 8520/2 (lobular carcinoma in situ)'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_77_1",
    "user": "gpt-3",
    "question": "Show disease mutation article pmid where the reference nucleotide base is different from G",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.ref_nt != 'G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_77_2",
    "user": "gpt-3",
    "question": "Show disease mutation article which have a different reference nucleotide base than G",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.ref_nt != 'G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_78_1",
    "user": "gpt-3",
    "question": "Show me the trade name of FDA tests which have a clinical significance different from '70-gene-panel gene signature predicts likelihood of distant metastases and prognosis in profiles designated as high risk or low risk'",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda JOIN biomarker_fda_test ON biomarker_fda.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.clinical_significance != '70-gene-panel gene signature predicts likelihood of distant metastases and prognosis in profiles designated as high risk or low risk'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_78_2",
    "user": "gpt-3",
    "question": "Show me the trade name of FDA tests with clinical significance different from '70-gene-panel gene signature predicts likelihood of distant metastases and prognosis in profiles designated as high risk or low risk'",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda JOIN biomarker_fda_test ON biomarker_fda.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.clinical_significance != '70-gene-panel gene signature predicts likelihood of distant metastases and prognosis in profiles designated as high risk or low risk'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_79_1",
    "user": "gpt-3",
    "question": "Show me the site prediction for disease mutations with a different reference nucleotide base than C",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction JOIN disease_mutation ON disease_mutation_impact_prediction.disease_mutation_id = disease_mutation.id WHERE disease_mutation.ref_nt != 'C'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_79_2",
    "user": "gpt-3",
    "question": "What is the prediction for site predictions of disease mutations with reference nucleotide base not equal to C?",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction JOIN disease_mutation ON disease_mutation_impact_prediction.disease_mutation_id = disease_mutation.id WHERE disease_mutation.ref_nt != 'C'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_8_1",
    "user": "gpt-3",
    "question": "Which stages have a healthy expression with a expression rank score of not 11.00",
    "query": "SELECT stage.name FROM stage JOIN healthy_expression ON stage.id = healthy_expression.uberon_developmental_id WHERE healthy_expression.expression_rank_score != 11.00"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_8_2",
    "user": "gpt-3",
    "question": "What are the names of stages with a healthy expression expression rank score different from 11.00?",
    "query": "SELECT stage.name FROM stage JOIN healthy_expression ON stage.id = healthy_expression.uberon_developmental_id WHERE healthy_expression.expression_rank_score != 11.00"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_80_1",
    "user": "gpt-3",
    "question": "Show me the feature key of disease mutation site annotations which do not have a mutation position of 49696475",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.chromosome_pos != 49696475"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_80_2",
    "user": "gpt-3",
    "question": "Show a list of disease mutation site annotations with feature keys for a disease mutation with a chromosome position different from 49696475",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.chromosome_pos != 49696475"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_81_1",
    "user": "gpt-3",
    "question": "Show subjects with no change in expression for the disease 'ocular cancer'",
    "query": "SELECT differential_expression.subjects_nochange FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name != 'ocular cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_81_2",
    "user": "gpt-3",
    "question": "Show the number of subjects with no change in expression for disease which is different from 'ocular cancer'",
    "query": "SELECT differential_expression.subjects_nochange FROM differential_expression JOIN disease ON differential_expression.doid = disease.id WHERE disease.name != 'ocular cancer'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_82_1",
    "user": "gpt-3",
    "question": "Show disease mutation nucleotide base variations where disease mutation article pmid is different from 8187091",
    "query": "SELECT disease_mutation.alt_nt FROM disease_mutation JOIN disease_mutation_article ON disease_mutation.id = disease_mutation_article.disease_mutation_id WHERE disease_mutation_article.pmid != 8187091"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_82_2",
    "user": "gpt-3",
    "question": "Show all nucleotide base variations of disease mutations which have a different pmid than article with id 8187091",
    "query": "SELECT disease_mutation.alt_nt FROM disease_mutation JOIN disease_mutation_article ON disease_mutation.id = disease_mutation_article.disease_mutation_id WHERE disease_mutation_article.pmid != 8187091"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_83_1",
    "user": "gpt-3",
    "question": "Show me all gene ensembles with species symbol different from 'human'",
    "query": "SELECT xref_gene_ensembl.gene_symbol FROM xref_gene_ensembl JOIN species ON xref_gene_ensembl.speciesid = species.speciesid WHERE species.speciescommonname != 'human'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_83_2",
    "user": "gpt-3",
    "question": "Show the gene symbol of ensembles with species name different from 'human'",
    "query": "SELECT xref_gene_ensembl.gene_symbol FROM xref_gene_ensembl JOIN species ON xref_gene_ensembl.speciesid = species.speciesid WHERE species.speciescommonname != 'human'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_84_1",
    "user": "gpt-3",
    "question": "Show me the test is a panel for biomarker BORG2",
    "query": "SELECT biomarker.test_is_a_panel FROM biomarker JOIN biomarker_alias ON biomarker.id = biomarker_alias.biomarker_internal_id WHERE biomarker_alias.alias != 'BORG2'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_84_2",
    "user": "gpt-3",
    "question": "What is the test is a panel for biomarker BORG2?",
    "query": "SELECT biomarker.test_is_a_panel FROM biomarker JOIN biomarker_alias ON biomarker.id = biomarker_alias.biomarker_internal_id WHERE biomarker_alias.alias != 'BORG2'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_85_1",
    "user": "gpt-3",
    "question": "Show FDA NCIt terms for biomarkers which have a different trade name than 'Oncomine Dx Target Test'",
    "query": "SELECT biomarker_fda_ncit_term.ncit_biomarker FROM biomarker_fda_ncit_term JOIN biomarker_fda ON biomarker_fda_ncit_term.biomarker_fda_id = biomarker_fda.id WHERE biomarker_fda.test_trade_name != 'Oncomine Dx Target Test'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_85_2",
    "user": "gpt-3",
    "question": "Show me all biomarker FDA NCIt terms where the test trade name is different from 'Oncomine Dx Target Test'",
    "query": "SELECT biomarker_fda_ncit_term.ncit_biomarker FROM biomarker_fda_ncit_term JOIN biomarker_fda ON biomarker_fda_ncit_term.biomarker_fda_id = biomarker_fda.id WHERE biomarker_fda.test_trade_name != 'Oncomine Dx Target Test'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_86_1",
    "user": "gpt-3",
    "question": "Show biomarker origin for FDA tests with a trial id different from 'NCT00433589'",
    "query": "SELECT biomarker_fda_test.biomarker_origin FROM biomarker_fda_test JOIN biomarker_fda_test_trial ON biomarker_fda_test.test_trade_name = biomarker_fda_test_trial.test_trade_name WHERE biomarker_fda_test_trial.test_trial_id != 'NCT00433589'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_86_2",
    "user": "gpt-3",
    "question": "Show biomarker origin for FDA test trials with different id than 'NCT00433589'",
    "query": "SELECT biomarker_fda_test.biomarker_origin FROM biomarker_fda_test JOIN biomarker_fda_test_trial ON biomarker_fda_test.test_trade_name = biomarker_fda_test_trial.test_trade_name WHERE biomarker_fda_test_trial.test_trial_id != 'NCT00433589'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_87_1",
    "user": "gpt-3",
    "question": "Show the pmid of disease mutation articles which contain a nucleotide base variation",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.alt_nt != 'G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_87_2",
    "user": "gpt-3",
    "question": "Show me the article of disease mutations without nucleotide base variation",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.alt_nt != 'G'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_88_1",
    "user": "gpt-3",
    "question": "Show me FDA test trade names for biomarkers with different gene symbols than NKX3-1",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda JOIN biomarker ON biomarker_fda.id = biomarker.id WHERE biomarker.gene_symbol != 'NKX3-1'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_88_2",
    "user": "gpt-3",
    "question": "What is the trade name of FDA tests for biomarker with gene symbol different from 'NKX3-1'?",
    "query": "SELECT biomarker_fda.test_trade_name FROM biomarker_fda JOIN biomarker ON biomarker_fda.id = biomarker.id WHERE biomarker.gene_symbol != 'NKX3-1'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_89_1",
    "user": "gpt-3",
    "question": "Show me disease mutation impact prediction site predictions for mutations where the peptide position is not 362?",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction JOIN disease_mutation ON disease_mutation_impact_prediction.disease_mutation_id = disease_mutation.id WHERE disease_mutation.peptide_pos != 362"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_89_2",
    "user": "gpt-3",
    "question": "Show a prediction for disease mutation impact predictions where the peptide position is not 362",
    "query": "SELECT disease_mutation_impact_prediction.site_prediction FROM disease_mutation_impact_prediction JOIN disease_mutation ON disease_mutation_impact_prediction.disease_mutation_id = disease_mutation.id WHERE disease_mutation.peptide_pos != 362"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_9_1",
    "user": "gpt-3",
    "question": "Show me all biomarker FDA NCIt terms with a trade name different from 'MammaPrint'",
    "query": "SELECT biomarker_fda_ncit_term.ncit_biomarker FROM biomarker_fda_ncit_term JOIN biomarker_fda ON biomarker_fda_ncit_term.biomarker_fda_id = biomarker_fda.id WHERE biomarker_fda.test_trade_name != 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_9_2",
    "user": "gpt-3",
    "question": "Show me all biomarker FDA NCIt terms without the test trade name 'MammaPrint'",
    "query": "SELECT biomarker_fda_ncit_term.ncit_biomarker FROM biomarker_fda_ncit_term JOIN biomarker_fda ON biomarker_fda_ncit_term.biomarker_fda_id = biomarker_fda.id WHERE biomarker_fda.test_trade_name != 'MammaPrint'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_90_1",
    "user": "gpt-3",
    "question": "List the feature keys of all disease mutation site annotations which have a mutation with an amino acid residue variation different from T.",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.alt_aa != 'T'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_90_2",
    "user": "gpt-3",
    "question": "Show disease mutation site annotations where the feature key is different from 'T' for amino acid residue variations",
    "query": "SELECT disease_mutation_site_annotation.feature_key FROM disease_mutation_site_annotation JOIN disease_mutation ON disease_mutation_site_annotation.disease_mutation_id = disease_mutation.id WHERE disease_mutation.alt_aa != 'T'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_91_1",
    "user": "gpt-3",
    "question": "What are the names of all stages which have a healthy expression expression rank score different from 27.40?",
    "query": "SELECT stage.name FROM stage JOIN healthy_expression ON stage.id = healthy_expression.uberon_developmental_id WHERE healthy_expression.expression_rank_score != 27.40"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_91_2",
    "user": "gpt-3",
    "question": "Name of all stages which have a healthy expression expression rank score of 27.40 or less",
    "query": "SELECT stage.name FROM stage JOIN healthy_expression ON stage.id = healthy_expression.uberon_developmental_id WHERE healthy_expression.expression_rank_score != 27.40"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_92_1",
    "user": "gpt-3",
    "question": "Show me the expression rank score for healthy expression which are not in the juvenile stage.",
    "query": "SELECT healthy_expression.expression_rank_score FROM healthy_expression JOIN stage ON healthy_expression.uberon_developmental_id = stage.id WHERE stage.name != 'juvenile stage'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_92_2",
    "user": "gpt-3",
    "question": "What is the expression rank score for healthy expressions which are not in the 'juvenile stage'?",
    "query": "SELECT healthy_expression.expression_rank_score FROM healthy_expression JOIN stage ON healthy_expression.uberon_developmental_id = stage.id WHERE stage.name != 'juvenile stage'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_93_1",
    "user": "gpt-3",
    "question": "Show disease mutation article pmids where the coding sequence position is not 1742",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.cds_pos != 1742"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_93_2",
    "user": "gpt-3",
    "question": "Show me the PMID of disease mutations with coding sequence position different from 1742",
    "query": "SELECT disease_mutation_article.pmid FROM disease_mutation_article JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id WHERE disease_mutation.cds_pos != 1742"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_94_1",
    "user": "gpt-3",
    "question": "Show me all diseases which are not expressed with the gene symbol ABCA13",
    "query": "SELECT disease.name FROM disease JOIN differential_expression ON disease.id = differential_expression.doid WHERE differential_expression.gene_symbol != 'ABCA13'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_94_2",
    "user": "gpt-3",
    "question": "Show all diseases which are not expressed differently with the gene symbol ABCA13",
    "query": "SELECT disease.name FROM disease JOIN differential_expression ON disease.id = differential_expression.doid WHERE differential_expression.gene_symbol != 'ABCA13'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_95_1",
    "user": "gpt-3",
    "question": "Which species have a different gene ensemble symbol than 'MARCO'",
    "query": "SELECT species.species FROM species JOIN xref_gene_ensembl ON species.speciesid = xref_gene_ensembl.speciesid WHERE xref_gene_ensembl.gene_symbol != 'MARCO'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_95_2",
    "user": "gpt-3",
    "question": "Show me all species which have a different gene ensemble with symbol 'MARCO'",
    "query": "SELECT species.species FROM species JOIN xref_gene_ensembl ON species.speciesid = xref_gene_ensembl.speciesid WHERE xref_gene_ensembl.gene_symbol != 'MARCO'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_96_1",
    "user": "gpt-3",
    "question": "Show the gene symbol of ensembles which have a healthy expression expression score different from 2.63",
    "query": "SELECT xref_gene_ensembl.gene_symbol FROM xref_gene_ensembl JOIN healthy_expression ON xref_gene_ensembl.ensembl_gene_id = healthy_expression.ensembl_gene_id WHERE healthy_expression.expression_score != 2.63000"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_96_2",
    "user": "gpt-3",
    "question": "Show me the symbol of genes in gene ensembles with a healthy expression score different from 2.63",
    "query": "SELECT xref_gene_ensembl.gene_symbol FROM xref_gene_ensembl JOIN healthy_expression ON xref_gene_ensembl.ensembl_gene_id = healthy_expression.ensembl_gene_id WHERE healthy_expression.expression_score != 2.63000"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_97_1",
    "user": "gpt-3",
    "question": "Show me the test trial id of FDA test trials with more than 70 genes",
    "query": "SELECT biomarker_fda_test_trial.test_trial_id FROM biomarker_fda_test_trial JOIN biomarker_fda_test ON biomarker_fda_test_trial.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.test_number_genes != 70"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_97_2",
    "user": "gpt-3",
    "question": "Show test trial id of FDA test trials with more than 70 genes",
    "query": "SELECT biomarker_fda_test_trial.test_trial_id FROM biomarker_fda_test_trial JOIN biomarker_fda_test ON biomarker_fda_test_trial.test_trade_name = biomarker_fda_test.test_trade_name WHERE biomarker_fda_test.test_number_genes != 70"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_98_1",
    "user": "gpt-3",
    "question": "Show me the alias for biomarker with id different from 383",
    "query": "SELECT biomarker_alias.alias FROM biomarker_alias JOIN biomarker ON biomarker_alias.biomarker_internal_id = biomarker.id WHERE biomarker.biomarker_id != 'urn:edrn:bmdb:biomarker:383'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_98_2",
    "user": "gpt-3",
    "question": "Show me the alias for biomarkers with ID different from 383",
    "query": "SELECT biomarker_alias.alias FROM biomarker_alias JOIN biomarker ON biomarker_alias.biomarker_internal_id = biomarker.id WHERE biomarker.biomarker_id != 'urn:edrn:bmdb:biomarker:383'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_99_1",
    "user": "gpt-3",
    "question": "Show me the alias for biomarker with id different from 114",
    "query": "SELECT biomarker_alias.alias FROM biomarker_alias JOIN biomarker ON biomarker_alias.biomarker_internal_id = biomarker.id WHERE biomarker.biomarker_id != 'urn:edrn:bmdb:biomarker:114'"
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "id": "9_99_2",
    "user": "gpt-3",
    "question": "Show me the alias for biomarker with internal id different from 114",
    "query": "SELECT biomarker_alias.alias FROM biomarker_alias JOIN biomarker ON biomarker_alias.biomarker_internal_id = biomarker.id WHERE biomarker.biomarker_id != 'urn:edrn:bmdb:biomarker:114'"
  }
]