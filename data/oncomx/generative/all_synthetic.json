[
  {
    "db_id": "oncomx_temporary",
    "id": "0_1",
    "user": "gpt-3",
    "question": "What is the common name of the species with the ID 9606 in the \"species\" table?",
    "query": "SELECT T1.speciescommonname FROM species AS T1 WHERE T1.speciesid = 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "0_2",
    "user": "gpt-3",
    "question": "What is the common name of the species with the ID 9606 in the table \"species\"?",
    "query": "SELECT T1.speciescommonname FROM species AS T1 WHERE T1.speciesid = 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "1_1",
    "user": "gpt-3",
    "question": "Find the internal ID of the biomarker from the article with a PMID of \"11991720\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"11991720\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "1_2",
    "user": "gpt-3",
    "question": "What is the biomarker internal ID for an article with a PMID of 11991720 in the table biomarker_article?",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"11991720\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "2_1",
    "user": "gpt-3",
    "question": "What is the Uniprot canonical ID for the Uniprot AC \"A2RUH7\"?",
    "query": "SELECT T1.uniprotkb_canonical_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_ac = \"A2RUH7\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "2_2",
    "user": "gpt-3",
    "question": "Retrieve the canonical Uniprot accession number for the protein with the UniprotKB accession number \"A2RUH7\".",
    "query": "SELECT T1.uniprotkb_canonical_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_ac = \"A2RUH7\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "3_1",
    "user": "gpt-3",
    "question": "What is the UniProtKB accession number of the protein associated with a disease and mutation where the Ensembl transcript ID is \"ENST00000216264\"?",
    "query": "SELECT T1.uniprotkb_ac FROM map_protein_disease_mutation AS T1 WHERE T1.ensembl_transcript_id = \"ENST00000216264\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "3_2",
    "user": "gpt-3",
    "question": "Find the UniProtKB accession number for a protein associated with a disease and mutation, where the Ensembl transcript ID is \"ENST00000216264\".",
    "query": "SELECT T1.uniprotkb_ac FROM map_protein_disease_mutation AS T1 WHERE T1.ensembl_transcript_id = \"ENST00000216264\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "4_1",
    "user": "gpt-3",
    "question": "What is the biomarker internal ID for the article with PMID \"18065730\"?",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"18065730\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "4_2",
    "user": "gpt-3",
    "question": "Retrieve the internal ID of a biomarker from the article where the PMID is \"18065730\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"18065730\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "5_1",
    "user": "gpt-3",
    "question": "What is the biomarker internal ID for the alias \"ARE-binding protein AUFI\"?",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_alias AS T1 WHERE T1.alias = \"ARE-binding protein AUFI\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "5_2",
    "user": "gpt-3",
    "question": "Find the internal ID of the biomarker that has an alias of \"ARE-binding protein AUFI\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_alias AS T1 WHERE T1.alias = \"ARE-binding protein AUFI\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "6_1",
    "user": "gpt-3",
    "question": "\"Retrieve the disease mutation ID from the site annotation table where the ID is equal to 1734.\"",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_site_annotation AS T1 WHERE T1.id = 1734"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "6_2",
    "user": "gpt-3",
    "question": "Find the disease mutation ID associated with a specific site annotation in the disease_mutation_site_annotation table, where the annotation's ID is equal to 1734.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_site_annotation AS T1 WHERE T1.id = 1734"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "7_1",
    "user": "gpt-3",
    "question": "Find the ID of the disease mutation site annotation for the disease mutation with an ID of 262315.",
    "query": "SELECT T1.id FROM disease_mutation_site_annotation AS T1 WHERE T1.disease_mutation_id = 262315"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "7_2",
    "user": "gpt-3",
    "question": "Find the ID of the disease mutation site annotation where the disease mutation ID is 262315.",
    "query": "SELECT T1.id FROM disease_mutation_site_annotation AS T1 WHERE T1.disease_mutation_id = 262315"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "8_1",
    "user": "gpt-3",
    "question": "What is the test submission for the biomarker with ID \"FDA000274\" in the FDA database?",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.id = \"FDA000274\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "8_2",
    "user": "gpt-3",
    "question": "Retrieve the test submission from the FDA database for the biomarker with ID \"FDA000274\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.id = \"FDA000274\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "9_1",
    "user": "gpt-3",
    "question": "What is the feature key for disease mutation site annotation with ID 1884?",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1 WHERE T1.id = 1884"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "9_2",
    "user": "gpt-3",
    "question": "What is the feature key for disease mutation site annotation with an ID of 1884?",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1 WHERE T1.id = 1884"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "10_1",
    "user": "gpt-3",
    "question": "Find the UniProtKB accession number for a protein associated with a disease mutation whose Ensembl transcript ID is \"ENST00000206595\".",
    "query": "SELECT T1.uniprotkb_ac FROM map_protein_disease_mutation AS T1 WHERE T1.ensembl_transcript_id = \"ENST00000206595\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "10_2",
    "user": "gpt-3",
    "question": "What is the UniProtKB accession number for a protein associated with a mutation in the Ensembl transcript ID ENST00000206595 according to the map_protein_disease_mutation table?",
    "query": "SELECT T1.uniprotkb_ac FROM map_protein_disease_mutation AS T1 WHERE T1.ensembl_transcript_id = \"ENST00000206595\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "11_1",
    "user": "gpt-3",
    "question": "What is the NCIt term for the biomarker with FDA ID \"FDA000109\"?",
    "query": "SELECT T1.ncit_biomarker FROM biomarker_fda_ncit_term AS T1 WHERE T1.biomarker_fda_id = \"FDA000109\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "11_2",
    "user": "gpt-3",
    "question": "What is the FDA NCIt term for the biomarker with an ID of \"FDA000109\"?",
    "query": "SELECT T1.ncit_biomarker FROM biomarker_fda_ncit_term AS T1 WHERE T1.biomarker_fda_id = \"FDA000109\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "12_1",
    "user": "gpt-3",
    "question": "Retrieve the biomarker internal ID from the biomarker article table where the PMID is \"30243889\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"30243889\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "12_2",
    "user": "gpt-3",
    "question": "Retrieve the biomarker internal ID from the biomarker article table where the PMID is equal to \"30243889\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"30243889\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "13_1",
    "user": "gpt-3",
    "question": "What is the FDA biomarker ID for the term \"PITRM1\" in the NCIt database?",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"PITRM1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "13_2",
    "user": "gpt-3",
    "question": "What is the biomarker FDA ID for the term \"PITRM1\" in the NCIt biomarkers list?",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"PITRM1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "14_1",
    "user": "gpt-3",
    "question": "Retrieve the ID from the disease mutation impact prediction table where the disease mutation ID is 22811.",
    "query": "SELECT T1.id FROM disease_mutation_impact_prediction AS T1 WHERE T1.disease_mutation_id = 22811"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "14_2",
    "user": "gpt-3",
    "question": "Find the impact prediction for a disease mutation with an ID of 22811 in the table of disease-mutation impact predictions.",
    "query": "SELECT T1.id FROM disease_mutation_impact_prediction AS T1 WHERE T1.disease_mutation_id = 22811"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "15_1",
    "user": "gpt-3",
    "question": "Find the id of the anatomical entity that has a description matching \"The anterior part of the frontal lobes of the brain, lying in front of the motor and premotor areas, which is responsible for planning complex cognitive behaviors, personality expression, decision making, moderating correct social behavior, orchestrating thoughts and actions in accordance with internal goals, executive function including abilities to differentiate conflicting thoughts and determine good/bad or better/best outcomes based on current activities/predicted outcomes/expectations and",
    "query": "SELECT T1.id FROM anatomical_entity AS T1 WHERE T1.description = \"The anterior part of the frontal lobes of the brain, lying in front of the motor and premotor areas.nnThis brain region has been implicated in planning complex cognitive behaviors, personality expression, decision making and moderating correct social behavior. The basic activity of this brain region is considered to be orchestration of thoughts and actions in accordance with internal goals.nnThe most typical psychological term for functions carried out by the pre-frontal cortex area is executive function. Executive function relates to abilities to differentiate among conflicting thoughts, determine good and bad, better and best, same and different, future consequences of current activities, working toward a defined goal, prediction of outcomes, expectation based on actions, and social 'control' (the ability to suppress urges that, if not suppressed, could lead to socially-unacceptable outcomes).nnMany authors have indicated an integral link between a person's personality and the functions of the prefrontal cortex. - definition adapted from Wikipedia\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "15_2",
    "user": "gpt-3",
    "question": "What is the ID of the anatomical entity that has a description stating it is located in the anterior part of the frontal lobes of the brain and is involved in functions such as planning complex cognitive behaviors, personality expression, decision making, and moderating social behavior, with its basic activity being thought and action coordination according to internal goals and executive function, which includes differentiating between conflicting thoughts, determining good/bad/best/same/different options, predicting outcomes based on actions towards a goal,",
    "query": "SELECT T1.id FROM anatomical_entity AS T1 WHERE T1.description = \"The anterior part of the frontal lobes of the brain, lying in front of the motor and premotor areas.nnThis brain region has been implicated in planning complex cognitive behaviors, personality expression, decision making and moderating correct social behavior. The basic activity of this brain region is considered to be orchestration of thoughts and actions in accordance with internal goals.nnThe most typical psychological term for functions carried out by the pre-frontal cortex area is executive function. Executive function relates to abilities to differentiate among conflicting thoughts, determine good and bad, better and best, same and different, future consequences of current activities, working toward a defined goal, prediction of outcomes, expectation based on actions, and social 'control' (the ability to suppress urges that, if not suppressed, could lead to socially-unacceptable outcomes).nnMany authors have indicated an integral link between a person's personality and the functions of the prefrontal cortex. - definition adapted from Wikipedia\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "16_1",
    "user": "gpt-3",
    "question": "Retrieve the Uberon anatomical ID for the cancer tissue where the DOID is equal to 1612.",
    "query": "SELECT T1.uberon_anatomical_id FROM cancer_tissue AS T1 WHERE T1.doid = 1612"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "16_2",
    "user": "gpt-3",
    "question": "Get the Uberon anatomical ID for cancer tissue where the Disease Ontology ID is equal to 1612.",
    "query": "SELECT T1.uberon_anatomical_id FROM cancer_tissue AS T1 WHERE T1.doid = 1612"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "17_1",
    "user": "gpt-3",
    "question": "What is the name of the disease with an ID of 2174?",
    "query": "SELECT T1.name FROM disease AS T1 WHERE T1.id = 2174"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "17_2",
    "user": "gpt-3",
    "question": "What is the name of the disease with an id of 2174?",
    "query": "SELECT T1.name FROM disease AS T1 WHERE T1.id = 2174"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "18_1",
    "user": "gpt-3",
    "question": "Retrieve the biomarker drug from the FDA-approved drugs for which the biomarker FDA ID is \"FDA000036\".",
    "query": "SELECT T1.biomarker_drug FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000036\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "18_2",
    "user": "gpt-3",
    "question": "\"Retrieve the biomarker drug associated with the FDA ID \"FDA000036\" from the table biomarker_fda_drug.\"",
    "query": "SELECT T1.biomarker_drug FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000036\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "19_1",
    "user": "gpt-3",
    "question": "Find the disease mutation ID for an article with a PMID of 10700188 in the table \"disease_mutation_article\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_article AS T1 WHERE T1.pmid = 10700188"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "19_2",
    "user": "gpt-3",
    "question": "Find the disease mutation ID for an article with a PMID of 10700188 from the disease_mutation_article table.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_article AS T1 WHERE T1.pmid = 10700188"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "20_1",
    "user": "gpt-3",
    "question": "Retrieve the reference amino acid from the disease mutation table where the reference nucleotide is equal to \"C\".",
    "query": "SELECT T1.ref_aa FROM disease_mutation AS T1 WHERE T1.ref_nt = \"C\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "20_2",
    "user": "gpt-3",
    "question": "Retrieve the reference amino acid from the disease mutation table where the reference nucleotide is \"C\".",
    "query": "SELECT T1.ref_aa FROM disease_mutation AS T1 WHERE T1.ref_nt = \"C\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "21_1",
    "user": "gpt-3",
    "question": "What is the speciesid for the gene with the gene symbol \"1700113A16Rik\" in the xref_gene_ensembl table?",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"1700113A16Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "21_2",
    "user": "gpt-3",
    "question": "What is the species ID for the gene with the symbol \"1700113A16Rik\" in the xref_gene_ensembl table?",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"1700113A16Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "22_1",
    "user": "gpt-3",
    "question": "Retrieve the relative gene expression levels from healthy tissue in mice at the developmental stage specified by \"MmusDv:0000047\".",
    "query": "SELECT T1.expression_level_gene_relative FROM healthy_expression AS T1 WHERE T1.uberon_developmental_id = \"MmusDv:0000047\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "22_2",
    "user": "gpt-3",
    "question": "Retrieve the expression levels of genes in healthy organisms relative to their developmental stage as specified by the ID \"MmusDv:0000047\" from the table \"healthy_expression\".",
    "query": "SELECT T1.expression_level_gene_relative FROM healthy_expression AS T1 WHERE T1.uberon_developmental_id = \"MmusDv:0000047\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "23_1",
    "user": "gpt-3",
    "question": "Retrieve the test manufacturer from the biomarker FDA tests where the test adoption evidence is experimental.",
    "query": "SELECT T1.test_manufacturer FROM biomarker_fda_test AS T1 WHERE T1.test_adoption_evidence = \"experimental\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "23_2",
    "user": "gpt-3",
    "question": "\"Get the test manufacturer for all biomarker FDA tests that have experimental adoption evidence.\"",
    "query": "SELECT T1.test_manufacturer FROM biomarker_fda_test AS T1 WHERE T1.test_adoption_evidence = \"experimental\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "24_1",
    "user": "gpt-3",
    "question": "\"Retrieve the Ensembl gene ID from the Healthy Expression table where the Uberon anatomical ID is equal to \"UBERON:0000992\".\"",
    "query": "SELECT T1.ensembl_gene_id FROM healthy_expression AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0000992\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "24_2",
    "user": "gpt-3",
    "question": "What are the Ensembl gene IDs for genes expressed in healthy tissues with the UBERON anatomical ID \"UBERON:0000992\"?",
    "query": "SELECT T1.ensembl_gene_id FROM healthy_expression AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0000992\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "25_1",
    "user": "gpt-3",
    "question": "What is the ID of the biomarker FDA test submission with the code \"P140020\"?",
    "query": "SELECT T1.id FROM biomarker_fda AS T1 WHERE T1.test_submission = \"P140020\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "25_2",
    "user": "gpt-3",
    "question": "Find the ID of the biomarker from FDA that has a test submission of \"P140020\".",
    "query": "SELECT T1.id FROM biomarker_fda AS T1 WHERE T1.test_submission = \"P140020\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "26_1",
    "user": "gpt-3",
    "question": "Find the stage ID for the stage with the name \"7 weeks (mouse)\".",
    "query": "SELECT T1.id FROM stage AS T1 WHERE T1.name = \"7 weeks (mouse)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "26_2",
    "user": "gpt-3",
    "question": "Find the ID of the stage that has a name of \"7 weeks (mouse)\".",
    "query": "SELECT T1.id FROM stage AS T1 WHERE T1.name = \"7 weeks (mouse)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "27_1",
    "user": "gpt-3",
    "question": "What is the speciesid for the gene symbol \"2900011O08Rik\" in the xref_gene_ensembl table?",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"2900011O08Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "27_2",
    "user": "gpt-3",
    "question": "Get the species ID from the table \"xref_gene_ensembl\" where the gene symbol is equal to \"2900011O08Rik\".",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"2900011O08Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "28_1",
    "user": "gpt-3",
    "question": "Retrieve the PMID of articles that have a disease mutation with an ID of 65521 in the \"disease_mutation_article\" table.",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id = 65521"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "28_2",
    "user": "gpt-3",
    "question": "Find the PubMed ID numbers of articles that mention a disease mutation with an ID of 65521.",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id = 65521"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "29_1",
    "user": "gpt-3",
    "question": "What is the alternate amino acid for disease mutations with a mutation frequency of 357?",
    "query": "SELECT T1.alt_aa FROM disease_mutation AS T1 WHERE T1.mutation_freq = 357"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "29_2",
    "user": "gpt-3",
    "question": "What is the alternative amino acid for disease mutations that have a mutation frequency of 357?",
    "query": "SELECT T1.alt_aa FROM disease_mutation AS T1 WHERE T1.mutation_freq = 357"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "30_1",
    "user": "gpt-3",
    "question": "What is the expression change direction for differential expressions where the number of subjects up is 89?",
    "query": "SELECT T1.expression_change_direction FROM differential_expression AS T1 WHERE T1.subjects_up = 89"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "30_2",
    "user": "gpt-3",
    "question": "Find the direction of expression change from the table of differential expression where the number of subjects up is equal to 89.",
    "query": "SELECT T1.expression_change_direction FROM differential_expression AS T1 WHERE T1.subjects_up = 89"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "31_1",
    "user": "gpt-3",
    "question": "What is the PMID of the article associated with disease mutation ID 50517 in the table \"disease_mutation_article\"?",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id = 50517"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "31_2",
    "user": "gpt-3",
    "question": "Retrieve the PubMed IDs of articles that contain a specific disease mutation with an ID of 50517.",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id = 50517"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "32_1",
    "user": "gpt-3",
    "question": "What is the biomarker FDA ID for the biomarker that has an NCIt term of \"MET\"?",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"MET\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "32_2",
    "user": "gpt-3",
    "question": "What is the FDA biomarker ID for the term \"MET\" in the NCIT biomarker database?",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"MET\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "33_1",
    "user": "gpt-3",
    "question": "What is the feature key of the disease mutation site annotation with an ID of 2136?",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1 WHERE T1.id = 2136"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "33_2",
    "user": "gpt-3",
    "question": "What is the feature key for the disease mutation site annotation with an ID of 2136?",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1 WHERE T1.id = 2136"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "34_1",
    "user": "gpt-3",
    "question": "What is the FDA test submission for a biomarker with a test trade name of \"FoundationFocus CDxBRCA\"?",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.test_trade_name = \"FoundationFocus CDxBRCA\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "34_2",
    "user": "gpt-3",
    "question": "What is the test submission for the biomarker FDA entry with a test trade name of \"FoundationFocus CDxBRCA\"?",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.test_trade_name = \"FoundationFocus CDxBRCA\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "35_1",
    "user": "gpt-3",
    "question": "What is the reference amino acid for the disease mutation with an id of 4712?",
    "query": "SELECT T1.ref_aa FROM disease_mutation AS T1 WHERE T1.id = 4712"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "35_2",
    "user": "gpt-3",
    "question": "What is the reference amino acid for the disease mutation with an ID of 4712 in the table \"disease_mutation\"?",
    "query": "SELECT T1.ref_aa FROM disease_mutation AS T1 WHERE T1.id = 4712"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "36_1",
    "user": "gpt-3",
    "question": "Find the name of an anatomical entity that has a description of \"Tissue with cells that deposit non-polarized extracellular matrix including connective tissue fibers and ground substance.\"",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.description = \"Tissue with cells that deposit non-polarized extracellular matrix including connective tissue fibers and ground substance.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "36_2",
    "user": "gpt-3",
    "question": "Retrieve the name of all anatomical entities where the description is \"Tissue with cells that deposit non-polarized extracellular matrix including connective tissue fibers and ground substance\".",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.description = \"Tissue with cells that deposit non-polarized extracellular matrix including connective tissue fibers and ground substance.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "37_1",
    "user": "gpt-3",
    "question": "Retrieve the information on whether the test for AKR1C2 is a panel from the biomarker database.",
    "query": "SELECT T1.test_is_a_panel FROM biomarker AS T1 WHERE T1.gene_symbol = \"AKR1C2\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "37_2",
    "user": "gpt-3",
    "question": "Retrieve whether or not the test for the biomarker AKR1C2 is a panel from the biomarker table.",
    "query": "SELECT T1.test_is_a_panel FROM biomarker AS T1 WHERE T1.gene_symbol = \"AKR1C2\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "38_1",
    "user": "gpt-3",
    "question": "What is the PMID for the article associated with the biomarker with internal ID \"FDA000212\"?",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 WHERE T1.biomarker_internal_id = \"FDA000212\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "38_2",
    "user": "gpt-3",
    "question": "Find the PMID for the biomarker with an internal ID of \"FDA000212\" from the table biomarker_article.",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 WHERE T1.biomarker_internal_id = \"FDA000212\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "39_1",
    "user": "gpt-3",
    "question": "What is the disease mutation ID for a disease mutation article with PMID 7961105?",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_article AS T1 WHERE T1.pmid = 7961105"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "39_2",
    "user": "gpt-3",
    "question": "Retrieve the disease mutation ID from the disease mutation article table where the PMID is equal to 7961105.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_article AS T1 WHERE T1.pmid = 7961105"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "40_1",
    "user": "gpt-3",
    "question": "What is the DOID for a cancer tissue with the UBERON anatomical ID \"UBERON:0001264\"?",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0001264\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "40_2",
    "user": "gpt-3",
    "question": "Find the DOID for a cancer tissue where the UBERON anatomical ID is \"UBERON:0001264\".",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0001264\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "41_1",
    "user": "gpt-3",
    "question": "Get the name of the anatomical entity from the anatomical_entity table where the description is \"A cranial nerve nucleus for the vagus nerve in the medulla that lies under the floor of the fourth ventricle. It mostly serves parasympathetic vagal functions in the gastrointestinal tract, lungs, and other thoracic and abdominal vagal innervations. The cell bodies for the preganglionic parasympathetic vagal neurons that innervate the heart reside in",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.description = \"A cranial nerve nucleus for the vagus nerve in the medulla that lies under the floor of the fourth ventricle. It mostly serves parasympathetic vagal functions in the gastrointestinal tract, lungs, and other thoracic and abdominal vagal innervations. The cell bodies for the preganglionic parasympathetic vagal neurons that innervate the heart reside in the nucleus ambiguus.[WP,unvetted].\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "41_2",
    "user": "gpt-3",
    "question": "Find the name of the anatomical entity for a cranial nerve nucleus in the medulla that is responsible for parasympathetic functions in organs such as the gastrointestinal tract and lungs, located under the fourth ventricle and containing cell bodies for preganglionic parasympathetic vagal neurons that innervate the heart.",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.description = \"A cranial nerve nucleus for the vagus nerve in the medulla that lies under the floor of the fourth ventricle. It mostly serves parasympathetic vagal functions in the gastrointestinal tract, lungs, and other thoracic and abdominal vagal innervations. The cell bodies for the preganglionic parasympathetic vagal neurons that innervate the heart reside in the nucleus ambiguus.[WP,unvetted].\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "42_1",
    "user": "gpt-3",
    "question": "Retrieve the description of all features from the disease mutation site annotation where the feature key is \"metal binding\".",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.feature_key = \"metal binding\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "42_2",
    "user": "gpt-3",
    "question": "Retrieve the description of the disease mutation site annotation where the feature key is \"metal binding\".",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.feature_key = \"metal binding\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "43_1",
    "user": "gpt-3",
    "question": "What is the internal ID of the biomarker article with a PMID of 15623627?",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"15623627\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "43_2",
    "user": "gpt-3",
    "question": "What is the biomarker internal ID for the article with a PMID of \"15623627\"?",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"15623627\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "44_1",
    "user": "gpt-3",
    "question": "What is the NCIt biomarker term for the FDA biomarker with an ID of \"FDA000218\"?",
    "query": "SELECT T1.ncit_biomarker FROM biomarker_fda_ncit_term AS T1 WHERE T1.biomarker_fda_id = \"FDA000218\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "44_2",
    "user": "gpt-3",
    "question": "What is the NCIt biomarker term for the FDA biomarker with ID \"FDA000218\"?",
    "query": "SELECT T1.ncit_biomarker FROM biomarker_fda_ncit_term AS T1 WHERE T1.biomarker_fda_id = \"FDA000218\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "45_1",
    "user": "gpt-3",
    "question": "Find the approved indication for the biomarker with an ID of 58 from the FDA test use database.",
    "query": "SELECT T1.approved_indication FROM biomarker_fda_test_use AS T1 WHERE T1.id = 58"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "45_2",
    "user": "gpt-3",
    "question": "What is the approved indication for the biomarker with an ID of 58 in the biomarker FDA test use database?",
    "query": "SELECT T1.approved_indication FROM biomarker_fda_test_use AS T1 WHERE T1.id = 58"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "46_1",
    "user": "gpt-3",
    "question": "Retrieve the peptide IDs from the protein-disease-mutation map where the Ensembl transcript ID is \"ENST00000175506\".",
    "query": "SELECT T1.peptide_id FROM map_protein_disease_mutation AS T1 WHERE T1.ensembl_transcript_id = \"ENST00000175506\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "46_2",
    "user": "gpt-3",
    "question": "What are the peptide IDs for mutations associated with the Ensembl transcript ID \"ENST00000175506\" in the map of protein-disease-mutation?",
    "query": "SELECT T1.peptide_id FROM map_protein_disease_mutation AS T1 WHERE T1.ensembl_transcript_id = \"ENST00000175506\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "47_1",
    "user": "gpt-3",
    "question": "Find the uberon anatomical ID for healthy expressions with an expression rank score of 93.60 in the healthy_expression table.",
    "query": "SELECT T1.uberon_anatomical_id FROM healthy_expression AS T1 WHERE T1.expression_rank_score = 93.60"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "47_2",
    "user": "gpt-3",
    "question": "What is the uberon anatomical ID for healthy expression with an expression rank score of 93.60 in the table healthy_expression?",
    "query": "SELECT T1.uberon_anatomical_id FROM healthy_expression AS T1 WHERE T1.expression_rank_score = 93.60"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "48_1",
    "user": "gpt-3",
    "question": "What is the ID for a biomarker from the EDRN database with a title of \"ST14\"?",
    "query": "SELECT T1.id FROM biomarker_edrn AS T1 WHERE T1.biomarker_title = \"ST14\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "48_2",
    "user": "gpt-3",
    "question": "Find the id of a biomarker from the EDRN database with the title \"ST14\".",
    "query": "SELECT T1.id FROM biomarker_edrn AS T1 WHERE T1.biomarker_title = \"ST14\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "49_1",
    "user": "gpt-3",
    "question": "What is the PMID of the article associated with the biomarker with internal ID \"EDRN00711\"?",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 WHERE T1.biomarker_internal_id = \"EDRN00711\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "49_2",
    "user": "gpt-3",
    "question": "What is the PubMed ID for the biomarker with internal ID \"EDRN00711\" in the biomarker article database?",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 WHERE T1.biomarker_internal_id = \"EDRN00711\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "50_1",
    "user": "gpt-3",
    "question": "What is the PubMed ID for the article associated with the biomarker with internal ID \"EDRN00446\"?",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 WHERE T1.biomarker_internal_id = \"EDRN00446\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "50_2",
    "user": "gpt-3",
    "question": "What is the PMID for the biomarker associated with the internal ID \"EDRN00446\" in the biomarker_article table?",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 WHERE T1.biomarker_internal_id = \"EDRN00446\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "51_1",
    "user": "gpt-3",
    "question": "Get the species ID from the xref_gene_ensembl table for a gene with the symbol \"2310046K23Rik\".",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"2310046K23Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "51_2",
    "user": "gpt-3",
    "question": "What is the species ID for the gene with the symbol \"2310046K23Rik\" in the xref_gene_ensembl table?",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"2310046K23Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "52_1",
    "user": "gpt-3",
    "question": "What is the impact prediction id for the disease mutation with an id of 31022 in the table for disease mutation impact predictions?",
    "query": "SELECT T1.id FROM disease_mutation_impact_prediction AS T1 WHERE T1.disease_mutation_id = 31022"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "52_2",
    "user": "gpt-3",
    "question": "What is the id of the disease mutation impact prediction associated with the disease mutation with an id of 31022?",
    "query": "SELECT T1.id FROM disease_mutation_impact_prediction AS T1 WHERE T1.disease_mutation_id = 31022"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "53_1",
    "user": "gpt-3",
    "question": "What are the disease mutation IDs associated with tissues that have a UBERON anatomical ID of \"UBERON:0000467\"?",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0000467\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "53_2",
    "user": "gpt-3",
    "question": "Get the disease mutation IDs from the table \"disease_mutation_tissue\" where the anatomical ID is \"UBERON:0000467\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0000467\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "54_1",
    "user": "gpt-3",
    "question": "Retrieve the disease mutation ID from the disease_mutation_tissue table where the UBERON anatomical ID is \"UBERON:0002367\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0002367\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "54_2",
    "user": "gpt-3",
    "question": "Find the IDs of disease mutations associated with a specific anatomical structure identified by the Uberon ID \"UBERON:0002367\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0002367\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "55_1",
    "user": "gpt-3",
    "question": "What is the PMID of the article associated with a specific disease mutation (ID 81555) in the table \"disease_mutation_article\"?",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id = 81555"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "55_2",
    "user": "gpt-3",
    "question": "What is the PMID for the disease-mutation article with an ID of 81555?",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id = 81555"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "56_1",
    "user": "gpt-3",
    "question": "Get the Ensembl transcript ID from the map of protein disease mutations where the peptide ID is \"ENSP00000202967\".",
    "query": "SELECT T1.ensembl_transcript_id FROM map_protein_disease_mutation AS T1 WHERE T1.peptide_id = \"ENSP00000202967\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "56_2",
    "user": "gpt-3",
    "question": "What is the Ensembl transcript ID for the protein-disease-mutation map where the peptide ID is \"ENSP00000202967\"?",
    "query": "SELECT T1.ensembl_transcript_id FROM map_protein_disease_mutation AS T1 WHERE T1.peptide_id = \"ENSP00000202967\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "57_1",
    "user": "gpt-3",
    "question": "What is the name of the stage with the ID \"MmusDv:0000053\"?",
    "query": "SELECT T1.name FROM stage AS T1 WHERE T1.id = \"MmusDv:0000053\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "57_2",
    "user": "gpt-3",
    "question": "What is the name of the stage with an ID of \"MmusDv:0000053\"?",
    "query": "SELECT T1.name FROM stage AS T1 WHERE T1.id = \"MmusDv:0000053\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "58_1",
    "user": "gpt-3",
    "question": "Find the Uberon anatomical ID for cancer tissue where the disease ontology ID is 1781.",
    "query": "SELECT T1.uberon_anatomical_id FROM cancer_tissue AS T1 WHERE T1.doid = 1781"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "58_2",
    "user": "gpt-3",
    "question": "What is the Uberon anatomical ID for the cancer tissue that has a disease ontology ID of 1781?",
    "query": "SELECT T1.uberon_anatomical_id FROM cancer_tissue AS T1 WHERE T1.doid = 1781"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "59_1",
    "user": "gpt-3",
    "question": "What is the Uniprot canonical ID for the given Uniprot canonical AC \"A4D161-1\"?",
    "query": "SELECT T1.uniprotkb_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_canonical_ac = \"A4D161-1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "59_2",
    "user": "gpt-3",
    "question": "Get the Uniprot canonical ID from the table \"map_uniprot_canonical_id\" where the Uniprot canonical AC is equal to \"A4D161-1\".",
    "query": "SELECT T1.uniprotkb_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_canonical_ac = \"A4D161-1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "60_1",
    "user": "gpt-3",
    "question": "What is the ID of the biomarker with a gene symbol of \"NDUFA10\"?",
    "query": "SELECT T1.id FROM biomarker AS T1 WHERE T1.gene_symbol = \"NDUFA10\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "60_2",
    "user": "gpt-3",
    "question": "Find the ID of the biomarker with a gene symbol of \"NDUFA10\" from the biomarker database.",
    "query": "SELECT T1.id FROM biomarker AS T1 WHERE T1.gene_symbol = \"NDUFA10\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "61_1",
    "user": "gpt-3",
    "question": "Find the speciesid of sapiens in the species table.",
    "query": "SELECT T1.speciesid FROM species AS T1 WHERE T1.species = \"sapiens\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "61_2",
    "user": "gpt-3",
    "question": "Find the species ID for the species called \"sapiens\".",
    "query": "SELECT T1.speciesid FROM species AS T1 WHERE T1.species = \"sapiens\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "62_1",
    "user": "gpt-3",
    "question": "What is the test submission for the FDA biomarker with ID \"FDA000149\"?",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.id = \"FDA000149\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "62_2",
    "user": "gpt-3",
    "question": "What is the test submission for FDA biomarker with the ID \"FDA000149\"?",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.id = \"FDA000149\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "63_1",
    "user": "gpt-3",
    "question": "What is the description for the disease mutation site annotation with a disease mutation ID of 327852?",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.disease_mutation_id = 327852"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "63_2",
    "user": "gpt-3",
    "question": "Retrieve the description of the disease mutation site annotation for the disease mutation with an ID of 327852.",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.disease_mutation_id = 327852"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "64_1",
    "user": "gpt-3",
    "question": "Find the speciesid from the species table where the species is \"musculus\".",
    "query": "SELECT T1.speciesid FROM species AS T1 WHERE T1.species = \"musculus\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "64_2",
    "user": "gpt-3",
    "question": "Retrieve the speciesid from the \"species\" table where the species name is \"musculus\".",
    "query": "SELECT T1.speciesid FROM species AS T1 WHERE T1.species = \"musculus\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "65_1",
    "user": "gpt-3",
    "question": "What is the name of the anatomical entity with the ID \"UBERON:0001017\"?",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.id = \"UBERON:0001017\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "65_2",
    "user": "gpt-3",
    "question": "What is the name of the anatomical entity with ID \"UBERON:0001017\"?",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.id = \"UBERON:0001017\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "66_1",
    "user": "gpt-3",
    "question": "What is the site prediction for disease mutation impact predictions where the probability is equal to 0.032?",
    "query": "SELECT T1.site_prediction FROM disease_mutation_impact_prediction AS T1 WHERE T1.probability = 0.032"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "66_2",
    "user": "gpt-3",
    "question": "What is the site prediction for disease mutation impact predictions where the probability is 0.032?",
    "query": "SELECT T1.site_prediction FROM disease_mutation_impact_prediction AS T1 WHERE T1.probability = 0.032"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "67_1",
    "user": "gpt-3",
    "question": "What is the biomarker ID for \"EDRN00429\" in the table?",
    "query": "SELECT T1.biomarker_id FROM biomarker AS T1 WHERE T1.id = \"EDRN00429\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "67_2",
    "user": "gpt-3",
    "question": "What is the biomarker ID for the biomarker with an ID of \"EDRN00429\"?",
    "query": "SELECT T1.biomarker_id FROM biomarker AS T1 WHERE T1.id = \"EDRN00429\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "68_1",
    "user": "gpt-3",
    "question": "What is the name of the species that has a speciesid of 9606 in the species table?",
    "query": "SELECT T1.species FROM species AS T1 WHERE T1.speciesid = 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "68_2",
    "user": "gpt-3",
    "question": "What is the species name for the species with a species ID of 9606?",
    "query": "SELECT T1.species FROM species AS T1 WHERE T1.speciesid = 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "69_1",
    "user": "gpt-3",
    "question": "Get the Uberon anatomical ID from the disease mutation tissue table where the disease mutation ID is equal to 14859.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 WHERE T1.disease_mutation_id = 14859"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "69_2",
    "user": "gpt-3",
    "question": "Retrieve the Uberon anatomical ID from the disease_mutation_tissue table for a given disease mutation ID of 14859.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 WHERE T1.disease_mutation_id = 14859"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "70_1",
    "user": "gpt-3",
    "question": "Retrieve the approved indication from the biomarker FDA test use table where the test submission is equal to \"P160045\".",
    "query": "SELECT T1.approved_indication FROM biomarker_fda_test_use AS T1 WHERE T1.test_submission = \"P160045\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "70_2",
    "user": "gpt-3",
    "question": "What is the approved indication for biomarker testing in FDA submission P160045?",
    "query": "SELECT T1.approved_indication FROM biomarker_fda_test_use AS T1 WHERE T1.test_submission = \"P160045\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "71_1",
    "user": "gpt-3",
    "question": "What is the PMID of articles related to a specific disease and mutation combination with the disease_mutation_id being 90341?",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id = 90341"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "71_2",
    "user": "gpt-3",
    "question": "What are the PubMed identifiers for articles related to a specific disease and mutation with ID 90341 in the \"disease_mutation_article\" table?",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id = 90341"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "72_1",
    "user": "gpt-3",
    "question": "Get the Uberon anatomical ID from the disease mutation tissue table where the disease mutation ID is equal to 6015.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 WHERE T1.disease_mutation_id = 6015"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "72_2",
    "user": "gpt-3",
    "question": "Find the uberon anatomical id for disease mutation tissue where the disease mutation id is 6015.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 WHERE T1.disease_mutation_id = 6015"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "73_1",
    "user": "gpt-3",
    "question": "What is the disease mutation ID for the article with PMID 21499249 in the disease mutation article table?",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_article AS T1 WHERE T1.pmid = 21499249"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "73_2",
    "user": "gpt-3",
    "question": "What is the disease mutation ID for the article with PMID 21499249 in the table of disease mutation articles?",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_article AS T1 WHERE T1.pmid = 21499249"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "74_1",
    "user": "gpt-3",
    "question": "What is the Ensembl transcript ID for the protein-disease mutation mapping where the UniProtKB accession number is \"A0A075B6H5\"?",
    "query": "SELECT T1.ensembl_transcript_id FROM map_protein_disease_mutation AS T1 WHERE T1.uniprotkb_ac = \"A0A075B6H5\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "74_2",
    "user": "gpt-3",
    "question": "What is the Ensembl transcript ID for the protein-disease-mutation mapping with the UniProtKB accession number \"A0A075B6H5\"?",
    "query": "SELECT T1.ensembl_transcript_id FROM map_protein_disease_mutation AS T1 WHERE T1.uniprotkb_ac = \"A0A075B6H5\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "75_1",
    "user": "gpt-3",
    "question": "What is the description of the disease mutation site annotation with an ID of 1473?",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.id = 1473"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "75_2",
    "user": "gpt-3",
    "question": "Find the description of a disease mutation site annotation with an ID of 1473.",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.id = 1473"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "76_1",
    "user": "gpt-3",
    "question": "What is the Uberon anatomical ID for the cancer tissue with DOID 3571?",
    "query": "SELECT T1.uberon_anatomical_id FROM cancer_tissue AS T1 WHERE T1.doid = 3571"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "76_2",
    "user": "gpt-3",
    "question": "What is the uberon anatomical ID for the cancer tissue with DOID 3571?",
    "query": "SELECT T1.uberon_anatomical_id FROM cancer_tissue AS T1 WHERE T1.doid = 3571"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "77_1",
    "user": "gpt-3",
    "question": "What is the name of the disease with an ID of 1793?",
    "query": "SELECT T1.name FROM disease AS T1 WHERE T1.id = 1793"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "77_2",
    "user": "gpt-3",
    "question": "What is the name of the disease with an id of 1793?",
    "query": "SELECT T1.name FROM disease AS T1 WHERE T1.id = 1793"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "78_1",
    "user": "gpt-3",
    "question": "Find the Ensembl gene ID from the healthy expression data where the Uberon anatomical ID is \"UBERON:0001950\".",
    "query": "SELECT T1.ensembl_gene_id FROM healthy_expression AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0001950\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "78_2",
    "user": "gpt-3",
    "question": "Retrieve the ensembl gene IDs from healthy expression where the uberon anatomical ID is \"UBERON:0001950\".",
    "query": "SELECT T1.ensembl_gene_id FROM healthy_expression AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0001950\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "79_1",
    "user": "gpt-3",
    "question": "Retrieve the name of the biomarker drug from the table \"biomarker_fda_drug\" where the biomarker FDA ID is \"FDA000106\".",
    "query": "SELECT T1.biomarker_drug FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000106\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "79_2",
    "user": "gpt-3",
    "question": "What are the biomarker drugs associated with the FDA biomarker ID \"FDA000106\"?",
    "query": "SELECT T1.biomarker_drug FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000106\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "80_1",
    "user": "gpt-3",
    "question": "Retrieve the biomarker FDA ID for the term \"EGLN1 Gene\" from the table containing NCIt biomarkers.",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"EGLN1 Gene\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "80_2",
    "user": "gpt-3",
    "question": "Which biomarker FDA IDs correspond to the NCIt term \"EGLN1 Gene\"?",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"EGLN1 Gene\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "81_1",
    "user": "gpt-3",
    "question": "What is the name of the anatomical entity with the ID \"UBERON:0002046\"?",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.id = \"UBERON:0002046\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "81_2",
    "user": "gpt-3",
    "question": "What is the name of the anatomical entity with an ID of \"UBERON:0002046\"?",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.id = \"UBERON:0002046\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "82_1",
    "user": "gpt-3",
    "question": "What is the name of the stage with the ID \"MmusDv:0000061\"?",
    "query": "SELECT T1.name FROM stage AS T1 WHERE T1.id = \"MmusDv:0000061\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "82_2",
    "user": "gpt-3",
    "question": "What is the name of the stage with an ID of \"MmusDv:0000061\"?",
    "query": "SELECT T1.name FROM stage AS T1 WHERE T1.id = \"MmusDv:0000061\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "83_1",
    "user": "gpt-3",
    "question": "What is the name of the anatomical entity with the ID \"UBERON:0002021\"?",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.id = \"UBERON:0002021\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "83_2",
    "user": "gpt-3",
    "question": "What is the name of the anatomical entity with ID \"UBERON:0002021\"?",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.id = \"UBERON:0002021\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "84_1",
    "user": "gpt-3",
    "question": "What is the value of \"test_is_a_panel\" for the biomarker with a gene symbol of \"EGLN1\"?",
    "query": "SELECT T1.test_is_a_panel FROM biomarker AS T1 WHERE T1.gene_symbol = \"EGLN1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "84_2",
    "user": "gpt-3",
    "question": "What is the test_is_a_panel value for the biomarker with a gene symbol of EGLN1 in the biomarker table?",
    "query": "SELECT T1.test_is_a_panel FROM biomarker AS T1 WHERE T1.gene_symbol = \"EGLN1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "85_1",
    "user": "gpt-3",
    "question": "Get the site prediction for the disease mutation with ID 31930 from the table of disease mutation impact predictions.",
    "query": "SELECT T1.site_prediction FROM disease_mutation_impact_prediction AS T1 WHERE T1.disease_mutation_id = 31930"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "85_2",
    "user": "gpt-3",
    "question": "What is the site prediction for the disease mutation with an ID of 31930 in the disease mutation impact prediction table?",
    "query": "SELECT T1.site_prediction FROM disease_mutation_impact_prediction AS T1 WHERE T1.disease_mutation_id = 31930"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "86_1",
    "user": "gpt-3",
    "question": "What is the canonical UniProtKB ID for the UniProtKB AC \"B7ZAP0\"?",
    "query": "SELECT T1.uniprotkb_canonical_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_ac = \"B7ZAP0\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "86_2",
    "user": "gpt-3",
    "question": "Retrieve the uniprot canonical ID from the map_uniprot_canonical_id table where the uniprot AC is \"B7ZAP0\".",
    "query": "SELECT T1.uniprotkb_canonical_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_ac = \"B7ZAP0\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "87_1",
    "user": "gpt-3",
    "question": "What is the internal ID of the biomarker mentioned in the article with a PMID of \"18089831\"?",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"18089831\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "87_2",
    "user": "gpt-3",
    "question": "Find the biomarker internal ID from the biomarker article table where the PMID is \"18089831\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"18089831\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "88_1",
    "user": "gpt-3",
    "question": "What is the histological type from biomarker FDA test where the specimen type is \"Paraffin block\"?",
    "query": "SELECT T1.histological_type FROM biomarker_fda_test AS T1 WHERE T1.specimen_type = \"Paraffin block\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "88_2",
    "user": "gpt-3",
    "question": "Get the histological type from the biomarker FDA test where the specimen type is \"Paraffin block\".",
    "query": "SELECT T1.histological_type FROM biomarker_fda_test AS T1 WHERE T1.specimen_type = \"Paraffin block\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "89_1",
    "user": "gpt-3",
    "question": "Get the uberon anatomical ID from the disease mutation tissue table for the disease mutation with an ID of 3878.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 WHERE T1.disease_mutation_id = 3878"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "89_2",
    "user": "gpt-3",
    "question": "What is the uberon anatomical ID of the disease mutation tissue associated with the disease mutation with an ID of 3878?",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 WHERE T1.disease_mutation_id = 3878"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "90_1",
    "user": "gpt-3",
    "question": "Retrieve the test submission from the biomarker FDA test trial where the test trade name is \"GeneSearch Breast Lymph Node (BLN) Test Kit\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name = \"GeneSearch Breast Lymph Node (BLN) Test Kit\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "90_2",
    "user": "gpt-3",
    "question": "Get the test submission for the GeneSearch Breast Lymph Node (BLN) Test Kit from the biomarker FDA test trial table.",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name = \"GeneSearch Breast Lymph Node (BLN) Test Kit\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "91_1",
    "user": "gpt-3",
    "question": "What is the expression level gene relative for healthy expressions where the expression score is 55.1?",
    "query": "SELECT T1.expression_level_gene_relative FROM healthy_expression AS T1 WHERE T1.expression_score = 55.10000"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "91_2",
    "user": "gpt-3",
    "question": "What is the expression level gene relative for a healthy individual with an expression score of 55.1?",
    "query": "SELECT T1.expression_level_gene_relative FROM healthy_expression AS T1 WHERE T1.expression_score = 55.10000"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "92_1",
    "user": "gpt-3",
    "question": "What is the Uberon anatomical ID for cancer tissue with a DOID of 263?",
    "query": "SELECT T1.uberon_anatomical_id FROM cancer_tissue AS T1 WHERE T1.doid = 263"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "92_2",
    "user": "gpt-3",
    "question": "Retrieve the Uberon anatomical ID from the cancer tissue dataset where the DOID is equal to 263.",
    "query": "SELECT T1.uberon_anatomical_id FROM cancer_tissue AS T1 WHERE T1.doid = 263"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "93_1",
    "user": "gpt-3",
    "question": "What is the trade name of the biomarker FDA test trial with the ID \"NCT01107418\"?",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trial_id = \"NCT01107418\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "93_2",
    "user": "gpt-3",
    "question": "What is the test trade name for the biomarker FDA test trial with an ID of \"NCT01107418\"?",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trial_id = \"NCT01107418\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "94_1",
    "user": "gpt-3",
    "question": "Get the internal ID of a biomarker from the article where the PMID is \"30004261\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"30004261\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "94_2",
    "user": "gpt-3",
    "question": "Find the biomarker internal ID from the biomarker article where the PMID is \"30004261\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"30004261\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "95_1",
    "user": "gpt-3",
    "question": "Retrieve the biomarker ID from the biomarker table where the description is \"PTPRE is a member of the protein tyrosine phosphatase (PTP) family. Members of the PTP family are signaling molecules that regulate a variety of cellular processes including cell growth, differentiation, mitosis, and oncogenic transformation. The PTPRE gene encodes two isoforms, one of which is a receptor-type PTP, and the other which is not a receptor-type PTP. Both",
    "query": "SELECT T1.biomarker_id FROM biomarker AS T1 WHERE T1.biomarker_description = \"PTPRE is a member of the protein tyrosine phosphatase (PTP) family.  Members of the PTP family are signaling molecules that regulate a variety of cellular processes including cell growth, differentiation, mitosis, and oncogenic transformation. The PTPRE gene encodes two isoforms, one of which is a receptor-type PTP, and the other which is not a receptor-type PTP.Both isoforms act as negative regulators of FceRI-mediated signal transduction leading to cytokine production and degranulation.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "95_2",
    "user": "gpt-3",
    "question": "Find the biomarker ID for PTPRE, a protein tyrosine phosphatase involved in regulating cell processes such as growth, differentiation, and transformation. This gene encodes two isoforms that function as negative regulators of FceRI-mediated signal transduction leading to cytokine production and degranulation.",
    "query": "SELECT T1.biomarker_id FROM biomarker AS T1 WHERE T1.biomarker_description = \"PTPRE is a member of the protein tyrosine phosphatase (PTP) family.  Members of the PTP family are signaling molecules that regulate a variety of cellular processes including cell growth, differentiation, mitosis, and oncogenic transformation. The PTPRE gene encodes two isoforms, one of which is a receptor-type PTP, and the other which is not a receptor-type PTP.Both isoforms act as negative regulators of FceRI-mediated signal transduction leading to cytokine production and degranulation.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "96_1",
    "user": "gpt-3",
    "question": "Retrieve the codon position from the disease mutation table where the reference amino acid is \"N\".",
    "query": "SELECT T1.cds_pos FROM disease_mutation AS T1 WHERE T1.ref_aa = \"N\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "96_2",
    "user": "gpt-3",
    "question": "Retrieve the coding sequence position from the disease mutation table where the reference amino acid is \"N\".",
    "query": "SELECT T1.cds_pos FROM disease_mutation AS T1 WHERE T1.ref_aa = \"N\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "97_1",
    "user": "gpt-3",
    "question": "What is the biomarker internal ID for an article with a PMID of \"15627055\"?",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"15627055\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "97_2",
    "user": "gpt-3",
    "question": "Retrieve the internal ID of the biomarker from the article with a PMID of 15627055.",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"15627055\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "98_1",
    "user": "gpt-3",
    "question": "What is the internal ID for the biomarker article with PMID 11694234?",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"11694234\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "98_2",
    "user": "gpt-3",
    "question": "What is the internal ID for the biomarker in the article with PMID \"11694234\"?",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"11694234\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "99_1",
    "user": "gpt-3",
    "question": "What is the specimen type associated with the test trade name \"MammaPrint\" in the biomarker FDA test database?",
    "query": "SELECT T1.specimen_type FROM biomarker_fda_test AS T1 WHERE T1.test_trade_name = \"MammaPrint\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "99_2",
    "user": "gpt-3",
    "question": "What is the specimen type for the biomarker test with a trade name of \"MammaPrint\"?",
    "query": "SELECT T1.specimen_type FROM biomarker_fda_test AS T1 WHERE T1.test_trade_name = \"MammaPrint\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "100_1",
    "user": "gpt-3",
    "question": "What is the test trade name for biomarker with the FDA ID \"FDA000348\"?",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda AS T1 WHERE T1.id = \"FDA000348\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "100_2",
    "user": "gpt-3",
    "question": "Retrieve the test trade name from the biomarker FDA table where the ID is \"FDA000348\".",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda AS T1 WHERE T1.id = \"FDA000348\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "101_1",
    "user": "gpt-3",
    "question": "What is the Uberon anatomical identifier for the tissue associated with the disease mutation with an ID of 17732?",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 WHERE T1.disease_mutation_id = 17732"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "101_2",
    "user": "gpt-3",
    "question": "Find the anatomical ID from the disease mutation tissue table where the disease mutation ID is 17732.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 WHERE T1.disease_mutation_id = 17732"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "102_1",
    "user": "gpt-3",
    "question": "Find the ID of all biomarkers in the EDRN database that have a biomarker type of \"Genomic\".",
    "query": "SELECT T1.id FROM biomarker_edrn AS T1 WHERE T1.biomarker_type = \"Genomic\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "102_2",
    "user": "gpt-3",
    "question": "Find the ID of the biomarker in the table \"biomarker_edrn\" where the biomarker type is \"Genomic\".",
    "query": "SELECT T1.id FROM biomarker_edrn AS T1 WHERE T1.biomarker_type = \"Genomic\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "103_1",
    "user": "gpt-3",
    "question": "Find the biomarker drug associated with the FDA biomarker ID \"FDA000038\" from the biomarker FDA drug table.",
    "query": "SELECT T1.biomarker_drug FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000038\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "103_2",
    "user": "gpt-3",
    "question": "What is the name of the drug associated with FDA biomarker ID \"FDA000038\" in the table biomarker_fda_drug?",
    "query": "SELECT T1.biomarker_drug FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000038\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "104_1",
    "user": "gpt-3",
    "question": "Find the PubMed ID for the article related to disease mutation with ID 107651.",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id = 107651"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "104_2",
    "user": "gpt-3",
    "question": "What is the PMID of the disease mutation article with a disease_mutation_id of 107651?",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id = 107651"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "105_1",
    "user": "gpt-3",
    "question": "What is the actual use of biomarker FDA test in the submission with ID \"P120022\"?",
    "query": "SELECT T1.actual_use FROM biomarker_fda_test_use AS T1 WHERE T1.test_submission = \"P120022\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "105_2",
    "user": "gpt-3",
    "question": "What is the actual use for test submission \"P120022\" in the biomarker FDA test use table?",
    "query": "SELECT T1.actual_use FROM biomarker_fda_test_use AS T1 WHERE T1.test_submission = \"P120022\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "106_1",
    "user": "gpt-3",
    "question": "What is the FDA NCIt term associated with biomarker with the ID \"FDA000263\"?",
    "query": "SELECT T1.ncit_biomarker FROM biomarker_fda_ncit_term AS T1 WHERE T1.biomarker_fda_id = \"FDA000263\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "106_2",
    "user": "gpt-3",
    "question": "Retrieve the NCIt biomarker term for the biomarker FDA ID \"FDA000263\" from the table of biomarker FDA-NCIt terms.",
    "query": "SELECT T1.ncit_biomarker FROM biomarker_fda_ncit_term AS T1 WHERE T1.biomarker_fda_id = \"FDA000263\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "107_1",
    "user": "gpt-3",
    "question": "Show whether the test for biomarker with ID \"urn:edrn:bmdb:biomarker:100\" is a panel in the biomarker table.",
    "query": "SELECT T1.test_is_a_panel FROM biomarker AS T1 WHERE T1.biomarker_id = \"urn:edrn:bmdb:biomarker:100\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "107_2",
    "user": "gpt-3",
    "question": "Retrieve the test type as either a single biomarker or a panel from the biomarker table where the biomarker ID is \"urn:edrn:bmdb:biomarker:100\".",
    "query": "SELECT T1.test_is_a_panel FROM biomarker AS T1 WHERE T1.biomarker_id = \"urn:edrn:bmdb:biomarker:100\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "108_1",
    "user": "gpt-3",
    "question": "What is the disease mutation id for the article with a pmid of 24859340 in the table disease_mutation_article?",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_article AS T1 WHERE T1.pmid = 24859340"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "108_2",
    "user": "gpt-3",
    "question": "Find the disease mutation ID from the disease_mutation_article table where the PMID is equal to 24859340.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_article AS T1 WHERE T1.pmid = 24859340"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "109_1",
    "user": "gpt-3",
    "question": "What is the internal ID of the biomarker mentioned in an article with PMID 15059887?",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"15059887\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "109_2",
    "user": "gpt-3",
    "question": "Find the internal ID for the biomarker mentioned in an article with a PMID of 15059887.",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid = \"15059887\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "110_1",
    "user": "gpt-3",
    "question": "Find the peptide ID from the map of protein disease mutation where the Ensembl transcript ID is \"ENST00000220659\".",
    "query": "SELECT T1.peptide_id FROM map_protein_disease_mutation AS T1 WHERE T1.ensembl_transcript_id = \"ENST00000220659\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "110_2",
    "user": "gpt-3",
    "question": "Find the peptide ID for a protein-disease mutation mapping that has an Ensembl transcript ID of \"ENST00000220659\".",
    "query": "SELECT T1.peptide_id FROM map_protein_disease_mutation AS T1 WHERE T1.ensembl_transcript_id = \"ENST00000220659\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "111_1",
    "user": "gpt-3",
    "question": "Find the histological type from the FDA-approved biomarker test with a trade name of \"DAKO HERCEPTEST\".",
    "query": "SELECT T1.histological_type FROM biomarker_fda_test AS T1 WHERE T1.test_trade_name = \"DAKO HERCEPTEST\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "111_2",
    "user": "gpt-3",
    "question": "What is the histological type of the biomarker test with a test trade name of \"DAKO HERCEPTEST\" in the FDA-approved biomarker testing database?",
    "query": "SELECT T1.histological_type FROM biomarker_fda_test AS T1 WHERE T1.test_trade_name = \"DAKO HERCEPTEST\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "112_1",
    "user": "gpt-3",
    "question": "What is the PMID for articles associated with the disease mutation with an ID of 52425 in the disease_mutation_article table?",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id = 52425"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "112_2",
    "user": "gpt-3",
    "question": "Retrieve the PubMed ID for an article associated with a specific disease mutation identified by the ID 52425 in the \"disease_mutation_article\" table.",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id = 52425"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "113_1",
    "user": "gpt-3",
    "question": "Retrieve the disease ontology ID for cancer from the cancer tissue table where the Uberon anatomical ID is \"UBERON:0002048\".",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0002048\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "113_2",
    "user": "gpt-3",
    "question": "Get the Disease Ontology ID for cancer tissues where the Uberon anatomical ID is equal to \"UBERON:0002048\".",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0002048\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "114_1",
    "user": "gpt-3",
    "question": "Show me the disease IDs from differential expression where the expression change direction is \"up\".",
    "query": "SELECT T1.doid FROM differential_expression AS T1 WHERE T1.expression_change_direction = \"up\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "114_2",
    "user": "gpt-3",
    "question": "Get the DOIDs from the table of differential expression where the expression change direction is \"up\".",
    "query": "SELECT T1.doid FROM differential_expression AS T1 WHERE T1.expression_change_direction = \"up\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "115_1",
    "user": "gpt-3",
    "question": "Find the ID of the stage where its name is \"3 weeks (mouse)\".",
    "query": "SELECT T1.id FROM stage AS T1 WHERE T1.name = \"3 weeks (mouse)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "115_2",
    "user": "gpt-3",
    "question": "Find the ID of the stage where the name is \"3 weeks (mouse)\".",
    "query": "SELECT T1.id FROM stage AS T1 WHERE T1.name = \"3 weeks (mouse)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "116_1",
    "user": "gpt-3",
    "question": "Get the ID of all biomarkers that are not a panel test from the \"biomarker\" table.",
    "query": "SELECT T1.id FROM biomarker AS T1 WHERE T1.test_is_a_panel = False"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "116_2",
    "user": "gpt-3",
    "question": "Retrieve the id of all biomarkers from the biomarker table where the test is not a panel.",
    "query": "SELECT T1.id FROM biomarker AS T1 WHERE T1.test_is_a_panel = False"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "117_1",
    "user": "gpt-3",
    "question": "What is the species ID for the gene with an Ensembl gene ID of \"ENSG00000051596\" in the xref_gene_ensembl table?",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.ensembl_gene_id = \"ENSG00000051596\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "117_2",
    "user": "gpt-3",
    "question": "What is the species ID for the gene with Ensembl gene ID \"ENSG00000051596\" in the table xref_gene_ensembl?",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.ensembl_gene_id = \"ENSG00000051596\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "118_1",
    "user": "gpt-3",
    "question": "Find the alternative nucleotide for a disease mutation that is located at codon position 408.",
    "query": "SELECT T1.alt_nt FROM disease_mutation AS T1 WHERE T1.cds_pos = 408"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "118_2",
    "user": "gpt-3",
    "question": "Retrieve the alternate nucleotide for a disease mutation where the coding sequence position is 408.",
    "query": "SELECT T1.alt_nt FROM disease_mutation AS T1 WHERE T1.cds_pos = 408"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "119_1",
    "user": "gpt-3",
    "question": "What is the actual use for biomarker test submission \"K062765\" in the FDA test database?",
    "query": "SELECT T1.actual_use FROM biomarker_fda_test_use AS T1 WHERE T1.test_submission = \"K062765\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "119_2",
    "user": "gpt-3",
    "question": "What is the actual use of the biomarker test submission \"K062765\" in the FDA database?",
    "query": "SELECT T1.actual_use FROM biomarker_fda_test_use AS T1 WHERE T1.test_submission = \"K062765\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "120_1",
    "user": "gpt-3",
    "question": "What is the mutation frequency for disease associated with DOID 1790?",
    "query": "SELECT T1.mutation_freq FROM disease_mutation AS T1 WHERE T1.doid = 1790"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "120_2",
    "user": "gpt-3",
    "question": "What is the mutation frequency for disease with DOID 1790 in the table disease_mutation?",
    "query": "SELECT T1.mutation_freq FROM disease_mutation AS T1 WHERE T1.doid = 1790"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "121_1",
    "user": "gpt-3",
    "question": "What is the feature key for the disease mutation site annotation that has a description of \"Phosphothreonine; by TTBK1\"?",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1 WHERE T1.description = \"Phosphothreonine; by TTBK1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "121_2",
    "user": "gpt-3",
    "question": "Retrieve the feature key from the disease mutation site annotation table where the description is \"Phosphothreonine; by TTBK1\".",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1 WHERE T1.description = \"Phosphothreonine; by TTBK1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "122_1",
    "user": "gpt-3",
    "question": "Retrieve the feature key from the disease mutation site annotation table where the description is \"Phosphotyrosine\".",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1 WHERE T1.description = \"Phosphotyrosine\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "122_2",
    "user": "gpt-3",
    "question": "Get the feature key from the disease mutation site annotation table where the description is \"Phosphotyrosine\".",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1 WHERE T1.description = \"Phosphotyrosine\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "123_1",
    "user": "gpt-3",
    "question": "Get the ID from the biomarker FDA table where the test submission is \"DEN170030\".",
    "query": "SELECT T1.id FROM biomarker_fda AS T1 WHERE T1.test_submission = \"DEN170030\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "123_2",
    "user": "gpt-3",
    "question": "Find the ID of the biomarker from FDA's biomarker list with a test submission code of \"DEN170030\".",
    "query": "SELECT T1.id FROM biomarker_fda AS T1 WHERE T1.test_submission = \"DEN170030\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "124_1",
    "user": "gpt-3",
    "question": "Find the amino acid of the reference mutation for a disease that has a chromosome position of 284621.",
    "query": "SELECT T1.ref_aa FROM disease_mutation AS T1 WHERE T1.chromosome_pos = 284621"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "124_2",
    "user": "gpt-3",
    "question": "Retrieve the reference amino acid from the disease mutation table where the chromosome position is equal to 284621.",
    "query": "SELECT T1.ref_aa FROM disease_mutation AS T1 WHERE T1.chromosome_pos = 284621"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "125_1",
    "user": "gpt-3",
    "question": "What is the peptide ID for the protein disease mutation with an Ensembl transcript ID of \"ENST00000226725\"?",
    "query": "SELECT T1.peptide_id FROM map_protein_disease_mutation AS T1 WHERE T1.ensembl_transcript_id = \"ENST00000226725\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "125_2",
    "user": "gpt-3",
    "question": "Find the peptide ID from the map_protein_disease_mutation table where the ensembl transcript ID is equal to \"ENST00000226725\".",
    "query": "SELECT T1.peptide_id FROM map_protein_disease_mutation AS T1 WHERE T1.ensembl_transcript_id = \"ENST00000226725\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "126_1",
    "user": "gpt-3",
    "question": "Find the test submission from biomarker_fda where the test trade name is \"23andMe PGS Genetic Health Risk Report for BRCA1/BRCA2 (Selected Variants)\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.test_trade_name = \"23andMe PGS Genetic Health Risk Report for BRCA1/BRCA2 (Selected Variants)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "126_2",
    "user": "gpt-3",
    "question": "Retrieve the test submission from the biomarker_fda table where the test trade name is \"23andMe PGS Genetic Health Risk Report for BRCA1/BRCA2 (Selected Variants)\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.test_trade_name = \"23andMe PGS Genetic Health Risk Report for BRCA1/BRCA2 (Selected Variants)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "127_1",
    "user": "gpt-3",
    "question": "Find the id of the biomarker that is a panel in the biomarker table.",
    "query": "SELECT T1.id FROM biomarker AS T1 WHERE T1.test_is_a_panel = True"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "127_2",
    "user": "gpt-3",
    "question": "Retrieve the ID of all biomarkers from the table \"biomarker\" where the test is classified as a panel.",
    "query": "SELECT T1.id FROM biomarker AS T1 WHERE T1.test_is_a_panel = True"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "128_1",
    "user": "gpt-3",
    "question": "Find the disease and mutation IDs associated with a tissue located in the UBeron anatomical region with ID \"UBERON:0002108\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0002108\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "128_2",
    "user": "gpt-3",
    "question": "Find the disease mutation IDs associated with a particular tissue having the UBERON anatomical ID of \"UBERON:0002108\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0002108\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "129_1",
    "user": "gpt-3",
    "question": "What is the DOID code for cancer tissues that have the UBERON anatomical ID \"UBERON:0000945\"?",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0000945\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "129_2",
    "user": "gpt-3",
    "question": "What is the disease ontology identifier of the cancer tissue with an Uberon anatomical ID of \"UBERON:0000945\"?",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0000945\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "130_1",
    "user": "gpt-3",
    "question": "Retrieve the disease mutation ID from the disease mutation impact prediction table where the ID is equal to 6998.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_impact_prediction AS T1 WHERE T1.id = 6998"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "130_2",
    "user": "gpt-3",
    "question": "Find the disease mutation impact prediction with the ID of 6998 from the disease_mutation_impact_prediction table and return its corresponding disease_mutation_id.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_impact_prediction AS T1 WHERE T1.id = 6998"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "131_1",
    "user": "gpt-3",
    "question": "What is the internal ID of the biomarker with an alias of \"14\"?",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_alias AS T1 WHERE T1.alias = \"14\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "131_2",
    "user": "gpt-3",
    "question": "What is the internal ID of the biomarker with the alias \"14\"?",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_alias AS T1 WHERE T1.alias = \"14\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "132_1",
    "user": "gpt-3",
    "question": "Find the biomarker ID for a biomarker with the ID \"EDRN00881\".",
    "query": "SELECT T1.biomarker_id FROM biomarker AS T1 WHERE T1.id = \"EDRN00881\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "132_2",
    "user": "gpt-3",
    "question": "What is the biomarker ID for the biomarker with the EDRN00881 ID?",
    "query": "SELECT T1.biomarker_id FROM biomarker AS T1 WHERE T1.id = \"EDRN00881\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "133_1",
    "user": "gpt-3",
    "question": "What is the UniprotKB canonical ID associated with the UniprotKB canonical AC \"A0A075B6W2-1\"?",
    "query": "SELECT T1.uniprotkb_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_canonical_ac = \"A0A075B6W2-1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "133_2",
    "user": "gpt-3",
    "question": "What is the UniprotKB canonical ID for the UniprotKB canonical AC \"A0A075B6W2-1\" in the table map_uniprot_canonical_id?",
    "query": "SELECT T1.uniprotkb_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_canonical_ac = \"A0A075B6W2-1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "134_1",
    "user": "gpt-3",
    "question": "What is the name of the stage with ID \"HsapDv:0000085\"?",
    "query": "SELECT T1.name FROM stage AS T1 WHERE T1.id = \"HsapDv:0000085\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "134_2",
    "user": "gpt-3",
    "question": "What is the name of the stage with an ID of \"HsapDv:0000085\"?",
    "query": "SELECT T1.name FROM stage AS T1 WHERE T1.id = \"HsapDv:0000085\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "135_1",
    "user": "gpt-3",
    "question": "What is the species ID for the gene with the symbol \"1700022I11Rik\" in the table xref_gene_ensembl?",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"1700022I11Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "135_2",
    "user": "gpt-3",
    "question": "What is the species ID for the gene with the symbol \"1700022I11Rik\" in the xref_gene_ensembl table?",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"1700022I11Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "136_1",
    "user": "gpt-3",
    "question": "Retrieve the Ensembl gene ID from the healthy expression table for genes with an expression score of 70.8.",
    "query": "SELECT T1.ensembl_gene_id FROM healthy_expression AS T1 WHERE T1.expression_score = 70.80000"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "136_2",
    "user": "gpt-3",
    "question": "Find the ensembl gene ID from healthy expression data where the expression score is 70.8.",
    "query": "SELECT T1.ensembl_gene_id FROM healthy_expression AS T1 WHERE T1.expression_score = 70.80000"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "137_1",
    "user": "gpt-3",
    "question": "What is the uberon anatomical ID for a tissue associated with the disease mutation with an ID of 11054?",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 WHERE T1.disease_mutation_id = 11054"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "137_2",
    "user": "gpt-3",
    "question": "Retrieve the uberon anatomical ID from the disease mutation tissue table where the disease mutation ID is 11054.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 WHERE T1.disease_mutation_id = 11054"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "138_1",
    "user": "gpt-3",
    "question": "Find the FDA biomarker ID for the drug \"IRESSA (gefitinib)\" in the table of FDA-approved biomarkers for drugs.",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_drug = \"IRESSA (gefitinib)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "138_2",
    "user": "gpt-3",
    "question": "\"Retrieve the FDA biomarker ID from the biomarker_fda_drug table where the biomarker drug is equal to 'IRESSA (gefitinib)'.\"",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_drug = \"IRESSA (gefitinib)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "139_1",
    "user": "gpt-3",
    "question": "Retrieve the test approval status for all biomarkers with a somatic mutation origin from the FDA test data.",
    "query": "SELECT T1.test_approval_status FROM biomarker_fda_test AS T1 WHERE T1.biomarker_origin = \"somatic mutation\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "139_2",
    "user": "gpt-3",
    "question": "Retrieve the approval status for a test from the biomarker_fda_test table where the biomarker origin is \"somatic mutation\".",
    "query": "SELECT T1.test_approval_status FROM biomarker_fda_test AS T1 WHERE T1.biomarker_origin = \"somatic mutation\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "140_1",
    "user": "gpt-3",
    "question": "Find the internal ID of the biomarker alias \"beta-5 subunit\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_alias AS T1 WHERE T1.alias = \"beta-5 subunit\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "140_2",
    "user": "gpt-3",
    "question": "Find the internal ID of the biomarker with an alias of \"beta-5 subunit\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_alias AS T1 WHERE T1.alias = \"beta-5 subunit\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "141_1",
    "user": "gpt-3",
    "question": "Get the test submission from biomarker_fda where the test trade name is \"Dako TOP2A FISH PharmDx Kit\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.test_trade_name = \"Dako TOP2A FISH PharmDx Kit\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "141_2",
    "user": "gpt-3",
    "question": "Retrieve the test submission from the FDA for the \"Dako TOP2A FISH PharmDx Kit\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.test_trade_name = \"Dako TOP2A FISH PharmDx Kit\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "142_1",
    "user": "gpt-3",
    "question": "Find the anatomical IDs from the EDRN biomarker database where the QA state is \"Under Review\".",
    "query": "SELECT T1.uberon_anatomical_id FROM biomarker_edrn AS T1 WHERE T1.qa_state = \"Under Review\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "142_2",
    "user": "gpt-3",
    "question": "Retrieve the anatomical IDs from the EDRN biomarker table where the QA state is \"Under Review\".",
    "query": "SELECT T1.uberon_anatomical_id FROM biomarker_edrn AS T1 WHERE T1.qa_state = \"Under Review\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "143_1",
    "user": "gpt-3",
    "question": "Retrieve the species name from the \"species\" table where the speciesid is equal to 10090.",
    "query": "SELECT T1.species FROM species AS T1 WHERE T1.speciesid = 10090"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "143_2",
    "user": "gpt-3",
    "question": "Retrieve the species name from the \"species\" table where the \"speciesid\" is equal to 10090.",
    "query": "SELECT T1.species FROM species AS T1 WHERE T1.speciesid = 10090"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "144_1",
    "user": "gpt-3",
    "question": "Get the list of subjects whose number of down differential expressions is equal to 52 from the table \"differential_expression\".",
    "query": "SELECT T1.subjects_up FROM differential_expression AS T1 WHERE T1.subjects_down = 52"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "144_2",
    "user": "gpt-3",
    "question": "Retrieve the number of subjects with increased expression from a table of differential expression where the number of subjects with decreased expression is equal to 52.",
    "query": "SELECT T1.subjects_up FROM differential_expression AS T1 WHERE T1.subjects_down = 52"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "145_1",
    "user": "gpt-3",
    "question": "What is the name of the disease with an ID of 4362 in the table \"disease\"?",
    "query": "SELECT T1.name FROM disease AS T1 WHERE T1.id = 4362"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "145_2",
    "user": "gpt-3",
    "question": "Retrieve the name of the disease with an ID of 4362 from the table \"disease\".",
    "query": "SELECT T1.name FROM disease AS T1 WHERE T1.id = 4362"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "146_1",
    "user": "gpt-3",
    "question": "What is the species ID for the gene with the symbol \"1700013G24Rik\" in the xref_gene_ensembl table?",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"1700013G24Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "146_2",
    "user": "gpt-3",
    "question": "Find the species ID of the gene symbol \"1700013G24Rik\" in the xref_gene_ensembl table.",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"1700013G24Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "147_1",
    "user": "gpt-3",
    "question": "Retrieve the test submission from the biomarker FDA test where the study design is \"NA\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test AS T1 WHERE T1.test_study_design = \"NA\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "147_2",
    "user": "gpt-3",
    "question": "Show me the test submission from the biomarker FDA test where the study design is \"NA\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test AS T1 WHERE T1.test_study_design = \"NA\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "148_1",
    "user": "gpt-3",
    "question": "Retrieve the Uniprot canonical ID from the table \"map_uniprot_canonical_id\" where the Uniprot canonical accession number is equal to \"B9A014-1\".",
    "query": "SELECT T1.uniprotkb_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_canonical_ac = \"B9A014-1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "148_2",
    "user": "gpt-3",
    "question": "Retrieve the UniProtKB accession code for the canonical isoform with the UniProtKB ID \"B9A014-1\" from the map_uniprot_canonical_id table.",
    "query": "SELECT T1.uniprotkb_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_canonical_ac = \"B9A014-1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "149_1",
    "user": "gpt-3",
    "question": "Find the UniProtKB accession code for the protein-disease-mutation mapping where the peptide ID is \"ENSP00000216733\".",
    "query": "SELECT T1.uniprotkb_ac FROM map_protein_disease_mutation AS T1 WHERE T1.peptide_id = \"ENSP00000216733\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "149_2",
    "user": "gpt-3",
    "question": "Retrieve the UniprotKB accession code from the protein-disease-mutation mapping table for the peptide with ID \"ENSP00000216733\".",
    "query": "SELECT T1.uniprotkb_ac FROM map_protein_disease_mutation AS T1 WHERE T1.peptide_id = \"ENSP00000216733\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "150_1",
    "user": "gpt-3",
    "question": "What is the description of the anatomical entity where its ID is equal to \"UBERON:0002370\" and it is also present in the disease_mutation_tissue table?",
    "query": "SELECT T1.description FROM anatomical_entity AS T1 JOIN disease_mutation_tissue AS T2 ON T1.id = T2.uberon_anatomical_id WHERE T2.uberon_anatomical_id = \"UBERON:0002370\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "150_2",
    "user": "gpt-3",
    "question": "Retrieve the description of anatomical entities that are associated with the tissue \"UBERON:0002370\" in disease mutation.",
    "query": "SELECT T1.description FROM anatomical_entity AS T1 JOIN disease_mutation_tissue AS T2 ON T1.id = T2.uberon_anatomical_id WHERE T2.uberon_anatomical_id = \"UBERON:0002370\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "151_1",
    "user": "gpt-3",
    "question": "Retrieve the list of subjects with up-regulated gene expression from the differential expression table for the disease with ID 1324, as identified in the disease table by joining on matching IDs.",
    "query": "SELECT T1.subjects_up FROM differential_expression AS T1 JOIN disease AS T2 ON T1.doid = T2.id WHERE T2.id = 1324"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "151_2",
    "user": "gpt-3",
    "question": "Retrieve the subjects with up-regulated differential expression for a disease with an ID of 1324 from the differential_expression table, joining on the disease table where the disease's ID matches the given ID.",
    "query": "SELECT T1.subjects_up FROM differential_expression AS T1 JOIN disease AS T2 ON T1.doid = T2.id WHERE T2.id = 1324"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "152_1",
    "user": "gpt-3",
    "question": "Find the PMID of all articles related to a disease mutation with a frequency of 60%.",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.mutation_freq = 60"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "152_2",
    "user": "gpt-3",
    "question": "Find the PMID numbers for articles related to disease and mutation that have a mutation frequency of 60%.",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.mutation_freq = 60"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "153_1",
    "user": "gpt-3",
    "question": "Get the approved indication from the biomarker_fda_test_use table where the test trade name matches between biomarker_fda_test_use and biomarker_fda_test, and where the test adoption evidence in biomarker_fda_test is \"clinical use\".",
    "query": "SELECT T1.approved_indication FROM biomarker_fda_test_use AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.test_adoption_evidence = \"clinical use\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "153_2",
    "user": "gpt-3",
    "question": "What are the approved indications for biomarker tests with evidence of clinical use according to the FDA and trade name?",
    "query": "SELECT T1.approved_indication FROM biomarker_fda_test_use AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.test_adoption_evidence = \"clinical use\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "154_1",
    "user": "gpt-3",
    "question": "Retrieve the common name of a species from the database that has a gene symbol \"1700016A09Rik\" in its Ensembl cross-reference table.",
    "query": "SELECT T1.speciescommonname FROM species AS T1 JOIN xref_gene_ensembl AS T2 ON T1.speciesid = T2.speciesid WHERE T2.gene_symbol = \"1700016A09Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "154_2",
    "user": "gpt-3",
    "question": "Get the common name of a species where its gene symbol is \"1700016A09Rik\" by joining the tables for species and xref_gene_ensembl on their shared species ID.",
    "query": "SELECT T1.speciescommonname FROM species AS T1 JOIN xref_gene_ensembl AS T2 ON T1.speciesid = T2.speciesid WHERE T2.gene_symbol = \"1700016A09Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "155_1",
    "user": "gpt-3",
    "question": "Find the biomarker internal ID from the biomarker article table where the biomarker's ID is \"urn:edrn:bmdb:biomarker:547\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.biomarker_id = \"urn:edrn:bmdb:biomarker:547\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "155_2",
    "user": "gpt-3",
    "question": "Retrieve the biomarker internal ID from the biomarker article table where the biomarker ID is \"urn:edrn:bmdb:biomarker:547\" and the internal ID matches with the ID in the biomarker table.",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.biomarker_id = \"urn:edrn:bmdb:biomarker:547\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "156_1",
    "user": "gpt-3",
    "question": "Retrieve the internal IDs of biomarkers from the article and biomarker tables where the biomarker is not a panel test.",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.test_is_a_panel = False"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "156_2",
    "user": "gpt-3",
    "question": "Retrieve the internal ID of biomarkers from the table biomarker_article where the corresponding biomarker is not a panel test.",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.test_is_a_panel = False"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "157_1",
    "user": "gpt-3",
    "question": "What is the NCIt term for the FDA biomarker with ID \"FDA000323\"?",
    "query": "SELECT T1.ncit_biomarker FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.id = \"FDA000323\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "157_2",
    "user": "gpt-3",
    "question": "What is the FDA NCIt term for the biomarker with the ID \"FDA000323\"?",
    "query": "SELECT T1.ncit_biomarker FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.id = \"FDA000323\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "158_1",
    "user": "gpt-3",
    "question": "Find the internal ID of the biomarker alias for the biomarker with the ID \"EDRN00352\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_alias AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.id = \"EDRN00352\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "158_2",
    "user": "gpt-3",
    "question": "Find the internal ID of the biomarker alias for a biomarker with the internal ID \"EDRN00352\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_alias AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.id = \"EDRN00352\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "159_1",
    "user": "gpt-3",
    "question": "Retrieve the data source of disease mutations from the database, where the description in the site annotation is \"Aromatic amino acid; via carbonyl oxygen\".",
    "query": "SELECT T1.data_source FROM disease_mutation AS T1 JOIN disease_mutation_site_annotation AS T2 ON T1.id = T2.disease_mutation_id WHERE T2.description = \"Aromatic amino acid; via carbonyl oxygen\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "159_2",
    "user": "gpt-3",
    "question": "Find the data sources for disease mutations that have a site annotation of \"Aromatic amino acid; via carbonyl oxygen\".",
    "query": "SELECT T1.data_source FROM disease_mutation AS T1 JOIN disease_mutation_site_annotation AS T2 ON T1.id = T2.disease_mutation_id WHERE T2.description = \"Aromatic amino acid; via carbonyl oxygen\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "160_1",
    "user": "gpt-3",
    "question": "Retrieve the gene symbol from the Xref Gene Ensembl table for genes with an expression level of \"ABSENT\" in the Healthy Expression table.",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 JOIN healthy_expression AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.expression_level_gene_relative = \"ABSENT\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "160_2",
    "user": "gpt-3",
    "question": "Retrieve the gene symbol from the XREF Gene Ensembl table for all genes that have an expression level of \"ABSENT\" in the Healthy Expression table.",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 JOIN healthy_expression AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.expression_level_gene_relative = \"ABSENT\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "161_1",
    "user": "gpt-3",
    "question": "What is the species ID for genes that are listed in both the xref_gene_ensembl table and the healthy_expression table, where the expression level is classified as \"LOW\" relative to a particular anatomical structure?",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 JOIN healthy_expression AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.expression_level_anatomical_relative = \"LOW\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "161_2",
    "user": "gpt-3",
    "question": "Retrieve the species ID from the xref_gene_ensembl table for all genes that have a low relative expression level in the healthy_expression table.",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 JOIN healthy_expression AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.expression_level_anatomical_relative = \"LOW\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "162_1",
    "user": "gpt-3",
    "question": "Find the expression level of gene 2610034O05Rik in healthy individuals, by joining the healthy_expression and xref_gene_ensembl tables on their Ensembl gene IDs and selecting the relative expression level for that gene.",
    "query": "SELECT T1.expression_level_gene_relative FROM healthy_expression AS T1 JOIN xref_gene_ensembl AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.gene_symbol = \"2610034O05Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "162_2",
    "user": "gpt-3",
    "question": "Retrieve the expression level relative to other genes from the healthy_expression table for the gene with the gene symbol \"2610034O05Rik\" by joining it with xref_gene_ensembl on ensembl_gene_id and filtering by matching gene symbols.",
    "query": "SELECT T1.expression_level_gene_relative FROM healthy_expression AS T1 JOIN xref_gene_ensembl AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.gene_symbol = \"2610034O05Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "163_1",
    "user": "gpt-3",
    "question": "What is the expression score for the anatomical entity with the UBERON ID \"UBERON:0001875\" in the healthy expression dataset?",
    "query": "SELECT T1.expression_score FROM healthy_expression AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.id = \"UBERON:0001875\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "163_2",
    "user": "gpt-3",
    "question": "Retrieve the expression score from healthy expression for the anatomical entity with UBERON ID \"UBERON:0001875\", joined with the corresponding entry in anatomical entity.",
    "query": "SELECT T1.expression_score FROM healthy_expression AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.id = \"UBERON:0001875\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "164_1",
    "user": "gpt-3",
    "question": "Retrieve the test submission from the biomarker FDA test trial table for all cases where the clinical significance in the corresponding biomarker FDA test table is \"The PraxisTM Extended RAS Panel is a qualitative in vitro diagnostic test using targeted high throughput parallel sequencing for the detection of 56 specific mutations in RAS genes [KRAS (exons 2, 3, and 4) and NRAS (exons 2, 3, and 4)] in DNA extracted from formal",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test_trial AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.clinical_significance = \"The PraxisTM Extended RAS Panel is a qualitative in vitro diagnostic test using targeted high throughput parallel sequencing for the detection of 56 specific mutations in RAS genes [KRAS (exons 2, 3, and 4) and NRAS (exons 2, 3, and 4)] in DNA extracted from formalin\u2010fixed, paraffin\u2010embedded (FFPE) colorectal cancer (CRC) tissue samples.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "164_2",
    "user": "gpt-3",
    "question": "What is the test submission for biomarker FDA test trials where the clinical significance is \"The PraxisTM Extended RAS Panel is a qualitative in vitro diagnostic test using targeted high throughput parallel sequencing for the detection of 56 specific mutations in RAS genes [KRAS (exons 2, 3, and 4) and NRAS (exons 2, 3, and 4)] in DNA extracted from formalin\u2010fixed, paraffin\u2010embedded (FFPE",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test_trial AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.clinical_significance = \"The PraxisTM Extended RAS Panel is a qualitative in vitro diagnostic test using targeted high throughput parallel sequencing for the detection of 56 specific mutations in RAS genes [KRAS (exons 2, 3, and 4) and NRAS (exons 2, 3, and 4)] in DNA extracted from formalin\u2010fixed, paraffin\u2010embedded (FFPE) colorectal cancer (CRC) tissue samples.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "165_1",
    "user": "gpt-3",
    "question": "Get the title of biomarkers from the EDRN database that are associated with the anatomical entity identified by UBERON ID \"UBERON:0002450\".",
    "query": "SELECT T1.biomarker_title FROM biomarker_edrn AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.id = \"UBERON:0002450\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "165_2",
    "user": "gpt-3",
    "question": "Retrieve the title of all biomarkers from the EDRN database that are associated with an anatomical entity with the ID \"UBERON:0002450\" in the Uberon ontology.",
    "query": "SELECT T1.biomarker_title FROM biomarker_edrn AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.id = \"UBERON:0002450\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "166_1",
    "user": "gpt-3",
    "question": "Find the gene symbol from the table xref_gene_ensembl where the speciesid matches 9606, and join it with the species table on matching speciesids.",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 JOIN species AS T2 ON T1.speciesid = T2.speciesid WHERE T2.speciesid = 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "166_2",
    "user": "gpt-3",
    "question": "Retrieve the gene symbol from the xref_gene_ensembl table for all species with a speciesid of 9606, joined with the species table on matching speciesids.",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 JOIN species AS T2 ON T1.speciesid = T2.speciesid WHERE T2.speciesid = 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "167_1",
    "user": "gpt-3",
    "question": "Find the alias of the biomarker from the biomarker_alias table where the description in biomarker is \"From NCBI Entrez Gene: The protein encoded by this gene is a member of the kinesin family and functions as an anterograde motor protein that transports membranous organelles along axonal microtubules. Mutations at this locus have been associated with spastic paraplegia-30 and hereditary sensory neuropathy IIC. Alternatively spliced transcript",
    "query": "SELECT T1.alias FROM biomarker_alias AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.biomarker_description = \"From NCBI Entrez Gene: The protein encoded by this gene is a member of the kinesin family and functions as an anterograde motor protein that transports membranous organelles along axonal microtubules. Mutations at this locus have been associated with spastic paraplegia-30 and hereditary sensory neuropathy IIC. Alternatively spliced transcript variants encoding distinct isoforms have been described. [provided by RefSeq, Apr 2012]\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "167_2",
    "user": "gpt-3",
    "question": "Retrieve the biomarker aliases from the biomarker_alias table where the associated biomarker's description is \"From NCBI Entrez Gene: The protein encoded by this gene is a member of the kinesin family and functions as an anterograde motor protein that transports membranous organelles along axonal microtubules. Mutations at this locus have been associated with spastic paraplegia-30 and hereditary sensory neuropathy IIC. Alternatively spliced transcript variants",
    "query": "SELECT T1.alias FROM biomarker_alias AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.biomarker_description = \"From NCBI Entrez Gene: The protein encoded by this gene is a member of the kinesin family and functions as an anterograde motor protein that transports membranous organelles along axonal microtubules. Mutations at this locus have been associated with spastic paraplegia-30 and hereditary sensory neuropathy IIC. Alternatively spliced transcript variants encoding distinct isoforms have been described. [provided by RefSeq, Apr 2012]\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "168_1",
    "user": "gpt-3",
    "question": "Find the platform method used for biomarker FDA tests approved for early detection by joining the biomarker FDA test table with the biomarker FDA test use table on matching trade names.",
    "query": "SELECT T1.platform_method FROM biomarker_fda_test AS T1 JOIN biomarker_fda_test_use AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.approved_indication = \"early detection\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "168_2",
    "user": "gpt-3",
    "question": "Retrieve the platform method from the FDA biomarker test for which the test trade name matches that in the list of tests used for early detection.",
    "query": "SELECT T1.platform_method FROM biomarker_fda_test AS T1 JOIN biomarker_fda_test_use AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.approved_indication = \"early detection\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "169_1",
    "user": "gpt-3",
    "question": "What is the FDA's NCIt term for the biomarker with an ID of \"FDA000219\"?",
    "query": "SELECT T1.ncit_biomarker FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.id = \"FDA000219\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "169_2",
    "user": "gpt-3",
    "question": "What is the NCIt biomarker term for the FDA biomarker with an ID of \"FDA000219\"?",
    "query": "SELECT T1.ncit_biomarker FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.id = \"FDA000219\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "170_1",
    "user": "gpt-3",
    "question": "Retrieve the name of the tool used for predicting the impact of a disease mutation on a protein with a reference amino acid of \"Y\".",
    "query": "SELECT T1.tool FROM disease_mutation_impact_prediction AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.ref_aa = \"Y\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "170_2",
    "user": "gpt-3",
    "question": "Find the tool used for predicting the impact of disease mutation where the reference amino acid is \"Y\".",
    "query": "SELECT T1.tool FROM disease_mutation_impact_prediction AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.ref_aa = \"Y\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "171_1",
    "user": "gpt-3",
    "question": "What is the identifier of the disease that is linked to cancer tissue through a join on its identifier and has an Uberon anatomical ID of \"UBERON:0001264\"?",
    "query": "SELECT T1.id FROM disease AS T1 JOIN cancer_tissue AS T2 ON T1.id = T2.doid WHERE T2.uberon_anatomical_id = \"UBERON:0001264\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "171_2",
    "user": "gpt-3",
    "question": "Retrieve the ID of any diseases that are associated with a cancer tissue that has an Uberon anatomical identifier of \"UBERON:0001264\" by joining the disease table with the cancer_tissue table on their respective IDs.",
    "query": "SELECT T1.id FROM disease AS T1 JOIN cancer_tissue AS T2 ON T1.id = T2.doid WHERE T2.uberon_anatomical_id = \"UBERON:0001264\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "172_1",
    "user": "gpt-3",
    "question": "Retrieve the test trial ID from the biomarker FDA test trial table where the trade name of the test is \"Cobas KRAS MUTATION TEST\" and it also exists in the biomarker FDA test table.",
    "query": "SELECT T1.test_trial_id FROM biomarker_fda_test_trial AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.test_trade_name = \"Cobas KRAS MUTATION TEST\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "172_2",
    "user": "gpt-3",
    "question": "Retrieve the test trial ID from the biomarker FDA test trial table where the test trade name is \"Cobas KRAS MUTATION TEST\" and it matches with the test trade name in the biomarker FDA test table.",
    "query": "SELECT T1.test_trial_id FROM biomarker_fda_test_trial AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.test_trade_name = \"Cobas KRAS MUTATION TEST\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "173_1",
    "user": "gpt-3",
    "question": "Find the PMID of articles where the peptide position in a disease mutation is 885.",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.peptide_pos = 885"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "173_2",
    "user": "gpt-3",
    "question": "What is the PMID of articles that discuss a disease mutation with a peptide position of 885?",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.peptide_pos = 885"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "174_1",
    "user": "gpt-3",
    "question": "Retrieve the phase from the biomarker_edrn table for the biomarker with a description of \"DcR3 belongs to the tumor necrosis factor receptor superfamily and is postulated to play a regulatory role in suppressing FasL- and LIGHT-mediated cell death. It acts as a decoy receptor that competes with death receptors for ligand binding. Overexpression of this gene has been noted in gastrointestinal tract tumors, and it is located in a gene-rich cluster on chromosome 20,",
    "query": "SELECT T1.phase FROM biomarker_edrn AS T1 JOIN biomarker AS T2 ON T1.id = T2.id WHERE T2.biomarker_description = \"DcR3 belongs to the tumor necrosis factor receptor superfamily and is postulated to play a regulatory role in suppressing FasL- and LIGHT-mediated cell death. It acts as a decoy receptor that competes with death receptors for ligand binding. Overexpression of this gene has been noted in gastrointestinal tract tumors, and it is located in a gene-rich cluster on chromosome 20, with other potentially tumor-related genes.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "174_2",
    "user": "gpt-3",
    "question": "Get the phase of the biomarker from the biomarker_edrn table where the biomarker description is \"DcR3 belongs to the tumor necrosis factor receptor superfamily and is postulated to play a regulatory role in suppressing FasL- and LIGHT-mediated cell death. It acts as a decoy receptor that competes with death receptors for ligand binding. Overexpression of this gene has been noted in gastrointestinal tract tumors, and it is located in a gene-rich cluster on chromosome",
    "query": "SELECT T1.phase FROM biomarker_edrn AS T1 JOIN biomarker AS T2 ON T1.id = T2.id WHERE T2.biomarker_description = \"DcR3 belongs to the tumor necrosis factor receptor superfamily and is postulated to play a regulatory role in suppressing FasL- and LIGHT-mediated cell death. It acts as a decoy receptor that competes with death receptors for ligand binding. Overexpression of this gene has been noted in gastrointestinal tract tumors, and it is located in a gene-rich cluster on chromosome 20, with other potentially tumor-related genes.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "175_1",
    "user": "gpt-3",
    "question": "Find the species ID for all records in the xref_gene_ensembl table that correspond to the \"mouse\" species name.",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 JOIN species AS T2 ON T1.speciesid = T2.speciesid WHERE T2.speciescommonname = \"mouse\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "175_2",
    "user": "gpt-3",
    "question": "What is the species ID for the mouse in the table of cross-referenced genes and Ensembl?",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 JOIN species AS T2 ON T1.speciesid = T2.speciesid WHERE T2.speciescommonname = \"mouse\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "176_1",
    "user": "gpt-3",
    "question": "Retrieve the names of all stages where the relative expression level of a gene in healthy tissue is \"LOW\" from the stage and healthy_expression tables, using the developmental ID from stage and joining it with uberon_developmental_id from healthy_expression.",
    "query": "SELECT T1.name FROM stage AS T1 JOIN healthy_expression AS T2 ON T1.id = T2.uberon_developmental_id WHERE T2.expression_level_gene_relative = \"LOW\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "176_2",
    "user": "gpt-3",
    "question": "\"Retrieve the name of all stages where the relative expression level of genes is low in healthy developmental tissue based on data from the stage and healthy_expression tables.\"",
    "query": "SELECT T1.name FROM stage AS T1 JOIN healthy_expression AS T2 ON T1.id = T2.uberon_developmental_id WHERE T2.expression_level_gene_relative = \"LOW\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "177_1",
    "user": "gpt-3",
    "question": "Get the test submission from the biomarker_fda table for the biomarker with a description that includes information about ubiquitin and its function in DNA repair, ERAD, lysosomal degradation, kinase modification, protein degradation via proteasome, endocytosis, NF-kappa-B activation and rare cases of conjugation to Cys or Ser residues.",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 JOIN biomarker AS T2 ON T1.id = T2.id WHERE T2.biomarker_description = \"Ubiquitin, one of the most highly conserved proteins, is coded for by a family of genes whose translation products give rise to several different proteins.  There are four genes that code for ubiquitin: UBB, UBC, RPS27A, and UBA52.  Ubiquitin is synthesized as a precursor protein consisting of either polyubiquitin chains or a single ubiquitin moiety fused to an unrelated protein. This gene codes for a polyubiquitin precursor.  Polyubiquitin chains, when attached to a target protein, have different functions depending on the Lys residue of the ubiquitin that is linked: Lys-6-linked may be involved in DNA repair; Lys-11-linked is involved in ERAD (endoplasmic reticulum-associated degradation) and in cell-cycle regulation; Lys-29-linked is involved in lysosomal degradation; Lys-33-linked is involved in kinase modification; Lys-48-linked is involved in protein degradation via the proteasome; Lys-63-linked is involved in endocytosis, DNA-damage responses as well as in signaling processes leading to activation of the transcription factor NF-kappa-B. Linear polymer chains formed via attachment by the initiator Met lead to cell signaling. Ubiquitin is usually conjugated to Lys residues of target proteins, however, in rare cases, conjugation to Cys or Ser residues has been observed. When polyubiquitin is free (unanchored-polyubiquitin), it also has distinct roles, such as in activation of protein kinases, and in signaling.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "177_2",
    "user": "gpt-3",
    "question": "What is the test submission for ubiquitin, a highly conserved protein coded by four genes that has different functions depending on the Lys residue it is linked to and can be conjugated to different target proteins?",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 JOIN biomarker AS T2 ON T1.id = T2.id WHERE T2.biomarker_description = \"Ubiquitin, one of the most highly conserved proteins, is coded for by a family of genes whose translation products give rise to several different proteins.  There are four genes that code for ubiquitin: UBB, UBC, RPS27A, and UBA52.  Ubiquitin is synthesized as a precursor protein consisting of either polyubiquitin chains or a single ubiquitin moiety fused to an unrelated protein. This gene codes for a polyubiquitin precursor.  Polyubiquitin chains, when attached to a target protein, have different functions depending on the Lys residue of the ubiquitin that is linked: Lys-6-linked may be involved in DNA repair; Lys-11-linked is involved in ERAD (endoplasmic reticulum-associated degradation) and in cell-cycle regulation; Lys-29-linked is involved in lysosomal degradation; Lys-33-linked is involved in kinase modification; Lys-48-linked is involved in protein degradation via the proteasome; Lys-63-linked is involved in endocytosis, DNA-damage responses as well as in signaling processes leading to activation of the transcription factor NF-kappa-B. Linear polymer chains formed via attachment by the initiator Met lead to cell signaling. Ubiquitin is usually conjugated to Lys residues of target proteins, however, in rare cases, conjugation to Cys or Ser residues has been observed. When polyubiquitin is free (unanchored-polyubiquitin), it also has distinct roles, such as in activation of protein kinases, and in signaling.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "178_1",
    "user": "gpt-3",
    "question": "Show me the test trade name from the biomarker FDA test trial table where the histological type in the associated biomarker FDA test table is \"C209 Tumors may be present in a single or multiple segments of the colon, rectosigmoid, rectum\".",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_trial AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.histological_type = \"C209 Tumors may be present in a single or multiple segments of the colon, rectosigmoid, rectum.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "178_2",
    "user": "gpt-3",
    "question": "Find the test trade names from the biomarker FDA test trial where the corresponding histological type in the biomarker FDA test is \"Tumors may be present in a single or multiple segments of the colon, rectosigmoid, rectum.\"",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_trial AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.histological_type = \"C209 Tumors may be present in a single or multiple segments of the colon, rectosigmoid, rectum.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "179_1",
    "user": "gpt-3",
    "question": "What is the impact prediction ID for all disease mutation records where the alternate amino acid is \"S\"?",
    "query": "SELECT T1.id FROM disease_mutation_impact_prediction AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.alt_aa = \"S\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "179_2",
    "user": "gpt-3",
    "question": "What is the ID of the disease mutation impact prediction for a disease mutation with an alternative amino acid of \"S\"?",
    "query": "SELECT T1.id FROM disease_mutation_impact_prediction AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.alt_aa = \"S\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "180_1",
    "user": "gpt-3",
    "question": "Retrieve the name of the disease from the disease table, where the p-value in the differential expression table is equal to 8.41e-24 and it shares an id with that disease in both tables.",
    "query": "SELECT T1.name FROM disease AS T1 JOIN differential_expression AS T2 ON T1.id = T2.doid WHERE T2.adjpvalue = 8.41e-243"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "180_2",
    "user": "gpt-3",
    "question": "Retrieve the name of diseases where the adjusted p-value in the differential expression is equal to 8.41e-243.",
    "query": "SELECT T1.name FROM disease AS T1 JOIN differential_expression AS T2 ON T1.id = T2.doid WHERE T2.adjpvalue = 8.41e-243"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "181_1",
    "user": "gpt-3",
    "question": "Find the disease mutation impact prediction where the reference amino acid is \"L\" and retrieve the corresponding disease mutation ID from the database.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_impact_prediction AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.ref_aa = \"L\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "181_2",
    "user": "gpt-3",
    "question": "Get the disease mutation IDs from the disease mutation impact prediction table where the reference amino acid is \"L\" and join it with the disease mutation table.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_impact_prediction AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.ref_aa = \"L\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "182_1",
    "user": "gpt-3",
    "question": "Find the ID from the table of biomarker FDA test use where the trade name matches between the tables of biomarker FDA test use and biomarker FDA test, and the submission number in the biomarker FDA test table is \"P190004\".",
    "query": "SELECT T1.id FROM biomarker_fda_test_use AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.test_submission = \"P190004\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "182_2",
    "user": "gpt-3",
    "question": "Find the ID of the biomarker FDA test use for a given test submission (P190004) by joining the tables biomarker_fda_test_use and biomarker_fda_test on their respective trade names.",
    "query": "SELECT T1.id FROM biomarker_fda_test_use AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.test_submission = \"P190004\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "183_1",
    "user": "gpt-3",
    "question": "Get the description of the anatomical entity from the biomarker_edrn table where the QA state is \"Under Review\" and join it with the anatomical_entity table on matching IDs.",
    "query": "SELECT T1.description FROM anatomical_entity AS T1 JOIN biomarker_edrn AS T2 ON T1.id = T2.uberon_anatomical_id WHERE T2.qa_state = \"Under Review\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "183_2",
    "user": "gpt-3",
    "question": "What is the description of anatomical entities for which the QA state in biomarker_edrn is \"Under Review\"?",
    "query": "SELECT T1.description FROM anatomical_entity AS T1 JOIN biomarker_edrn AS T2 ON T1.id = T2.uberon_anatomical_id WHERE T2.qa_state = \"Under Review\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "184_1",
    "user": "gpt-3",
    "question": "Get the test submission for the FDA biomarker with ID \"FDA000013\" from the FDA biomarker table joined with the NCIt term table.",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 JOIN biomarker_fda_ncit_term AS T2 ON T1.id = T2.biomarker_fda_id WHERE T2.biomarker_fda_id = \"FDA000013\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "184_2",
    "user": "gpt-3",
    "question": "Find the test submission from the biomarker FDA entry with an ID of \"FDA000013\" in the FDA database, joined with the NCIT term for that biomarker.",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 JOIN biomarker_fda_ncit_term AS T2 ON T1.id = T2.biomarker_fda_id WHERE T2.biomarker_fda_id = \"FDA000013\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "185_1",
    "user": "gpt-3",
    "question": "What is the stage name for a given uberon developmental id in the table \"healthy_expression\"?",
    "query": "SELECT T1.name FROM stage AS T1 JOIN healthy_expression AS T2 ON T1.id = T2.uberon_developmental_id WHERE T2.uberon_developmental_id = \"HsapDv:0000093\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "185_2",
    "user": "gpt-3",
    "question": "What is the stage name of the developmental stage with ID \"HsapDv:0000093\" in the healthy_expression table?",
    "query": "SELECT T1.name FROM stage AS T1 JOIN healthy_expression AS T2 ON T1.id = T2.uberon_developmental_id WHERE T2.uberon_developmental_id = \"HsapDv:0000093\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "186_1",
    "user": "gpt-3",
    "question": "What is the adjusted p-value for differential gene expression in the disease with ID 2174?",
    "query": "SELECT T1.adjpvalue FROM differential_expression AS T1 JOIN disease AS T2 ON T1.doid = T2.id WHERE T2.id = 2174"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "186_2",
    "user": "gpt-3",
    "question": "What is the adjusted p-value from the differential expression table for disease with ID 2174?",
    "query": "SELECT T1.adjpvalue FROM differential_expression AS T1 JOIN disease AS T2 ON T1.doid = T2.id WHERE T2.id = 2174"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "187_1",
    "user": "gpt-3",
    "question": "Find the peptide ids from the map_protein_disease_mutation table where the disease mutation's alternate nucleotide is \"T\" and it matches with the ensembl transcript id in both tables.",
    "query": "SELECT T1.peptide_id FROM map_protein_disease_mutation AS T1 JOIN disease_mutation AS T2 ON T1.ensembl_transcript_id = T2.ensembl_transcript_id WHERE T2.alt_nt = \"T\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "187_2",
    "user": "gpt-3",
    "question": "Retrieve the peptide ID from the map of protein-disease mutations for those that have an alternative nucleotide \"T\" in their associated disease mutation.",
    "query": "SELECT T1.peptide_id FROM map_protein_disease_mutation AS T1 JOIN disease_mutation AS T2 ON T1.ensembl_transcript_id = T2.ensembl_transcript_id WHERE T2.alt_nt = \"T\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "188_1",
    "user": "gpt-3",
    "question": "Retrieve the species name from the Species table where the gene symbol is \"2310005A03Rik\" and join it with the Ensembl gene cross-reference table based on their shared species ID.",
    "query": "SELECT T1.species FROM species AS T1 JOIN xref_gene_ensembl AS T2 ON T1.speciesid = T2.speciesid WHERE T2.gene_symbol = \"2310005A03Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "188_2",
    "user": "gpt-3",
    "question": "What is the species of a gene with the symbol \"2310005A03Rik\" according to the xref_gene_ensembl table?",
    "query": "SELECT T1.species FROM species AS T1 JOIN xref_gene_ensembl AS T2 ON T1.speciesid = T2.speciesid WHERE T2.gene_symbol = \"2310005A03Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "189_1",
    "user": "gpt-3",
    "question": "What is the identifier for each stage where the uberon anatomical identifier is \"UBERON:0001950\" and it also appears in the healthy expression table with a matching uberon developmental identifier?",
    "query": "SELECT T1.id FROM stage AS T1 JOIN healthy_expression AS T2 ON T1.id = T2.uberon_developmental_id WHERE T2.uberon_anatomical_id = \"UBERON:0001950\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "189_2",
    "user": "gpt-3",
    "question": "Retrieve the stage ID from the stage table where the UBERON developmental ID in the healthy_expression table matches and the UBERON anatomical ID equals \"UBERON:0001950\".",
    "query": "SELECT T1.id FROM stage AS T1 JOIN healthy_expression AS T2 ON T1.id = T2.uberon_developmental_id WHERE T2.uberon_anatomical_id = \"UBERON:0001950\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "190_1",
    "user": "gpt-3",
    "question": "Find the feature key from the disease mutation site annotation table where the amino acid position in UniprotKB is 326.",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.aa_pos_uniprotkb = 326"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "190_2",
    "user": "gpt-3",
    "question": "Retrieve the feature key from the disease mutation site annotation table where the amino acid position in UniProtKB is 326.",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.aa_pos_uniprotkb = 326"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "191_1",
    "user": "gpt-3",
    "question": "Find the FDA biomarker ID for the biomarker associated with the test trade name \"Oncomine Dx Target Test\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_drug AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_trade_name = \"Oncomine Dx Target Test\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "191_2",
    "user": "gpt-3",
    "question": "Find the ID of biomarkers associated with drugs in the FDA database where the corresponding FDA biomarker is for a test with trade name \"Oncomine Dx Target Test\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_drug AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_trade_name = \"Oncomine Dx Target Test\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "192_1",
    "user": "gpt-3",
    "question": "Retrieve the chromosome position from the disease mutation table for all records in which the disease mutation ID matches 79667, while also joining with the disease mutation article table and matching on IDs.",
    "query": "SELECT T1.chromosome_pos FROM disease_mutation AS T1 JOIN disease_mutation_article AS T2 ON T1.id = T2.disease_mutation_id WHERE T2.disease_mutation_id = 79667"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "192_2",
    "user": "gpt-3",
    "question": "Find the chromosome position from the disease mutation and corresponding article where the disease mutation ID is 79667.",
    "query": "SELECT T1.chromosome_pos FROM disease_mutation AS T1 JOIN disease_mutation_article AS T2 ON T1.id = T2.disease_mutation_id WHERE T2.disease_mutation_id = 79667"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "193_1",
    "user": "gpt-3",
    "question": "Find the uberon anatomical ID for disease mutation tissue where the reference amino acid is \"D\".",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.ref_aa = \"D\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "193_2",
    "user": "gpt-3",
    "question": "Find the Uberon anatomical ID for tissues associated with a disease mutation where the reference amino acid is \"D\".",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.ref_aa = \"D\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "194_1",
    "user": "gpt-3",
    "question": "Retrieve the expression score from the healthy_expression table for the anatomical entity with a description of \"the group of neurons that serve as the primary processor of visual information received from the retina via the optic tract and send processed information to the visual cortex of the occipital lobe\".",
    "query": "SELECT T1.expression_score FROM healthy_expression AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.description = \"the group of neurons that serve as the primary processor of visual information received from the retina via the optic tract and send processed information to the visual cortex of the occipital lobe\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "194_2",
    "user": "gpt-3",
    "question": "Retrieve the expression score from the healthy_expression table for the group of neurons that serve as the primary processor of visual information received from the retina via the optic tract and send processed information to the visual cortex of the occipital lobe, which is described as \"the group of neurons that serve as the primary processor of visual information received from the retina via the optic tract and send processed information to the visual cortex of the occipital lobe\" in anatomical_entity table.",
    "query": "SELECT T1.expression_score FROM healthy_expression AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.description = \"the group of neurons that serve as the primary processor of visual information received from the retina via the optic tract and send processed information to the visual cortex of the occipital lobe\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "195_1",
    "user": "gpt-3",
    "question": "Get the disease mutation ID from the disease_mutation_tissue table by joining it with the anatomical_entity table on uberon_anatomical_id where the anatomical_entity description is \"organ of metabolic interchange between fetus and mother, partly of embryonic origin and partly of maternal origin[GO]\" and get the fetal portion of the placenta known as villous chorion joined with the maternal portion known as decidua basalis through anchoring villi anchored to cytotrophoblastic shell in",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.description = \"organ of metabolic interchange between fetus and mother, partly of embryonic origin and partly of maternal origin[GO]. The fetal portion of the placenta is known as the villous chorion. The maternal portion is known as the decidua basalis. The two portions are held together by anchoring villi that are anchored to the decidua basalis by the cytotrophoblastic shell.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "195_2",
    "user": "gpt-3",
    "question": "Find the disease mutation ID from the tissue and anatomical entity tables where the anatomical entity description is an organ that facilitates metabolic exchange between a fetus and mother, composed of both embryonic and maternal components, with the fetal portion referred to as villous chorion and the maternal portion known as decidua basalis, connected by anchoring villi attached to decidua basalis by cytotrophoblastic shell.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.description = \"organ of metabolic interchange between fetus and mother, partly of embryonic origin and partly of maternal origin[GO]. The fetal portion of the placenta is known as the villous chorion. The maternal portion is known as the decidua basalis. The two portions are held together by anchoring villi that are anchored to the decidua basalis by the cytotrophoblastic shell.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "196_1",
    "user": "gpt-3",
    "question": "What is the ID of all biomarkers from the FDA database that have a corresponding test trade name in the biomarker FDA test database with a manufacturer listed as \"THERASCREEN EGFR RGQ PCR KIT\"?",
    "query": "SELECT T1.id FROM biomarker_fda AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.test_manufacturer = \"THERASCREEN EGFR RGQ PCR KIT\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "196_2",
    "user": "gpt-3",
    "question": "\"Retrieve the ID of biomarkers from the FDA that have a corresponding test trade name in the biomarker FDA test database, with a test manufacturer of \"THERASCREEN EGFR RGQ PCR KIT\".\"",
    "query": "SELECT T1.id FROM biomarker_fda AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.test_manufacturer = \"THERASCREEN EGFR RGQ PCR KIT\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "197_1",
    "user": "gpt-3",
    "question": "Retrieve the Uberon anatomical ID from the disease mutation tissue table for all disease mutations in the disease mutation table that are from the data source CIViC.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.data_source = \"civic\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "197_2",
    "user": "gpt-3",
    "question": "Find the uberon anatomical ID for disease mutation tissues where the data source is \"civic\".",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.data_source = \"civic\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "198_1",
    "user": "gpt-3",
    "question": "Find the uberon anatomical ID of cancer tissue where the disease is associated with DOID 263.",
    "query": "SELECT T1.uberon_anatomical_id FROM cancer_tissue AS T1 JOIN disease AS T2 ON T1.doid = T2.id WHERE T2.id = 263"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "198_2",
    "user": "gpt-3",
    "question": "What is the Uberon anatomical ID for cancer tissue associated with disease with ID 263?",
    "query": "SELECT T1.uberon_anatomical_id FROM cancer_tissue AS T1 JOIN disease AS T2 ON T1.doid = T2.id WHERE T2.id = 263"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "199_1",
    "user": "gpt-3",
    "question": "\"Retrieve the site prediction from the disease mutation impact predictions for the disease mutation with an ID of 16777.\"",
    "query": "SELECT T1.site_prediction FROM disease_mutation_impact_prediction AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.id = 16777"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "199_2",
    "user": "gpt-3",
    "question": "Get the site prediction from the disease mutation impact prediction table for the disease mutation with an ID of 16777 by joining it with the disease mutation table.",
    "query": "SELECT T1.site_prediction FROM disease_mutation_impact_prediction AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.id = 16777"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "200_1",
    "user": "gpt-3",
    "question": "Count the number of articles per PMID from the biomarker_article table and group them by PMID.",
    "query": "SELECT T1.pmid, count(*) FROM biomarker_article AS T1  GROUP BY T1.pmid"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "200_2",
    "user": "gpt-3",
    "question": "How many articles are there for each PMID in the biomarker_article table?",
    "query": "SELECT T1.pmid, count(*) FROM biomarker_article AS T1  GROUP BY T1.pmid"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "201_1",
    "user": "gpt-3",
    "question": "How many instances are there for each NCIt biomarker term in the table biomarker_fda_ncit_term?",
    "query": "SELECT T1.ncit_biomarker, count(*) FROM biomarker_fda_ncit_term AS T1  GROUP BY T1.ncit_biomarker"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "201_2",
    "user": "gpt-3",
    "question": "What is the total number of occurrences for each distinct NCIt biomarker term in the table \"biomarker_fda_ncit_term\"?",
    "query": "SELECT T1.ncit_biomarker, count(*) FROM biomarker_fda_ncit_term AS T1  GROUP BY T1.ncit_biomarker"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "202_1",
    "user": "gpt-3",
    "question": "\"Retrieve the PMID and the number of occurrences for each PMID from the disease_mutation_article table, grouped by PMID.\"",
    "query": "SELECT T1.pmid, count(*) FROM disease_mutation_article AS T1  GROUP BY T1.pmid"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "202_2",
    "user": "gpt-3",
    "question": "Count the number of occurrences of each PMID in the disease_mutation_article table and group them together by PMID.",
    "query": "SELECT T1.pmid, count(*) FROM disease_mutation_article AS T1  GROUP BY T1.pmid"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "203_1",
    "user": "gpt-3",
    "question": "Count the number of occurrences of each Ensembl gene ID in the Xref Gene Ensembl table.",
    "query": "SELECT T1.ensembl_gene_id, count(*) FROM xref_gene_ensembl AS T1  GROUP BY T1.ensembl_gene_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "203_2",
    "user": "gpt-3",
    "question": "How many counts are there for each unique Ensembl gene ID in the Xref_gene_ensembl table?",
    "query": "SELECT T1.ensembl_gene_id, count(*) FROM xref_gene_ensembl AS T1  GROUP BY T1.ensembl_gene_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "204_1",
    "user": "gpt-3",
    "question": "How many biomarkers are associated with each uberon anatomical ID in the EDRN database?",
    "query": "SELECT T1.uberon_anatomical_id, count(*) FROM biomarker_edrn AS T1  GROUP BY T1.uberon_anatomical_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "204_2",
    "user": "gpt-3",
    "question": "Get the count of all uberon anatomical IDs and group them by the corresponding uberon anatomical ID in the biomarker_edrn table.",
    "query": "SELECT T1.uberon_anatomical_id, count(*) FROM biomarker_edrn AS T1  GROUP BY T1.uberon_anatomical_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "205_1",
    "user": "gpt-3",
    "question": "Retrieve the count of how many times a mutation is associated with a specific Ensembl transcript ID from the map_protein_disease_mutation table, grouped by each unique Ensembl transcript ID.",
    "query": "SELECT T1.ensembl_transcript_id, count(*) FROM map_protein_disease_mutation AS T1  GROUP BY T1.ensembl_transcript_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "205_2",
    "user": "gpt-3",
    "question": "Count the number of occurrences for each ensembl transcript ID in the table map_protein_disease_mutation and group them by ensembl transcript ID.",
    "query": "SELECT T1.ensembl_transcript_id, count(*) FROM map_protein_disease_mutation AS T1  GROUP BY T1.ensembl_transcript_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "206_1",
    "user": "gpt-3",
    "question": "Count the number of records in the table xref_gene_ensembl grouped by speciesid and list the speciesid and count for each group.",
    "query": "SELECT T1.speciesid, count(*) FROM xref_gene_ensembl AS T1  GROUP BY T1.speciesid"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "206_2",
    "user": "gpt-3",
    "question": "Count the number of rows in the xref_gene_ensembl table grouped by speciesid and return the speciesid and corresponding count.",
    "query": "SELECT T1.speciesid, count(*) FROM xref_gene_ensembl AS T1  GROUP BY T1.speciesid"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "207_1",
    "user": "gpt-3",
    "question": "Count the number of tests for each test manufacturer in the FDA biomarker database.",
    "query": "SELECT T1.test_manufacturer, count(*) FROM biomarker_fda_test AS T1  GROUP BY T1.test_manufacturer"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "207_2",
    "user": "gpt-3",
    "question": "Count the number of biomarker tests grouped by test manufacturer in the biomarker_fda_test table.",
    "query": "SELECT T1.test_manufacturer, count(*) FROM biomarker_fda_test AS T1  GROUP BY T1.test_manufacturer"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "208_1",
    "user": "gpt-3",
    "question": "\"Count the number of articles for each disease mutation and group the results by disease mutation.\"",
    "query": "SELECT T1.disease_mutation_id, count(*) FROM disease_mutation_article AS T1  GROUP BY T1.disease_mutation_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "208_2",
    "user": "gpt-3",
    "question": "Count the number of articles for each disease mutation and group them by their corresponding disease mutation.",
    "query": "SELECT T1.disease_mutation_id, count(*) FROM disease_mutation_article AS T1  GROUP BY T1.disease_mutation_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "209_1",
    "user": "gpt-3",
    "question": "What is the number of counts for each expression level of genes in the healthy expression table, grouped by relative gene expression levels?",
    "query": "SELECT T1.expression_level_gene_relative, count(*) FROM healthy_expression AS T1  GROUP BY T1.expression_level_gene_relative"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "209_2",
    "user": "gpt-3",
    "question": "Count the number of times a gene's relative expression level appears in the table for healthy expression and group the results by the gene's relative expression level.",
    "query": "SELECT T1.expression_level_gene_relative, count(*) FROM healthy_expression AS T1  GROUP BY T1.expression_level_gene_relative"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "210_1",
    "user": "gpt-3",
    "question": "What is the count of biomarkers in the FDA test grouped by their clinical significance?",
    "query": "SELECT T1.clinical_significance, count(*) FROM biomarker_fda_test AS T1  GROUP BY T1.clinical_significance"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "210_2",
    "user": "gpt-3",
    "question": "How many biomarkers are there for each clinical significance in the FDA test?",
    "query": "SELECT T1.clinical_significance, count(*) FROM biomarker_fda_test AS T1  GROUP BY T1.clinical_significance"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "211_1",
    "user": "gpt-3",
    "question": "How many disease mutation site annotations are there, grouped by their IDs?",
    "query": "SELECT T1.id, count(*) FROM disease_mutation_site_annotation AS T1  GROUP BY T1.id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "211_2",
    "user": "gpt-3",
    "question": "Count the number of mutations for each ID in the table disease_mutation_site_annotation and group them by their respective IDs.",
    "query": "SELECT T1.id, count(*) FROM disease_mutation_site_annotation AS T1  GROUP BY T1.id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "212_1",
    "user": "gpt-3",
    "question": "\"Count the number of records in the stage table for each unique ID and group them by ID.\"",
    "query": "SELECT T1.id, count(*) FROM stage AS T1  GROUP BY T1.id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "212_2",
    "user": "gpt-3",
    "question": "Count the number of records in the \"stage\" table and group them by their \"id\" values.",
    "query": "SELECT T1.id, count(*) FROM stage AS T1  GROUP BY T1.id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "213_1",
    "user": "gpt-3",
    "question": "Count the number of occurrences for each biomarker alias and group them by their aliases.",
    "query": "SELECT T1.alias, count(*) FROM biomarker_alias AS T1  GROUP BY T1.alias"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "213_2",
    "user": "gpt-3",
    "question": "How many times does each biomarker alias appear in the biomarker_alias table?",
    "query": "SELECT T1.alias, count(*) FROM biomarker_alias AS T1  GROUP BY T1.alias"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "214_1",
    "user": "gpt-3",
    "question": "How many biomarker FDA IDs are there and how many times do they appear in the biomarker FDA NCIT term table?",
    "query": "SELECT T1.biomarker_fda_id, count(*) FROM biomarker_fda_ncit_term AS T1  GROUP BY T1.biomarker_fda_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "214_2",
    "user": "gpt-3",
    "question": "Count the number of biomarker NCIT terms for each unique FDA biomarker ID in the biomarker_fda_ncit_term table.",
    "query": "SELECT T1.biomarker_fda_id, count(*) FROM biomarker_fda_ncit_term AS T1  GROUP BY T1.biomarker_fda_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "215_1",
    "user": "gpt-3",
    "question": "Count the number of rows in the table \"disease\" and group them by the column \"id\".",
    "query": "SELECT T1.id, count(*) FROM disease AS T1  GROUP BY T1.id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "215_2",
    "user": "gpt-3",
    "question": "Find the id of each disease and count the total number of occurrences for each unique id.",
    "query": "SELECT T1.id, count(*) FROM disease AS T1  GROUP BY T1.id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "216_1",
    "user": "gpt-3",
    "question": "How many subjects have no change in differential expression data?",
    "query": "SELECT T1.subjects_nochange, count(*) FROM differential_expression AS T1  GROUP BY T1.subjects_nochange"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "216_2",
    "user": "gpt-3",
    "question": "What is the count of records in the differential expression table for each unique number of subjects with no change?",
    "query": "SELECT T1.subjects_nochange, count(*) FROM differential_expression AS T1  GROUP BY T1.subjects_nochange"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "217_1",
    "user": "gpt-3",
    "question": "Get the number of articles for each biomarker and its internal ID from the table \"biomarker_article\".",
    "query": "SELECT T1.biomarker_internal_id, count(*) FROM biomarker_article AS T1  GROUP BY T1.biomarker_internal_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "217_2",
    "user": "gpt-3",
    "question": "Count the number of articles for each unique biomarker internal ID in the table \"biomarker_article\".",
    "query": "SELECT T1.biomarker_internal_id, count(*) FROM biomarker_article AS T1  GROUP BY T1.biomarker_internal_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "218_1",
    "user": "gpt-3",
    "question": "Count the number of instances for each anatomical entity description in the anatomical_entity table.",
    "query": "SELECT T1.description, count(*) FROM anatomical_entity AS T1  GROUP BY T1.description"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "218_2",
    "user": "gpt-3",
    "question": "What is the total count of occurrences for each anatomical entity's description in the anatomical_entity table?",
    "query": "SELECT T1.description, count(*) FROM anatomical_entity AS T1  GROUP BY T1.description"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "219_1",
    "user": "gpt-3",
    "question": "\"How many biomarkers are in each phase of the EDRN study?\"",
    "query": "SELECT T1.phase, count(*) FROM biomarker_edrn AS T1  GROUP BY T1.phase"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "219_2",
    "user": "gpt-3",
    "question": "How many biomarkers are there in each phase according to the EDRN database?",
    "query": "SELECT T1.phase, count(*) FROM biomarker_edrn AS T1  GROUP BY T1.phase"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "220_1",
    "user": "gpt-3",
    "question": "What is the count of all species grouped by their respective species?",
    "query": "SELECT T1.species, count(*) FROM species AS T1  GROUP BY T1.species"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "220_2",
    "user": "gpt-3",
    "question": "Get a count of the number of rows in the \"species\" table grouped by each distinct species.",
    "query": "SELECT T1.species, count(*) FROM species AS T1  GROUP BY T1.species"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "221_1",
    "user": "gpt-3",
    "question": "What is the count of disease mutations grouped by peptide position?",
    "query": "SELECT T1.peptide_pos, count(*) FROM disease_mutation AS T1  GROUP BY T1.peptide_pos"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "221_2",
    "user": "gpt-3",
    "question": "Count the number of occurrences of each peptide position in the disease_mutation table and group them together by peptide position.",
    "query": "SELECT T1.peptide_pos, count(*) FROM disease_mutation AS T1  GROUP BY T1.peptide_pos"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "222_1",
    "user": "gpt-3",
    "question": "Find the count of instances for each disease ID in the FDA's biomarker testing database.",
    "query": "SELECT T1.doid, count(*) FROM biomarker_fda_test AS T1  GROUP BY T1.doid"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "222_2",
    "user": "gpt-3",
    "question": "What is the number of biomarker tests for each disease in the biomarker_fda_test table?",
    "query": "SELECT T1.doid, count(*) FROM biomarker_fda_test AS T1  GROUP BY T1.doid"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "223_1",
    "user": "gpt-3",
    "question": "\"Find the count of all stages grouped by their name.\"",
    "query": "SELECT T1.name, count(*) FROM stage AS T1  GROUP BY T1.name"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "223_2",
    "user": "gpt-3",
    "question": "Count the number of occurrences for each name in the stage table and group them by their name.",
    "query": "SELECT T1.name, count(*) FROM stage AS T1  GROUP BY T1.name"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "224_1",
    "user": "gpt-3",
    "question": "\"Count the number of times each unique UniprotKB canonical accession ID appears in the map_uniprot_canonical_id table and group the results by UniprotKB canonical accession ID.\"",
    "query": "SELECT T1.uniprotkb_canonical_ac, count(*) FROM map_uniprot_canonical_id AS T1  GROUP BY T1.uniprotkb_canonical_ac"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "224_2",
    "user": "gpt-3",
    "question": "How many times does each canonical UniProtKB accession number appear in the table containing mapped UniProt canonical IDs?",
    "query": "SELECT T1.uniprotkb_canonical_ac, count(*) FROM map_uniprot_canonical_id AS T1  GROUP BY T1.uniprotkb_canonical_ac"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "225_1",
    "user": "gpt-3",
    "question": "How many rows are there for each unique value in the 'id' column of the disease_mutation_impact_prediction table?",
    "query": "SELECT T1.id, count(*) FROM disease_mutation_impact_prediction AS T1  GROUP BY T1.id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "225_2",
    "user": "gpt-3",
    "question": "What is the count of each unique id in the table disease_mutation_impact_prediction?",
    "query": "SELECT T1.id, count(*) FROM disease_mutation_impact_prediction AS T1  GROUP BY T1.id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "226_1",
    "user": "gpt-3",
    "question": "Count the number of records for each unique biomarker ID in the FDA biomarker database.",
    "query": "SELECT T1.id, count(*) FROM biomarker_fda AS T1  GROUP BY T1.id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "226_2",
    "user": "gpt-3",
    "question": "What is the number of occurrences for each biomarker ID in the FDA biomarker table?",
    "query": "SELECT T1.id, count(*) FROM biomarker_fda AS T1  GROUP BY T1.id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "227_1",
    "user": "gpt-3",
    "question": "How many occurrences of each protein's uniprotkb accession code are there in the map_protein_disease_mutation table?",
    "query": "SELECT T1.uniprotkb_ac, count(*) FROM map_protein_disease_mutation AS T1  GROUP BY T1.uniprotkb_ac"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "227_2",
    "user": "gpt-3",
    "question": "How many mutations are associated with each protein's UniProtKB accession number in the map_protein_disease_mutation table?",
    "query": "SELECT T1.uniprotkb_ac, count(*) FROM map_protein_disease_mutation AS T1  GROUP BY T1.uniprotkb_ac"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "228_1",
    "user": "gpt-3",
    "question": "How many biomarker FDA tests are there for each type of test adoption evidence?",
    "query": "SELECT T1.test_adoption_evidence, count(*) FROM biomarker_fda_test AS T1  GROUP BY T1.test_adoption_evidence"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "228_2",
    "user": "gpt-3",
    "question": "How many biomarker FDA tests have been adopted and what is the number of instances for each type of adoption evidence?",
    "query": "SELECT T1.test_adoption_evidence, count(*) FROM biomarker_fda_test AS T1  GROUP BY T1.test_adoption_evidence"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "229_1",
    "user": "gpt-3",
    "question": "Count the number of occurrences for each biomarker and FDA drug combination in the \"biomarker_fda_drug\" table.",
    "query": "SELECT T1.biomarker_drug, count(*) FROM biomarker_fda_drug AS T1  GROUP BY T1.biomarker_drug"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "229_2",
    "user": "gpt-3",
    "question": "\"Count the number of times each biomarker drug appears in the database.\"",
    "query": "SELECT T1.biomarker_drug, count(*) FROM biomarker_fda_drug AS T1  GROUP BY T1.biomarker_drug"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "230_1",
    "user": "gpt-3",
    "question": "How many test trials are there for each test trial ID in the biomarker FDA database?",
    "query": "SELECT T1.test_trial_id, count(*) FROM biomarker_fda_test_trial AS T1  GROUP BY T1.test_trial_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "230_2",
    "user": "gpt-3",
    "question": "Get the test trial ID and count of the number of entries for each test trial from the biomarker FDA test trial table.",
    "query": "SELECT T1.test_trial_id, count(*) FROM biomarker_fda_test_trial AS T1  GROUP BY T1.test_trial_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "231_1",
    "user": "gpt-3",
    "question": "How many test submissions are there for each biomarker in the FDA database?",
    "query": "SELECT T1.test_submission, count(*) FROM biomarker_fda AS T1  GROUP BY T1.test_submission"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "231_2",
    "user": "gpt-3",
    "question": "Find the number of biomarkers for each test submission in the table biomarker_fda and group them together by test submission.",
    "query": "SELECT T1.test_submission, count(*) FROM biomarker_fda AS T1  GROUP BY T1.test_submission"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "232_1",
    "user": "gpt-3",
    "question": "Find the number of biomarker FDA test trials grouped by their respective test trade names.",
    "query": "SELECT T1.test_trade_name, count(*) FROM biomarker_fda_test_trial AS T1  GROUP BY T1.test_trade_name"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "232_2",
    "user": "gpt-3",
    "question": "How many biomarker FDA test trials are there for each test trade name?",
    "query": "SELECT T1.test_trade_name, count(*) FROM biomarker_fda_test_trial AS T1  GROUP BY T1.test_trade_name"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "233_1",
    "user": "gpt-3",
    "question": "Get the id and the count of all biomarkers from the biomarker table, grouped by their respective id.",
    "query": "SELECT T1.id, count(*) FROM biomarker AS T1  GROUP BY T1.id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "233_2",
    "user": "gpt-3",
    "question": "\"How many biomarkers are there for each unique ID in the biomarker table?\"",
    "query": "SELECT T1.id, count(*) FROM biomarker AS T1  GROUP BY T1.id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "234_1",
    "user": "gpt-3",
    "question": "Count the number of occurrences for each biomarker internal ID in the biomarker alias table and group them by their respective internal IDs.",
    "query": "SELECT T1.biomarker_internal_id, count(*) FROM biomarker_alias AS T1  GROUP BY T1.biomarker_internal_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "234_2",
    "user": "gpt-3",
    "question": "How many biomarker aliases are there for each biomarker internal ID in the biomarker alias table?",
    "query": "SELECT T1.biomarker_internal_id, count(*) FROM biomarker_alias AS T1  GROUP BY T1.biomarker_internal_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "235_1",
    "user": "gpt-3",
    "question": "Count the number of healthy expression entries for each uberon developmental ID and group them by uberon developmental ID.",
    "query": "SELECT T1.uberon_developmental_id, count(*) FROM healthy_expression AS T1  GROUP BY T1.uberon_developmental_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "235_2",
    "user": "gpt-3",
    "question": "How many counts are there for each uberon developmental ID in the healthy expression table?",
    "query": "SELECT T1.uberon_developmental_id, count(*) FROM healthy_expression AS T1  GROUP BY T1.uberon_developmental_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "236_1",
    "user": "gpt-3",
    "question": "What is the number of records for each unique biomarker FDA ID in the biomarker_fda_drug table?",
    "query": "SELECT T1.biomarker_fda_id, count(*) FROM biomarker_fda_drug AS T1  GROUP BY T1.biomarker_fda_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "236_2",
    "user": "gpt-3",
    "question": "What is the count of occurrences for each unique biomarker FDA ID in the biomarker_fda_drug table?",
    "query": "SELECT T1.biomarker_fda_id, count(*) FROM biomarker_fda_drug AS T1  GROUP BY T1.biomarker_fda_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "237_1",
    "user": "gpt-3",
    "question": "Count the number of occurrences for each gene symbol in the xref_gene_ensembl table and group the results by gene symbol.",
    "query": "SELECT T1.gene_symbol, count(*) FROM xref_gene_ensembl AS T1  GROUP BY T1.gene_symbol"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "237_2",
    "user": "gpt-3",
    "question": "Count the number of times each gene symbol appears in the xref_gene_ensembl table, and group the results by gene symbol.",
    "query": "SELECT T1.gene_symbol, count(*) FROM xref_gene_ensembl AS T1  GROUP BY T1.gene_symbol"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "238_1",
    "user": "gpt-3",
    "question": "What is the count of healthy expression scores in the table \"healthy_expression\" and group them by each unique expression score?",
    "query": "SELECT T1.expression_score, count(*) FROM healthy_expression AS T1  GROUP BY T1.expression_score"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "238_2",
    "user": "gpt-3",
    "question": "Find the count of rows grouped by expression score in the healthy_expression table, selecting only the expression_score and number of rows for each group.",
    "query": "SELECT T1.expression_score, count(*) FROM healthy_expression AS T1  GROUP BY T1.expression_score"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "239_1",
    "user": "gpt-3",
    "question": "What is the count of each unique test trade name in the biomarker_fda_test table?",
    "query": "SELECT T1.test_trade_name, count(*) FROM biomarker_fda_test AS T1  GROUP BY T1.test_trade_name"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "239_2",
    "user": "gpt-3",
    "question": "\"How many times does each test trade name appear in the biomarker_fda_test table?\"",
    "query": "SELECT T1.test_trade_name, count(*) FROM biomarker_fda_test AS T1  GROUP BY T1.test_trade_name"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "240_1",
    "user": "gpt-3",
    "question": "\"How many biomarkers are there for each biomarker type in the EDRN database?\"",
    "query": "SELECT T1.biomarker_type, count(*) FROM biomarker_edrn AS T1  GROUP BY T1.biomarker_type"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "240_2",
    "user": "gpt-3",
    "question": "What is the count of each type of biomarker in the biomarker_edrn table?",
    "query": "SELECT T1.biomarker_type, count(*) FROM biomarker_edrn AS T1  GROUP BY T1.biomarker_type"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "241_1",
    "user": "gpt-3",
    "question": "How many biomarkers are there for each QA state in the EDRN database?",
    "query": "SELECT T1.qa_state, count(*) FROM biomarker_edrn AS T1  GROUP BY T1.qa_state"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "241_2",
    "user": "gpt-3",
    "question": "\"How many biomarkers have been assigned to each QA state in the EDRN database?\"",
    "query": "SELECT T1.qa_state, count(*) FROM biomarker_edrn AS T1  GROUP BY T1.qa_state"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "242_1",
    "user": "gpt-3",
    "question": "How many counts are there for each cancer tissue type in the cancer_tissue table?",
    "query": "SELECT T1.doid, count(*) FROM cancer_tissue AS T1  GROUP BY T1.doid"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "242_2",
    "user": "gpt-3",
    "question": "What is the total number of cancer tissue samples for each disease in the database?",
    "query": "SELECT T1.doid, count(*) FROM cancer_tissue AS T1  GROUP BY T1.doid"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "243_1",
    "user": "gpt-3",
    "question": "How many biomarker entries are there for each platform method in the FDA test?",
    "query": "SELECT T1.platform_method, count(*) FROM biomarker_fda_test AS T1  GROUP BY T1.platform_method"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "243_2",
    "user": "gpt-3",
    "question": "How many biomarkers have been tested using each platform method in the FDA's biomarker database?",
    "query": "SELECT T1.platform_method, count(*) FROM biomarker_fda_test AS T1  GROUP BY T1.platform_method"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "244_1",
    "user": "gpt-3",
    "question": "Get the id and count for each anatomical entity from the table \"anatomical_entity\", grouping them by their respective id.",
    "query": "SELECT T1.id, count(*) FROM anatomical_entity AS T1  GROUP BY T1.id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "244_2",
    "user": "gpt-3",
    "question": "\"How many times does each anatomical entity appear in the table and what is its corresponding ID number?\"",
    "query": "SELECT T1.id, count(*) FROM anatomical_entity AS T1  GROUP BY T1.id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "245_1",
    "user": "gpt-3",
    "question": "Count the number of times each anatomical entity name appears in the anatomical_entity table and group them by their name.",
    "query": "SELECT T1.name, count(*) FROM anatomical_entity AS T1  GROUP BY T1.name"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "245_2",
    "user": "gpt-3",
    "question": "Find the number of occurrences of each anatomical entity and group them by their names.",
    "query": "SELECT T1.name, count(*) FROM anatomical_entity AS T1  GROUP BY T1.name"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "246_1",
    "user": "gpt-3",
    "question": "\"Retrieve the count of all records in the species table grouped by each unique species ID.\"",
    "query": "SELECT T1.speciesid, count(*) FROM species AS T1  GROUP BY T1.speciesid"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "246_2",
    "user": "gpt-3",
    "question": "Count the number of records in the \"species\" table for each unique species ID and group them by species ID.",
    "query": "SELECT T1.speciesid, count(*) FROM species AS T1  GROUP BY T1.speciesid"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "247_1",
    "user": "gpt-3",
    "question": "What is the count of instances for each unique disease name in the \"disease\" table?",
    "query": "SELECT T1.name, count(*) FROM disease AS T1  GROUP BY T1.name"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "247_2",
    "user": "gpt-3",
    "question": "How many occurrences of each disease name are there in the disease table?",
    "query": "SELECT T1.name, count(*) FROM disease AS T1  GROUP BY T1.name"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "248_1",
    "user": "gpt-3",
    "question": "Find the number of annotations for each disease mutation by grouping them based on their corresponding ID in the table \"disease_mutation_site_annotation\".",
    "query": "SELECT T1.disease_mutation_id, count(*) FROM disease_mutation_site_annotation AS T1  GROUP BY T1.disease_mutation_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "248_2",
    "user": "gpt-3",
    "question": "Count the number of disease mutation site annotations for each unique disease mutation ID.",
    "query": "SELECT T1.disease_mutation_id, count(*) FROM disease_mutation_site_annotation AS T1  GROUP BY T1.disease_mutation_id"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "249_1",
    "user": "gpt-3",
    "question": "Count the number of disease mutation site annotations grouped by their feature key in the disease mutation site annotation table.",
    "query": "SELECT T1.feature_key, count(*) FROM disease_mutation_site_annotation AS T1  GROUP BY T1.feature_key"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "249_2",
    "user": "gpt-3",
    "question": "How many feature keys are there in the disease mutation site annotation table and how many times does each key appear?",
    "query": "SELECT T1.feature_key, count(*) FROM disease_mutation_site_annotation AS T1  GROUP BY T1.feature_key"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "250_1",
    "user": "gpt-3",
    "question": "How many records are there in the disease_mutation_impact_prediction table?",
    "query": "SELECT count(*) FROM disease_mutation_impact_prediction AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "250_2",
    "user": "gpt-3",
    "question": "How many rows are there in the disease_mutation_impact_prediction table?",
    "query": "SELECT count(*) FROM disease_mutation_impact_prediction AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "251_1",
    "user": "gpt-3",
    "question": "How many entries are there in the biomarker FDA test trial table?",
    "query": "SELECT count(*) FROM biomarker_fda_test_trial AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "251_2",
    "user": "gpt-3",
    "question": "How many biomarker FDA test trials are there in the table \"biomarker_fda_test_trial\"?",
    "query": "SELECT count(*) FROM biomarker_fda_test_trial AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "252_1",
    "user": "gpt-3",
    "question": "How many entries are there in the biomarker FDA NCIT term table?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "252_2",
    "user": "gpt-3",
    "question": "How many rows are there in the table biomarker_fda_ncit_term with the columns biomarker and fda_ncit_term?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "253_1",
    "user": "gpt-3",
    "question": "How many entries are there in the healthy expression table?",
    "query": "SELECT count(*) FROM healthy_expression AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "253_2",
    "user": "gpt-3",
    "question": "How many records are there in the table \"healthy_expression\"?",
    "query": "SELECT count(*) FROM healthy_expression AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "254_1",
    "user": "gpt-3",
    "question": "Count the number of entries in the table \"map_uniprot_canonical_id\" with the column name \"canonical_id\" from the database named \"uniprot\".",
    "query": "SELECT count(*) FROM map_uniprot_canonical_id AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "254_2",
    "user": "gpt-3",
    "question": "How many records are there in the table \"map_uniprot_canonical_id\" that contains the count of all entries in the column \"canonical_id\" in the table \"uniprot\"?",
    "query": "SELECT count(*) FROM map_uniprot_canonical_id AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "255_1",
    "user": "gpt-3",
    "question": "\"How many anatomical entities are there in the anatomical entity table?\"",
    "query": "SELECT count(*) FROM anatomical_entity AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "255_2",
    "user": "gpt-3",
    "question": "How many anatomical entities are there?",
    "query": "SELECT count(*) FROM anatomical_entity AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "256_1",
    "user": "gpt-3",
    "question": "How many records are in the cancer tissue table?",
    "query": "SELECT count(*) FROM cancer_tissue AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "256_2",
    "user": "gpt-3",
    "question": "\"How many rows are in the cancer tissue table?\"",
    "query": "SELECT count(*) FROM cancer_tissue AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "257_1",
    "user": "gpt-3",
    "question": "How many records are there in the biomarker table?",
    "query": "SELECT count(*) FROM biomarker AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "257_2",
    "user": "gpt-3",
    "question": "\"How many records are there in the biomarker table?\"",
    "query": "SELECT count(*) FROM biomarker AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "258_1",
    "user": "gpt-3",
    "question": "How many gene entries are there in the xref_gene_ensembl table of the database, named xref_gene_ensembl?",
    "query": "SELECT count(*) FROM xref_gene_ensembl AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "258_2",
    "user": "gpt-3",
    "question": "How many records are in the table \"xref_gene_ensembl\"?",
    "query": "SELECT count(*) FROM xref_gene_ensembl AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "259_1",
    "user": "gpt-3",
    "question": "How many articles are there in the biomarker database?",
    "query": "SELECT count(*) FROM biomarker_article AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "259_2",
    "user": "gpt-3",
    "question": "How many rows are there in the table biomarker_article?",
    "query": "SELECT count(*) FROM biomarker_article AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "260_1",
    "user": "gpt-3",
    "question": "How many rows are there in the table \"disease_mutation_article\" where a disease and mutation are mentioned in an article?",
    "query": "SELECT count(*) FROM disease_mutation_article AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "260_2",
    "user": "gpt-3",
    "question": "How many records are there in the table disease_mutation_article for each combination of disease and mutation?",
    "query": "SELECT count(*) FROM disease_mutation_article AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "261_1",
    "user": "gpt-3",
    "question": "\"How many records are in the table for mapping between protein, disease, and mutation in the database?\"",
    "query": "SELECT count(*) FROM map_protein_disease_mutation AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "261_2",
    "user": "gpt-3",
    "question": "How many records are there in the table \"map_protein_disease_mutation\"?",
    "query": "SELECT count(*) FROM map_protein_disease_mutation AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "262_1",
    "user": "gpt-3",
    "question": "How many records are in the disease table?",
    "query": "SELECT count(*) FROM disease AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "262_2",
    "user": "gpt-3",
    "question": "\"How many rows are in the 'disease' table?\"",
    "query": "SELECT count(*) FROM disease AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "263_1",
    "user": "gpt-3",
    "question": "How many rows are in the \"species\" table?",
    "query": "SELECT count(*) FROM species AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "263_2",
    "user": "gpt-3",
    "question": "How many species are there in the database?",
    "query": "SELECT count(*) FROM species AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "264_1",
    "user": "gpt-3",
    "question": "\"How many biomarker-fda drug combinations are there in the biomarker fda drug table?\"",
    "query": "SELECT count(*) FROM biomarker_fda_drug AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "264_2",
    "user": "gpt-3",
    "question": "How many rows are there in the table \"biomarker_fda_drug\"?",
    "query": "SELECT count(*) FROM biomarker_fda_drug AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "265_1",
    "user": "gpt-3",
    "question": "How many biomarker tests are present in the FDA's biomarker database?",
    "query": "SELECT count(*) FROM biomarker_fda_test AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "265_2",
    "user": "gpt-3",
    "question": "How many rows are there in the biomarker_fda_test table?",
    "query": "SELECT count(*) FROM biomarker_fda_test AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "266_1",
    "user": "gpt-3",
    "question": "\"How many biomarker aliases are there in the biomarker alias table?\"",
    "query": "SELECT count(*) FROM biomarker_alias AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "266_2",
    "user": "gpt-3",
    "question": "How many biomarker aliases are there in the table \"biomarker_alias\"?",
    "query": "SELECT count(*) FROM biomarker_alias AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "267_1",
    "user": "gpt-3",
    "question": "How many records are in the table for differential expression in the differential_expression database?",
    "query": "SELECT count(*) FROM differential_expression AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "267_2",
    "user": "gpt-3",
    "question": "How many rows are in the table called \"differential_expression\" in the database, where each row represents a differential expression result?",
    "query": "SELECT count(*) FROM differential_expression AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "268_1",
    "user": "gpt-3",
    "question": "How many rows are in the stage table?",
    "query": "SELECT count(*) FROM stage AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "268_2",
    "user": "gpt-3",
    "question": "How many records are in the stage table?",
    "query": "SELECT count(*) FROM stage AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "269_1",
    "user": "gpt-3",
    "question": "How many biomarker FDA test uses are there in the biomarker FDA test use database?",
    "query": "SELECT count(*) FROM biomarker_fda_test_use AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "269_2",
    "user": "gpt-3",
    "question": "How many biomarkers are in use for FDA testing?",
    "query": "SELECT count(*) FROM biomarker_fda_test_use AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "270_1",
    "user": "gpt-3",
    "question": "How many rows are in the table \"disease_mutation\"?",
    "query": "SELECT count(*) FROM disease_mutation AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "270_2",
    "user": "gpt-3",
    "question": "How many rows are in the table disease_mutation?",
    "query": "SELECT count(*) FROM disease_mutation AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "271_1",
    "user": "gpt-3",
    "question": "How many biomarkers are in the FDA's biomarker list?",
    "query": "SELECT count(*) FROM biomarker_fda AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "271_2",
    "user": "gpt-3",
    "question": "How many biomarkers are there in the FDA's biomarker database?",
    "query": "SELECT count(*) FROM biomarker_fda AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "272_1",
    "user": "gpt-3",
    "question": "How many biomarker entries are there in the EDRN database?",
    "query": "SELECT count(*) FROM biomarker_edrn AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "272_2",
    "user": "gpt-3",
    "question": "How many biomarkers are there in the EDRN biomarker database?",
    "query": "SELECT count(*) FROM biomarker_edrn AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "273_1",
    "user": "gpt-3",
    "question": "How many disease mutation tissue combinations are there in the database?",
    "query": "SELECT count(*) FROM disease_mutation_tissue AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "273_2",
    "user": "gpt-3",
    "question": "How many disease mutation tissue combinations are there in the disease_mutation_tissue table?",
    "query": "SELECT count(*) FROM disease_mutation_tissue AS T1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "274_1",
    "user": "gpt-3",
    "question": "How many anatomical entities have an ID of \"UBERON:0000082\"?",
    "query": "SELECT count(*) FROM anatomical_entity AS T1 WHERE T1.id = \"UBERON:0000082\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "274_2",
    "user": "gpt-3",
    "question": "How many rows are there in the anatomical_entity table where the id is \"UBERON:0000082\"?",
    "query": "SELECT count(*) FROM anatomical_entity AS T1 WHERE T1.id = \"UBERON:0000082\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "275_1",
    "user": "gpt-3",
    "question": "How many rows are in the table map_protein_disease_mutation where the peptide_id is \"ENSP00000224784\"?",
    "query": "SELECT count(*) FROM map_protein_disease_mutation AS T1 WHERE T1.peptide_id = \"ENSP00000224784\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "275_2",
    "user": "gpt-3",
    "question": "How many rows are there in the map_protein_disease_mutation table where the peptide_id column is equal to \"ENSP00000224784\"?",
    "query": "SELECT count(*) FROM map_protein_disease_mutation AS T1 WHERE T1.peptide_id = \"ENSP00000224784\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "276_1",
    "user": "gpt-3",
    "question": "How many annotations are associated with the disease mutation site having an ID of 337344?",
    "query": "SELECT count(*) FROM disease_mutation_site_annotation AS T1 WHERE T1.disease_mutation_id = 337344"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "276_2",
    "user": "gpt-3",
    "question": "How many disease mutation site annotations are associated with the disease mutation ID 337344?",
    "query": "SELECT count(*) FROM disease_mutation_site_annotation AS T1 WHERE T1.disease_mutation_id = 337344"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "277_1",
    "user": "gpt-3",
    "question": "How many biomarkers have the alias \"bHLHe39\"?",
    "query": "SELECT count(*) FROM biomarker_alias AS T1 WHERE T1.alias = \"bHLHe39\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "277_2",
    "user": "gpt-3",
    "question": "How many biomarker aliases are there in the database with the alias \"bHLHe39\"?",
    "query": "SELECT count(*) FROM biomarker_alias AS T1 WHERE T1.alias = \"bHLHe39\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "278_1",
    "user": "gpt-3",
    "question": "How many biomarkers are there in the FDA database with an ID of \"FDA000198\"?",
    "query": "SELECT count(*) FROM biomarker_fda AS T1 WHERE T1.id = \"FDA000198\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "278_2",
    "user": "gpt-3",
    "question": "How many biomarkers in the FDA database have the ID \"FDA000198\"?",
    "query": "SELECT count(*) FROM biomarker_fda AS T1 WHERE T1.id = \"FDA000198\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "279_1",
    "user": "gpt-3",
    "question": "How many disease-mutation records have an ensembl transcript ID of \"ENST00000226432\"?",
    "query": "SELECT count(*) FROM disease_mutation AS T1 WHERE T1.ensembl_transcript_id = \"ENST00000226432\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "279_2",
    "user": "gpt-3",
    "question": "How many disease-mutation entries are there for the ensembl transcript ID \"ENST00000226432\"?",
    "query": "SELECT count(*) FROM disease_mutation AS T1 WHERE T1.ensembl_transcript_id = \"ENST00000226432\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "280_1",
    "user": "gpt-3",
    "question": "How many biomarker and NCIt terms are there where the NCIt term is \"CCNE1\"?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"CCNE1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "280_2",
    "user": "gpt-3",
    "question": "How many biomarker-FDA-National Cancer Institute Thesaurus (NCIT) term entries are associated with the NCIt biomarker \"CCNE1\"?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"CCNE1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "281_1",
    "user": "gpt-3",
    "question": "How many records are in the disease table where the name is \"prostate cancer\"?",
    "query": "SELECT count(*) FROM disease AS T1 WHERE T1.name = \"prostate cancer\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "281_2",
    "user": "gpt-3",
    "question": "How many entries are there in the disease table where the name is \"prostate cancer\"?",
    "query": "SELECT count(*) FROM disease AS T1 WHERE T1.name = \"prostate cancer\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "282_1",
    "user": "gpt-3",
    "question": "How many stages are there in the stage table with the name \"2 month-old stage (mouse)\"?",
    "query": "SELECT count(*) FROM stage AS T1 WHERE T1.name = \"2 month-old stage (mouse)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "282_2",
    "user": "gpt-3",
    "question": "How many records are there in the \"stage\" table where the name is \"2 month-old stage (mouse)\"?",
    "query": "SELECT count(*) FROM stage AS T1 WHERE T1.name = \"2 month-old stage (mouse)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "283_1",
    "user": "gpt-3",
    "question": "How many biomarker-NCIt term pairs are there where the NCIt biomarker is \"DDR2 Gene\"?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"DDR2 Gene\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "283_2",
    "user": "gpt-3",
    "question": "How many biomarkers in the FDA NCIt term database are associated with the \"DDR2 Gene\"?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"DDR2 Gene\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "284_1",
    "user": "gpt-3",
    "question": "How many records are there in the \"stage\" table with an ID of \"MmusDv:0000064\"?",
    "query": "SELECT count(*) FROM stage AS T1 WHERE T1.id = \"MmusDv:0000064\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "284_2",
    "user": "gpt-3",
    "question": "How many records are in the stage table where the id is \"MmusDv:0000064\"?",
    "query": "SELECT count(*) FROM stage AS T1 WHERE T1.id = \"MmusDv:0000064\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "285_1",
    "user": "gpt-3",
    "question": "How many biomarker FDA NCIt terms have the NCIt Biomarker \"Biliverdin Reductase A Gene\"?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"Biliverdin Reductase A Gene\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "285_2",
    "user": "gpt-3",
    "question": "How many biomarkers are there in the FDA NCIT term table that have the term \"Biliverdin Reductase A Gene\" as their NCIT biomarker?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"Biliverdin Reductase A Gene\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "286_1",
    "user": "gpt-3",
    "question": "How many biomarker articles have a PMID of \"20501620\"?",
    "query": "SELECT count(*) FROM biomarker_article AS T1 WHERE T1.pmid = \"20501620\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "286_2",
    "user": "gpt-3",
    "question": "How many biomarker articles are there with a PMID of 20501620?",
    "query": "SELECT count(*) FROM biomarker_article AS T1 WHERE T1.pmid = \"20501620\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "287_1",
    "user": "gpt-3",
    "question": "How many records are in the cancer tissue table that have an Uberon anatomical ID of \"UBERON:0002113\"?",
    "query": "SELECT count(*) FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0002113\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "287_2",
    "user": "gpt-3",
    "question": "How many cancer tissues are there in the dataset with the anatomical ID \"UBERON:0002113\"?",
    "query": "SELECT count(*) FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0002113\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "288_1",
    "user": "gpt-3",
    "question": "How many biomarker articles have a PMID of \"18382671\"?",
    "query": "SELECT count(*) FROM biomarker_article AS T1 WHERE T1.pmid = \"18382671\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "288_2",
    "user": "gpt-3",
    "question": "How many biomarker articles have a PMID of 18382671?",
    "query": "SELECT count(*) FROM biomarker_article AS T1 WHERE T1.pmid = \"18382671\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "289_1",
    "user": "gpt-3",
    "question": "How many disease mutations have an alternate amino acid of \"S\"?",
    "query": "SELECT count(*) FROM disease_mutation AS T1 WHERE T1.alt_aa = \"S\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "289_2",
    "user": "gpt-3",
    "question": "How many disease mutations have an alternative amino acid of \"S\"?",
    "query": "SELECT count(*) FROM disease_mutation AS T1 WHERE T1.alt_aa = \"S\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "290_1",
    "user": "gpt-3",
    "question": "How many rows are in the differential expression table where the p-value is equal to 8.41e-13?",
    "query": "SELECT count(*) FROM differential_expression AS T1 WHERE T1.pvalue = 8.41e-134"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "290_2",
    "user": "gpt-3",
    "question": "How many rows are in the differential expression table where the p-value is equal to 8.41e-134?",
    "query": "SELECT count(*) FROM differential_expression AS T1 WHERE T1.pvalue = 8.41e-134"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "291_1",
    "user": "gpt-3",
    "question": "How many records are in the disease table where the name is \"sarcoma\"?",
    "query": "SELECT count(*) FROM disease AS T1 WHERE T1.name = \"sarcoma\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "291_2",
    "user": "gpt-3",
    "question": "How many records are there in the disease table where the name is \"sarcoma\"?",
    "query": "SELECT count(*) FROM disease AS T1 WHERE T1.name = \"sarcoma\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "292_1",
    "user": "gpt-3",
    "question": "How many biomarker submissions with the test submission number \"K062765\" are there in the FDA's biomarker database?",
    "query": "SELECT count(*) FROM biomarker_fda AS T1 WHERE T1.test_submission = \"K062765\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "292_2",
    "user": "gpt-3",
    "question": "How many biomarkers are in the FDA's database for test submission \"K062765\"?",
    "query": "SELECT count(*) FROM biomarker_fda AS T1 WHERE T1.test_submission = \"K062765\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "293_1",
    "user": "gpt-3",
    "question": "How many biomarker aliases are there for the alias \"8-oxoguanine DNA glycosylase\"?",
    "query": "SELECT count(*) FROM biomarker_alias AS T1 WHERE T1.alias = \"8-oxoguanine DNA glycosylase\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "293_2",
    "user": "gpt-3",
    "question": "How many entries are there in the biomarker alias table where the alias is \"8-oxoguanine DNA glycosylase\"?",
    "query": "SELECT count(*) FROM biomarker_alias AS T1 WHERE T1.alias = \"8-oxoguanine DNA glycosylase\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "294_1",
    "user": "gpt-3",
    "question": "How many entries are in the stage table where the name is \"neonate stage\"?",
    "query": "SELECT count(*) FROM stage AS T1 WHERE T1.name = \"neonate stage\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "294_2",
    "user": "gpt-3",
    "question": "How many records are in the \"stage\" table where the stage name is \"neonate stage\"?",
    "query": "SELECT count(*) FROM stage AS T1 WHERE T1.name = \"neonate stage\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "295_1",
    "user": "gpt-3",
    "question": "How many articles mention the biomarker with an internal ID of \"EDRN00416\"?",
    "query": "SELECT count(*) FROM biomarker_article AS T1 WHERE T1.biomarker_internal_id = \"EDRN00416\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "295_2",
    "user": "gpt-3",
    "question": "How many articles have a biomarker internal ID equal to \"EDRN00416\" in the biomarker_article table?",
    "query": "SELECT count(*) FROM biomarker_article AS T1 WHERE T1.biomarker_internal_id = \"EDRN00416\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "296_1",
    "user": "gpt-3",
    "question": "How many records are in the disease table where the name is \"vaginal cancer\"?",
    "query": "SELECT count(*) FROM disease AS T1 WHERE T1.name = \"vaginal cancer\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "296_2",
    "user": "gpt-3",
    "question": "How many entries are there in the disease database where the name is \"vaginal cancer\"?",
    "query": "SELECT count(*) FROM disease AS T1 WHERE T1.name = \"vaginal cancer\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "297_1",
    "user": "gpt-3",
    "question": "How many records are in the biomarker FDA test use table where the test trade name is \"Prosigna Breast Cancer Prognostic Gene Signature Assay\"?",
    "query": "SELECT count(*) FROM biomarker_fda_test_use AS T1 WHERE T1.test_trade_name = \"Prosigna Breast Cancer Prognostic Gene Signature Assay\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "297_2",
    "user": "gpt-3",
    "question": "How many records are there in the biomarker FDA test use table where the test trade name is \"Prosigna Breast Cancer Prognostic Gene Signature Assay\"?",
    "query": "SELECT count(*) FROM biomarker_fda_test_use AS T1 WHERE T1.test_trade_name = \"Prosigna Breast Cancer Prognostic Gene Signature Assay\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "298_1",
    "user": "gpt-3",
    "question": "How many biomarker and FDA drug combinations are there with the biomarker ID \"FDA000116\"?",
    "query": "SELECT count(*) FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000116\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "298_2",
    "user": "gpt-3",
    "question": "How many biomarkers are associated with the FDA drug \"FDA000116\"?",
    "query": "SELECT count(*) FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000116\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "299_1",
    "user": "gpt-3",
    "question": "How many biomarker-NCIt term pairs are there for the FDA biomarker with ID \"FDA000033\"?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.biomarker_fda_id = \"FDA000033\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "299_2",
    "user": "gpt-3",
    "question": "How many biomarker NCIt terms are associated with the FDA ID \"FDA000033\"?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.biomarker_fda_id = \"FDA000033\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "300_1",
    "user": "gpt-3",
    "question": "How many records are in the table map_uniprot_canonical_id where the column uniprotkb_ac is equal to \"A6NIM6\"?",
    "query": "SELECT count(*) FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_ac = \"A6NIM6\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "300_2",
    "user": "gpt-3",
    "question": "How many rows are in the table \"map_uniprot_canonical_id\" where the value of \"uniprotkb_ac\" is equal to \"A6NIM6\"?",
    "query": "SELECT count(*) FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_ac = \"A6NIM6\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "301_1",
    "user": "gpt-3",
    "question": "How many entries are there in the stage table with an ID of \"HsapDv:0000089\"?",
    "query": "SELECT count(*) FROM stage AS T1 WHERE T1.id = \"HsapDv:0000089\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "301_2",
    "user": "gpt-3",
    "question": "How many entries are there in the \"stage\" table with the ID of \"HsapDv:0000089\"?",
    "query": "SELECT count(*) FROM stage AS T1 WHERE T1.id = \"HsapDv:0000089\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "302_1",
    "user": "gpt-3",
    "question": "How many disease mutation site annotations are there for the disease mutation with an ID of 86991?",
    "query": "SELECT count(*) FROM disease_mutation_site_annotation AS T1 WHERE T1.disease_mutation_id = 86991"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "302_2",
    "user": "gpt-3",
    "question": "How many disease mutation site annotations are associated with the disease mutation ID of 86991?",
    "query": "SELECT count(*) FROM disease_mutation_site_annotation AS T1 WHERE T1.disease_mutation_id = 86991"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "303_1",
    "user": "gpt-3",
    "question": "How many entries are there in the healthy expression table where the call quality is \"SILVER\"?",
    "query": "SELECT count(*) FROM healthy_expression AS T1 WHERE T1.call_quality = \"SILVER\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "303_2",
    "user": "gpt-3",
    "question": "How many entries are there in the table of healthy expressions that have a call quality of \"SILVER\"?",
    "query": "SELECT count(*) FROM healthy_expression AS T1 WHERE T1.call_quality = \"SILVER\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "304_1",
    "user": "gpt-3",
    "question": "How many biomarker FDA test trials have the test trade name \"PATH VYSION HER-2 DNA PROBE KIT\"?",
    "query": "SELECT count(*) FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name = \"PATH VYSION HER-2 DNA PROBE KIT\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "304_2",
    "user": "gpt-3",
    "question": "How many biomarker FDA test trials have a test trade name of \"PATH VYSION HER-2 DNA PROBE KIT\"?",
    "query": "SELECT count(*) FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name = \"PATH VYSION HER-2 DNA PROBE KIT\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "305_1",
    "user": "gpt-3",
    "question": "How many entries are in the \"disease\" table with an ID of 11054?",
    "query": "SELECT count(*) FROM disease AS T1 WHERE T1.id = 11054"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "305_2",
    "user": "gpt-3",
    "question": "How many entries are there in the disease table with an ID of 11054?",
    "query": "SELECT count(*) FROM disease AS T1 WHERE T1.id = 11054"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "306_1",
    "user": "gpt-3",
    "question": "How many biomarkers in the FDA test use database have an actual use of \"prognostic predictive\"?",
    "query": "SELECT count(*) FROM biomarker_fda_test_use AS T1 WHERE T1.actual_use = \"prognostic predictive\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "306_2",
    "user": "gpt-3",
    "question": "How many biomarkers in the FDA test database have an actual use listed as \"prognostic predictive\"?",
    "query": "SELECT count(*) FROM biomarker_fda_test_use AS T1 WHERE T1.actual_use = \"prognostic predictive\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "307_1",
    "user": "gpt-3",
    "question": "How many biomarker NCIt terms are associated with the FDA ID \"FDA000244\"?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.biomarker_fda_id = \"FDA000244\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "307_2",
    "user": "gpt-3",
    "question": "How many biomarker-NCIt term associations are there for the FDA biomarker with ID \"FDA000244\"?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.biomarker_fda_id = \"FDA000244\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "308_1",
    "user": "gpt-3",
    "question": "How many biomarkers are associated with the FDA drug with the ID \"FDA000041\"?",
    "query": "SELECT count(*) FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000041\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "308_2",
    "user": "gpt-3",
    "question": "How many biomarker-FDA-drug entries have a biomarker-FDA ID of \"FDA000041\"?",
    "query": "SELECT count(*) FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000041\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "309_1",
    "user": "gpt-3",
    "question": "How many anatomical entities are there where the name is \"superior frontal gyrus\"?",
    "query": "SELECT count(*) FROM anatomical_entity AS T1 WHERE T1.name = \"superior frontal gyrus\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "309_2",
    "user": "gpt-3",
    "question": "How many anatomical entities are there with the name \"superior frontal gyrus\"?",
    "query": "SELECT count(*) FROM anatomical_entity AS T1 WHERE T1.name = \"superior frontal gyrus\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "310_1",
    "user": "gpt-3",
    "question": "How many entries are there in the healthy expression table where the call quality is \"GOLD\"?",
    "query": "SELECT count(*) FROM healthy_expression AS T1 WHERE T1.call_quality = \"GOLD\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "310_2",
    "user": "gpt-3",
    "question": "How many entries are there in the table of healthy expression where the call quality is \"GOLD\"?",
    "query": "SELECT count(*) FROM healthy_expression AS T1 WHERE T1.call_quality = \"GOLD\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "311_1",
    "user": "gpt-3",
    "question": "How many instances are there in the cancer tissue table where the DOID is 5041?",
    "query": "SELECT count(*) FROM cancer_tissue AS T1 WHERE T1.doid = 5041"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "311_2",
    "user": "gpt-3",
    "question": "How many records are in the cancer tissue table where the disease ID is 5041?",
    "query": "SELECT count(*) FROM cancer_tissue AS T1 WHERE T1.doid = 5041"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "312_1",
    "user": "gpt-3",
    "question": "How many entries are in the healthy expression database with an expression rank score of 93.30?",
    "query": "SELECT count(*) FROM healthy_expression AS T1 WHERE T1.expression_rank_score = 93.30"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "312_2",
    "user": "gpt-3",
    "question": "How many entries are in the table \"healthy_expression\" where the expression rank score is 93.30?",
    "query": "SELECT count(*) FROM healthy_expression AS T1 WHERE T1.expression_rank_score = 93.30"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "313_1",
    "user": "gpt-3",
    "question": "How many rows are in the map_uniprot_canonical_id table where the value of uniprotkb_canonical_ac is \"A0A075B713-1\"?",
    "query": "SELECT count(*) FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_canonical_ac = \"A0A075B713-1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "313_2",
    "user": "gpt-3",
    "question": "How many rows are in the \"map_uniprot_canonical_id\" table where the column \"uniprotkb_canonical_ac\" has the value \"A0A075B713-1\"?",
    "query": "SELECT count(*) FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_canonical_ac = \"A0A075B713-1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "314_1",
    "user": "gpt-3",
    "question": "How many records are there in the FDA biomarker database with the ID \"FDA000182\"?",
    "query": "SELECT count(*) FROM biomarker_fda AS T1 WHERE T1.id = \"FDA000182\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "314_2",
    "user": "gpt-3",
    "question": "How many biomarkers in the FDA database have an ID of \"FDA000182\"?",
    "query": "SELECT count(*) FROM biomarker_fda AS T1 WHERE T1.id = \"FDA000182\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "315_1",
    "user": "gpt-3",
    "question": "How many differential expression records have a statistical significance value of \"Yes\"?",
    "query": "SELECT count(*) FROM differential_expression AS T1 WHERE T1.statistical_significance = \"Yes\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "315_2",
    "user": "gpt-3",
    "question": "How many entries are there in the differential expression table where the statistical significance is labeled as \"Yes\"?",
    "query": "SELECT count(*) FROM differential_expression AS T1 WHERE T1.statistical_significance = \"Yes\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "316_1",
    "user": "gpt-3",
    "question": "How many aliases does the biomarker with an internal ID of \"EDRN00228\" have in the biomarker_alias table?",
    "query": "SELECT count(*) FROM biomarker_alias AS T1 WHERE T1.biomarker_internal_id = \"EDRN00228\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "316_2",
    "user": "gpt-3",
    "question": "How many biomarker aliases are associated with the biomarker with an internal ID of \"EDRN00228\"?",
    "query": "SELECT count(*) FROM biomarker_alias AS T1 WHERE T1.biomarker_internal_id = \"EDRN00228\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "317_1",
    "user": "gpt-3",
    "question": "How many biomarker FDA tests are there where the test manufacturer is Invitrogen Corporation?",
    "query": "SELECT count(*) FROM biomarker_fda_test AS T1 WHERE T1.test_manufacturer = \"INVITROGEN CORPORATION\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "317_2",
    "user": "gpt-3",
    "question": "How many entries are there in the biomarker FDA test table where the test manufacturer is Invitrogen Corporation?",
    "query": "SELECT count(*) FROM biomarker_fda_test AS T1 WHERE T1.test_manufacturer = \"INVITROGEN CORPORATION\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "318_1",
    "user": "gpt-3",
    "question": "How many rows are in the xref_gene_ensembl table where the speciesid is 9606?",
    "query": "SELECT count(*) FROM xref_gene_ensembl AS T1 WHERE T1.speciesid = 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "318_2",
    "user": "gpt-3",
    "question": "How many rows are in the table xref_gene_ensembl for entries with a speciesid of 9606?",
    "query": "SELECT count(*) FROM xref_gene_ensembl AS T1 WHERE T1.speciesid = 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "319_1",
    "user": "gpt-3",
    "question": "How many disease mutation site annotations have an ID of 2041?",
    "query": "SELECT count(*) FROM disease_mutation_site_annotation AS T1 WHERE T1.id = 2041"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "319_2",
    "user": "gpt-3",
    "question": "How many rows are in the table \"disease_mutation_site_annotation\" where the ID is equal to 2041?",
    "query": "SELECT count(*) FROM disease_mutation_site_annotation AS T1 WHERE T1.id = 2041"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "320_1",
    "user": "gpt-3",
    "question": "How many biomarker-drug pairs are there in the FDA database for biomarker \"FDA000118\"?",
    "query": "SELECT count(*) FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000118\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "320_2",
    "user": "gpt-3",
    "question": "How many biomarkers have associated FDA drugs with an FDA ID of \"FDA000118\"?",
    "query": "SELECT count(*) FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000118\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "321_1",
    "user": "gpt-3",
    "question": "How many protein-disease-mutation mappings exist for the UniProtKB accession code F2Z2N8?",
    "query": "SELECT count(*) FROM map_protein_disease_mutation AS T1 WHERE T1.uniprotkb_ac = \"F2Z2N8\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "321_2",
    "user": "gpt-3",
    "question": "How many records are there in the map_protein_disease_mutation table where the uniprotkb_ac column is equal to \"F2Z2N8\"?",
    "query": "SELECT count(*) FROM map_protein_disease_mutation AS T1 WHERE T1.uniprotkb_ac = \"F2Z2N8\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "322_1",
    "user": "gpt-3",
    "question": "How many biomarker-fda-drug pairs are there with a biomarker fda id of \"FDA000121\"?",
    "query": "SELECT count(*) FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000121\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "322_2",
    "user": "gpt-3",
    "question": "How many biomarker-fda-drug pairs have a biomarker fda id of \"FDA000121\"?",
    "query": "SELECT count(*) FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000121\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "323_1",
    "user": "gpt-3",
    "question": "How many healthy expressions are there in the \"HsapDv:0000095\" developmental stage of the uberon development ontology?",
    "query": "SELECT count(*) FROM healthy_expression AS T1 WHERE T1.uberon_developmental_id = \"HsapDv:0000095\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "323_2",
    "user": "gpt-3",
    "question": "How many records are there in the healthy_expression table with the uberon_developmental_id equal to \"HsapDv:0000095\"?",
    "query": "SELECT count(*) FROM healthy_expression AS T1 WHERE T1.uberon_developmental_id = \"HsapDv:0000095\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "324_1",
    "user": "gpt-3",
    "question": "How many biomarkers in the FDA database have a NCIt term associated with the \"ANLN Gene\"?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"ANLN Gene\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "324_2",
    "user": "gpt-3",
    "question": "How many biomarkers in the FDA's National Cancer Institute Thesaurus have the term \"ANLN Gene\" as their NCIt designation?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"ANLN Gene\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "325_1",
    "user": "gpt-3",
    "question": "How many biomarker FDA test uses have a test submission of \"K062762\"?",
    "query": "SELECT count(*) FROM biomarker_fda_test_use AS T1 WHERE T1.test_submission = \"K062762\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "325_2",
    "user": "gpt-3",
    "question": "How many biomarkers have been submitted for FDA testing under the test submission number \"K062762\"?",
    "query": "SELECT count(*) FROM biomarker_fda_test_use AS T1 WHERE T1.test_submission = \"K062762\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "326_1",
    "user": "gpt-3",
    "question": "How many disease mutations have an alternate nucleotide of \"T\"?",
    "query": "SELECT count(*) FROM disease_mutation AS T1 WHERE T1.alt_nt = \"T\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "326_2",
    "user": "gpt-3",
    "question": "How many records are there in the table \"disease_mutation\" where the \"alt_nt\" column is equal to \"T\"?",
    "query": "SELECT count(*) FROM disease_mutation AS T1 WHERE T1.alt_nt = \"T\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "327_1",
    "user": "gpt-3",
    "question": "How many disease mutation articles are associated with the disease mutation ID 81693?",
    "query": "SELECT count(*) FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id = 81693"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "327_2",
    "user": "gpt-3",
    "question": "Count the number of articles in which the disease mutation with ID 81693 is mentioned in the database \"disease_mutation_article\".",
    "query": "SELECT count(*) FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id = 81693"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "328_1",
    "user": "gpt-3",
    "question": "How many biomarkers are there in the EDRN database with a phase of \"Two\"?",
    "query": "SELECT count(*) FROM biomarker_edrn AS T1 WHERE T1.phase = \"Two\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "328_2",
    "user": "gpt-3",
    "question": "How many biomarkers are present in the EDRN database that have a phase of \"Two\"?",
    "query": "SELECT count(*) FROM biomarker_edrn AS T1 WHERE T1.phase = \"Two\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "329_1",
    "user": "gpt-3",
    "question": "How many rows are there in the disease table where the name is \"blastoma\"?",
    "query": "SELECT count(*) FROM disease AS T1 WHERE T1.name = \"blastoma\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "329_2",
    "user": "gpt-3",
    "question": "How many entries are there in the disease table where the name is \"blastoma\"?",
    "query": "SELECT count(*) FROM disease AS T1 WHERE T1.name = \"blastoma\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "330_1",
    "user": "gpt-3",
    "question": "How many rows are there in the \"differential_expression\" table where the value for \"subjects_nocoverage\" is equal to 82?",
    "query": "SELECT count(*) FROM differential_expression AS T1 WHERE T1.subjects_nocoverage = 82"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "330_2",
    "user": "gpt-3",
    "question": "How many rows are in the differential_expression table where the value for subjects_nocoverage is equal to 82?",
    "query": "SELECT count(*) FROM differential_expression AS T1 WHERE T1.subjects_nocoverage = 82"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "331_1",
    "user": "gpt-3",
    "question": "How many biomarkers have a description that matches \"From NCBI Gene: This gene encodes a protein that binds to the C-terminus of adenovirus E1A proteins. This phosphoprotein is a transcriptional repressor and may play a role during cellular proliferation. This protein and the product of a second closely related gene, CTBP2, can dimerize. Both proteins can also interact with a polycomb group protein complex which participates in regulation of gene expression during development",
    "query": "SELECT count(*) FROM biomarker AS T1 WHERE T1.biomarker_description = \"From NCBI Gene: This gene encodes a protein that binds to the C-terminus of adenovirus E1A proteins. This phosphoprotein is a transcriptional repressor and may play a role during cellular proliferation. This protein and the product of a second closely related gene, CTBP2, can dimerize. Both proteins can also interact with a polycomb group protein complex which participates in regulation of gene expression during development. Alternative splicing of transcripts from this gene results in multiple transcript variants. [provided by RefSeq, Jul 2008]\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "331_2",
    "user": "gpt-3",
    "question": "How many biomarkers have a description that is equivalent to \"From NCBI Gene: This gene encodes a protein that binds to the C-terminus of adenovirus E1A proteins. This phosphoprotein is a transcriptional repressor and may play a role during cellular proliferation. This protein and the product of a second closely related gene, CTBP2, can dimerize. Both proteins can also interact with a polycomb group protein complex which participates in regulation of gene expression",
    "query": "SELECT count(*) FROM biomarker AS T1 WHERE T1.biomarker_description = \"From NCBI Gene: This gene encodes a protein that binds to the C-terminus of adenovirus E1A proteins. This phosphoprotein is a transcriptional repressor and may play a role during cellular proliferation. This protein and the product of a second closely related gene, CTBP2, can dimerize. Both proteins can also interact with a polycomb group protein complex which participates in regulation of gene expression during development. Alternative splicing of transcripts from this gene results in multiple transcript variants. [provided by RefSeq, Jul 2008]\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "332_1",
    "user": "gpt-3",
    "question": "How many biomarker articles have a PMID of \"15059887\"?",
    "query": "SELECT count(*) FROM biomarker_article AS T1 WHERE T1.pmid = \"15059887\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "332_2",
    "user": "gpt-3",
    "question": "How many biomarker articles have a PMID of 15059887?",
    "query": "SELECT count(*) FROM biomarker_article AS T1 WHERE T1.pmid = \"15059887\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "333_1",
    "user": "gpt-3",
    "question": "How many biomarkers from the FDA have a test trade name of \"VENTANA ANTI-PMS2 (A16-4) MOUSE MONOCLONAL PRIMARY ANTIBODY\"?",
    "query": "SELECT count(*) FROM biomarker_fda AS T1 WHERE T1.test_trade_name = \"VENTANA ANTI-PMS2 (A16-4) MOUSE MONOCLONAL PRIMARY ANTIBODY\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "333_2",
    "user": "gpt-3",
    "question": "How many entries are there in the \"biomarker_fda\" table where the test trade name is \"VENTANA ANTI-PMS2 (A16-4) MOUSE MONOCLONAL PRIMARY ANTIBODY\"?",
    "query": "SELECT count(*) FROM biomarker_fda AS T1 WHERE T1.test_trade_name = \"VENTANA ANTI-PMS2 (A16-4) MOUSE MONOCLONAL PRIMARY ANTIBODY\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "334_1",
    "user": "gpt-3",
    "question": "How many protein-disease-mutation mappings have a UniProtKB accession number of \"A6NI61\"?",
    "query": "SELECT count(*) FROM map_protein_disease_mutation AS T1 WHERE T1.uniprotkb_ac = \"A6NI61\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "334_2",
    "user": "gpt-3",
    "question": "How many rows are in the table \"map_protein_disease_mutation\" where the value of \"uniprotkb_ac\" is equal to \"A6NI61\"?",
    "query": "SELECT count(*) FROM map_protein_disease_mutation AS T1 WHERE T1.uniprotkb_ac = \"A6NI61\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "335_1",
    "user": "gpt-3",
    "question": "How many biomarkers are there that are classified as a panel test?",
    "query": "SELECT count(*) FROM biomarker AS T1 WHERE T1.test_is_a_panel = True"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "335_2",
    "user": "gpt-3",
    "question": "How many biomarkers are classified as a panel test?",
    "query": "SELECT count(*) FROM biomarker AS T1 WHERE T1.test_is_a_panel = True"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "336_1",
    "user": "gpt-3",
    "question": "How many biomarker FDA tests are there by the manufacturer Ventana Medical Systems?",
    "query": "SELECT count(*) FROM biomarker_fda_test AS T1 WHERE T1.test_manufacturer = \"Ventana Medical Systems\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "336_2",
    "user": "gpt-3",
    "question": "How many biomarker tests from Ventana Medical Systems are in the FDA database?",
    "query": "SELECT count(*) FROM biomarker_fda_test AS T1 WHERE T1.test_manufacturer = \"Ventana Medical Systems\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "337_1",
    "user": "gpt-3",
    "question": "How many entries are there in the \"species\" table where the \"speciescommonname\" column is equal to \"mouse\"?",
    "query": "SELECT count(*) FROM species AS T1 WHERE T1.speciescommonname = \"mouse\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "337_2",
    "user": "gpt-3",
    "question": "How many species have a common name of \"mouse\"?",
    "query": "SELECT count(*) FROM species AS T1 WHERE T1.speciescommonname = \"mouse\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "338_1",
    "user": "gpt-3",
    "question": "How many entries are there in the disease mutation impact prediction table where the site prediction is \"unknown\"?",
    "query": "SELECT count(*) FROM disease_mutation_impact_prediction AS T1 WHERE T1.site_prediction = \"unknown\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "338_2",
    "user": "gpt-3",
    "question": "How many entries are there in the disease_mutation_impact_prediction table where the site prediction is unknown?",
    "query": "SELECT count(*) FROM disease_mutation_impact_prediction AS T1 WHERE T1.site_prediction = \"unknown\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "339_1",
    "user": "gpt-3",
    "question": "How many disease mutations are there where the reference amino acid is \"T\"?",
    "query": "SELECT count(*) FROM disease_mutation AS T1 WHERE T1.ref_aa = \"T\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "339_2",
    "user": "gpt-3",
    "question": "How many disease mutations have a reference amino acid of \"T\"?",
    "query": "SELECT count(*) FROM disease_mutation AS T1 WHERE T1.ref_aa = \"T\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "340_1",
    "user": "gpt-3",
    "question": "How many anatomical entities have a description that matches \"Part of the central nervous system located in the vertebral canal continuous with and caudal to the brain; demarcated from brain by plane of foramen magnum. It is composed of an inner core of gray matter in which nerve cells predominate, and an outer layer of white matter in which myelinated nerve fibers predominate, and surrounds the central canal. (CUMBO)\"?",
    "query": "SELECT count(*) FROM anatomical_entity AS T1 WHERE T1.description = \"Part of the central nervous system located in the vertebral canal continuous with and caudal to the brain; demarcated from brain by plane of foramen magnum. It is composed of an inner core of gray matter in which nerve cells predominate, and an outer layer of white matter in which myelinated nerve fibers predominate, and surrounds the central canal. (CUMBO)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "340_2",
    "user": "gpt-3",
    "question": "How many anatomical entities have a description that includes \"Part of the central nervous system located in the vertebral canal continuous with and caudal to the brain; demarcated from brain by plane of foramen magnum. It is composed of an inner core of gray matter in which nerve cells predominate, and an outer layer of white matter in which myelinated nerve fibers predominate, and surrounds the central canal. (CUMBO)\"?",
    "query": "SELECT count(*) FROM anatomical_entity AS T1 WHERE T1.description = \"Part of the central nervous system located in the vertebral canal continuous with and caudal to the brain; demarcated from brain by plane of foramen magnum. It is composed of an inner core of gray matter in which nerve cells predominate, and an outer layer of white matter in which myelinated nerve fibers predominate, and surrounds the central canal. (CUMBO)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "341_1",
    "user": "gpt-3",
    "question": "How many protein-disease-mutation mappings have the UniProtKB accession number \"A0A0C4DH35\"?",
    "query": "SELECT count(*) FROM map_protein_disease_mutation AS T1 WHERE T1.uniprotkb_ac = \"A0A0C4DH35\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "341_2",
    "user": "gpt-3",
    "question": "How many mutations are associated with the UniProtKB accession number A0A0C4DH35 in the map_protein_disease_mutation table?",
    "query": "SELECT count(*) FROM map_protein_disease_mutation AS T1 WHERE T1.uniprotkb_ac = \"A0A0C4DH35\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "342_1",
    "user": "gpt-3",
    "question": "How many disease-mutation pairs have a reference amino acid of \"R\"?",
    "query": "SELECT count(*) FROM disease_mutation AS T1 WHERE T1.ref_aa = \"R\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "342_2",
    "user": "gpt-3",
    "question": "How many disease-mutation entries have the reference amino acid \"R\"?",
    "query": "SELECT count(*) FROM disease_mutation AS T1 WHERE T1.ref_aa = \"R\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "343_1",
    "user": "gpt-3",
    "question": "How many entries in the database for disease-mutation impact prediction have a site prediction of \"---|no change\"?",
    "query": "SELECT count(*) FROM disease_mutation_impact_prediction AS T1 WHERE T1.site_prediction = \"---|no change\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "343_2",
    "user": "gpt-3",
    "question": "How many disease-mutation impact predictions have a site prediction of \"---|no change\"?",
    "query": "SELECT count(*) FROM disease_mutation_impact_prediction AS T1 WHERE T1.site_prediction = \"---|no change\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "344_1",
    "user": "gpt-3",
    "question": "How many records are in the \"disease\" table where the name is \"ovarian cancer\"?",
    "query": "SELECT count(*) FROM disease AS T1 WHERE T1.name = \"ovarian cancer\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "344_2",
    "user": "gpt-3",
    "question": "How many rows are in the disease table where the name is \"ovarian cancer\"?",
    "query": "SELECT count(*) FROM disease AS T1 WHERE T1.name = \"ovarian cancer\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "345_1",
    "user": "gpt-3",
    "question": "How many rows are there in the \"healthy_expression\" table where the ensembl_gene_id is \"ENSG00000010810\"?",
    "query": "SELECT count(*) FROM healthy_expression AS T1 WHERE T1.ensembl_gene_id = \"ENSG00000010810\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "345_2",
    "user": "gpt-3",
    "question": "How many rows are there in the healthy_expression table where the ensembl_gene_id is \"ENSG00000010810\"?",
    "query": "SELECT count(*) FROM healthy_expression AS T1 WHERE T1.ensembl_gene_id = \"ENSG00000010810\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "346_1",
    "user": "gpt-3",
    "question": "How many records are in the disease mutation site annotation table where the feature key is \"cross-link\"?",
    "query": "SELECT count(*) FROM disease_mutation_site_annotation AS T1 WHERE T1.feature_key = \"cross-link\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "346_2",
    "user": "gpt-3",
    "question": "How many disease-mutation site annotations have a feature key of \"cross-link\"?",
    "query": "SELECT count(*) FROM disease_mutation_site_annotation AS T1 WHERE T1.feature_key = \"cross-link\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "347_1",
    "user": "gpt-3",
    "question": "How many entries are there in the differential expression table where the number of subjects with decreased expression is equal to 63?",
    "query": "SELECT count(*) FROM differential_expression AS T1 WHERE T1.subjects_down = 63"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "347_2",
    "user": "gpt-3",
    "question": "How many rows are in the table \"differential_expression\" where the column \"subjects_down\" is equal to 63?",
    "query": "SELECT count(*) FROM differential_expression AS T1 WHERE T1.subjects_down = 63"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "348_1",
    "user": "gpt-3",
    "question": "How many records in the map_uniprot_canonical_id table have a value of \"A1L0T0\" for the uniprotkb_ac column?",
    "query": "SELECT count(*) FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_ac = \"A1L0T0\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "348_2",
    "user": "gpt-3",
    "question": "How many rows are in the table \"map_uniprot_canonical_id\" where the column \"uniprotkb_ac\" has the value \"A1L0T0\"?",
    "query": "SELECT count(*) FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_ac = \"A1L0T0\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "349_1",
    "user": "gpt-3",
    "question": "How many entries are there in the disease mutation impact prediction table for the tool \"netnglyc\"?",
    "query": "SELECT count(*) FROM disease_mutation_impact_prediction AS T1 WHERE T1.tool = \"netnglyc\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "349_2",
    "user": "gpt-3",
    "question": "How many entries are there in the disease mutation impact prediction table that have \"netnglyc\" listed as the tool used?",
    "query": "SELECT count(*) FROM disease_mutation_impact_prediction AS T1 WHERE T1.tool = \"netnglyc\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "350_1",
    "user": "gpt-3",
    "question": "How many biomarker FDA test uses have an ID of 11?",
    "query": "SELECT count(*) FROM biomarker_fda_test_use AS T1 WHERE T1.id = 11"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "350_2",
    "user": "gpt-3",
    "question": "How many biomarker test uses are associated with the FDA and have an ID of 11?",
    "query": "SELECT count(*) FROM biomarker_fda_test_use AS T1 WHERE T1.id = 11"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "351_1",
    "user": "gpt-3",
    "question": "How many biomarker-drug pairs are there in the FDA database with a biomarker ID of \"FDA000272\"?",
    "query": "SELECT count(*) FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000272\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "351_2",
    "user": "gpt-3",
    "question": "How many biomarker-FDA drug pairs are there in the database with the biomarker-FDA ID \"FDA000272\"?",
    "query": "SELECT count(*) FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000272\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "352_1",
    "user": "gpt-3",
    "question": "How many records are there in the table \"map_uniprot_canonical_id\" where the value of column \"uniprotkb_canonical_ac\" is equal to \"A1KXE4-1\"?",
    "query": "SELECT count(*) FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_canonical_ac = \"A1KXE4-1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "352_2",
    "user": "gpt-3",
    "question": "How many rows are there in the map_uniprot_canonical_id table where the uniprotkb_canonical_ac column has the value \"A1KXE4-1\"?",
    "query": "SELECT count(*) FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_canonical_ac = \"A1KXE4-1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "353_1",
    "user": "gpt-3",
    "question": "How many biomarker and NCIt term entries are there in the database for the gene \"Anillin Actin Binding Protein\"?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"Anillin Actin Binding Protein Gene\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "353_2",
    "user": "gpt-3",
    "question": "How many records are there in the \"biomarker_fda_ncit_term\" table where the NCIt biomarker is \"Anillin Actin Binding Protein Gene\"?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"Anillin Actin Binding Protein Gene\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "354_1",
    "user": "gpt-3",
    "question": "How many disease mutations are there in the chromosome with an ID of \"3\"?",
    "query": "SELECT count(*) FROM disease_mutation AS T1 WHERE T1.chromosome_id = \"3\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "354_2",
    "user": "gpt-3",
    "question": "How many disease mutations are associated with the chromosome ID of 3?",
    "query": "SELECT count(*) FROM disease_mutation AS T1 WHERE T1.chromosome_id = \"3\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "355_1",
    "user": "gpt-3",
    "question": "How many biomarker FDA test trials have a test trial ID of \"NCT02042379\"?",
    "query": "SELECT count(*) FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trial_id = \"NCT02042379\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "355_2",
    "user": "gpt-3",
    "question": "How many records are in the biomarker FDA test trial table for the test trial with an ID of \"NCT02042379\"?",
    "query": "SELECT count(*) FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trial_id = \"NCT02042379\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "356_1",
    "user": "gpt-3",
    "question": "How many protein-disease-mutation mappings are associated with the peptide with an ID of \"ENSP00000071281\"?",
    "query": "SELECT count(*) FROM map_protein_disease_mutation AS T1 WHERE T1.peptide_id = \"ENSP00000071281\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "356_2",
    "user": "gpt-3",
    "question": "How many rows are in the table \"map_protein_disease_mutation\" where the peptide_id is equal to \"ENSP00000071281\"?",
    "query": "SELECT count(*) FROM map_protein_disease_mutation AS T1 WHERE T1.peptide_id = \"ENSP00000071281\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "357_1",
    "user": "gpt-3",
    "question": "How many biomarker entries have a test submission number of \"K062740\" in the FDA database?",
    "query": "SELECT count(*) FROM biomarker_fda AS T1 WHERE T1.test_submission = \"K062740\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "357_2",
    "user": "gpt-3",
    "question": "How many biomarker submissions are associated with the test submission number \"K062740\" in the FDA biomarker database?",
    "query": "SELECT count(*) FROM biomarker_fda AS T1 WHERE T1.test_submission = \"K062740\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "358_1",
    "user": "gpt-3",
    "question": "How many biomarker FDA and NCIT terms are there for the biomarker with ID \"FDA000248\"?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.biomarker_fda_id = \"FDA000248\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "358_2",
    "user": "gpt-3",
    "question": "How many biomarker NCIt terms are associated with the FDA ID \"FDA000248\"?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.biomarker_fda_id = \"FDA000248\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "359_1",
    "user": "gpt-3",
    "question": "How many rows are there in the EDRN biomarker table where the ID is \"EDRN00255\"?",
    "query": "SELECT count(*) FROM biomarker_edrn AS T1 WHERE T1.id = \"EDRN00255\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "359_2",
    "user": "gpt-3",
    "question": "How many biomarker entries are there in the EDRN database with the ID \"EDRN00255\"?",
    "query": "SELECT count(*) FROM biomarker_edrn AS T1 WHERE T1.id = \"EDRN00255\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "360_1",
    "user": "gpt-3",
    "question": "How many biomarkers in the FDA biomarker database have an ID of \"FDA000301\"?",
    "query": "SELECT count(*) FROM biomarker_fda AS T1 WHERE T1.id = \"FDA000301\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "360_2",
    "user": "gpt-3",
    "question": "How many biomarker entries are there in the FDA database with an ID of \"FDA000301\"?",
    "query": "SELECT count(*) FROM biomarker_fda AS T1 WHERE T1.id = \"FDA000301\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "361_1",
    "user": "gpt-3",
    "question": "How many rows are there in the xref_gene_ensembl table where the speciesid is 10090?",
    "query": "SELECT count(*) FROM xref_gene_ensembl AS T1 WHERE T1.speciesid = 10090"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "361_2",
    "user": "gpt-3",
    "question": "Count the number of rows in the xref_gene_ensembl table where the speciesid column is equal to 10090.",
    "query": "SELECT count(*) FROM xref_gene_ensembl AS T1 WHERE T1.speciesid = 10090"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "362_1",
    "user": "gpt-3",
    "question": "How many biomarkers in the FDA test have clinical use as evidence for adoption?",
    "query": "SELECT count(*) FROM biomarker_fda_test AS T1 WHERE T1.test_adoption_evidence = \"clinical use\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "362_2",
    "user": "gpt-3",
    "question": "How many biomarker FDA tests have clinical use as evidence for their adoption?",
    "query": "SELECT count(*) FROM biomarker_fda_test AS T1 WHERE T1.test_adoption_evidence = \"clinical use\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "363_1",
    "user": "gpt-3",
    "question": "How many biomarker articles have a PMID of \"20132413\"?",
    "query": "SELECT count(*) FROM biomarker_article AS T1 WHERE T1.pmid = \"20132413\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "363_2",
    "user": "gpt-3",
    "question": "How many articles in the biomarker database have a PMID number of \"20132413\"?",
    "query": "SELECT count(*) FROM biomarker_article AS T1 WHERE T1.pmid = \"20132413\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "364_1",
    "user": "gpt-3",
    "question": "How many biomarker FDA tests have a test study design of \"ProObs\"?",
    "query": "SELECT count(*) FROM biomarker_fda_test AS T1 WHERE T1.test_study_design = \"ProObs\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "364_2",
    "user": "gpt-3",
    "question": "How many biomarkers have a test study design of \"ProObs\" in the FDA's biomarker testing database?",
    "query": "SELECT count(*) FROM biomarker_fda_test AS T1 WHERE T1.test_study_design = \"ProObs\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "365_1",
    "user": "gpt-3",
    "question": "\"How many biomarkers have the alias '5'?\"",
    "query": "SELECT count(*) FROM biomarker_alias AS T1 WHERE T1.alias = \"5&apos\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "365_2",
    "user": "gpt-3",
    "question": "How many biomarker aliases are there where the alias is equal to \"5&apos\"?",
    "query": "SELECT count(*) FROM biomarker_alias AS T1 WHERE T1.alias = \"5&apos\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "366_1",
    "user": "gpt-3",
    "question": "How many biomarker aliases are there that have the alias \"A15 homolog\"?",
    "query": "SELECT count(*) FROM biomarker_alias AS T1 WHERE T1.alias = \"A15 homolog\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "366_2",
    "user": "gpt-3",
    "question": "How many biomarker aliases are there in the database with the alias \"A15 homolog\"?",
    "query": "SELECT count(*) FROM biomarker_alias AS T1 WHERE T1.alias = \"A15 homolog\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "367_1",
    "user": "gpt-3",
    "question": "How many biomarker FDA test trials have a test submission number of \"K062706\"?",
    "query": "SELECT count(*) FROM biomarker_fda_test_trial AS T1 WHERE T1.test_submission = \"K062706\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "367_2",
    "user": "gpt-3",
    "question": "How many test submissions are in the biomarker FDA test trial table with the code \"K062706\"?",
    "query": "SELECT count(*) FROM biomarker_fda_test_trial AS T1 WHERE T1.test_submission = \"K062706\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "368_1",
    "user": "gpt-3",
    "question": "How many biomarker-fda-drug records are associated with the FDA000351 biomarker fda id?",
    "query": "SELECT count(*) FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000351\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "368_2",
    "user": "gpt-3",
    "question": "How many records are there in the biomarker_fda_drug table where the biomarker_fda_id is \"FDA000351\"?",
    "query": "SELECT count(*) FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_fda_id = \"FDA000351\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "369_1",
    "user": "gpt-3",
    "question": "How many disease mutation articles have a PMID of 20112369?",
    "query": "SELECT count(*) FROM disease_mutation_article AS T1 WHERE T1.pmid = 20112369"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "369_2",
    "user": "gpt-3",
    "question": "How many records are there in the disease_mutation_article table where the PMID is 20112369?",
    "query": "SELECT count(*) FROM disease_mutation_article AS T1 WHERE T1.pmid = 20112369"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "370_1",
    "user": "gpt-3",
    "question": "How many biomarker articles are there with a PMID of \"19887610\"?",
    "query": "SELECT count(*) FROM biomarker_article AS T1 WHERE T1.pmid = \"19887610\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "370_2",
    "user": "gpt-3",
    "question": "How many biomarker articles have a PMID value of \"19887610\"?",
    "query": "SELECT count(*) FROM biomarker_article AS T1 WHERE T1.pmid = \"19887610\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "371_1",
    "user": "gpt-3",
    "question": "How many biomarker terms from the FDA and NCIT databases correspond to the biomarker \"MKI67\"?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"MKI67\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "371_2",
    "user": "gpt-3",
    "question": "How many biomarkers are associated with the NCIt term \"MKI67\" in the FDA database?",
    "query": "SELECT count(*) FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker = \"MKI67\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "372_1",
    "user": "gpt-3",
    "question": "How many biomarker FDA test uses have the test trade name \"PATH VYSION HER-2 DNA PROBE KIT\"?",
    "query": "SELECT count(*) FROM biomarker_fda_test_use AS T1 WHERE T1.test_trade_name = \"PATH VYSION HER-2 DNA PROBE KIT\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "372_2",
    "user": "gpt-3",
    "question": "How many biomarker FDA test uses are there where the test trade name is \"PATH VYSION HER-2 DNA PROBE KIT\"?",
    "query": "SELECT count(*) FROM biomarker_fda_test_use AS T1 WHERE T1.test_trade_name = \"PATH VYSION HER-2 DNA PROBE KIT\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "373_1",
    "user": "gpt-3",
    "question": "How many disease mutation articles have a PMID of 23676790?",
    "query": "SELECT count(*) FROM disease_mutation_article AS T1 WHERE T1.pmid = 23676790"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "373_2",
    "user": "gpt-3",
    "question": "How many articles are associated with the disease mutation with PMID 23676790?",
    "query": "SELECT count(*) FROM disease_mutation_article AS T1 WHERE T1.pmid = 23676790"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "374_1",
    "user": "gpt-3",
    "question": "What is the uberon anatomical id for the last disease mutation in the table \"disease_mutation_tissue\"?",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1    ORDER BY T1.disease_mutation_id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "374_2",
    "user": "gpt-3",
    "question": "Get the uberon anatomical ID from the disease_mutation_tissue table, sorted in descending order by the disease_mutation_id column and limit the results to 1.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1    ORDER BY T1.disease_mutation_id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "375_1",
    "user": "gpt-3",
    "question": "Retrieve the origin of the biomarker from the FDA test table, sorted by descending DOID and limited to 1 result.",
    "query": "SELECT T1.biomarker_origin FROM biomarker_fda_test AS T1    ORDER BY T1.doid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "375_2",
    "user": "gpt-3",
    "question": "Retrieve the origin of the biomarker from the latest entry in the FDA test records sorted by disease ID in descending order.",
    "query": "SELECT T1.biomarker_origin FROM biomarker_fda_test AS T1    ORDER BY T1.doid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "376_1",
    "user": "gpt-3",
    "question": "What is the ID of the latest disease mutation impact prediction in the table \"disease_mutation_impact_prediction\", sorted in descending order by the column \"disease_mutation_id\"?",
    "query": "SELECT T1.id FROM disease_mutation_impact_prediction AS T1    ORDER BY T1.disease_mutation_id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "376_2",
    "user": "gpt-3",
    "question": "Find the ID of the most recent disease-mutation impact prediction from the table \"disease_mutation_impact_prediction\" and order it in descending order by its associated disease-mutation ID, with a limit of one result.",
    "query": "SELECT T1.id FROM disease_mutation_impact_prediction AS T1    ORDER BY T1.disease_mutation_id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "377_1",
    "user": "gpt-3",
    "question": "Retrieve the most recent disease mutation ID from the disease mutation site annotation table, ordered by descending ID and limited to 1 result.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_site_annotation AS T1    ORDER BY T1.id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "377_2",
    "user": "gpt-3",
    "question": "Retrieve the id of the disease mutation site from the disease_mutation_site_annotation table, ordered in descending order by the id column and returning only the last result.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_site_annotation AS T1    ORDER BY T1.id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "378_1",
    "user": "gpt-3",
    "question": "Retrieve the test study design from the latest biomarker FDA test entry in descending order by doid with a limit of one result.",
    "query": "SELECT T1.test_study_design FROM biomarker_fda_test AS T1    ORDER BY T1.doid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "378_2",
    "user": "gpt-3",
    "question": "Get the study design from the most recent biomarker FDA test, ordered by DOID in descending order and limited to one result.",
    "query": "SELECT T1.test_study_design FROM biomarker_fda_test AS T1    ORDER BY T1.doid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "379_1",
    "user": "gpt-3",
    "question": "Show the test submission from the latest FDA biomarker test ordered by the disease ID in descending order, with a limit of 1.",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test AS T1    ORDER BY T1.doid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "379_2",
    "user": "gpt-3",
    "question": "Get the test submission for the latest biomarker FDA test, ordered by its disease ontology ID in descending order, with a limit of one result.",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test AS T1    ORDER BY T1.doid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "380_1",
    "user": "gpt-3",
    "question": "Find the UBeron anatomical ID from the cancer tissue table, ordered by descending DOID and limit the results to one row.",
    "query": "SELECT T1.uberon_anatomical_id FROM cancer_tissue AS T1    ORDER BY T1.doid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "380_2",
    "user": "gpt-3",
    "question": "Show the unique uberon anatomical ID from the cancer tissue table, ordered by descending DOID and limited to one result.",
    "query": "SELECT T1.uberon_anatomical_id FROM cancer_tissue AS T1    ORDER BY T1.doid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "381_1",
    "user": "gpt-3",
    "question": "Find the tool with the highest probability from the disease mutation impact prediction table.",
    "query": "SELECT T1.tool FROM disease_mutation_impact_prediction AS T1    ORDER BY T1.probability DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "381_2",
    "user": "gpt-3",
    "question": "What is the tool with the highest probability in disease mutation impact prediction?",
    "query": "SELECT T1.tool FROM disease_mutation_impact_prediction AS T1    ORDER BY T1.probability DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "382_1",
    "user": "gpt-3",
    "question": "Get the most recent feature key from the disease mutation site annotation table, ordered by disease mutation ID in descending order and limited to 1 result.",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1    ORDER BY T1.disease_mutation_id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "382_2",
    "user": "gpt-3",
    "question": "Retrieve the feature key from the disease mutation site annotation table, sorted in descending order by disease mutation ID and limited to 1 result.",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1    ORDER BY T1.disease_mutation_id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "383_1",
    "user": "gpt-3",
    "question": "\"Get the name of the most recently added disease from the disease table, sorted in descending order by its ID and limit the result to one.\"",
    "query": "SELECT T1.name FROM disease AS T1    ORDER BY T1.id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "383_2",
    "user": "gpt-3",
    "question": "Get the name of the most recently added disease from the \"disease\" table in descending order by ID, with a limit of one result.",
    "query": "SELECT T1.name FROM disease AS T1    ORDER BY T1.id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "384_1",
    "user": "gpt-3",
    "question": "Retrieve the mutation frequency from the most recent record in the table \"disease_mutation\", ordered by ID in descending order, limited to 1 result.",
    "query": "SELECT T1.mutation_freq FROM disease_mutation AS T1    ORDER BY T1.id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "384_2",
    "user": "gpt-3",
    "question": "\"Retrieve the mutation frequency from the most recent entry in the disease_mutation table, ordered by id in descending order, limited to 1.\"",
    "query": "SELECT T1.mutation_freq FROM disease_mutation AS T1    ORDER BY T1.id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "385_1",
    "user": "gpt-3",
    "question": "What is the total number of subjects in the most recent differential expression study, sorted by descending DOID?",
    "query": "SELECT T1.subjects_total FROM differential_expression AS T1    ORDER BY T1.doid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "385_2",
    "user": "gpt-3",
    "question": "Get the total number of subjects in the latest entry of differential expression, sorted by descending DOID and limited to 1 result.",
    "query": "SELECT T1.subjects_total FROM differential_expression AS T1    ORDER BY T1.doid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "386_1",
    "user": "gpt-3",
    "question": "Retrieve the ID of the disease mutation from the article with the highest PMID value.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_article AS T1    ORDER BY T1.pmid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "386_2",
    "user": "gpt-3",
    "question": "Get the disease mutation ID for the most recent article in descending order by PubMed ID from the disease mutation article table.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_article AS T1    ORDER BY T1.pmid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "387_1",
    "user": "gpt-3",
    "question": "What is the approval status of the latest biomarker FDA test in descending order by DOID?",
    "query": "SELECT T1.test_approval_status FROM biomarker_fda_test AS T1    ORDER BY T1.doid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "387_2",
    "user": "gpt-3",
    "question": "Find the approval status of the latest biomarker test in the FDA database, sorted by descending disease ID.",
    "query": "SELECT T1.test_approval_status FROM biomarker_fda_test AS T1    ORDER BY T1.doid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "388_1",
    "user": "gpt-3",
    "question": "\"Retrieve the evidence of adoption for the most extensively tested biomarker from the FDA's database of biomarker tests, ordered by number of genes tested in descending order.\"",
    "query": "SELECT T1.test_adoption_evidence FROM biomarker_fda_test AS T1    ORDER BY T1.test_number_genes DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "388_2",
    "user": "gpt-3",
    "question": "What is the FDA adoption evidence for the test with the highest number of genes in the biomarker_fda_test table?",
    "query": "SELECT T1.test_adoption_evidence FROM biomarker_fda_test AS T1    ORDER BY T1.test_number_genes DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "389_1",
    "user": "gpt-3",
    "question": "Retrieve the peptide position from the disease mutation table, ordered by amino acid position in UniProtKB in descending order, with a limit of one result.",
    "query": "SELECT T1.peptide_pos FROM disease_mutation AS T1    ORDER BY T1.aa_pos_uniprotkb DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "389_2",
    "user": "gpt-3",
    "question": "Get the peptide position from the disease mutation table, ordering by the amino acid position in UniprotKB in descending order and limiting to one result.",
    "query": "SELECT T1.peptide_pos FROM disease_mutation AS T1    ORDER BY T1.aa_pos_uniprotkb DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "390_1",
    "user": "gpt-3",
    "question": "Give me the name of the most recent species in the database, sorted by their ID number.",
    "query": "SELECT T1.species FROM species AS T1    ORDER BY T1.speciesid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "390_2",
    "user": "gpt-3",
    "question": "Get the most recent species name from the list of species in descending order by their ID.",
    "query": "SELECT T1.species FROM species AS T1    ORDER BY T1.speciesid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "391_1",
    "user": "gpt-3",
    "question": "Show the list of subjects that have the most up-regulated differential expression values, sorted in descending order by the number of subjects with down-regulated expression.",
    "query": "SELECT T1.subjects_up FROM differential_expression AS T1    ORDER BY T1.subjects_down DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "391_2",
    "user": "gpt-3",
    "question": "Retrieve the number of subjects with increased expression in the differential expression table, ordering by the number of subjects with decreased expression in descending order and limiting the result to one row.",
    "query": "SELECT T1.subjects_up FROM differential_expression AS T1    ORDER BY T1.subjects_down DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "392_1",
    "user": "gpt-3",
    "question": "\"Retrieve the peptide position from the latest entry in the disease mutation table, ordered by descending ID and limited to one result.\"",
    "query": "SELECT T1.peptide_pos FROM disease_mutation AS T1    ORDER BY T1.id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "392_2",
    "user": "gpt-3",
    "question": "Retrieve the position of the peptide from the most recent disease mutation in descending order.",
    "query": "SELECT T1.peptide_pos FROM disease_mutation AS T1    ORDER BY T1.id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "393_1",
    "user": "gpt-3",
    "question": "What is the approval status of the test with the highest number of genes from the FDA biomarker test database, ordered by descending gene count?",
    "query": "SELECT T1.test_approval_status FROM biomarker_fda_test AS T1    ORDER BY T1.test_number_genes DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "393_2",
    "user": "gpt-3",
    "question": "Find the FDA test approval status for the biomarker with the highest number of genes in descending order.",
    "query": "SELECT T1.test_approval_status FROM biomarker_fda_test AS T1    ORDER BY T1.test_number_genes DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "394_1",
    "user": "gpt-3",
    "question": "Give me the most recent actual use for biomarker FDA test use from the table biomarker_fda_test_use, ordered by descending ID and limit the result to only one.",
    "query": "SELECT T1.actual_use FROM biomarker_fda_test_use AS T1    ORDER BY T1.id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "394_2",
    "user": "gpt-3",
    "question": "What is the most recent actual use from the FDA for biomarker tests in biomarker_fda_test_use, ordered by descending id and limited to 1 result?",
    "query": "SELECT T1.actual_use FROM biomarker_fda_test_use AS T1    ORDER BY T1.id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "395_1",
    "user": "gpt-3",
    "question": "Retrieve the tool used for predicting the impact of disease mutations, ordered by the most recent disease mutation ID and limited to one result.",
    "query": "SELECT T1.tool FROM disease_mutation_impact_prediction AS T1    ORDER BY T1.disease_mutation_id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "395_2",
    "user": "gpt-3",
    "question": "Get the tool used for the most recent disease mutation impact prediction in the table.",
    "query": "SELECT T1.tool FROM disease_mutation_impact_prediction AS T1    ORDER BY T1.disease_mutation_id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "396_1",
    "user": "gpt-3",
    "question": "\"Get the description of the most recent disease mutation site annotation in descending order based on its ID from the disease_mutation_site_annotation table.\"",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1    ORDER BY T1.id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "396_2",
    "user": "gpt-3",
    "question": "Give me the description of the most recent disease mutation site annotation in descending order by its ID.",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1    ORDER BY T1.id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "397_1",
    "user": "gpt-3",
    "question": "What is the last CDS position for disease mutations in the disease_mutation table, ordered by descending id?",
    "query": "SELECT T1.cds_pos FROM disease_mutation AS T1    ORDER BY T1.id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "397_2",
    "user": "gpt-3",
    "question": "What is the coding sequence position of the most recent disease mutation entry in the database?",
    "query": "SELECT T1.cds_pos FROM disease_mutation AS T1    ORDER BY T1.id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "398_1",
    "user": "gpt-3",
    "question": "Get the genus of the most recent species in the \"species\" table, ordered by the \"speciesid\" column in descending order.",
    "query": "SELECT T1.genus FROM species AS T1    ORDER BY T1.speciesid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "398_2",
    "user": "gpt-3",
    "question": "\"Retrieve the genus of the most recently added species from the species table, sorted in descending order by the species ID and limited to only one result.\"",
    "query": "SELECT T1.genus FROM species AS T1    ORDER BY T1.speciesid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "399_1",
    "user": "gpt-3",
    "question": "What is the highest probability disease mutation impact prediction and its corresponding ID in the table \"disease_mutation_impact_prediction\"?",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_impact_prediction AS T1    ORDER BY T1.probability DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "399_2",
    "user": "gpt-3",
    "question": "Find the disease mutation with the highest probability in the impact prediction table, ordered by probability in descending order, and limit the result to one row.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_impact_prediction AS T1    ORDER BY T1.probability DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "400_1",
    "user": "gpt-3",
    "question": "What is the most recent test trade name from the biomarker FDA test use table?",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_use AS T1    ORDER BY T1.id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "400_2",
    "user": "gpt-3",
    "question": "Give me the most recent test trade name from the FDA biomarker test database.",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_use AS T1    ORDER BY T1.id DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "401_1",
    "user": "gpt-3",
    "question": "\"Retrieve the coding sequence position from the disease mutation table, sorted in descending order by mutation frequency and limited to only the highest frequency mutation.\"",
    "query": "SELECT T1.cds_pos FROM disease_mutation AS T1    ORDER BY T1.mutation_freq DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "401_2",
    "user": "gpt-3",
    "question": "\"Retrieve the position of the coding sequence for disease mutations in descending order based on their mutation frequency, limited to only the highest frequency result.\"",
    "query": "SELECT T1.cds_pos FROM disease_mutation AS T1    ORDER BY T1.mutation_freq DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "402_1",
    "user": "gpt-3",
    "question": "Get the call quality from the top ranked healthy expression, ordered by its expression rank score in descending order, limited to just one result.",
    "query": "SELECT T1.call_quality FROM healthy_expression AS T1    ORDER BY T1.expression_rank_score DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "402_2",
    "user": "gpt-3",
    "question": "Find the call quality from the table healthy_expression, ordering by the expression rank score in descending order and selecting only the top result.",
    "query": "SELECT T1.call_quality FROM healthy_expression AS T1    ORDER BY T1.expression_rank_score DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "403_1",
    "user": "gpt-3",
    "question": "\"Get the reference amino acid from the disease mutation table, sorted in descending order by the UniProtKB amino acid position and limited to one result.\"",
    "query": "SELECT T1.ref_aa FROM disease_mutation AS T1    ORDER BY T1.aa_pos_uniprotkb DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "403_2",
    "user": "gpt-3",
    "question": "\"Retrieve the reference amino acid from the disease mutation table, ordering by the amino acid position in UniProtKB in descending order and limiting the result to one row.\"",
    "query": "SELECT T1.ref_aa FROM disease_mutation AS T1    ORDER BY T1.aa_pos_uniprotkb DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "404_1",
    "user": "gpt-3",
    "question": "Retrieve the list of subjects with down-regulated differential expression values from the most recent entry in the database, ordered by DOID code.",
    "query": "SELECT T1.subjects_down FROM differential_expression AS T1    ORDER BY T1.doid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "404_2",
    "user": "gpt-3",
    "question": "\"Retrieve the subjects with down-regulated gene expression from the latest differential expression data, sorted by their associated disease term and limit the results to one record.\"",
    "query": "SELECT T1.subjects_down FROM differential_expression AS T1    ORDER BY T1.doid DESC LIMIT 1"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "405_1",
    "user": "gpt-3",
    "question": "What is the ID of the biomarker from the EDRN database with a title of \"STEAP4\" and a phase of \"One\"?",
    "query": "SELECT T1.id FROM biomarker_edrn AS T1 WHERE T1.biomarker_title = \"STEAP4\" and T1.phase = \"One\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "405_2",
    "user": "gpt-3",
    "question": "Find the ID of the biomarker with the title \"STEAP4\" and a phase of \"One\" in the EDRN database.",
    "query": "SELECT T1.id FROM biomarker_edrn AS T1 WHERE T1.biomarker_title = \"STEAP4\" and T1.phase = \"One\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "406_1",
    "user": "gpt-3",
    "question": "Find the chromosome positions where a disease mutation has a reference amino acid of \"G\" and an alternative nucleotide of \"A\".",
    "query": "SELECT T1.chromosome_pos FROM disease_mutation AS T1 WHERE T1.ref_aa = \"G\" and T1.alt_nt = \"A\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "406_2",
    "user": "gpt-3",
    "question": "Get the chromosome position from the disease mutation table where the reference amino acid is \"G\" and the alternative nucleotide is \"A\".",
    "query": "SELECT T1.chromosome_pos FROM disease_mutation AS T1 WHERE T1.ref_aa = \"G\" and T1.alt_nt = \"A\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "407_1",
    "user": "gpt-3",
    "question": "What is the ID of the anatomical entity that has the name \"prostate gland ventral lobe\" and description \"The supraoptic nucleus (SON) is a nucleus of magnocellular neurosecretory cells in the hypothalamus of the mammalian brain. The nucleus is situated at the base of the brain, adjacent to the optic chiasm.\"?",
    "query": "SELECT T1.id FROM anatomical_entity AS T1 WHERE T1.name = \"prostate gland ventral lobe\" and T1.description = \"The supraoptic nucleus (SON) is a nucleus of magnocellular neurosecretory cells in the hypothalamus of the mammalian brain. The nucleus is situated at the base of the brain, adjacent to the optic chiasm. [WP,unvetted].\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "407_2",
    "user": "gpt-3",
    "question": "Retrieve the ID of the anatomical entity \"prostate gland ventral lobe\" that has the description \"The supraoptic nucleus (SON) is a nucleus of magnocellular neurosecretory cells in the hypothalamus of the mammalian brain. The nucleus is situated at the base of the brain, adjacent to the optic chiasm.\"",
    "query": "SELECT T1.id FROM anatomical_entity AS T1 WHERE T1.name = \"prostate gland ventral lobe\" and T1.description = \"The supraoptic nucleus (SON) is a nucleus of magnocellular neurosecretory cells in the hypothalamus of the mammalian brain. The nucleus is situated at the base of the brain, adjacent to the optic chiasm. [WP,unvetted].\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "408_1",
    "user": "gpt-3",
    "question": "Retrieve the platform method from the FDA biomarker test results for biomarkers with an origin of \"amplification\" and a test manufacturer of \"BIOGENEX LABORATORIES INC.\".",
    "query": "SELECT T1.platform_method FROM biomarker_fda_test AS T1 WHERE T1.biomarker_origin = \"amplification\" and T1.test_manufacturer = \"BIOGENEX LABORATORIES INC.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "408_2",
    "user": "gpt-3",
    "question": "What is the platform method for biomarker FDA testing for amplification that was done by BIOGENEX LABORATORIES INC.?",
    "query": "SELECT T1.platform_method FROM biomarker_fda_test AS T1 WHERE T1.biomarker_origin = \"amplification\" and T1.test_manufacturer = \"BIOGENEX LABORATORIES INC.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "409_1",
    "user": "gpt-3",
    "question": "What is the peptide ID for the mutation associated with uniprotkb AC A6NMZ2 and ensembl transcript ID ENST00000225719 in the map protein disease mutation database?",
    "query": "SELECT T1.peptide_id FROM map_protein_disease_mutation AS T1 WHERE T1.uniprotkb_ac = \"A6NMZ2\" and T1.ensembl_transcript_id = \"ENST00000225719\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "409_2",
    "user": "gpt-3",
    "question": "Get the peptide ID for a mutation in the gene A6NMZ2 from the protein-disease-mutation map, where the UniProtKB accession number is \"A6NMZ2\" and the Ensembl transcript ID is \"ENST00000225719\".",
    "query": "SELECT T1.peptide_id FROM map_protein_disease_mutation AS T1 WHERE T1.uniprotkb_ac = \"A6NMZ2\" and T1.ensembl_transcript_id = \"ENST00000225719\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "410_1",
    "user": "gpt-3",
    "question": "Find the Ensembl gene ID for the gene symbol \"1700101O22Rik\" in the mouse species.",
    "query": "SELECT T1.ensembl_gene_id FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"1700101O22Rik\" and T1.speciesid = 10090"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "410_2",
    "user": "gpt-3",
    "question": "What is the Ensembl gene ID for the gene symbol \"1700101O22Rik\" in the species with ID 10090?",
    "query": "SELECT T1.ensembl_gene_id FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"1700101O22Rik\" and T1.speciesid = 10090"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "411_1",
    "user": "gpt-3",
    "question": "Find the expression level gene relative from healthy expression data for developmental stage \"MmusDv:0000050\" and with an expression rank score of 17.70.",
    "query": "SELECT T1.expression_level_gene_relative FROM healthy_expression AS T1 WHERE T1.uberon_developmental_id = \"MmusDv:0000050\" and T1.expression_rank_score = 17.70"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "411_2",
    "user": "gpt-3",
    "question": "What is the expression level gene relative for healthy tissues where the developmental stage is adult and the expression rank score is 17.70?",
    "query": "SELECT T1.expression_level_gene_relative FROM healthy_expression AS T1 WHERE T1.uberon_developmental_id = \"MmusDv:0000050\" and T1.expression_rank_score = 17.70"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "412_1",
    "user": "gpt-3",
    "question": "Retrieve the test submission for the Progensa PCA3 Assay from the FDA database with ID \"FDA000084\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.test_trade_name = \"PROGENSA PCA3 Assay\" and T1.id = \"FDA000084\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "412_2",
    "user": "gpt-3",
    "question": "Retrieve the test submission from the FDA database for the PROGENSA PCA3 Assay with an ID of \"FDA000084\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.test_trade_name = \"PROGENSA PCA3 Assay\" and T1.id = \"FDA000084\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "413_1",
    "user": "gpt-3",
    "question": "Retrieve the test submission from the biomarker FDA test trial table where the test trade name is \"PATH VYSION HER-2 DNA PROBE KIT\" and the test trial ID is \"NCT02042379\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name = \"PATH VYSION HER-2 DNA PROBE KIT\" and T1.test_trial_id = \"NCT02042379\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "413_2",
    "user": "gpt-3",
    "question": "Retrieve the test submission for the \"PATH VYSION HER-2 DNA PROBE KIT\" from the biomarker FDA test trial where the test trial ID is \"NCT02042379\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name = \"PATH VYSION HER-2 DNA PROBE KIT\" and T1.test_trial_id = \"NCT02042379\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "414_1",
    "user": "gpt-3",
    "question": "Retrieve the Uberon anatomical ID from the EDRN biomarker database for the biomarker with a type of \"Genomic\" and title of \"GGT1\".",
    "query": "SELECT T1.uberon_anatomical_id FROM biomarker_edrn AS T1 WHERE T1.biomarker_type = \"Genomic\" and T1.biomarker_title = \"GGT1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "414_2",
    "user": "gpt-3",
    "question": "Find the Uberon anatomical ID for a genomic biomarker with the title \"GGT1\" in the EDRN database.",
    "query": "SELECT T1.uberon_anatomical_id FROM biomarker_edrn AS T1 WHERE T1.biomarker_type = \"Genomic\" and T1.biomarker_title = \"GGT1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "415_1",
    "user": "gpt-3",
    "question": "What is the histological type of biomarker FDA test in ProObs study design with specimen type Saliva?",
    "query": "SELECT T1.histological_type FROM biomarker_fda_test AS T1 WHERE T1.test_study_design = \"ProObs\" and T1.specimen_type = \"Saliva\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "415_2",
    "user": "gpt-3",
    "question": "What is the histological type for biomarker FDA test when the study design is ProObs and the specimen type is Saliva?",
    "query": "SELECT T1.histological_type FROM biomarker_fda_test AS T1 WHERE T1.test_study_design = \"ProObs\" and T1.specimen_type = \"Saliva\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "416_1",
    "user": "gpt-3",
    "question": "Retrieve the DOID from the differential expression data where there are 57 subjects with no coverage and a p-value of 1.75e-133.",
    "query": "SELECT T1.doid FROM differential_expression AS T1 WHERE T1.subjects_nocoverage = 57 and T1.pvalue = 1.75e-133"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "416_2",
    "user": "gpt-3",
    "question": "Find the Disease Ontology ID for differential expression data where there are 57 subjects with no coverage and a p-value of 1.75e-133.",
    "query": "SELECT T1.doid FROM differential_expression AS T1 WHERE T1.subjects_nocoverage = 57 and T1.pvalue = 1.75e-133"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "417_1",
    "user": "gpt-3",
    "question": "Retrieve the test trial ID from the biomarker FDA test trial table where the test trade name is \"Prosigna Breast Cancer Prognostic Gene Signature Assay\" and the test submission is \"K062742\".",
    "query": "SELECT T1.test_trial_id FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name = \"Prosigna Breast Cancer Prognostic Gene Signature Assay\" and T1.test_submission = \"K062742\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "417_2",
    "user": "gpt-3",
    "question": "Retrieve the test trial ID from the biomarker FDA test trial database where the test trade name is \"Prosigna Breast Cancer Prognostic Gene Signature Assay\" and the test submission is \"K062742\".",
    "query": "SELECT T1.test_trial_id FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name = \"Prosigna Breast Cancer Prognostic Gene Signature Assay\" and T1.test_submission = \"K062742\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "418_1",
    "user": "gpt-3",
    "question": "Retrieve the Ensembl gene ID for the gene with the gene symbol \"2310015D24Rik\" from the xref_gene_ensembl table where the speciesid is 10090.",
    "query": "SELECT T1.ensembl_gene_id FROM xref_gene_ensembl AS T1 WHERE T1.speciesid = 10090 and T1.gene_symbol = \"2310015D24Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "418_2",
    "user": "gpt-3",
    "question": "What is the Ensembl gene ID for the gene symbol \"2310015D24Rik\" in the species 10090?",
    "query": "SELECT T1.ensembl_gene_id FROM xref_gene_ensembl AS T1 WHERE T1.speciesid = 10090 and T1.gene_symbol = \"2310015D24Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "419_1",
    "user": "gpt-3",
    "question": "What is the approved indication for the test trade name \"VENTANA ANTI-MSH2 (G219-1129) MOUSE MONOCLONAL PRIMARY ANTIBODY\" in the biomarker FDA test use database with ID 93?",
    "query": "SELECT T1.approved_indication FROM biomarker_fda_test_use AS T1 WHERE T1.id = 93 and T1.test_trade_name = \"VENTANA ANTI-MSH2 (G219-1129) MOUSE MONOCLONAL PRIMARY ANTIBODY\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "419_2",
    "user": "gpt-3",
    "question": "What is the approved indication for the VENTANA ANTI-MSH2 (G219-1129) MOUSE MONOCLONAL PRIMARY ANTIBODY in the biomarker FDA test use database?",
    "query": "SELECT T1.approved_indication FROM biomarker_fda_test_use AS T1 WHERE T1.id = 93 and T1.test_trade_name = \"VENTANA ANTI-MSH2 (G219-1129) MOUSE MONOCLONAL PRIMARY ANTIBODY\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "420_1",
    "user": "gpt-3",
    "question": "What is the phase of the biomarker \"LY6G6C\" that has a UBERON anatomical ID of \"UBERON:0001264\" in the EDRN biomarker database?",
    "query": "SELECT T1.phase FROM biomarker_edrn AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0001264\" and T1.biomarker_title = \"LY6G6C\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "420_2",
    "user": "gpt-3",
    "question": "What is the phase of the biomarker LY6G6C in EDRN, given that its UBERON anatomical ID is \"UBERON:0001264\"?",
    "query": "SELECT T1.phase FROM biomarker_edrn AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0001264\" and T1.biomarker_title = \"LY6G6C\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "421_1",
    "user": "gpt-3",
    "question": "Retrieve the biomarker title from the Biomarker EDRN table where the phase is \"Two\" and QA state is \"Curated\".",
    "query": "SELECT T1.biomarker_title FROM biomarker_edrn AS T1 WHERE T1.phase = \"Two\" and T1.qa_state = \"Curated\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "421_2",
    "user": "gpt-3",
    "question": "Show me the titles of biomarkers from the database biomarker_edrn that have a phase of \"Two\" and are in a QA state of \"Curated\".",
    "query": "SELECT T1.biomarker_title FROM biomarker_edrn AS T1 WHERE T1.phase = \"Two\" and T1.qa_state = \"Curated\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "422_1",
    "user": "gpt-3",
    "question": "Retrieve the number of subjects that have an expression change direction of \"down\" and 48 subjects with no change from a table called differential_expression.",
    "query": "SELECT T1.subjects_up FROM differential_expression AS T1 WHERE T1.subjects_nochange = 48 and T1.expression_change_direction = \"down\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "422_2",
    "user": "gpt-3",
    "question": "Retrieve the number of subjects that have an expression change direction of \"down\" and a subject count of 48 from the table differential_expression.",
    "query": "SELECT T1.subjects_up FROM differential_expression AS T1 WHERE T1.subjects_nochange = 48 and T1.expression_change_direction = \"down\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "423_1",
    "user": "gpt-3",
    "question": "What is the description of the anatomical entity with ID \"UBERON:0001236\" and name \"urinary bladder urothelium\"?",
    "query": "SELECT T1.description FROM anatomical_entity AS T1 WHERE T1.id = \"UBERON:0001236\" and T1.name = \"urinary bladder urothelium\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "423_2",
    "user": "gpt-3",
    "question": "Retrieve the description for the anatomical entity with ID \"UBERON:0001236\" and name \"urinary bladder urothelium\".",
    "query": "SELECT T1.description FROM anatomical_entity AS T1 WHERE T1.id = \"UBERON:0001236\" and T1.name = \"urinary bladder urothelium\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "424_1",
    "user": "gpt-3",
    "question": "Retrieve the call quality from healthy expression where the Uberon anatomical ID is \"UBERON:0001769\" and the expression score is 9.52000.",
    "query": "SELECT T1.call_quality FROM healthy_expression AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0001769\" and T1.expression_score = 9.52000"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "424_2",
    "user": "gpt-3",
    "question": "Find the call quality from healthy expression for the anatomical ID \"UBERON:0001769\" with an expression score of 9.52000.",
    "query": "SELECT T1.call_quality FROM healthy_expression AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0001769\" and T1.expression_score = 9.52000"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "425_1",
    "user": "gpt-3",
    "question": "Find the species ID from the xref_gene_ensembl table where the gene symbol is \"2310034G01Rik\" and the ensembl gene ID is \"ENSG00000066629\".",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"2310034G01Rik\" and T1.ensembl_gene_id = \"ENSG00000066629\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "425_2",
    "user": "gpt-3",
    "question": "What is the species ID for the gene with the gene symbol \"2310034G01Rik\" and Ensembl gene ID \"ENSG00000066629\" in the xref_gene_ensembl table?",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"2310034G01Rik\" and T1.ensembl_gene_id = \"ENSG00000066629\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "426_1",
    "user": "gpt-3",
    "question": "What is the species ID for the gene with a gene symbol of \"3830403N18Rik\" and an Ensembl gene ID of \"ENSG00000011052\"?",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"3830403N18Rik\" and T1.ensembl_gene_id = \"ENSG00000011052\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "426_2",
    "user": "gpt-3",
    "question": "What is the species ID of gene symbol \"3830403N18Rik\" with Ensembl gene ID \"ENSG00000011052\" in table xref_gene_ensembl?",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"3830403N18Rik\" and T1.ensembl_gene_id = \"ENSG00000011052\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "427_1",
    "user": "gpt-3",
    "question": "Retrieve the gene symbol for a biomarker with the description \"PDZK1 interacting protein 1\" and ID \"urn:edrn:bmdb:biomarker:520\".",
    "query": "SELECT T1.gene_symbol FROM biomarker AS T1 WHERE T1.biomarker_description = \"PDZK1 interacting protein 1\" and T1.biomarker_id = \"urn:edrn:bmdb:biomarker:520\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "427_2",
    "user": "gpt-3",
    "question": "Get the gene symbol from the biomarker table where the biomarker description is \"PDZK1 interacting protein 1\" and the biomarker ID is \"urn:edrn:bmdb:biomarker:520\".",
    "query": "SELECT T1.gene_symbol FROM biomarker AS T1 WHERE T1.biomarker_description = \"PDZK1 interacting protein 1\" and T1.biomarker_id = \"urn:edrn:bmdb:biomarker:520\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "428_1",
    "user": "gpt-3",
    "question": "Get the gene symbol from the \"xref_gene_ensembl\" table where the species ID is 10090 and the Ensembl gene ID is \"ENSG00000007541\".",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 WHERE T1.speciesid = 10090 and T1.ensembl_gene_id = \"ENSG00000007541\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "428_2",
    "user": "gpt-3",
    "question": "Find the gene symbol for a species with ID 10090 and an Ensembl gene ID of \"ENSG00000007541\" from the xref_gene_ensembl table.",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 WHERE T1.speciesid = 10090 and T1.ensembl_gene_id = \"ENSG00000007541\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "429_1",
    "user": "gpt-3",
    "question": "What is the uberon anatomical ID for healthy expression data that has a developmental stage of MmusDv:0000049 and an expression score of 52.20000?",
    "query": "SELECT T1.uberon_anatomical_id FROM healthy_expression AS T1 WHERE T1.uberon_developmental_id = \"MmusDv:0000049\" and T1.expression_score = 52.20000"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "429_2",
    "user": "gpt-3",
    "question": "Retrieve the UBERON anatomical ID from healthy expression where the UBERON developmental ID is \"MmusDv:0000049\" and the expression score is 52.20000.",
    "query": "SELECT T1.uberon_anatomical_id FROM healthy_expression AS T1 WHERE T1.uberon_developmental_id = \"MmusDv:0000049\" and T1.expression_score = 52.20000"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "430_1",
    "user": "gpt-3",
    "question": "What is the description of the disease mutation site annotation with an ID of 56 and a disease mutation ID of 321791?",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.id = 56 and T1.disease_mutation_id = 321791"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "430_2",
    "user": "gpt-3",
    "question": "Retrieve the description from the disease mutation site annotation table where the ID is 56 and the disease mutation ID is 321791.",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.id = 56 and T1.disease_mutation_id = 321791"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "431_1",
    "user": "gpt-3",
    "question": "Retrieve the trade name for a biomarker FDA test trial with the ID \"NCT00585195\" and submission \"K062706\".",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trial_id = \"NCT00585195\" and T1.test_submission = \"K062706\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "431_2",
    "user": "gpt-3",
    "question": "Retrieve the test trade name for a biomarker FDA test trial with the test trial ID \"NCT00585195\" and the test submission \"K062706\".",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trial_id = \"NCT00585195\" and T1.test_submission = \"K062706\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "432_1",
    "user": "gpt-3",
    "question": "What is the description for the glycosylation feature in disease mutation site annotation where the disease mutation ID is 234450?",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.disease_mutation_id = 234450 and T1.feature_key = \"glycosylation\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "432_2",
    "user": "gpt-3",
    "question": "What is the description for the glycosylation feature in the disease mutation site annotation table where the disease mutation ID is 234450?",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.disease_mutation_id = 234450 and T1.feature_key = \"glycosylation\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "433_1",
    "user": "gpt-3",
    "question": "Find the Ensembl transcript ID from the map of protein-disease mutations where the peptide ID is ENSP00000219479 and the UniProtKB accession number is A6NKN8.",
    "query": "SELECT T1.ensembl_transcript_id FROM map_protein_disease_mutation AS T1 WHERE T1.peptide_id = \"ENSP00000219479\" and T1.uniprotkb_ac = \"A6NKN8\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "433_2",
    "user": "gpt-3",
    "question": "Find the Ensembl transcript ID for a protein-disease-mutation mapping where the peptide ID is \"ENSP00000219479\" and the UniProtKB accession number is \"A6NKN8\".",
    "query": "SELECT T1.ensembl_transcript_id FROM map_protein_disease_mutation AS T1 WHERE T1.peptide_id = \"ENSP00000219479\" and T1.uniprotkb_ac = \"A6NKN8\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "434_1",
    "user": "gpt-3",
    "question": "Retrieve the number of subjects with decreased expression from the differential expression table where the p-value is 5.67e-143 and the gene symbol is \"AC000403.1\".",
    "query": "SELECT T1.subjects_down FROM differential_expression AS T1 WHERE T1.pvalue = 5.67e-143 and T1.gene_symbol = \"AC000403.1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "434_2",
    "user": "gpt-3",
    "question": "Retrieve the list of subjects that had decreased expression levels for gene AC000403.1 with a p-value of 5.67e-143 from the differential expression table.",
    "query": "SELECT T1.subjects_down FROM differential_expression AS T1 WHERE T1.pvalue = 5.67e-143 and T1.gene_symbol = \"AC000403.1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "435_1",
    "user": "gpt-3",
    "question": "Get the genus of the species with a speciesid of 9606 and a speciescommonname of \"mouse\".",
    "query": "SELECT T1.genus FROM species AS T1 WHERE T1.speciesid = 9606 and T1.speciescommonname = \"mouse\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "435_2",
    "user": "gpt-3",
    "question": "Retrieve the genus of the species with a speciesid of 9606 and a speciescommonname of \"mouse\".",
    "query": "SELECT T1.genus FROM species AS T1 WHERE T1.speciesid = 9606 and T1.speciescommonname = \"mouse\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "436_1",
    "user": "gpt-3",
    "question": "What is the FDA test trade name for the biomarker with a test submission of \"K062742\" and an ID of \"FDA000261\"?",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda AS T1 WHERE T1.test_submission = \"K062742\" and T1.id = \"FDA000261\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "436_2",
    "user": "gpt-3",
    "question": "What is the test trade name for FDA submission number K062742 and biomarker ID FDA000261 in the biomarker_fda database?",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda AS T1 WHERE T1.test_submission = \"K062742\" and T1.id = \"FDA000261\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "437_1",
    "user": "gpt-3",
    "question": "Find the Ensembl transcript ID from disease_mutation where doid is 3963 and mutation frequency is 4.",
    "query": "SELECT T1.ensembl_transcript_id FROM disease_mutation AS T1 WHERE T1.doid = 3963 and T1.mutation_freq = 4"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "437_2",
    "user": "gpt-3",
    "question": "Get the ensembl transcript ID from disease_mutation where the doid is 3963 and mutation frequency is equal to 4.",
    "query": "SELECT T1.ensembl_transcript_id FROM disease_mutation AS T1 WHERE T1.doid = 3963 and T1.mutation_freq = 4"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "438_1",
    "user": "gpt-3",
    "question": "Get the genus of the species where its common name is \"mouse\" and its species ID is 10090.",
    "query": "SELECT T1.genus FROM species AS T1 WHERE T1.speciescommonname = \"mouse\" and T1.speciesid = 10090"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "438_2",
    "user": "gpt-3",
    "question": "What is the genus of the species with the common name \"mouse\" and a species ID of 10090?",
    "query": "SELECT T1.genus FROM species AS T1 WHERE T1.speciescommonname = \"mouse\" and T1.speciesid = 10090"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "439_1",
    "user": "gpt-3",
    "question": "Retrieve the ID of the anatomical entity \"islet of Langerhans\" with the description \"Periaqueductal gray (PAG; also called the 'central gray') is located around the cerebral aqueduct within the midbrain and plays a role in pain modulation and defensive behaviour, receiving information from ascending pain and temperature fibers via the spinomesencephalic tract originating in the spine and terminating in the midbrain.\"",
    "query": "SELECT T1.id FROM anatomical_entity AS T1 WHERE T1.name = \"islet of Langerhans\" and T1.description = \"Periaqueductal gray (PAG; also called the 'central gray') is the gray matter located around the cerebral aqueduct within the midbrain. It plays a role in the descending modulation of pain and in defensive behaviour. The ascending pain and temperature fibers of the spinothalamic tract also send information to the PAG via the spinomesencephalic tract. The spinomesencephalic tract is so-named because the fibers originate in the spine and terminate in the mesencephalon, another name for the midbrain, the part of the brain in which the PAG resides. [WP,unvetted].\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "439_2",
    "user": "gpt-3",
    "question": "Find the ID of the anatomical entity \"islet of Langerhans\" with the description \"Periaqueductal gray (PAG; also called the 'central gray') is located around the cerebral aqueduct within the midbrain and plays a role in pain modulation and defensive behavior by receiving information from ascending pain and temperature fibers via the spinomesencephalic tract originating in the spine.\"",
    "query": "SELECT T1.id FROM anatomical_entity AS T1 WHERE T1.name = \"islet of Langerhans\" and T1.description = \"Periaqueductal gray (PAG; also called the 'central gray') is the gray matter located around the cerebral aqueduct within the midbrain. It plays a role in the descending modulation of pain and in defensive behaviour. The ascending pain and temperature fibers of the spinothalamic tract also send information to the PAG via the spinomesencephalic tract. The spinomesencephalic tract is so-named because the fibers originate in the spine and terminate in the mesencephalon, another name for the midbrain, the part of the brain in which the PAG resides. [WP,unvetted].\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "440_1",
    "user": "gpt-3",
    "question": "What is the phase of the biomarker with ID \"EDRN00870\" and title \"CRP\" in the EDRN database?",
    "query": "SELECT T1.phase FROM biomarker_edrn AS T1 WHERE T1.id = \"EDRN00870\" and T1.biomarker_title = \"CRP\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "440_2",
    "user": "gpt-3",
    "question": "What is the phase for the biomarker \"CRP\" with the ID \"EDRN00870\" in the EDRN database?",
    "query": "SELECT T1.phase FROM biomarker_edrn AS T1 WHERE T1.id = \"EDRN00870\" and T1.biomarker_title = \"CRP\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "441_1",
    "user": "gpt-3",
    "question": "Find the ID of the anatomical entity that has a description of \"1. The mucous membrane lining the canal of the cervix uteri. 2. The region of the opening of the uterine cervix into the uterine cavity.\" and a name of \"adrenal medulla\".",
    "query": "SELECT T1.id FROM anatomical_entity AS T1 WHERE T1.description = \"1. The mucous membrane lining the canal of the cervix uteri. 2. The region of the opening of the uterine cervix into the uterine cavity.\" and T1.name = \"adrenal medulla\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "441_2",
    "user": "gpt-3",
    "question": "Find the ID of the anatomical entity with the name \"adrenal medulla\" and description \"1. The mucous membrane lining the canal of the cervix uteri. 2. The region of the opening of the uterine cervix into the uterine cavity.\"",
    "query": "SELECT T1.id FROM anatomical_entity AS T1 WHERE T1.description = \"1. The mucous membrane lining the canal of the cervix uteri. 2. The region of the opening of the uterine cervix into the uterine cavity.\" and T1.name = \"adrenal medulla\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "442_1",
    "user": "gpt-3",
    "question": "Find the gene symbol for biomarker with ID \"EDRN00091\" if its test is a panel.",
    "query": "SELECT T1.gene_symbol FROM biomarker AS T1 WHERE T1.id = \"EDRN00091\" and T1.test_is_a_panel = True"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "442_2",
    "user": "gpt-3",
    "question": "Retrieve the gene symbol for a biomarker with an ID of \"EDRN00091\" that is also classified as a panel test.",
    "query": "SELECT T1.gene_symbol FROM biomarker AS T1 WHERE T1.id = \"EDRN00091\" and T1.test_is_a_panel = True"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "443_1",
    "user": "gpt-3",
    "question": "What is the description of the disease mutation site annotation with feature key \"cross-link\" and ID 2071?",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.feature_key = \"cross-link\" and T1.id = 2071"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "443_2",
    "user": "gpt-3",
    "question": "Find the description of the disease mutation site annotation that has a feature key of \"cross-link\" and an ID of 2071.",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.feature_key = \"cross-link\" and T1.id = 2071"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "444_1",
    "user": "gpt-3",
    "question": "Find the test trial ID for the biomarker FDA test trial with a trade name of \"GeneSearch Breast Lymph Node (BLN) Test Kit\" and a submission of \"K062730\".",
    "query": "SELECT T1.test_trial_id FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name = \"GeneSearch Breast Lymph Node (BLN) Test Kit\" and T1.test_submission = \"K062730\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "444_2",
    "user": "gpt-3",
    "question": "Find the test trial ID from the biomarker FDA test trials where the test trade name is \"GeneSearch Breast Lymph Node (BLN) Test Kit\" and the test submission is \"K062730\".",
    "query": "SELECT T1.test_trial_id FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name = \"GeneSearch Breast Lymph Node (BLN) Test Kit\" and T1.test_submission = \"K062730\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "445_1",
    "user": "gpt-3",
    "question": "What is the title of the biomarker with an ID of \"EDRN00449\" and a phase of \"Two\" in the EDRN database?",
    "query": "SELECT T1.biomarker_title FROM biomarker_edrn AS T1 WHERE T1.id = \"EDRN00449\" and T1.phase = \"Two\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "445_2",
    "user": "gpt-3",
    "question": "What is the title of biomarker in the EDRN database with ID \"EDRN00449\" and a phase of \"Two\"?",
    "query": "SELECT T1.biomarker_title FROM biomarker_edrn AS T1 WHERE T1.id = \"EDRN00449\" and T1.phase = \"Two\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "446_1",
    "user": "gpt-3",
    "question": "Retrieve the uberon developmental ID from the healthy expression table where the call quality is \"GOLD\" and the expression level anatomical relative is \"LOW\".",
    "query": "SELECT T1.uberon_developmental_id FROM healthy_expression AS T1 WHERE T1.call_quality = \"GOLD\" and T1.expression_level_anatomical_relative = \"LOW\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "446_2",
    "user": "gpt-3",
    "question": "What are the uberon developmental IDs for healthy expressions with a call quality of \"GOLD\" and a relative anatomical expression level of \"LOW\"?",
    "query": "SELECT T1.uberon_developmental_id FROM healthy_expression AS T1 WHERE T1.call_quality = \"GOLD\" and T1.expression_level_anatomical_relative = \"LOW\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "447_1",
    "user": "gpt-3",
    "question": "What is the disease mutation ID for the impact prediction that has a probability of 0.975 and an ID of 2895?",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_impact_prediction AS T1 WHERE T1.probability = 0.975 and T1.id = 2895"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "447_2",
    "user": "gpt-3",
    "question": "\"Retrieve the disease mutation ID from the impact prediction table where the probability is 0.975 and the ID is 2895.\"",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_impact_prediction AS T1 WHERE T1.probability = 0.975 and T1.id = 2895"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "448_1",
    "user": "gpt-3",
    "question": "Find the ID of the disease mutation site annotation where the description is \"Leucine amide\" and the disease mutation ID is 184971.",
    "query": "SELECT T1.id FROM disease_mutation_site_annotation AS T1 WHERE T1.description = \"Leucine amide\" and T1.disease_mutation_id = 184971"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "448_2",
    "user": "gpt-3",
    "question": "Find the ID for the disease mutation site annotation where the description is \"Leucine amide\" and the disease mutation ID is 184971.",
    "query": "SELECT T1.id FROM disease_mutation_site_annotation AS T1 WHERE T1.description = \"Leucine amide\" and T1.disease_mutation_id = 184971"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "449_1",
    "user": "gpt-3",
    "question": "What is the trade name of the test in the FDA biomarker clinical trial with test trial ID \"NCT01078662\" and test submission \"K062740\"?",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trial_id = \"NCT01078662\" and T1.test_submission = \"K062740\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "449_2",
    "user": "gpt-3",
    "question": "Retrieve the trade name for the test trial with ID \"NCT01078662\" and submission \"K062740\" from the biomarker FDA test trial database.",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trial_id = \"NCT01078662\" and T1.test_submission = \"K062740\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "450_1",
    "user": "gpt-3",
    "question": "Find the disease mutation ID from the table of disease mutation impact predictions where the probability is 0.386 and the site prediction is \"unknown\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_impact_prediction AS T1 WHERE T1.probability = 0.386 and T1.site_prediction = \"unknown\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "450_2",
    "user": "gpt-3",
    "question": "\"Retrieve the disease mutation ID from the disease mutation impact prediction table where the probability is 0.386 and the site prediction is unknown.\"",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_impact_prediction AS T1 WHERE T1.probability = 0.386 and T1.site_prediction = \"unknown\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "451_1",
    "user": "gpt-3",
    "question": "Find the disease mutation impact prediction ID for entries in the database where the tool used is \"polyphen\" and the probability is 0.419.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_impact_prediction AS T1 WHERE T1.tool = \"polyphen\" and T1.probability = 0.419"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "451_2",
    "user": "gpt-3",
    "question": "\"Find the disease mutation IDs from the impact prediction table where the tool is PolyPhen and the probability is 0.419.\"",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_impact_prediction AS T1 WHERE T1.tool = \"polyphen\" and T1.probability = 0.419"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "452_1",
    "user": "gpt-3",
    "question": "Find the species name for a mouse with a common name of \"mouse\" and a genus of \"Homo\".",
    "query": "SELECT T1.species FROM species AS T1 WHERE T1.speciescommonname = \"mouse\" and T1.genus = \"Homo\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "452_2",
    "user": "gpt-3",
    "question": "What is the scientific name of the species \"mouse\" from the genus \"Homo\"?",
    "query": "SELECT T1.species FROM species AS T1 WHERE T1.speciescommonname = \"mouse\" and T1.genus = \"Homo\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "453_1",
    "user": "gpt-3",
    "question": "Find the genus of a species called \"musculus\" with the common name \"mouse\".",
    "query": "SELECT T1.genus FROM species AS T1 WHERE T1.speciescommonname = \"mouse\" and T1.species = \"musculus\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "453_2",
    "user": "gpt-3",
    "question": "Retrieve the genus of all species where the common name is \"mouse\" and the species is \"musculus\".",
    "query": "SELECT T1.genus FROM species AS T1 WHERE T1.speciescommonname = \"mouse\" and T1.species = \"musculus\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "454_1",
    "user": "gpt-3",
    "question": "What are the subjects who had an expression change direction of \"down\" in differential expression and a total of 36 subjects?",
    "query": "SELECT T1.subjects_up FROM differential_expression AS T1 WHERE T1.expression_change_direction = \"down\" and T1.subjects_total = 36"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "454_2",
    "user": "gpt-3",
    "question": "Find the number of subjects that have an expression change direction of \"down\" and a total of 36 in the differential expression table.",
    "query": "SELECT T1.subjects_up FROM differential_expression AS T1 WHERE T1.expression_change_direction = \"down\" and T1.subjects_total = 36"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "455_1",
    "user": "gpt-3",
    "question": "What is the speciesid of sapiens or human in the table \"species\"?",
    "query": "SELECT T1.speciesid FROM species AS T1 WHERE T1.species = \"sapiens\" or T1.speciescommonname = \"human\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "455_2",
    "user": "gpt-3",
    "question": "Retrieve the speciesid of all species that have the scientific name \"sapiens\" or the common name \"human\".",
    "query": "SELECT T1.speciesid FROM species AS T1 WHERE T1.species = \"sapiens\" or T1.speciescommonname = \"human\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "456_1",
    "user": "gpt-3",
    "question": "Retrieve the data source from the disease mutation table for records with a chromosome ID of 8 or an ENST00000181383 Ensembl transcript ID.",
    "query": "SELECT T1.data_source FROM disease_mutation AS T1 WHERE T1.chromosome_id = \"8\" or T1.ensembl_transcript_id = \"ENST00000181383\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "456_2",
    "user": "gpt-3",
    "question": "Retrieve the data source from the disease mutation table where the chromosome ID is equal to \"8\" or the Ensembl transcript ID is equal to \"ENST00000181383\".",
    "query": "SELECT T1.data_source FROM disease_mutation AS T1 WHERE T1.chromosome_id = \"8\" or T1.ensembl_transcript_id = \"ENST00000181383\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "457_1",
    "user": "gpt-3",
    "question": "Get the reference nucleotide from the disease mutation data where the data source is \"clinvar\" or the peptide position is 438.",
    "query": "SELECT T1.ref_nt FROM disease_mutation AS T1 WHERE T1.data_source = \"clinvar\" or T1.peptide_pos = 438"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "457_2",
    "user": "gpt-3",
    "question": "What is the reference nucleotide for the disease mutation with either a data source of \"clinvar\" or a peptide position of 438?",
    "query": "SELECT T1.ref_nt FROM disease_mutation AS T1 WHERE T1.data_source = \"clinvar\" or T1.peptide_pos = 438"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "458_1",
    "user": "gpt-3",
    "question": "Retrieve the number of subjects that had no change in differential expression or were up-regulated by 27 and have a log2 fold change of -8.55 from the differential expression table.",
    "query": "SELECT T1.subjects_nochange FROM differential_expression AS T1 WHERE T1.log2fc = -8.55 or T1.subjects_up = 27"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "458_2",
    "user": "gpt-3",
    "question": "Retrieve the number of subjects that did not change or had an up-regulation of 27 for a differential expression with a log2 fold change of -8.55 from the table named \"differential_expression\".",
    "query": "SELECT T1.subjects_nochange FROM differential_expression AS T1 WHERE T1.log2fc = -8.55 or T1.subjects_up = 27"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "459_1",
    "user": "gpt-3",
    "question": "Retrieve the Ensembl gene ID from healthy expression where the expression level in an anatomical relative is \"HIGH\" or the expression score is 8.1.",
    "query": "SELECT T1.ensembl_gene_id FROM healthy_expression AS T1 WHERE T1.expression_level_anatomical_relative = \"HIGH\" or T1.expression_score = 8.10000"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "459_2",
    "user": "gpt-3",
    "question": "\"Retrieve the Ensembl gene ID from healthy expression where either the anatomical relative expression level is high or the expression score is 8.1.\"",
    "query": "SELECT T1.ensembl_gene_id FROM healthy_expression AS T1 WHERE T1.expression_level_anatomical_relative = \"HIGH\" or T1.expression_score = 8.10000"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "460_1",
    "user": "gpt-3",
    "question": "What is the description of the anatomical entity with ID \"UBERON:0000977\" or name \"primary motor cortex\"?",
    "query": "SELECT T1.description FROM anatomical_entity AS T1 WHERE T1.id = \"UBERON:0000977\" or T1.name = \"primary motor cortex\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "460_2",
    "user": "gpt-3",
    "question": "Retrieve the description of the anatomical entity with ID \"UBERON:0000977\" or name \"primary motor cortex\".",
    "query": "SELECT T1.description FROM anatomical_entity AS T1 WHERE T1.id = \"UBERON:0000977\" or T1.name = \"primary motor cortex\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "461_1",
    "user": "gpt-3",
    "question": "Find the call quality from the healthy expression data for tissues with an Uberon anatomical ID of \"UBERON:0002113\" or an expression rank score of 46.30.",
    "query": "SELECT T1.call_quality FROM healthy_expression AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0002113\" or T1.expression_rank_score = 46.30"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "461_2",
    "user": "gpt-3",
    "question": "Find the call quality from healthy expression where the anatomical ID is \"UBERON:0002113\" or the expression rank score is 46.30.",
    "query": "SELECT T1.call_quality FROM healthy_expression AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0002113\" or T1.expression_rank_score = 46.30"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "462_1",
    "user": "gpt-3",
    "question": "Find the trade name for a biomarker FDA test trial with an ID of \"NCT00339183/NCT00079066\" or a submission number of \"K062709\".",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trial_id = \"NCT00339183/NCT00079066\" or T1.test_submission = \"K062709\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "462_2",
    "user": "gpt-3",
    "question": "What is the test trade name for the biomarker FDA test trial with a test trial ID of \"NCT00339183/NCT00079066\" or a test submission of \"K062709\"?",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trial_id = \"NCT00339183/NCT00079066\" or T1.test_submission = \"K062709\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "463_1",
    "user": "gpt-3",
    "question": "Find the species ID for the gene with an Ensembl gene ID of \"ENSG00000048140\" or a gene symbol of \"1700030C14Rik\" in the table xref_gene_ensembl.",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.ensembl_gene_id = \"ENSG00000048140\" or T1.gene_symbol = \"1700030C14Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "463_2",
    "user": "gpt-3",
    "question": "Retrieve the species ID from the table xref_gene_ensembl for the gene with an Ensembl gene ID of \"ENSG00000048140\" or a gene symbol of \"1700030C14Rik\".",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.ensembl_gene_id = \"ENSG00000048140\" or T1.gene_symbol = \"1700030C14Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "464_1",
    "user": "gpt-3",
    "question": "Retrieve the test submission for the biomarker FDA trial with either the test trade name \"BRACAnalysis CDx\" or the test trial ID \"NCT01024959\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name = \"BRACAnalysis CDx\" or T1.test_trial_id = \"NCT01024959\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "464_2",
    "user": "gpt-3",
    "question": "Retrieve the test submission for the biomarker FDA test trial with a test trade name of \"BRACAnalysis CDx\" or a test trial ID of \"NCT01024959\" from the table \"biomarker_fda_test_trial\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name = \"BRACAnalysis CDx\" or T1.test_trial_id = \"NCT01024959\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "465_1",
    "user": "gpt-3",
    "question": "What is the alternative amino acid for a disease mutation at position 311 in UniProtKB or with an ID of 12501?",
    "query": "SELECT T1.alt_aa FROM disease_mutation AS T1 WHERE T1.aa_pos_uniprotkb = 311 or T1.id = 12501"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "465_2",
    "user": "gpt-3",
    "question": "What are the alternate amino acids associated with a disease mutation at position 311 in the UniprotKB database, or with an ID of 12501?",
    "query": "SELECT T1.alt_aa FROM disease_mutation AS T1 WHERE T1.aa_pos_uniprotkb = 311 or T1.id = 12501"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "466_1",
    "user": "gpt-3",
    "question": "What is the Ensembl gene ID for the gene symbol \"1700054K19Rik\" in the species with ID 9606?",
    "query": "SELECT T1.ensembl_gene_id FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"1700054K19Rik\" or T1.speciesid = 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "466_2",
    "user": "gpt-3",
    "question": "Find the Ensembl gene ID for the gene symbol \"1700054K19Rik\" or species ID 9606 in the xref_gene_ensembl table.",
    "query": "SELECT T1.ensembl_gene_id FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"1700054K19Rik\" or T1.speciesid = 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "467_1",
    "user": "gpt-3",
    "question": "What is the genus of the species \"sapiens\" or with a species ID of 10090?",
    "query": "SELECT T1.genus FROM species AS T1 WHERE T1.species = \"sapiens\" or T1.speciesid = 10090"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "467_2",
    "user": "gpt-3",
    "question": "Retrieve the genus of all species where the species is \"sapiens\" or the species ID is 10090.",
    "query": "SELECT T1.genus FROM species AS T1 WHERE T1.species = \"sapiens\" or T1.speciesid = 10090"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "468_1",
    "user": "gpt-3",
    "question": "Find the speciesid of all species where the name is \"sapiens\" or the genus is \"Mus\".",
    "query": "SELECT T1.speciesid FROM species AS T1 WHERE T1.species = \"sapiens\" or T1.genus = \"Mus\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "468_2",
    "user": "gpt-3",
    "question": "Find the species ID of all species named \"sapiens\" or with the genus \"Mus\".",
    "query": "SELECT T1.speciesid FROM species AS T1 WHERE T1.species = \"sapiens\" or T1.genus = \"Mus\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "469_1",
    "user": "gpt-3",
    "question": "Find the test submission for the biomarker FDA test trial with a test trade name of \"Therascreen KRAS RGQ PCR Kit\" or a test trial ID of \"NCT00339183/NCT00079066\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name = \"Therascreen KRAS RGQ PCR Kit\" or T1.test_trial_id = \"NCT00339183/NCT00079066\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "469_2",
    "user": "gpt-3",
    "question": "Retrieve the test submission from the biomarker FDA test trial where either the test trade name is \"Therascreen KRAS RGQ PCR Kit\" or the test trial ID is \"NCT00339183/NCT00079066\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name = \"Therascreen KRAS RGQ PCR Kit\" or T1.test_trial_id = \"NCT00339183/NCT00079066\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "470_1",
    "user": "gpt-3",
    "question": "Retrieve the alternative nucleotide from disease mutations where the chromosome ID is 9 or the data source is \"cosmic\".",
    "query": "SELECT T1.alt_nt FROM disease_mutation AS T1 WHERE T1.chromosome_id = \"9\" or T1.data_source = \"cosmic\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "470_2",
    "user": "gpt-3",
    "question": "Retrieve the alternate nucleotide from the disease mutation data set where the chromosome is equal to 9 or the data source is \"cosmic\".",
    "query": "SELECT T1.alt_nt FROM disease_mutation AS T1 WHERE T1.chromosome_id = \"9\" or T1.data_source = \"cosmic\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "471_1",
    "user": "gpt-3",
    "question": "Find the site prediction from the disease mutation impact prediction table where the tool is \"polyphen\" or the ID is equal to 3906.",
    "query": "SELECT T1.site_prediction FROM disease_mutation_impact_prediction AS T1 WHERE T1.tool = \"polyphen\" or T1.id = 3906"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "471_2",
    "user": "gpt-3",
    "question": "Retrieve the predicted site from the disease mutation impact prediction database for the tool \"polyphen\" or for entry with ID 3906.",
    "query": "SELECT T1.site_prediction FROM disease_mutation_impact_prediction AS T1 WHERE T1.tool = \"polyphen\" or T1.id = 3906"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "472_1",
    "user": "gpt-3",
    "question": "Find the phase of the biomarker with an ID of \"EDRN00587\" or a QA state of \"Accepted\" in the EDRN database.",
    "query": "SELECT T1.phase FROM biomarker_edrn AS T1 WHERE T1.id = \"EDRN00587\" or T1.qa_state = \"Accepted\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "472_2",
    "user": "gpt-3",
    "question": "Retrieve the phase of the biomarker with an ID of \"EDRN00587\" or that has been accepted by QA from the EDRN biomarker database.",
    "query": "SELECT T1.phase FROM biomarker_edrn AS T1 WHERE T1.id = \"EDRN00587\" or T1.qa_state = \"Accepted\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "473_1",
    "user": "gpt-3",
    "question": "Retrieve the call quality from healthy expression data where the Ensembl gene ID is \"ENSG00000047578\" or the Uberon anatomical ID is \"UBERON:0009835\".",
    "query": "SELECT T1.call_quality FROM healthy_expression AS T1 WHERE T1.ensembl_gene_id = \"ENSG00000047578\" or T1.uberon_anatomical_id = \"UBERON:0009835\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "473_2",
    "user": "gpt-3",
    "question": "Retrieve the call quality of healthy expression data for the gene with Ensembl ID \"ENSG00000047578\" or for the anatomical structure with UBERON ID \"UBERON:0009835\".",
    "query": "SELECT T1.call_quality FROM healthy_expression AS T1 WHERE T1.ensembl_gene_id = \"ENSG00000047578\" or T1.uberon_anatomical_id = \"UBERON:0009835\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "474_1",
    "user": "gpt-3",
    "question": "Find the ID of the anatomical entity where the name is \"cardiac muscle of left ventricle\" or description is \"Region of cortex near to the rhinal sulcus. It is defined differently in different nomenclatures, due in part to the lack of agreement on the definition of the border of this region. In the rat, the perirhinal cortex occupies only caudal levels of the rhinal sulcus while in the monkey, it occurpies the full ro",
    "query": "SELECT T1.id FROM anatomical_entity AS T1 WHERE T1.name = \"cardiac muscle of left ventricle\" or T1.description = \"Region of cortex near to the rhinal sulcus. It is defined differently in different nomenclatures, due in part to the lack of agreement on the definition of the border of this region. In the rat, the perirhinal cortex occupies only caudal levels of the rhinal sulcus while in the monkey, it occurpies the full rostrocaudal extent of the rhinal sulcus (Burwell et al., Hippocampus, 5: 390-408, 1995).\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "474_2",
    "user": "gpt-3",
    "question": "Find the ID of the anatomical entity where the name is \"cardiac muscle of left ventricle\" or the description is \"Region of cortex near to the rhinal sulcus. It is defined differently in different nomenclatures, due in part to the lack of agreement on the definition of the border of this region. In the rat, the perirhinal cortex occupies only caudal levels of the rhinal sulcus while in the monkey, it occurpies the full ro",
    "query": "SELECT T1.id FROM anatomical_entity AS T1 WHERE T1.name = \"cardiac muscle of left ventricle\" or T1.description = \"Region of cortex near to the rhinal sulcus. It is defined differently in different nomenclatures, due in part to the lack of agreement on the definition of the border of this region. In the rat, the perirhinal cortex occupies only caudal levels of the rhinal sulcus while in the monkey, it occurpies the full rostrocaudal extent of the rhinal sulcus (Burwell et al., Hippocampus, 5: 390-408, 1995).\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "475_1",
    "user": "gpt-3",
    "question": "Find the chromosome position in the disease mutation table where the CDS position is equal to 471 or the peptide position is equal to 83.",
    "query": "SELECT T1.chromosome_pos FROM disease_mutation AS T1 WHERE T1.cds_pos = 471 or T1.peptide_pos = 83"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "475_2",
    "user": "gpt-3",
    "question": "Find the chromosome position in the disease mutation table where either the CDS position is 471 or the peptide position is 83.",
    "query": "SELECT T1.chromosome_pos FROM disease_mutation AS T1 WHERE T1.cds_pos = 471 or T1.peptide_pos = 83"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "476_1",
    "user": "gpt-3",
    "question": "What is the genus of the species with the name \"musculus\" or with the common name \"mouse\"?",
    "query": "SELECT T1.genus FROM species AS T1 WHERE T1.species = \"musculus\" or T1.speciescommonname = \"mouse\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "476_2",
    "user": "gpt-3",
    "question": "Retrieve the genus of species with the species name \"musculus\" or the common name \"mouse\".",
    "query": "SELECT T1.genus FROM species AS T1 WHERE T1.species = \"musculus\" or T1.speciescommonname = \"mouse\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "477_1",
    "user": "gpt-3",
    "question": "Retrieve the Ensembl gene ID from healthy expression where the call quality is \"SILVER\" or the Uberon developmental ID is \"MmusDv:0000113\".",
    "query": "SELECT T1.ensembl_gene_id FROM healthy_expression AS T1 WHERE T1.call_quality = \"SILVER\" or T1.uberon_developmental_id = \"MmusDv:0000113\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "477_2",
    "user": "gpt-3",
    "question": "Retrieve the Ensembl gene ID from healthy expression data where the call quality is \"SILVER\" or the Uberon developmental ID is \"MmusDv:0000113\".",
    "query": "SELECT T1.ensembl_gene_id FROM healthy_expression AS T1 WHERE T1.call_quality = \"SILVER\" or T1.uberon_developmental_id = \"MmusDv:0000113\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "478_1",
    "user": "gpt-3",
    "question": "Retrieve the biomarker type from the EDRN database for any biomarkers with a UBERON anatomical ID of \"UBERON:0002048\" or a phase of \"Two\".",
    "query": "SELECT T1.biomarker_type FROM biomarker_edrn AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0002048\" or T1.phase = \"Two\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "478_2",
    "user": "gpt-3",
    "question": "Retrieve the biomarker type from the EDRN biomarker database for biomarkers associated with the UBERON anatomical ID \"UBERON:0002048\" or in Phase Two of development.",
    "query": "SELECT T1.biomarker_type FROM biomarker_edrn AS T1 WHERE T1.uberon_anatomical_id = \"UBERON:0002048\" or T1.phase = \"Two\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "479_1",
    "user": "gpt-3",
    "question": "Find the FDA test submission number for a biomarker with ID \"FDA000108\" or a test trade name of \"THXID-BRAF KIT\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.id = \"FDA000108\" or T1.test_trade_name = \"THXID-BRAF KIT\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "479_2",
    "user": "gpt-3",
    "question": "Retrieve the test submission from the FDA for either biomarker ID \"FDA000108\" or test trade name \"THXID-BRAF KIT\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.id = \"FDA000108\" or T1.test_trade_name = \"THXID-BRAF KIT\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "480_1",
    "user": "gpt-3",
    "question": "Retrieve the uberon developmental ID from healthy expression data where the ensembl gene ID is \"ENSG00000053770\" or the call quality is \"BRONZE\".",
    "query": "SELECT T1.uberon_developmental_id FROM healthy_expression AS T1 WHERE T1.ensembl_gene_id = \"ENSG00000053770\" or T1.call_quality = \"BRONZE\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "480_2",
    "user": "gpt-3",
    "question": "Find the uberon developmental ID for healthy expression where the ensembl gene ID is equal to \"ENSG00000053770\" or the call quality is equal to \"BRONZE\".",
    "query": "SELECT T1.uberon_developmental_id FROM healthy_expression AS T1 WHERE T1.ensembl_gene_id = \"ENSG00000053770\" or T1.call_quality = \"BRONZE\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "481_1",
    "user": "gpt-3",
    "question": "Find the speciesid of all species in the \"Homo\" genus or with the species name \"sapiens\".",
    "query": "SELECT T1.speciesid FROM species AS T1 WHERE T1.genus = \"Homo\" or T1.species = \"sapiens\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "481_2",
    "user": "gpt-3",
    "question": "Retrieve the speciesid of all species from the table \"species\" where either the genus is \"Homo\" or the species is \"sapiens\".",
    "query": "SELECT T1.speciesid FROM species AS T1 WHERE T1.genus = \"Homo\" or T1.species = \"sapiens\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "482_1",
    "user": "gpt-3",
    "question": "What is the name of the anatomical entity that has an ID of \"UBERON:0004913\" or a description of \"the part of the cerebral cortex responsible for processing visual information\"?",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.id = \"UBERON:0004913\" or T1.description = \"the part of the cerebral cortex responsible for processing visual information.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "482_2",
    "user": "gpt-3",
    "question": "Retrieve the name of the anatomical entity from the UBERON database where the ID is \"UBERON:0004913\" or the description is \"the part of the cerebral cortex responsible for processing visual information\".",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.id = \"UBERON:0004913\" or T1.description = \"the part of the cerebral cortex responsible for processing visual information.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "483_1",
    "user": "gpt-3",
    "question": "What are the actual uses for biomarker tests associated with either FDA test submission K062696 or an approved indication of companion diagnosis?",
    "query": "SELECT T1.actual_use FROM biomarker_fda_test_use AS T1 WHERE T1.test_submission = \"K062696\" or T1.approved_indication = \"companion diagnosis\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "483_2",
    "user": "gpt-3",
    "question": "What is the actual use of biomarker tests submitted under test submission number K062696 or approved for companion diagnosis by the FDA?",
    "query": "SELECT T1.actual_use FROM biomarker_fda_test_use AS T1 WHERE T1.test_submission = \"K062696\" or T1.approved_indication = \"companion diagnosis\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "484_1",
    "user": "gpt-3",
    "question": "Which tool was used for the disease mutation impact prediction where the ID is 3154 or the site prediction is \"unknown\"?",
    "query": "SELECT T1.tool FROM disease_mutation_impact_prediction AS T1 WHERE T1.id = 3154 or T1.site_prediction = \"unknown\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "484_2",
    "user": "gpt-3",
    "question": "What tool was used for the disease mutation impact prediction with an ID of 3154 or unknown site prediction?",
    "query": "SELECT T1.tool FROM disease_mutation_impact_prediction AS T1 WHERE T1.id = 3154 or T1.site_prediction = \"unknown\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "485_1",
    "user": "gpt-3",
    "question": "Find the adjusted p-value from the table of differential expression where either the number of subjects up is 6 or the p-value is equal to 1.42e-134.",
    "query": "SELECT T1.adjpvalue FROM differential_expression AS T1 WHERE T1.subjects_up = 6 or T1.pvalue = 1.42e-134"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "485_2",
    "user": "gpt-3",
    "question": "Retrieve the adjusted p-value from the differential expression table for all rows where either the number of subjects up is equal to 6 or the p-value is equal to 1.42e-134.",
    "query": "SELECT T1.adjpvalue FROM differential_expression AS T1 WHERE T1.subjects_up = 6 or T1.pvalue = 1.42e-134"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "486_1",
    "user": "gpt-3",
    "question": "What is the name of the anatomical entity with the ID \"UBERON:0003889\" or description \"Lower lateral part of the cerebral hemisphere\"?",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.id = \"UBERON:0003889\" or T1.description = \"Lower lateral part of the cerebral hemisphere. (MSH)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "486_2",
    "user": "gpt-3",
    "question": "What is the name of the anatomical entity whose ID is \"UBERON:0003889\" or whose description is \"Lower lateral part of the cerebral hemisphere\"?",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.id = \"UBERON:0003889\" or T1.description = \"Lower lateral part of the cerebral hemisphere. (MSH)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "487_1",
    "user": "gpt-3",
    "question": "What is the trade name for a biomarker FDA test or submission with the test trial ID \"NCT01482715\" or the test submission \"K062726\"?",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trial_id = \"NCT01482715\" or T1.test_submission = \"K062726\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "487_2",
    "user": "gpt-3",
    "question": "Retrieve the trade name of a biomarker FDA test trial where the test trial ID is \"NCT01482715\" or the test submission is \"K062726\".",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trial_id = \"NCT01482715\" or T1.test_submission = \"K062726\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "488_1",
    "user": "gpt-3",
    "question": "Find the impact prediction id of a disease mutation that has an id of 24038 or a probability of 0.803 in the table for disease mutation impact predictions.",
    "query": "SELECT T1.id FROM disease_mutation_impact_prediction AS T1 WHERE T1.disease_mutation_id = 24038 or T1.probability = 0.803"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "488_2",
    "user": "gpt-3",
    "question": "Find the disease mutation impact prediction ID from the disease mutation impact prediction table where the disease mutation ID is 24038 or the probability is 0.803.",
    "query": "SELECT T1.id FROM disease_mutation_impact_prediction AS T1 WHERE T1.disease_mutation_id = 24038 or T1.probability = 0.803"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "489_1",
    "user": "gpt-3",
    "question": "Retrieve the test submission from the biomarker FDA test where the clinical significance is that the THxIDTM BRAF kit is an in vitro diagnostic device intended for detecting BRAF V600E and V600K mutations in DNA samples extracted from formalin-fixed paraffin-embedded human melanoma tissue, or the specimen type is human stool.",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test AS T1 WHERE T1.clinical_significance = \"The THxIDTM BRAF kit is an In Vitro Diagnostic device intended for the qualitative detection of the BRAF V600E and V600K mutations in DNA samples extracted from formalin-fixed paraffin-embedded (FFPE) human melanoma tissue.\" or T1.specimen_type = \"human stool\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "489_2",
    "user": "gpt-3",
    "question": "Find all test submissions from the biomarker_fda_test table where the clinical significance is \"The THxIDTM BRAF kit is an In Vitro Diagnostic device intended for the qualitative detection of the BRAF V600E and V600K mutations in DNA samples extracted from formalin-fixed paraffin-embedded (FFPE) human melanoma tissue\" or the specimen type is \"human stool\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test AS T1 WHERE T1.clinical_significance = \"The THxIDTM BRAF kit is an In Vitro Diagnostic device intended for the qualitative detection of the BRAF V600E and V600K mutations in DNA samples extracted from formalin-fixed paraffin-embedded (FFPE) human melanoma tissue.\" or T1.specimen_type = \"human stool\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "490_1",
    "user": "gpt-3",
    "question": "Return the gene symbol from the table xref_gene_ensembl where the species ID is 10090 or the Ensembl gene ID is \"ENSG00000006116\".",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 WHERE T1.speciesid = 10090 or T1.ensembl_gene_id = \"ENSG00000006116\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "490_2",
    "user": "gpt-3",
    "question": "Retrieve the gene symbol from the xref_gene_ensembl table where the species ID is 10090 or the Ensembl gene ID is \"ENSG00000006116\".",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 WHERE T1.speciesid = 10090 or T1.ensembl_gene_id = \"ENSG00000006116\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "491_1",
    "user": "gpt-3",
    "question": "Retrieve the description from the disease mutation site annotation table where the id is equal to 312 or the disease mutation id is equal to 124095.",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.id = 312 or T1.disease_mutation_id = 124095"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "491_2",
    "user": "gpt-3",
    "question": "Get the description for disease mutation site annotation with ID 312 or for any disease mutation with ID 124095 from the table disease_mutation_site_annotation.",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.id = 312 or T1.disease_mutation_id = 124095"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "492_1",
    "user": "gpt-3",
    "question": "Retrieve the phase of all biomarkers from the EDRN database that are either of type \"Genetic\" or have a QA state of \"Curated\".",
    "query": "SELECT T1.phase FROM biomarker_edrn AS T1 WHERE T1.biomarker_type = \"Genetic\" or T1.qa_state = \"Curated\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "492_2",
    "user": "gpt-3",
    "question": "Find the phase of all biomarkers from the EDRN database that are either of type \"Genetic\" or have a QA state of \"Curated\".",
    "query": "SELECT T1.phase FROM biomarker_edrn AS T1 WHERE T1.biomarker_type = \"Genetic\" or T1.qa_state = \"Curated\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "493_1",
    "user": "gpt-3",
    "question": "What is the description of the anatomical entity with the name \"inferior colliculus\" or ID \"UBERON:0003728\"?",
    "query": "SELECT T1.description FROM anatomical_entity AS T1 WHERE T1.name = \"inferior colliculus\" or T1.id = \"UBERON:0003728\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "493_2",
    "user": "gpt-3",
    "question": "Retrieve the description for the anatomical entity with the name \"inferior colliculus\" or ID \"UBERON:0003728\".",
    "query": "SELECT T1.description FROM anatomical_entity AS T1 WHERE T1.name = \"inferior colliculus\" or T1.id = \"UBERON:0003728\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "494_1",
    "user": "gpt-3",
    "question": "Find the speciesid from xref_gene_ensembl where the gene symbol is \"1700006E09Rik\" or the ensembl gene id is \"ENSG00000047056\".",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"1700006E09Rik\" or T1.ensembl_gene_id = \"ENSG00000047056\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "494_2",
    "user": "gpt-3",
    "question": "What is the species ID for the gene with a gene symbol of \"1700006E09Rik\" or an Ensembl gene ID of \"ENSG00000047056\"?",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.gene_symbol = \"1700006E09Rik\" or T1.ensembl_gene_id = \"ENSG00000047056\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "495_1",
    "user": "gpt-3",
    "question": "Retrieve the expression level of a gene from healthy individuals where the call quality is \"SILVER\" or the expression rank score is 83.60.",
    "query": "SELECT T1.expression_level_gene_relative FROM healthy_expression AS T1 WHERE T1.call_quality = \"SILVER\" or T1.expression_rank_score = 83.60"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "495_2",
    "user": "gpt-3",
    "question": "\"Retrieve the expression level relative to the gene from the healthy_expression table where the call quality is 'SILVER' or the expression rank score is equal to 83.60.\"",
    "query": "SELECT T1.expression_level_gene_relative FROM healthy_expression AS T1 WHERE T1.call_quality = \"SILVER\" or T1.expression_rank_score = 83.60"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "496_1",
    "user": "gpt-3",
    "question": "What is the probability value from the disease mutation impact prediction table for either ID 933 or site prediction value \"---|loss\"?",
    "query": "SELECT T1.probability FROM disease_mutation_impact_prediction AS T1 WHERE T1.id = 933 or T1.site_prediction = \"---|loss\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "496_2",
    "user": "gpt-3",
    "question": "Retrieve the probability of mutation impact prediction from the disease mutation impact prediction table where the id is 933 or the site prediction is \"---|loss\".",
    "query": "SELECT T1.probability FROM disease_mutation_impact_prediction AS T1 WHERE T1.id = 933 or T1.site_prediction = \"---|loss\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "497_1",
    "user": "gpt-3",
    "question": "Find the Ensembl gene ID for the gene symbol \"1810058I24Rik\" in either speciesid 10090.",
    "query": "SELECT T1.ensembl_gene_id FROM xref_gene_ensembl AS T1 WHERE T1.speciesid = 10090 or T1.gene_symbol = \"1810058I24Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "497_2",
    "user": "gpt-3",
    "question": "Find the Ensembl gene ID for the species with ID 10090 or for genes with the symbol \"1810058I24Rik\" in the xref_gene_ensembl table.",
    "query": "SELECT T1.ensembl_gene_id FROM xref_gene_ensembl AS T1 WHERE T1.speciesid = 10090 or T1.gene_symbol = \"1810058I24Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "498_1",
    "user": "gpt-3",
    "question": "Find the UniProtKB accession number from the map_protein_disease_mutation table where the Ensembl transcript ID is equal to \"ENST00000064571\" or the peptide ID is equal to \"ENSP00000221573\".",
    "query": "SELECT T1.uniprotkb_ac FROM map_protein_disease_mutation AS T1 WHERE T1.ensembl_transcript_id = \"ENST00000064571\" or T1.peptide_id = \"ENSP00000221573\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "498_2",
    "user": "gpt-3",
    "question": "Find the UniProtKB Accession number from the map_protein_disease_mutation table where either the Ensembl transcript ID is \"ENST00000064571\" or the peptide ID is \"ENSP00000221573\".",
    "query": "SELECT T1.uniprotkb_ac FROM map_protein_disease_mutation AS T1 WHERE T1.ensembl_transcript_id = \"ENST00000064571\" or T1.peptide_id = \"ENSP00000221573\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "499_1",
    "user": "gpt-3",
    "question": "What is the data source for the disease mutation with DOID 1781 or ID 7016?",
    "query": "SELECT T1.data_source FROM disease_mutation AS T1 WHERE T1.doid = 1781 or T1.id = 7016"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "499_2",
    "user": "gpt-3",
    "question": "Get the data source from the disease_mutation table where the disease's DOID is 1781 or its ID is 7016.",
    "query": "SELECT T1.data_source FROM disease_mutation AS T1 WHERE T1.doid = 1781 or T1.id = 7016"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "500_1",
    "user": "gpt-3",
    "question": "Find the ID of biomarker_edrn where the biomarker type is \"Gene\" or the QA state is \"Accepted\".",
    "query": "SELECT T1.id FROM biomarker_edrn AS T1 WHERE T1.biomarker_type = \"Gene\" or T1.qa_state = \"Accepted\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "500_2",
    "user": "gpt-3",
    "question": "Retrieve the IDs from the biomarker_edrn table where the biomarker type is \"Gene\" or the QA state is \"Accepted\".",
    "query": "SELECT T1.id FROM biomarker_edrn AS T1 WHERE T1.biomarker_type = \"Gene\" or T1.qa_state = \"Accepted\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "501_1",
    "user": "gpt-3",
    "question": "What is the species ID for the gene with an Ensembl gene ID of \"ENSG00000060709\" or a gene symbol of \"1700024P16Rik\"?",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.ensembl_gene_id = \"ENSG00000060709\" or T1.gene_symbol = \"1700024P16Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "501_2",
    "user": "gpt-3",
    "question": "What is the species ID for the gene with Ensembl ID ENSG00000060709 or gene symbol 1700024P16Rik in the xref_gene_ensembl table?",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 WHERE T1.ensembl_gene_id = \"ENSG00000060709\" or T1.gene_symbol = \"1700024P16Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "502_1",
    "user": "gpt-3",
    "question": "Find the ID of the anatomical entity for which either the name is \"cerebellar vermis\" or the description is \"A blood vessel that is part of a brain [Automatically generated definition]\".",
    "query": "SELECT T1.id FROM anatomical_entity AS T1 WHERE T1.name = \"cerebellar vermis\" or T1.description = \"A blood vessel that is part of a brain [Automatically generated definition].\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "502_2",
    "user": "gpt-3",
    "question": "Find the identifier of an anatomical entity in the table \"anatomical_entity\" that has a name \"cerebellar vermis\" or a description \"A blood vessel that is part of a brain [Automatically generated definition].\"",
    "query": "SELECT T1.id FROM anatomical_entity AS T1 WHERE T1.name = \"cerebellar vermis\" or T1.description = \"A blood vessel that is part of a brain [Automatically generated definition].\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "503_1",
    "user": "gpt-3",
    "question": "Find the ID for disease mutation site annotation where the description is \"Phosphoserine; by CHEK1 and CHEK2\" or the disease mutation ID is 184649.",
    "query": "SELECT T1.id FROM disease_mutation_site_annotation AS T1 WHERE T1.description = \"Phosphoserine; by CHEK1 and CHEK2\" or T1.disease_mutation_id = 184649"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "503_2",
    "user": "gpt-3",
    "question": "Find the ID for a disease mutation site annotation with the description \"Phosphoserine; by CHEK1 and CHEK2\" or a disease mutation ID of 184649.",
    "query": "SELECT T1.id FROM disease_mutation_site_annotation AS T1 WHERE T1.description = \"Phosphoserine; by CHEK1 and CHEK2\" or T1.disease_mutation_id = 184649"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "504_1",
    "user": "gpt-3",
    "question": "What is the name of the anatomical entity that has a description of \"Either of a pair of glandular pouches that lie one on either side of the male reproductive tract posterolateral to the urinary bladder and in the human male secrete a sugar- and protein-containing fluid into the ejaculatory duct\" or an ID of \"UBERON:0002391\"?",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.description = \"Either of a pair of glandular pouches that lie one on either side of the male reproductive tract posterolateral to the urinary bladder and in the human male secrete a sugar- and protein-containing fluid into the ejaculatory duct.\" or T1.id = \"UBERON:0002391\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "504_2",
    "user": "gpt-3",
    "question": "Retrieve the name of the anatomical entity that either has a description matching \"Either of a pair of glandular pouches that lie one on either side of the male reproductive tract posterolateral to the urinary bladder and in the human male secrete a sugar- and protein-containing fluid into the ejaculatory duct\" or an ID equal to \"UBERON:0002391\".",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.description = \"Either of a pair of glandular pouches that lie one on either side of the male reproductive tract posterolateral to the urinary bladder and in the human male secrete a sugar- and protein-containing fluid into the ejaculatory duct.\" or T1.id = \"UBERON:0002391\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "505_1",
    "user": "gpt-3",
    "question": "Find the name of all stages in the table \"stage\" where the ID is not equal to \"MmusDv:0000064\".",
    "query": "SELECT T1.name FROM stage AS T1 WHERE T1.id != \"MmusDv:0000064\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "505_2",
    "user": "gpt-3",
    "question": "Get the names of all stages, except for the one with ID \"MmusDv:0000064\", from the stage table.",
    "query": "SELECT T1.name FROM stage AS T1 WHERE T1.id != \"MmusDv:0000064\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "506_1",
    "user": "gpt-3",
    "question": "What are the adjusted p-values for differential expression where the total number of subjects is not equal to 45?",
    "query": "SELECT T1.adjpvalue FROM differential_expression AS T1 WHERE T1.subjects_total != 45"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "506_2",
    "user": "gpt-3",
    "question": "Get the adjusted p-value from the differential expression table for all records where the total number of subjects is not equal to 45.",
    "query": "SELECT T1.adjpvalue FROM differential_expression AS T1 WHERE T1.subjects_total != 45"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "507_1",
    "user": "gpt-3",
    "question": "Find the DOID values from cancer tissues where the UBERON anatomical ID is not equal to \"UBERON:0001264\".",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0001264\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "507_2",
    "user": "gpt-3",
    "question": "Get the disease ontology ID from the cancer tissue dataset where the Uberon anatomical ID is not equal to \"UBERON:0001264\".",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0001264\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "508_1",
    "user": "gpt-3",
    "question": "Retrieve the name of the anatomical entity that does not have a description stating \"Stalk-like part of the brain that includes amongst its parts the medulla oblongata of the hindbrain and the tegmentum of the midbrain\".",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.description != \"Stalk-like part of the brain that includes amongst its parts the medulla oblongata of the hindbrain and the tegmentum of the midbrain[ZFA,MP,generalized].\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "508_2",
    "user": "gpt-3",
    "question": "What is the name of an anatomical entity that does not have the description \"Stalk-like part of the brain that includes amongst its parts the medulla oblongata of the hindbrain and the tegmentum of the midbrain[ZFA,MP,generalized]\"?",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 WHERE T1.description != \"Stalk-like part of the brain that includes amongst its parts the medulla oblongata of the hindbrain and the tegmentum of the midbrain[ZFA,MP,generalized].\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "509_1",
    "user": "gpt-3",
    "question": "Retrieve the test submission from the FDA biomarker database, where the trade name is not \"BRACAnalysis CDx\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.test_trade_name != \"BRACAnalysis CDx\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "509_2",
    "user": "gpt-3",
    "question": "Find all test submissions in the FDA biomarker database where the trade name is not \"BRACAnalysis CDx\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.test_trade_name != \"BRACAnalysis CDx\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "510_1",
    "user": "gpt-3",
    "question": "Get the biomarker internal ID from the biomarker article where the PubMed ID is not equal to \"16795078\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid != \"16795078\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "510_2",
    "user": "gpt-3",
    "question": "Find the biomarker internal ID from the table \"biomarker_article\" where the PMID is not equal to \"16795078\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid != \"16795078\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "511_1",
    "user": "gpt-3",
    "question": "Find the uberon anatomical ID for all disease mutation tissues, except those with a disease mutation ID of 17312.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 WHERE T1.disease_mutation_id != 17312"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "511_2",
    "user": "gpt-3",
    "question": "What is the uberon anatomical ID for the disease mutation tissue, excluding the one with a disease mutation ID of 17312?",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 WHERE T1.disease_mutation_id != 17312"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "512_1",
    "user": "gpt-3",
    "question": "Retrieve the trade names from biomarker FDA test use where the test submission is not \"K062762\".",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_use AS T1 WHERE T1.test_submission != \"K062762\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "512_2",
    "user": "gpt-3",
    "question": "What are the test trade names in the biomarker FDA test use table where the test submission is not \"K062762\"?",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_use AS T1 WHERE T1.test_submission != \"K062762\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "513_1",
    "user": "gpt-3",
    "question": "What is the biomarker internal ID for the alias \"AKR1B11\" in the table \"biomarker_alias\"?",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_alias AS T1 WHERE T1.alias != \"AKR1B11\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "513_2",
    "user": "gpt-3",
    "question": "Get the biomarker internal ID for all entries in the biomarker alias table where the alias is not \"AKR1B11\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_alias AS T1 WHERE T1.alias != \"AKR1B11\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "514_1",
    "user": "gpt-3",
    "question": "What is the biomarker origin for all entries in the biomarker_fda_test table, where the test manufacturer is not equal to \"23andMe\"?",
    "query": "SELECT T1.biomarker_origin FROM biomarker_fda_test AS T1 WHERE T1.test_manufacturer != \"23andMe\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "514_2",
    "user": "gpt-3",
    "question": "\"What is the origin of the biomarker from the FDA test if it was not manufactured by 23andMe?\"",
    "query": "SELECT T1.biomarker_origin FROM biomarker_fda_test AS T1 WHERE T1.test_manufacturer != \"23andMe\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "515_1",
    "user": "gpt-3",
    "question": "What is the FDA biomarker ID for biomarkers that do not have an NCIT term matching \"DIAPH3\"?",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker != \"DIAPH3\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "515_2",
    "user": "gpt-3",
    "question": "What is the FDA biomarker ID for any biomarkers with an NCIt term that is not equal to \"DIAPH3\"?",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker != \"DIAPH3\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "516_1",
    "user": "gpt-3",
    "question": "Retrieve the UniprotKB accession code for proteins associated with disease mutations that are not linked to the peptide ID \"ENSP00000226253\".",
    "query": "SELECT T1.uniprotkb_ac FROM map_protein_disease_mutation AS T1 WHERE T1.peptide_id != \"ENSP00000226253\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "516_2",
    "user": "gpt-3",
    "question": "Find the UniProtKB accessions for protein-disease-mutation mappings where the peptide ID is not \"ENSP00000226253\".",
    "query": "SELECT T1.uniprotkb_ac FROM map_protein_disease_mutation AS T1 WHERE T1.peptide_id != \"ENSP00000226253\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "517_1",
    "user": "gpt-3",
    "question": "Retrieve the clinical significance for all biomarkers in the FDA test that do not have a Disease Ontology ID of 10283.",
    "query": "SELECT T1.clinical_significance FROM biomarker_fda_test AS T1 WHERE T1.doid != 10283"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "517_2",
    "user": "gpt-3",
    "question": "Find the clinical significance from the biomarker_fda_test table where doid is not equal to 10283.",
    "query": "SELECT T1.clinical_significance FROM biomarker_fda_test AS T1 WHERE T1.doid != 10283"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "518_1",
    "user": "gpt-3",
    "question": "Retrieve the relative gene expression levels from healthy tissues, excluding those from the anatomical structure with ID \"UBERON:0001782\".",
    "query": "SELECT T1.expression_level_gene_relative FROM healthy_expression AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0001782\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "518_2",
    "user": "gpt-3",
    "question": "Retrieve the gene relative expression level from healthy individuals for all anatomical locations except \"UBERON:0001782\".",
    "query": "SELECT T1.expression_level_gene_relative FROM healthy_expression AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0001782\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "519_1",
    "user": "gpt-3",
    "question": "Get the uberon anatomical ID from the disease mutation tissue table where the disease mutation ID is not equal to 13679.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 WHERE T1.disease_mutation_id != 13679"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "519_2",
    "user": "gpt-3",
    "question": "What are the uberon anatomical IDs for all diseases and mutations, excluding the disease mutation with an ID of 13679?",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 WHERE T1.disease_mutation_id != 13679"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "520_1",
    "user": "gpt-3",
    "question": "Retrieve the approved indication for all biomarker FDA tests, excluding the test with a test submission of \"P100033\".",
    "query": "SELECT T1.approved_indication FROM biomarker_fda_test_use AS T1 WHERE T1.test_submission != \"P100033\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "520_2",
    "user": "gpt-3",
    "question": "What are the approved indications for biomarker FDA test use submissions that are not equal to \"P100033\"?",
    "query": "SELECT T1.approved_indication FROM biomarker_fda_test_use AS T1 WHERE T1.test_submission != \"P100033\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "521_1",
    "user": "gpt-3",
    "question": "Get the alias of a biomarker where the internal ID is not equal to \"EDRN00129\".",
    "query": "SELECT T1.alias FROM biomarker_alias AS T1 WHERE T1.biomarker_internal_id != \"EDRN00129\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "521_2",
    "user": "gpt-3",
    "question": "What is the alias for a biomarker that has an internal ID not equal to \"EDRN00129\"?",
    "query": "SELECT T1.alias FROM biomarker_alias AS T1 WHERE T1.biomarker_internal_id != \"EDRN00129\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "522_1",
    "user": "gpt-3",
    "question": "What are the disease mutation IDs that do not have an associated UBERON anatomical ID of \"UBERON:0001833\"?",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0001833\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "522_2",
    "user": "gpt-3",
    "question": "Find the disease mutation IDs for which there is a corresponding tissue with an anatomical ID that is not \"UBERON:0001833\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0001833\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "523_1",
    "user": "gpt-3",
    "question": "Find the name of all diseases from the \"disease\" table except for disease with an id of 3953.",
    "query": "SELECT T1.name FROM disease AS T1 WHERE T1.id != 3953"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "523_2",
    "user": "gpt-3",
    "question": "\"Get the names of all diseases except for disease ID 3953 from the table 'disease'.\"",
    "query": "SELECT T1.name FROM disease AS T1 WHERE T1.id != 3953"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "524_1",
    "user": "gpt-3",
    "question": "\"Retrieve the test trade name from the FDA biomarker database where the test submission is not equal to \"K062765\".\"",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda AS T1 WHERE T1.test_submission != \"K062765\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "524_2",
    "user": "gpt-3",
    "question": "What is the trade name of all tests in the FDA biomarker dataset except for \"K062765\"?",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda AS T1 WHERE T1.test_submission != \"K062765\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "525_1",
    "user": "gpt-3",
    "question": "Retrieve the uniprot canonical ID from the map_uniprot_canonical_id table where the uniprot AC is not equal to \"A2RUT3\".",
    "query": "SELECT T1.uniprotkb_canonical_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_ac != \"A2RUT3\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "525_2",
    "user": "gpt-3",
    "question": "Retrieve the uniprot canonical ID from the map_uniprot_canonical_id table where the uniprot AC is not \"A2RUT3\".",
    "query": "SELECT T1.uniprotkb_canonical_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_ac != \"A2RUT3\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "526_1",
    "user": "gpt-3",
    "question": "Find the PMID of articles where the disease mutation ID is not 52397.",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id != 52397"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "526_2",
    "user": "gpt-3",
    "question": "Retrieve the PMID from articles where the disease mutation ID is not equal to 52397.",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id != 52397"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "527_1",
    "user": "gpt-3",
    "question": "What are the disease ontology IDs from the cancer tissue table where the Uberon anatomical ID is not \"UBERON:0002107\"?",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0002107\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "527_2",
    "user": "gpt-3",
    "question": "Retrieve the Disease Ontology IDs for cancer tissues from the Cancer Tissue table, excluding those with a corresponding Uberon anatomical ID of \"UBERON:0002107\".",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0002107\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "528_1",
    "user": "gpt-3",
    "question": "Retrieve the gene symbol from the xref_gene_ensembl table where the speciesid is not equal to 10090.",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 WHERE T1.speciesid != 10090"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "528_2",
    "user": "gpt-3",
    "question": "Find the gene symbols from xref_gene_ensembl where the speciesid is not equal to 10090.",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 WHERE T1.speciesid != 10090"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "529_1",
    "user": "gpt-3",
    "question": "Find the PMID from the article where the biomarker internal ID is not \"FDA000182\" in the biomarker_article table.",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 WHERE T1.biomarker_internal_id != \"FDA000182\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "529_2",
    "user": "gpt-3",
    "question": "Retrieve the PMID numbers from the biomarker articles table where the biomarker internal ID is not equal to \"FDA000182\".",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 WHERE T1.biomarker_internal_id != \"FDA000182\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "530_1",
    "user": "gpt-3",
    "question": "Find the FDA biomarker ID for biomarkers that have an NCIt term other than \"Deoxycytidine Kinase Gene\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker != \"Deoxycytidine Kinase Gene\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "530_2",
    "user": "gpt-3",
    "question": "\"Retrieve the biomarker FDA ID from the Biomarker FDA NCIT Term table where the NCIT biomarker is not \"Deoxycytidine Kinase Gene\".\"",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker != \"Deoxycytidine Kinase Gene\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "531_1",
    "user": "gpt-3",
    "question": "Retrieve the uberon developmental ID from healthy expression where the ensembl gene ID is not equal to \"ENSG00000054967\".",
    "query": "SELECT T1.uberon_developmental_id FROM healthy_expression AS T1 WHERE T1.ensembl_gene_id != \"ENSG00000054967\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "531_2",
    "user": "gpt-3",
    "question": "Find the uberon developmental ID from healthy expression where the ensembl gene ID is not equal to \"ENSG00000054967\".",
    "query": "SELECT T1.uberon_developmental_id FROM healthy_expression AS T1 WHERE T1.ensembl_gene_id != \"ENSG00000054967\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "532_1",
    "user": "gpt-3",
    "question": "What is the name of all diseases except for disease with an ID of 1909?",
    "query": "SELECT T1.name FROM disease AS T1 WHERE T1.id != 1909"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "532_2",
    "user": "gpt-3",
    "question": "What is the name of all diseases in the database except for disease with ID 1909?",
    "query": "SELECT T1.name FROM disease AS T1 WHERE T1.id != 1909"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "533_1",
    "user": "gpt-3",
    "question": "Find the DOIDs from the Biomarker FDA Test table where the test adoption evidence is not equal to \"clinical use\".",
    "query": "SELECT T1.doid FROM biomarker_fda_test AS T1 WHERE T1.test_adoption_evidence != \"clinical use\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "533_2",
    "user": "gpt-3",
    "question": "What are the DOIDs for all biomarkers in the biomarker_fda_test table that do not have a test adoption evidence of \"clinical use\"?",
    "query": "SELECT T1.doid FROM biomarker_fda_test AS T1 WHERE T1.test_adoption_evidence != \"clinical use\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "534_1",
    "user": "gpt-3",
    "question": "Get the relative gene expression levels from healthy individuals where the anatomical relative expression level is not \"LOW\".",
    "query": "SELECT T1.expression_level_gene_relative FROM healthy_expression AS T1 WHERE T1.expression_level_anatomical_relative != \"LOW\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "534_2",
    "user": "gpt-3",
    "question": "Find the relative expression levels for genes in healthy tissue where the anatomical expression level is not considered \"LOW\".",
    "query": "SELECT T1.expression_level_gene_relative FROM healthy_expression AS T1 WHERE T1.expression_level_anatomical_relative != \"LOW\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "535_1",
    "user": "gpt-3",
    "question": "Find all diseases from the Cancer Tissue database that have a DOID identifier and do not have an Uberon anatomical ID of \"UBERON:0001043\".",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0001043\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "535_2",
    "user": "gpt-3",
    "question": "Find the DOID values from cancer tissues where the UBERON anatomical ID is not equal to \"UBERON:0001043\".",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0001043\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "536_1",
    "user": "gpt-3",
    "question": "Retrieve the description of all anatomical entities that are not named \"caudate-putamen\".",
    "query": "SELECT T1.description FROM anatomical_entity AS T1 WHERE T1.name != \"caudate-putamen\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "536_2",
    "user": "gpt-3",
    "question": "Retrieve the description of all anatomical entities except for the caudate-putamen from the database.",
    "query": "SELECT T1.description FROM anatomical_entity AS T1 WHERE T1.name != \"caudate-putamen\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "537_1",
    "user": "gpt-3",
    "question": "Find the ID numbers of all biomarkers where the biomarker description is not \"The pituitary glycoprotein hormone family includes follicle stimulating hormone (FSH), luteinizing hormone (LH), chorionic gonadotropin (CG), and thyroid-stimulating hormone (TSH). All of these glycoproteins consist of an identical alpha subunit and a hormone-specific beta subunit.  LHB, the beta subunit of luteinizing hormone",
    "query": "SELECT T1.id FROM biomarker AS T1 WHERE T1.biomarker_description != \"The pituitary glycoprotein hormone family includes follicle stimulating hormone (FSH), luteinizing hormone (LH), chorionic gonadotropin (CG), and thyroid-stimulating hormone (TSH). All of these glycoproteins consist of an identical alpha subunit and a hormone-specific beta subunit.  LHB, the beta subunit of luteinizing hormone, confers biological specificity.  LH is expressed in the pituitary gland and promotes spermatogenesis and ovulation by stimulating the testes and ovaries to synthesize steroids. The genes for the beta chains of chorionic gonadotropin and for luteinizing hormone are contiguous on chromosome 19q13.3. Mutations in this gene are associated with hypogonadism which is characterized by infertility and pseudohermaphroditism.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "537_2",
    "user": "gpt-3",
    "question": "What is the ID of the biomarker that has a description other than \"The pituitary glycoprotein hormone family includes follicle stimulating hormone (FSH), luteinizing hormone (LH), chorionic gonadotropin (CG), and thyroid-stimulating hormone (TSH). All of these glycoproteins consist of an identical alpha subunit and a hormone-specific beta subunit.  LHB, the beta subunit of luteinizing hormone,",
    "query": "SELECT T1.id FROM biomarker AS T1 WHERE T1.biomarker_description != \"The pituitary glycoprotein hormone family includes follicle stimulating hormone (FSH), luteinizing hormone (LH), chorionic gonadotropin (CG), and thyroid-stimulating hormone (TSH). All of these glycoproteins consist of an identical alpha subunit and a hormone-specific beta subunit.  LHB, the beta subunit of luteinizing hormone, confers biological specificity.  LH is expressed in the pituitary gland and promotes spermatogenesis and ovulation by stimulating the testes and ovaries to synthesize steroids. The genes for the beta chains of chorionic gonadotropin and for luteinizing hormone are contiguous on chromosome 19q13.3. Mutations in this gene are associated with hypogonadism which is characterized by infertility and pseudohermaphroditism.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "538_1",
    "user": "gpt-3",
    "question": "What is the panel test status for biomarkers that do not have a gene symbol of \"DNAJB6\"?",
    "query": "SELECT T1.test_is_a_panel FROM biomarker AS T1 WHERE T1.gene_symbol != \"DNAJB6\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "538_2",
    "user": "gpt-3",
    "question": "Retrieve whether the test associated with each biomarker is a panel, excluding those that have a gene symbol of \"DNAJB6\".",
    "query": "SELECT T1.test_is_a_panel FROM biomarker AS T1 WHERE T1.gene_symbol != \"DNAJB6\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "539_1",
    "user": "gpt-3",
    "question": "What is the title of the biomarker from the EDRN database where the ID is not \"EDRN00821\"?",
    "query": "SELECT T1.biomarker_title FROM biomarker_edrn AS T1 WHERE T1.id != \"EDRN00821\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "539_2",
    "user": "gpt-3",
    "question": "What is the biomarker title for all biomarkers in the EDRN database, except for \"EDRN00821\"?",
    "query": "SELECT T1.biomarker_title FROM biomarker_edrn AS T1 WHERE T1.id != \"EDRN00821\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "540_1",
    "user": "gpt-3",
    "question": "Get the ID of all anatomical entities that have a name other than \"corpus callosum\".",
    "query": "SELECT T1.id FROM anatomical_entity AS T1 WHERE T1.name != \"corpus callosum\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "540_2",
    "user": "gpt-3",
    "question": "Find the ID of all anatomical entities except for the \"corpus callosum\".",
    "query": "SELECT T1.id FROM anatomical_entity AS T1 WHERE T1.name != \"corpus callosum\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "541_1",
    "user": "gpt-3",
    "question": "Retrieve the gene symbol from the table \"xref_gene_ensembl\" where the Ensembl gene ID is not \"ENSG00000007392\".",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 WHERE T1.ensembl_gene_id != \"ENSG00000007392\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "541_2",
    "user": "gpt-3",
    "question": "What is the gene symbol for all genes in the xref_gene_ensembl table where the Ensembl gene ID is not \"ENSG00000007392\"?",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 WHERE T1.ensembl_gene_id != \"ENSG00000007392\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "542_1",
    "user": "gpt-3",
    "question": "Retrieve the PMID of all articles in which the biomarker internal ID is not \"EDRN00706\".",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 WHERE T1.biomarker_internal_id != \"EDRN00706\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "542_2",
    "user": "gpt-3",
    "question": "What is the PMID of articles that contain a biomarker internal ID other than \"EDRN00706\"?",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 WHERE T1.biomarker_internal_id != \"EDRN00706\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "543_1",
    "user": "gpt-3",
    "question": "What is the FDA NCIt biomarker term for all biomarkers that do not have an ID of \"FDA000242\"?",
    "query": "SELECT T1.ncit_biomarker FROM biomarker_fda_ncit_term AS T1 WHERE T1.biomarker_fda_id != \"FDA000242\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "543_2",
    "user": "gpt-3",
    "question": "Retrieve all the NCIt biomarkers from the Biomarker FDA NCIt Term table, excluding the biomarker with FDA ID \"FDA000242\".",
    "query": "SELECT T1.ncit_biomarker FROM biomarker_fda_ncit_term AS T1 WHERE T1.biomarker_fda_id != \"FDA000242\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "544_1",
    "user": "gpt-3",
    "question": "Retrieve the canonical UniProtKB AC from the table \"map_uniprot_canonical_id\" where the UniProtKB AC is not equal to \"A0A0A0MT93\".",
    "query": "SELECT T1.uniprotkb_canonical_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_ac != \"A0A0A0MT93\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "544_2",
    "user": "gpt-3",
    "question": "\"Retrieve the canonical UniProtKB ID from the table map_uniprot_canonical_id where the UniProtKB accession is not \"A0A0A0MT93\".\"",
    "query": "SELECT T1.uniprotkb_canonical_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_ac != \"A0A0A0MT93\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "545_1",
    "user": "gpt-3",
    "question": "Find the ID of all FDA approved biomarker tests where the test trade name is not \"INSITE HER-2/NEU KIT\".",
    "query": "SELECT T1.id FROM biomarker_fda_test_use AS T1 WHERE T1.test_trade_name != \"INSITE HER-2/NEU KIT\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "545_2",
    "user": "gpt-3",
    "question": "What are the IDs of all biomarker FDA test uses that have a test trade name different from \"INSITE HER-2/NEU KIT\"?",
    "query": "SELECT T1.id FROM biomarker_fda_test_use AS T1 WHERE T1.test_trade_name != \"INSITE HER-2/NEU KIT\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "546_1",
    "user": "gpt-3",
    "question": "Retrieve the canonical UniProtKB ID from the mapping table where the UniProtKB AC is not \"B5MCN3\".",
    "query": "SELECT T1.uniprotkb_canonical_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_ac != \"B5MCN3\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "546_2",
    "user": "gpt-3",
    "question": "Retrieve the canonical UniProtKB ID from the map_uniprot_canonical_id table where the UniProtKB accession number is not equal to \"B5MCN3\".",
    "query": "SELECT T1.uniprotkb_canonical_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_ac != \"B5MCN3\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "547_1",
    "user": "gpt-3",
    "question": "Retrieve the amino acid position from the disease mutation table where the reference amino acid is not \"W\".",
    "query": "SELECT T1.aa_pos_uniprotkb FROM disease_mutation AS T1 WHERE T1.ref_aa != \"W\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "547_2",
    "user": "gpt-3",
    "question": "What is the amino acid position in UniprotKB for disease mutations where the reference amino acid is not \"W\"?",
    "query": "SELECT T1.aa_pos_uniprotkb FROM disease_mutation AS T1 WHERE T1.ref_aa != \"W\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "548_1",
    "user": "gpt-3",
    "question": "Find the direction of expression change for all differential expression where statistical significance is not \"Yes\".",
    "query": "SELECT T1.expression_change_direction FROM differential_expression AS T1 WHERE T1.statistical_significance != \"Yes\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "548_2",
    "user": "gpt-3",
    "question": "Find the expression change direction from differential expression where the statistical significance is not \"Yes\".",
    "query": "SELECT T1.expression_change_direction FROM differential_expression AS T1 WHERE T1.statistical_significance != \"Yes\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "549_1",
    "user": "gpt-3",
    "question": "Find the name of all stages in the stage table except for the one with id \"HsapDv:0000087\".",
    "query": "SELECT T1.name FROM stage AS T1 WHERE T1.id != \"HsapDv:0000087\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "549_2",
    "user": "gpt-3",
    "question": "Find the names of all stages in the \"stage\" table except for the stage with ID \"HsapDv:0000087\".",
    "query": "SELECT T1.name FROM stage AS T1 WHERE T1.id != \"HsapDv:0000087\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "550_1",
    "user": "gpt-3",
    "question": "Retrieve the disease mutation ID from the site annotation table where the description is not \"Purine nucleoside\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_site_annotation AS T1 WHERE T1.description != \"Purine nucleoside\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "550_2",
    "user": "gpt-3",
    "question": "Find the disease mutation site ID from the disease mutation site annotation table where the description is not \"Purine nucleoside\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_site_annotation AS T1 WHERE T1.description != \"Purine nucleoside\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "551_1",
    "user": "gpt-3",
    "question": "Find the PMID of all articles that have a biomarker internal ID different from \"EDRN00305\".",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 WHERE T1.biomarker_internal_id != \"EDRN00305\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "551_2",
    "user": "gpt-3",
    "question": "Get the PubMed IDs of all articles that contain biomarkers, excluding the article with a biomarker internal ID of \"EDRN00305\".",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 WHERE T1.biomarker_internal_id != \"EDRN00305\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "552_1",
    "user": "gpt-3",
    "question": "What is the call quality for healthy expression when the uberon developmental ID is not equal to \"MmusDv:0000045\"?",
    "query": "SELECT T1.call_quality FROM healthy_expression AS T1 WHERE T1.uberon_developmental_id != \"MmusDv:0000045\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "552_2",
    "user": "gpt-3",
    "question": "Get the call quality from healthy expression where the developmental ID is not equal to \"MmusDv:0000045\".",
    "query": "SELECT T1.call_quality FROM healthy_expression AS T1 WHERE T1.uberon_developmental_id != \"MmusDv:0000045\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "553_1",
    "user": "gpt-3",
    "question": "Retrieve the ID of biomarkers from the FDA test use table where the approved indication is not \"prediction\".",
    "query": "SELECT T1.id FROM biomarker_fda_test_use AS T1 WHERE T1.approved_indication != \"prediction\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "553_2",
    "user": "gpt-3",
    "question": "Retrieve the IDs of biomarkers from the FDA test use table where the approved indication is not \"prediction\".",
    "query": "SELECT T1.id FROM biomarker_fda_test_use AS T1 WHERE T1.approved_indication != \"prediction\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "554_1",
    "user": "gpt-3",
    "question": "What is the actual use for biomarker tests where the trade name is not \"Therascreen PIK3CA RGQ PCR Kit\"?",
    "query": "SELECT T1.actual_use FROM biomarker_fda_test_use AS T1 WHERE T1.test_trade_name != \"Therascreen PIK3CA RGQ PCR Kit\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "554_2",
    "user": "gpt-3",
    "question": "What is the actual use of biomarker FDA test use for all tests except for Therascreen PIK3CA RGQ PCR Kit?",
    "query": "SELECT T1.actual_use FROM biomarker_fda_test_use AS T1 WHERE T1.test_trade_name != \"Therascreen PIK3CA RGQ PCR Kit\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "555_1",
    "user": "gpt-3",
    "question": "Get the approved indication from biomarker FDA test use where the id is not equal to 62.",
    "query": "SELECT T1.approved_indication FROM biomarker_fda_test_use AS T1 WHERE T1.id != 62"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "555_2",
    "user": "gpt-3",
    "question": "Retrieve the approved indication for all biomarkers except the one with an ID of 62 from the FDA test use table.",
    "query": "SELECT T1.approved_indication FROM biomarker_fda_test_use AS T1 WHERE T1.id != 62"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "556_1",
    "user": "gpt-3",
    "question": "Retrieve the expression level for anatomical locations from healthy individuals where the call quality is not equal to \"GOLD\".",
    "query": "SELECT T1.expression_level_anatomical_relative FROM healthy_expression AS T1 WHERE T1.call_quality != \"GOLD\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "556_2",
    "user": "gpt-3",
    "question": "Retrieve the relative expression levels in anatomical regions from healthy individuals where the call quality is not \"GOLD\".",
    "query": "SELECT T1.expression_level_anatomical_relative FROM healthy_expression AS T1 WHERE T1.call_quality != \"GOLD\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "557_1",
    "user": "gpt-3",
    "question": "Find the test manufacturer from the FDA biomarker test where the clinical significance is not \"The therascreen KRAS RGQ PCR Kit is a real-time qualitative PCR assay used on the Rotor-Gene Q MDx instrument for the detection of seven somatic mutations in the human KRAS oncogene, using DNA extracted from formalin-fixed paraffin-embedded (FFPE), colorectal cancer (CRC) tissue.\".",
    "query": "SELECT T1.test_manufacturer FROM biomarker_fda_test AS T1 WHERE T1.clinical_significance != \"The therascreen KRAS RGQ PCR Kit is a real-time qualitative PCR assay used on the Rotor-Gene Q MDx instrument for the detection of seven somatic mutations in the human KRAS oncogene, using DNA extracted from formalin-fixed paraffin-embedded (FFPE), colorectal cancer (CRC) tissue.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "557_2",
    "user": "gpt-3",
    "question": "Retrieve the name of the test manufacturer for biomarker FDA tests where the clinical significance is not equal to \"The therascreen KRAS RGQ PCR Kit is a real-time qualitative PCR assay used on the Rotor-Gene Q MDx instrument for the detection of seven somatic mutations in the human KRAS oncogene, using DNA extracted from formalin-fixed paraffin-embedded (FFPE), colorectal cancer (CRC) tissue.\"",
    "query": "SELECT T1.test_manufacturer FROM biomarker_fda_test AS T1 WHERE T1.clinical_significance != \"The therascreen KRAS RGQ PCR Kit is a real-time qualitative PCR assay used on the Rotor-Gene Q MDx instrument for the detection of seven somatic mutations in the human KRAS oncogene, using DNA extracted from formalin-fixed paraffin-embedded (FFPE), colorectal cancer (CRC) tissue.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "558_1",
    "user": "gpt-3",
    "question": "Retrieve the disease ontology ID from the differential expression table where the number of subjects down is not equal to 43.",
    "query": "SELECT T1.doid FROM differential_expression AS T1 WHERE T1.subjects_down != 43"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "558_2",
    "user": "gpt-3",
    "question": "Find the DOIDs of differential expression studies where the number of subjects with decreased expression is not equal to 43.",
    "query": "SELECT T1.doid FROM differential_expression AS T1 WHERE T1.subjects_down != 43"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "559_1",
    "user": "gpt-3",
    "question": "Find the internal ID of a biomarker from the \"biomarker_article\" table where the PMID is not equal to \"21300873\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid != \"21300873\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "559_2",
    "user": "gpt-3",
    "question": "Retrieve the biomarker internal ID from the biomarker_article table where the PMID is not equal to \"21300873\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 WHERE T1.pmid != \"21300873\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "560_1",
    "user": "gpt-3",
    "question": "Find the biomarker ID of all biomarkers where the description is not \"PNP, a cytoplasmic protein, is an enzyme which reversibly catalyzes the phosphorolysis of purine nucleosides. The enzyme is trimeric, containing three identical subunits. Defects in PNP are the cause of purine nucleoside phosphorylase deficiency (PNP deficiency) which leads to a severe T-cell immunodeficiency with neurologic disorder in children",
    "query": "SELECT T1.biomarker_id FROM biomarker AS T1 WHERE T1.biomarker_description != \"PNP, a cytoplasmic protein, is an enzyme which reversibly catalyzes the phosphorolysis of purine nucleosides. The enzyme is trimeric, containing three identical subunits. Defects in PNP are the cause of purine nucleoside phosphorylase deficiency (PNP deficiency) which leads to a severe T-cell immunodeficiency with neurologic disorder in children. PNP mutations also affect B-cell immunity and antibody responses.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "560_2",
    "user": "gpt-3",
    "question": "Find the biomarker ID for all biomarkers whose description is not \"PNP, a cytoplasmic protein, is an enzyme which reversibly catalyzes the phosphorolysis of purine nucleosides. The enzyme is trimeric, containing three identical subunits. Defects in PNP are the cause of purine nucleoside phosphorylase deficiency (PNP deficiency) which leads to a severe T-cell immunodeficiency with neurologic disorder in children.",
    "query": "SELECT T1.biomarker_id FROM biomarker AS T1 WHERE T1.biomarker_description != \"PNP, a cytoplasmic protein, is an enzyme which reversibly catalyzes the phosphorolysis of purine nucleosides. The enzyme is trimeric, containing three identical subunits. Defects in PNP are the cause of purine nucleoside phosphorylase deficiency (PNP deficiency) which leads to a severe T-cell immunodeficiency with neurologic disorder in children. PNP mutations also affect B-cell immunity and antibody responses.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "561_1",
    "user": "gpt-3",
    "question": "Retrieve the names of all species from the species table, excluding those with a speciesid of 9606.",
    "query": "SELECT T1.species FROM species AS T1 WHERE T1.speciesid != 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "561_2",
    "user": "gpt-3",
    "question": "Find all species names from the database of species except for the one with an ID of 9606.",
    "query": "SELECT T1.species FROM species AS T1 WHERE T1.speciesid != 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "562_1",
    "user": "gpt-3",
    "question": "Get the peptide ID from the map of protein-disease mutations where the UniProtKB AC is not \"E5RH73\".",
    "query": "SELECT T1.peptide_id FROM map_protein_disease_mutation AS T1 WHERE T1.uniprotkb_ac != \"E5RH73\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "562_2",
    "user": "gpt-3",
    "question": "Find the peptide ID from the map of protein-disease mutations where the UniProtKB accession number is not \"E5RH73\".",
    "query": "SELECT T1.peptide_id FROM map_protein_disease_mutation AS T1 WHERE T1.uniprotkb_ac != \"E5RH73\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "563_1",
    "user": "gpt-3",
    "question": "What are the biomarker titles from the biomarker_edrn table where the QA state is not \"Curated\"?",
    "query": "SELECT T1.biomarker_title FROM biomarker_edrn AS T1 WHERE T1.qa_state != \"Curated\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "563_2",
    "user": "gpt-3",
    "question": "Retrieve the biomarker titles from the biomarker_edrn table where the QA state is not \"Curated\".",
    "query": "SELECT T1.biomarker_title FROM biomarker_edrn AS T1 WHERE T1.qa_state != \"Curated\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "564_1",
    "user": "gpt-3",
    "question": "Get the expression scores from the table of healthy expressions for all entries where the relative anatomical expression level is not \"ABSENT\".",
    "query": "SELECT T1.expression_score FROM healthy_expression AS T1 WHERE T1.expression_level_anatomical_relative != \"ABSENT\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "564_2",
    "user": "gpt-3",
    "question": "Retrieve the expression scores from healthy_expression where the expression level anatomical relative is not \"ABSENT\".",
    "query": "SELECT T1.expression_score FROM healthy_expression AS T1 WHERE T1.expression_level_anatomical_relative != \"ABSENT\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "565_1",
    "user": "gpt-3",
    "question": "What is the test submission for the FDA biomarker test trial that does not have a trade name of \"BRACAnalysis CDx\"?",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name != \"BRACAnalysis CDx\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "565_2",
    "user": "gpt-3",
    "question": "Find the test submission from the FDA biomarker test trials where the test trade name is not \"BRACAnalysis CDx\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name != \"BRACAnalysis CDx\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "566_1",
    "user": "gpt-3",
    "question": "Retrieve the gene symbol from the differential expression table where the adjusted p-value is not equal to 6.74e-12.",
    "query": "SELECT T1.gene_symbol FROM differential_expression AS T1 WHERE T1.adjpvalue != 6.74e-122"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "566_2",
    "user": "gpt-3",
    "question": "What is the gene symbol of all entries in the differential expression table where the adjusted p-value is not equal to 6.74e-12?",
    "query": "SELECT T1.gene_symbol FROM differential_expression AS T1 WHERE T1.adjpvalue != 6.74e-122"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "567_1",
    "user": "gpt-3",
    "question": "Get the feature key from the disease mutation site annotation table where the disease mutation id is not equal to 307527.",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1 WHERE T1.disease_mutation_id != 307527"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "567_2",
    "user": "gpt-3",
    "question": "Retrieve the feature key from the disease mutation site annotation table where the disease mutation ID is not equal to 307527.",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1 WHERE T1.disease_mutation_id != 307527"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "568_1",
    "user": "gpt-3",
    "question": "Find the disease mutation IDs for which there is a mismatch between the associated tissue and the UBERON anatomical ID \"UBERON:0001043\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0001043\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "568_2",
    "user": "gpt-3",
    "question": "Find the disease mutation IDs from the table disease_mutation_tissue where the uberon_anatomical_id is not equal to \"UBERON:0001043\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0001043\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "569_1",
    "user": "gpt-3",
    "question": "Retrieve the test trade name from the biomarker FDA test trial where the test submission is not \"P160018\".",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_trial AS T1 WHERE T1.test_submission != \"P160018\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "569_2",
    "user": "gpt-3",
    "question": "What is the trade name for all biomarker FDA test trials where the test submission is not \"P160018\"?",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_trial AS T1 WHERE T1.test_submission != \"P160018\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "570_1",
    "user": "gpt-3",
    "question": "Retrieve the disease ontology ID from the cancer tissue database, where the corresponding Uberon anatomical ID is not equal to \"UBERON:0002048\".",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0002048\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "570_2",
    "user": "gpt-3",
    "question": "Find the disease ontology IDs from cancer tissues where the associated Uberon anatomical ID is not \"UBERON:0002048\".",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0002048\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "571_1",
    "user": "gpt-3",
    "question": "What is the NCIt biomarker term for the FDA biomarker with the ID \"GPR160\"?",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker != \"GPR160\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "571_2",
    "user": "gpt-3",
    "question": "What is the FDA biomarker ID for the NCIT biomarker \"GPR160\"?",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 WHERE T1.ncit_biomarker != \"GPR160\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "572_1",
    "user": "gpt-3",
    "question": "What is the FDA NCIT term for biomarkers, excluding the term for biomarker with ID \"FDA000249\"?",
    "query": "SELECT T1.ncit_biomarker FROM biomarker_fda_ncit_term AS T1 WHERE T1.biomarker_fda_id != \"FDA000249\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "572_2",
    "user": "gpt-3",
    "question": "Retrieve the NCIt biomarker term from the table of FDA biomarkers, excluding any entries with an FDA ID of \"FDA000249\".",
    "query": "SELECT T1.ncit_biomarker FROM biomarker_fda_ncit_term AS T1 WHERE T1.biomarker_fda_id != \"FDA000249\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "573_1",
    "user": "gpt-3",
    "question": "Find the ID of all biomarkers in the FDA database that do not have a test trade name of \"FoundationFocus CDxBRCA\".",
    "query": "SELECT T1.id FROM biomarker_fda AS T1 WHERE T1.test_trade_name != \"FoundationFocus CDxBRCA\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "573_2",
    "user": "gpt-3",
    "question": "Find the ID of all biomarkers from the FDA database that have a test trade name other than \"FoundationFocus CDxBRCA\".",
    "query": "SELECT T1.id FROM biomarker_fda AS T1 WHERE T1.test_trade_name != \"FoundationFocus CDxBRCA\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "574_1",
    "user": "gpt-3",
    "question": "Find the Uberon anatomical ID from cancer tissue where the DOID is not equal to 3571.",
    "query": "SELECT T1.uberon_anatomical_id FROM cancer_tissue AS T1 WHERE T1.doid != 3571"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "574_2",
    "user": "gpt-3",
    "question": "Retrieve the Uberon anatomical ID for all cancer tissues where the DOID is not equal to 3571.",
    "query": "SELECT T1.uberon_anatomical_id FROM cancer_tissue AS T1 WHERE T1.doid != 3571"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "575_1",
    "user": "gpt-3",
    "question": "\"Retrieve the feature key from the disease mutation site annotation table where the id is not equal to 1269.\"",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1 WHERE T1.id != 1269"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "575_2",
    "user": "gpt-3",
    "question": "What is the feature key of all disease mutation sites, excluding the site with an ID of 1269?",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1 WHERE T1.id != 1269"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "576_1",
    "user": "gpt-3",
    "question": "What is the PMID of articles that are related to disease mutation but not specifically related to ID number 102881?",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id != 102881"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "576_2",
    "user": "gpt-3",
    "question": "Retrieve the PMID for all articles in which a disease mutation is not associated with ID 102881 from the \"disease_mutation_article\" table.",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id != 102881"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "577_1",
    "user": "gpt-3",
    "question": "Find the test trial ID from biomarker FDA test trial where the test trade name is not \"GeneSearch Breast Lymph Node (BLN) Test Kit\".",
    "query": "SELECT T1.test_trial_id FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name != \"GeneSearch Breast Lymph Node (BLN) Test Kit\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "577_2",
    "user": "gpt-3",
    "question": "Find the test trial ID from the FDA biomarker test trials where the test trade name is not \"GeneSearch Breast Lymph Node (BLN) Test Kit\".",
    "query": "SELECT T1.test_trial_id FROM biomarker_fda_test_trial AS T1 WHERE T1.test_trade_name != \"GeneSearch Breast Lymph Node (BLN) Test Kit\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "578_1",
    "user": "gpt-3",
    "question": "Retrieve the Ensembl gene IDs from the Xref Gene Ensembl table for all species except for 9606.",
    "query": "SELECT T1.ensembl_gene_id FROM xref_gene_ensembl AS T1 WHERE T1.speciesid != 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "578_2",
    "user": "gpt-3",
    "question": "Get the Ensembl gene ID for all genes in the xref_gene_ensembl table where the species ID is not equal to 9606.",
    "query": "SELECT T1.ensembl_gene_id FROM xref_gene_ensembl AS T1 WHERE T1.speciesid != 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "579_1",
    "user": "gpt-3",
    "question": "Get the Ensembl transcript ID from the map of protein, disease, and mutation where the peptide ID is not \"ENSP00000216733\".",
    "query": "SELECT T1.ensembl_transcript_id FROM map_protein_disease_mutation AS T1 WHERE T1.peptide_id != \"ENSP00000216733\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "579_2",
    "user": "gpt-3",
    "question": "Find the Ensembl transcript IDs from the map of protein-disease mutations where the peptide ID is not \"ENSP00000216733\".",
    "query": "SELECT T1.ensembl_transcript_id FROM map_protein_disease_mutation AS T1 WHERE T1.peptide_id != \"ENSP00000216733\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "580_1",
    "user": "gpt-3",
    "question": "Get the expression level anatomical relative from the table healthy_expression, but only for rows where the developmental identifier is not \"MmusDv:0000076\".",
    "query": "SELECT T1.expression_level_anatomical_relative FROM healthy_expression AS T1 WHERE T1.uberon_developmental_id != \"MmusDv:0000076\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "580_2",
    "user": "gpt-3",
    "question": "Retrieve the relative expression levels in anatomical structures for healthy samples where the developmental stage is not \"adult\".",
    "query": "SELECT T1.expression_level_anatomical_relative FROM healthy_expression AS T1 WHERE T1.uberon_developmental_id != \"MmusDv:0000076\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "581_1",
    "user": "gpt-3",
    "question": "Get the total number of subjects from the differential expression table where the p-value is not equal to 3.02e-235.",
    "query": "SELECT T1.subjects_total FROM differential_expression AS T1 WHERE T1.pvalue != 3.02e-235"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "581_2",
    "user": "gpt-3",
    "question": "Retrieve the total number of subjects from the differential expression table where the p-value is not equal to 3.02e-235.",
    "query": "SELECT T1.subjects_total FROM differential_expression AS T1 WHERE T1.pvalue != 3.02e-235"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "582_1",
    "user": "gpt-3",
    "question": "What is the description of all anatomical entities except for \"CL:0002180\"?",
    "query": "SELECT T1.description FROM anatomical_entity AS T1 WHERE T1.id != \"CL:0002180\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "582_2",
    "user": "gpt-3",
    "question": "Get the description of all anatomical entities except for \"CL:0002180\".",
    "query": "SELECT T1.description FROM anatomical_entity AS T1 WHERE T1.id != \"CL:0002180\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "583_1",
    "user": "gpt-3",
    "question": "Get the test submission from the FDA biomarker data where the ID is not \"FDA000006\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.id != \"FDA000006\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "583_2",
    "user": "gpt-3",
    "question": "Retrieve the test submissions from the FDA biomarker database, excluding the entry with an ID of \"FDA000006\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 WHERE T1.id != \"FDA000006\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "584_1",
    "user": "gpt-3",
    "question": "\"Retrieve the name of all stages excluding the one with ID 'UBERON:0034920' from the stage table.\"",
    "query": "SELECT T1.name FROM stage AS T1 WHERE T1.id != \"UBERON:0034920\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "584_2",
    "user": "gpt-3",
    "question": "What is the name of all stages except \"UBERON:0034920\" in the stage table?",
    "query": "SELECT T1.name FROM stage AS T1 WHERE T1.id != \"UBERON:0034920\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "585_1",
    "user": "gpt-3",
    "question": "Find the Uberon anatomical ID for cancer tissues that are not associated with DOID 363.",
    "query": "SELECT T1.uberon_anatomical_id FROM cancer_tissue AS T1 WHERE T1.doid != 363"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "585_2",
    "user": "gpt-3",
    "question": "Get the uberon anatomical ID from the cancer tissue table for all rows where the disease ontology ID is not equal to 363.",
    "query": "SELECT T1.uberon_anatomical_id FROM cancer_tissue AS T1 WHERE T1.doid != 363"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "586_1",
    "user": "gpt-3",
    "question": "Retrieve the test submissions from biomarker FDA test use where the actual use is not \"prognostic\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test_use AS T1 WHERE T1.actual_use != \"prognostic\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "586_2",
    "user": "gpt-3",
    "question": "Retrieve the test submissions from the biomarker FDA test use table where the actual use is not \"prognostic\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test_use AS T1 WHERE T1.actual_use != \"prognostic\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "587_1",
    "user": "gpt-3",
    "question": "Find the actual use for a biomarker FDA test that does not have a test submission with the ID \"K062728\".",
    "query": "SELECT T1.actual_use FROM biomarker_fda_test_use AS T1 WHERE T1.test_submission != \"K062728\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "587_2",
    "user": "gpt-3",
    "question": "Retrieve the actual use of biomarker FDA tests from the table \"biomarker_fda_test_use\" where the test submission is not equal to \"K062728\".",
    "query": "SELECT T1.actual_use FROM biomarker_fda_test_use AS T1 WHERE T1.test_submission != \"K062728\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "588_1",
    "user": "gpt-3",
    "question": "Get the disease and mutation ID from the article on disease-mutation associations, excluding the article with PMID 17668422.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_article AS T1 WHERE T1.pmid != 17668422"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "588_2",
    "user": "gpt-3",
    "question": "What is the disease mutation ID for all articles in which the PubMed ID is not 17668422?",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_article AS T1 WHERE T1.pmid != 17668422"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "589_1",
    "user": "gpt-3",
    "question": "What is the alias of the biomarker with internal ID \"EDRN00749\" in the table \"biomarker_alias\"?",
    "query": "SELECT T1.alias FROM biomarker_alias AS T1 WHERE T1.biomarker_internal_id != \"EDRN00749\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "589_2",
    "user": "gpt-3",
    "question": "Retrieve all aliases of biomarkers, excluding the alias for biomarker with internal ID \"EDRN00749\".",
    "query": "SELECT T1.alias FROM biomarker_alias AS T1 WHERE T1.biomarker_internal_id != \"EDRN00749\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "590_1",
    "user": "gpt-3",
    "question": "Get the genus of all species in the database except for the one with a speciesid of 9606.",
    "query": "SELECT T1.genus FROM species AS T1 WHERE T1.speciesid != 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "590_2",
    "user": "gpt-3",
    "question": "What are the genus names of all species in the species table where the speciesid is not equal to 9606?",
    "query": "SELECT T1.genus FROM species AS T1 WHERE T1.speciesid != 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "591_1",
    "user": "gpt-3",
    "question": "Find the PMID for biomarker articles where the internal ID is not \"EDRN00801\".",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 WHERE T1.biomarker_internal_id != \"EDRN00801\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "591_2",
    "user": "gpt-3",
    "question": "Find the PMID numbers for articles in which the biomarker internal ID is not \"EDRN00801\".",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 WHERE T1.biomarker_internal_id != \"EDRN00801\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "592_1",
    "user": "gpt-3",
    "question": "Get the description of all disease mutation site annotations, excluding those with a feature key of \"natural variant\".",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.feature_key != \"natural variant\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "592_2",
    "user": "gpt-3",
    "question": "What are the descriptions of disease mutation site annotations where the feature key is not \"natural variant\"?",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.feature_key != \"natural variant\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "593_1",
    "user": "gpt-3",
    "question": "Retrieve the name of all stages except for \"HsapDv:0000086\" from the stage table.",
    "query": "SELECT T1.name FROM stage AS T1 WHERE T1.id != \"HsapDv:0000086\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "593_2",
    "user": "gpt-3",
    "question": "\"Retrieve the name of all stages except for 'HsapDv:0000086' from the stage table.\"",
    "query": "SELECT T1.name FROM stage AS T1 WHERE T1.id != \"HsapDv:0000086\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "594_1",
    "user": "gpt-3",
    "question": "What is the uniprot AC for the canonical ID in the map_uniprot_canonical_id table, where the uniprotkb_canonical_ac is not equal to \"E5RHQ5-1\"?",
    "query": "SELECT T1.uniprotkb_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_canonical_ac != \"E5RHQ5-1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "594_2",
    "user": "gpt-3",
    "question": "What is the UniProtKB canonical ID for all entries in the map_uniprot_canonical_id table where the UniProtKB canonical AC is not equal to \"E5RHQ5-1\"?",
    "query": "SELECT T1.uniprotkb_ac FROM map_uniprot_canonical_id AS T1 WHERE T1.uniprotkb_canonical_ac != \"E5RHQ5-1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "595_1",
    "user": "gpt-3",
    "question": "Find the uberon anatomical IDs from disease mutation tissue where the disease mutation ID is not equal to 4798.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 WHERE T1.disease_mutation_id != 4798"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "595_2",
    "user": "gpt-3",
    "question": "Get the uberon anatomical ID for the disease mutation tissue where the disease mutation ID is not equal to 4798.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 WHERE T1.disease_mutation_id != 4798"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "596_1",
    "user": "gpt-3",
    "question": "What is the FDA biomarker ID for a drug that is not equal to \"5484725\"?",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_drug != \"5484725\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "596_2",
    "user": "gpt-3",
    "question": "Find the biomarker FDA ID from the table \"biomarker_fda_drug\" where the biomarker drug is not equal to \"5484725\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_drug != \"5484725\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "597_1",
    "user": "gpt-3",
    "question": "Retrieve the stage ID from the \"stage\" table where the name is not \"4-7 days (mouse)\".",
    "query": "SELECT T1.id FROM stage AS T1 WHERE T1.name != \"4-7 days (mouse)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "597_2",
    "user": "gpt-3",
    "question": "Get the stage ID from the \"stage\" table where the name is not equal to \"4-7 days (mouse)\".",
    "query": "SELECT T1.id FROM stage AS T1 WHERE T1.name != \"4-7 days (mouse)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "598_1",
    "user": "gpt-3",
    "question": "Retrieve the biomarker FDA ID from the biomarker FDA drug table where the biomarker drug is not equal to \"31703\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_drug != \"31703\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "598_2",
    "user": "gpt-3",
    "question": "Find the biomarker FDA IDs from the biomarker FDA drug table where the biomarker drug is not equal to \"31703\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_drug AS T1 WHERE T1.biomarker_drug != \"31703\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "599_1",
    "user": "gpt-3",
    "question": "Find the PubMed ID numbers for all articles where the disease mutation ID is not equal to 61489.",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id != 61489"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "599_2",
    "user": "gpt-3",
    "question": "Find the PMID of articles that contain a disease mutation other than 61489.",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 WHERE T1.disease_mutation_id != 61489"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "600_1",
    "user": "gpt-3",
    "question": "Find the number of subjects with no change in differential expression except for those with the disease DOID 1324.",
    "query": "SELECT T1.subjects_nochange FROM differential_expression AS T1 WHERE T1.doid != 1324"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "600_2",
    "user": "gpt-3",
    "question": "Retrieve the number of subjects with no changes in differential expression from the table \"differential_expression\" excluding entries where the DOID is equal to 1324.",
    "query": "SELECT T1.subjects_nochange FROM differential_expression AS T1 WHERE T1.doid != 1324"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "601_1",
    "user": "gpt-3",
    "question": "What is the number of genes tested by biomarker FDA tests where the test manufacturer is not Dako Denmark A/S?",
    "query": "SELECT T1.test_number_genes FROM biomarker_fda_test AS T1 WHERE T1.test_manufacturer != \"Dako Denmark A/S\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "601_2",
    "user": "gpt-3",
    "question": "What is the number of genes tested by biomarker FDA tests where the manufacturer is not Dako Denmark A/S?",
    "query": "SELECT T1.test_number_genes FROM biomarker_fda_test AS T1 WHERE T1.test_manufacturer != \"Dako Denmark A/S\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "602_1",
    "user": "gpt-3",
    "question": "Find the DOID for cancer tissues that do not have a UBERON anatomical ID of \"UBERON:0002046\".",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0002046\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "602_2",
    "user": "gpt-3",
    "question": "Retrieve the disease ontology identifier from cancer tissue data where the Uberon anatomical ID is not equal to \"UBERON:0002046\".",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0002046\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "603_1",
    "user": "gpt-3",
    "question": "What is the Disease Ontology ID for cancer tissue that does not have a Uberon anatomical ID of \"UBERON:0000310\"?",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0000310\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "603_2",
    "user": "gpt-3",
    "question": "Find the cancer tissue's Disease Ontology ID from the Cancer Tissue table where the corresponding Uberon anatomical ID is not \"UBERON:0000310\".",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 WHERE T1.uberon_anatomical_id != \"UBERON:0000310\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "604_1",
    "user": "gpt-3",
    "question": "What is the description of the disease mutation site annotation where the feature key is not \"modified residue\"?",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.feature_key != \"modified residue\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "604_2",
    "user": "gpt-3",
    "question": "What is the description of all disease mutation site annotations where the feature key is not \"modified residue\"?",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 WHERE T1.feature_key != \"modified residue\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "605_1",
    "user": "gpt-3",
    "question": "What are the IDs of diseases that have a relationship with the cancer tissue DOID and do not have an associated UBERON anatomical ID of UBERON:0007811?",
    "query": "SELECT T1.id FROM disease AS T1 JOIN cancer_tissue AS T2 ON T1.id = T2.doid WHERE T2.uberon_anatomical_id != \"UBERON:0007811\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "605_2",
    "user": "gpt-3",
    "question": "Retrieve the ID of all diseases from the disease table that are associated with a cancer tissue in the cancer_tissue table, but not specifically associated with the anatomical location \"skin\".",
    "query": "SELECT T1.id FROM disease AS T1 JOIN cancer_tissue AS T2 ON T1.id = T2.doid WHERE T2.uberon_anatomical_id != \"UBERON:0007811\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "606_1",
    "user": "gpt-3",
    "question": "What is the study design for biomarker FDA tests where the actual use is not predisposition?",
    "query": "SELECT T1.test_study_design FROM biomarker_fda_test AS T1 JOIN biomarker_fda_test_use AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.actual_use != \"predisposition\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "606_2",
    "user": "gpt-3",
    "question": "What are the study designs used for FDA biomarker tests whose actual use is not predisposition?",
    "query": "SELECT T1.test_study_design FROM biomarker_fda_test AS T1 JOIN biomarker_fda_test_use AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.actual_use != \"predisposition\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "607_1",
    "user": "gpt-3",
    "question": "Find all test submissions from the FDA database for biomarkers that have a histological type that is not 8500/2 (ductal carcinoma in situ) or 8520/2 (lobular carcinoma in situ).",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.histological_type != \"8500/2 (ductal carcinoma in situ) OR 8520/2 (lobular carcinoma in situ)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "607_2",
    "user": "gpt-3",
    "question": "Retrieve all test submissions from the FDA biomarker database for which the associated histological type is not 8500/2 or 8520/2 (ductal carcinoma in situ or lobular carcinoma in situ), using data from both the biomarker_fda and biomarker_fda_test tables.",
    "query": "SELECT T1.test_submission FROM biomarker_fda AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.histological_type != \"8500/2 (ductal carcinoma in situ) OR 8520/2 (lobular carcinoma in situ)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "608_1",
    "user": "gpt-3",
    "question": "Get the gene symbol from the xref_gene_ensembl table for species that are not in the genus \"Mus\".",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 JOIN species AS T2 ON T1.speciesid = T2.speciesid WHERE T2.genus != \"Mus\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "608_2",
    "user": "gpt-3",
    "question": "Get the gene symbol from the xref_gene_ensembl table for all species that are not of the genus \"Mus\".",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 JOIN species AS T2 ON T1.speciesid = T2.speciesid WHERE T2.genus != \"Mus\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "609_1",
    "user": "gpt-3",
    "question": "Find the PubMed ID of articles that have a disease mutation that is not located at chromosome position 287568.",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.chromosome_pos != 287568"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "609_2",
    "user": "gpt-3",
    "question": "Retrieve the PubMed ID for articles on disease mutations that do not have a specific chromosome position.",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.chromosome_pos != 287568"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "610_1",
    "user": "gpt-3",
    "question": "Find the PMID values from biomarker_article for all articles where the biomarker description is not \"S100 calcium binding protein B\" and the biomarker_internal_id is equal to the id value in biomarker.",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.biomarker_description != \"S100 calcium binding protein B\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "610_2",
    "user": "gpt-3",
    "question": "Find the PMID numbers for articles where the biomarker's description is not \"S100 calcium binding protein B\".",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.biomarker_description != \"S100 calcium binding protein B\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "611_1",
    "user": "gpt-3",
    "question": "What is the DOID for cancer tissue that corresponds to an anatomical entity where the description is not \"Region of cortex near to the rhinal sulcus. It is defined differently in different nomenclatures, due in part to the lack of agreement on the definition of the border of this region. In the rat, the perirhinal cortex occupies only caudal levels of the rhinal sulcus while in the monkey, it occurpies the full rostrocaudal extent of",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.description != \"Region of cortex near to the rhinal sulcus. It is defined differently in different nomenclatures, due in part to the lack of agreement on the definition of the border of this region. In the rat, the perirhinal cortex occupies only caudal levels of the rhinal sulcus while in the monkey, it occurpies the full rostrocaudal extent of the rhinal sulcus (Burwell et al., Hippocampus, 5: 390-408, 1995).\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "611_2",
    "user": "gpt-3",
    "question": "What is the name of the cancer tissue in which the description of the corresponding anatomical entity is not equal to \"Region of cortex near to the rhinal sulcus. It is defined differently in different nomenclatures, due in part to the lack of agreement on the definition of the border of this region. In the rat, the perirhinal cortex occupies only caudal levels of the rhinal sulcus while in the monkey, it occurpies",
    "query": "SELECT T1.doid FROM cancer_tissue AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.description != \"Region of cortex near to the rhinal sulcus. It is defined differently in different nomenclatures, due in part to the lack of agreement on the definition of the border of this region. In the rat, the perirhinal cortex occupies only caudal levels of the rhinal sulcus while in the monkey, it occurpies the full rostrocaudal extent of the rhinal sulcus (Burwell et al., Hippocampus, 5: 390-408, 1995).\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "612_1",
    "user": "gpt-3",
    "question": "Retrieve the peptide position from disease mutations where the impact prediction ID is not equal to 9737, joined with the disease mutation impact prediction table on matching IDs.",
    "query": "SELECT T1.peptide_pos FROM disease_mutation AS T1 JOIN disease_mutation_impact_prediction AS T2 ON T1.id = T2.disease_mutation_id WHERE T2.id != 9737"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "612_2",
    "user": "gpt-3",
    "question": "Retrieve the peptide positions from the disease mutation table where the impact prediction id is not 9737, joined with the disease mutation impact prediction table on their respective IDs.",
    "query": "SELECT T1.peptide_pos FROM disease_mutation AS T1 JOIN disease_mutation_impact_prediction AS T2 ON T1.id = T2.disease_mutation_id WHERE T2.id != 9737"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "613_1",
    "user": "gpt-3",
    "question": "Retrieve the species ID from the cross-reference table between Ensembl gene IDs and gene expression data for healthy samples, where the call quality in the gene expression data is not \"SILVER\".",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 JOIN healthy_expression AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.call_quality != \"SILVER\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "613_2",
    "user": "gpt-3",
    "question": "Retrieve the species ID from the table containing cross-referenced gene IDs and Ensembl gene IDs, for those entries where the call quality in a separate table of healthy expression data is not \"SILVER\".",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 JOIN healthy_expression AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.call_quality != \"SILVER\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "614_1",
    "user": "gpt-3",
    "question": "Retrieve the expression rank score from healthy expression data for all developmental stages except for neonate stage, based on their corresponding IDs in the stage table.",
    "query": "SELECT T1.expression_rank_score FROM healthy_expression AS T1 JOIN stage AS T2 ON T1.uberon_developmental_id = T2.id WHERE T2.name != \"neonate stage\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "614_2",
    "user": "gpt-3",
    "question": "Retrieve the expression rank score from healthy_expression where the stage name is not \"neonate stage\" by joining it with the id of uberon_developmental_id in stage.",
    "query": "SELECT T1.expression_rank_score FROM healthy_expression AS T1 JOIN stage AS T2 ON T1.uberon_developmental_id = T2.id WHERE T2.name != \"neonate stage\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "615_1",
    "user": "gpt-3",
    "question": "Find the feature key from the disease mutation site annotation table for all disease mutations except for the one with ID 12787.",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.id != 12787"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "615_2",
    "user": "gpt-3",
    "question": "Retrieve the feature key from the disease mutation site annotation table for all disease mutations except for the one with an ID of 12787.",
    "query": "SELECT T1.feature_key FROM disease_mutation_site_annotation AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.id != 12787"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "616_1",
    "user": "gpt-3",
    "question": "Get the disease-mutation IDs from articles where the chromosome ID associated with the disease mutation is not equal to \"10\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_article AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.chromosome_id != \"10\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "616_2",
    "user": "gpt-3",
    "question": "Get the disease mutation IDs from the disease mutation articles where the chromosome ID in the associated disease mutation is not equal to \"10\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_article AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.chromosome_id != \"10\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "617_1",
    "user": "gpt-3",
    "question": "Retrieve the ID of each stage where the call quality for healthy expression is not \"BRONZE\" in the uberon developmental ontology.",
    "query": "SELECT T1.id FROM stage AS T1 JOIN healthy_expression AS T2 ON T1.id = T2.uberon_developmental_id WHERE T2.call_quality != \"BRONZE\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "617_2",
    "user": "gpt-3",
    "question": "Retrieve the id of stages that are associated with healthy expression data and have a call quality that is not equal to \"BRONZE\".",
    "query": "SELECT T1.id FROM stage AS T1 JOIN healthy_expression AS T2 ON T1.id = T2.uberon_developmental_id WHERE T2.call_quality != \"BRONZE\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "618_1",
    "user": "gpt-3",
    "question": "Find the biomarker internal ID from the article and biomarker tables, excluding any rows with an ID of \"EDRN00488\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.id != \"EDRN00488\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "618_2",
    "user": "gpt-3",
    "question": "Retrieve the internal IDs of biomarkers from articles where the biomarker ID is not equal to \"EDRN00488\".",
    "query": "SELECT T1.biomarker_internal_id FROM biomarker_article AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.id != \"EDRN00488\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "619_1",
    "user": "gpt-3",
    "question": "Find the biomarker FDA ID from the Biomarker FDA NCIT Term table where the biomarker FDA ID is not \"FDA000328\" and join it with the Biomarker FDA table on matching IDs.",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.id != \"FDA000328\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "619_2",
    "user": "gpt-3",
    "question": "Get the biomarker FDA NCIT term for all biomarkers from the FDA, except for the one with an ID of \"FDA000328\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.id != \"FDA000328\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "620_1",
    "user": "gpt-3",
    "question": "Get the list of biomarker drugs from the biomarker FDA drug table, excluding those that have the ID \"FDA000143\", by joining it with the biomarker FDA table.",
    "query": "SELECT T1.biomarker_drug FROM biomarker_fda_drug AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.id != \"FDA000143\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "620_2",
    "user": "gpt-3",
    "question": "Find all the biomarker drugs associated with FDA biomarkers except for the one with ID \"FDA000143\".",
    "query": "SELECT T1.biomarker_drug FROM biomarker_fda_drug AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.id != \"FDA000143\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "621_1",
    "user": "gpt-3",
    "question": "Get the submission information from the FDA biomarker test use table where the test trade name in the use table is equal to the test trade name in the FDA biomarker test table and the platform method in the FDA biomarker test table is not \"D, S\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test_use AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.platform_method != \"D, S\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "621_2",
    "user": "gpt-3",
    "question": "Find the submission for FDA test use from biomarker fda test where the platform method is not \"D, S\" by joining biomarker fda test use with biomarker fda test on the trade name.",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test_use AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.platform_method != \"D, S\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "622_1",
    "user": "gpt-3",
    "question": "Find the biomarker FDA ID for all biomarkers that have a corresponding NCIT term and are not equal to \"INFORM HER-2/NEU\" in the test trade name.",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_trade_name != \"INFORM HER-2/NEU\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "622_2",
    "user": "gpt-3",
    "question": "Get the FDA biomarker IDs from the table containing NCIt terms for FDA biomarkers, where the test trade name is not \"INFORM HER-2/NEU\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_trade_name != \"INFORM HER-2/NEU\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "623_1",
    "user": "gpt-3",
    "question": "What is the biomarker drug for all biomarkers in the FDA database except those with a test trade name of \"Oncomine Dx Target Test\"?",
    "query": "SELECT T1.biomarker_drug FROM biomarker_fda_drug AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_trade_name != \"Oncomine Dx Target Test\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "623_2",
    "user": "gpt-3",
    "question": "\"Retrieve the biomarker and corresponding FDA-approved drug from the database where the FDA test trade name is not 'Oncomine Dx Target Test'.\"",
    "query": "SELECT T1.biomarker_drug FROM biomarker_fda_drug AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_trade_name != \"Oncomine Dx Target Test\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "624_1",
    "user": "gpt-3",
    "question": "What is the name of the stage that corresponds to an uberon developmental ID in healthy expression where the expression level anatomical relative is not \"LOW\"?",
    "query": "SELECT T1.name FROM stage AS T1 JOIN healthy_expression AS T2 ON T1.id = T2.uberon_developmental_id WHERE T2.expression_level_anatomical_relative != \"LOW\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "624_2",
    "user": "gpt-3",
    "question": "What is the name of the stage for which there exists a healthy expression with an anatomical relative expression level that is not low?",
    "query": "SELECT T1.name FROM stage AS T1 JOIN healthy_expression AS T2 ON T1.id = T2.uberon_developmental_id WHERE T2.expression_level_anatomical_relative != \"LOW\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "625_1",
    "user": "gpt-3",
    "question": "Find the common names of species in which the Ensembl gene ID is not \"ENSG00000041880\", by joining the tables \"species\" and \"xref_gene_ensembl\" on their shared column \"speciesid\".",
    "query": "SELECT T1.speciescommonname FROM species AS T1 JOIN xref_gene_ensembl AS T2 ON T1.speciesid = T2.speciesid WHERE T2.ensembl_gene_id != \"ENSG00000041880\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "625_2",
    "user": "gpt-3",
    "question": "Find the common name of the species for which there exists an Ensembl gene ID other than \"ENSG00000041880\" in the xref_gene_ensembl table, by joining the species and xref_gene_ensembl tables on their respective IDs.",
    "query": "SELECT T1.speciescommonname FROM species AS T1 JOIN xref_gene_ensembl AS T2 ON T1.speciesid = T2.speciesid WHERE T2.ensembl_gene_id != \"ENSG00000041880\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "626_1",
    "user": "gpt-3",
    "question": "Find the FDA test trial ID for all biomarker tests that have a trade name matching a test in the FDA biomarker tests table, and where the adoption evidence is not labeled as \"experimental\".",
    "query": "SELECT T1.test_trial_id FROM biomarker_fda_test_trial AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.test_adoption_evidence != \"experimental\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "626_2",
    "user": "gpt-3",
    "question": "Retrieve the test trial ID from the biomarker FDA test trials table for all tests where the adoption evidence is not experimental and is associated with a specific trade name in the biomarker FDA test table.",
    "query": "SELECT T1.test_trial_id FROM biomarker_fda_test_trial AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.test_adoption_evidence != \"experimental\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "627_1",
    "user": "gpt-3",
    "question": "Find the biomarker FDA ID for terms from the biomarker FDA NCIT term table, where the test submission is not equal to \"K062700\" in the biomarker FDA table.",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_submission != \"K062700\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "627_2",
    "user": "gpt-3",
    "question": "Find the biomarker FDA IDs from the table of biomarker FDA and NCIT term where the test submission is not equal to \"K062700\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_submission != \"K062700\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "628_1",
    "user": "gpt-3",
    "question": "Retrieve the PMID values from the biomarker_article table for all articles that are linked to a biomarker with a description different than \"SCCAIC, squamous cellular carcinoma antigen (SCCA) immunocomplexed with IgM, has been proposed as an alternative marker. Squamous cell carcinoma antigen (SCCA) may act as a protease inhibitor to modulate the host immune response against tumor cells. It is present in the cytoplasm of squamous cells and is also secreted",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.biomarker_description != \"SCCAIC, squamous cellular carcinoma antigen (SCCA) immunocomplexed with IgM, has been proposed as an alternative marker. Squamous cell carcinoma antigen (SCCA) may act as a protease inhibitor to modulate the host immune response against tumor cells. It is present in the cytoplasm of squamous cells and is also secreted in plasma in some hepatocellular carcinoma, but at low protein level.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "628_2",
    "user": "gpt-3",
    "question": "Find the PMID values for articles associated with biomarkers, where the description of the biomarker is not \"SCCAIC, squamous cellular carcinoma antigen (SCCA) immunocomplexed with IgM\", and also not \"Squamous cell carcinoma antigen (SCCA) may act as a protease inhibitor to modulate the host immune response against tumor cells. It is present in the cytoplasm of squamous cells and is also secreted in plasma in some hepatocellular carcinoma",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.biomarker_description != \"SCCAIC, squamous cellular carcinoma antigen (SCCA) immunocomplexed with IgM, has been proposed as an alternative marker. Squamous cell carcinoma antigen (SCCA) may act as a protease inhibitor to modulate the host immune response against tumor cells. It is present in the cytoplasm of squamous cells and is also secreted in plasma in some hepatocellular carcinoma, but at low protein level.\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "629_1",
    "user": "gpt-3",
    "question": "Retrieve the description from the disease mutation site annotation table where the data source for the associated disease mutation is not \"cosmic\".",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.data_source != \"cosmic\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "629_2",
    "user": "gpt-3",
    "question": "Retrieve the description of disease mutation site annotations for all disease mutations that are not from the data source \"cosmic\".",
    "query": "SELECT T1.description FROM disease_mutation_site_annotation AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.data_source != \"cosmic\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "630_1",
    "user": "gpt-3",
    "question": "What is the description of biomarkers that are not associated with the test trade name \"Cologuard\" in the FDA database?",
    "query": "SELECT T1.biomarker_description FROM biomarker AS T1 JOIN biomarker_fda AS T2 ON T1.id = T2.id WHERE T2.test_trade_name != \"Cologuard\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "630_2",
    "user": "gpt-3",
    "question": "Retrieve the description of all biomarkers that have been approved by the FDA but are not associated with the test trade name \"Cologuard\".",
    "query": "SELECT T1.biomarker_description FROM biomarker AS T1 JOIN biomarker_fda AS T2 ON T1.id = T2.id WHERE T2.test_trade_name != \"Cologuard\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "631_1",
    "user": "gpt-3",
    "question": "What are the gene symbols for all genes in the healthy expression table that do not have an ensembl gene ID of \"ENSG00000005513\"?",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 JOIN healthy_expression AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.ensembl_gene_id != \"ENSG00000005513\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "631_2",
    "user": "gpt-3",
    "question": "Retrieve the gene symbol from the xref_gene_ensembl table for all genes in healthy_expression that have an Ensembl gene ID different than \"ENSG00000005513\".",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 JOIN healthy_expression AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.ensembl_gene_id != \"ENSG00000005513\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "632_1",
    "user": "gpt-3",
    "question": "Retrieve the gene symbols from the xref_gene_ensembl table for genes that have expression in healthy tissue but do not belong to the MmusDv:0000061 developmental stage.",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 JOIN healthy_expression AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.uberon_developmental_id != \"MmusDv:0000061\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "632_2",
    "user": "gpt-3",
    "question": "Find the gene symbol from xref_gene_ensembl that corresponds to an ensembl_gene_id in healthy_expression, where the uberon_developmental_id is not equal to \"MmusDv:0000061\".",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 JOIN healthy_expression AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.uberon_developmental_id != \"MmusDv:0000061\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "633_1",
    "user": "gpt-3",
    "question": "What is the name of the tool used for predicting the impact of a mutation on a disease that is not located on chromosome 10?",
    "query": "SELECT T1.tool FROM disease_mutation_impact_prediction AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.chromosome_id != \"10\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "633_2",
    "user": "gpt-3",
    "question": "What tools were used for predicting the impact of disease mutations on chromosomes other than chromosome 10?",
    "query": "SELECT T1.tool FROM disease_mutation_impact_prediction AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.chromosome_id != \"10\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "634_1",
    "user": "gpt-3",
    "question": "\"Get the test trade name of biomarkers from the FDA database, excluding those with a biomarker ID of 'urn:edrn:bmdb:biomarker:54'.\"",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda AS T1 JOIN biomarker AS T2 ON T1.id = T2.id WHERE T2.biomarker_id != \"urn:edrn:bmdb:biomarker:54\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "634_2",
    "user": "gpt-3",
    "question": "What is the test trade name from the FDA biomarker_fda table for all biomarkers where the biomarker ID does not equal \"urn:edrn:bmdb:biomarker:54\" in the main biomarker table?",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda AS T1 JOIN biomarker AS T2 ON T1.id = T2.id WHERE T2.biomarker_id != \"urn:edrn:bmdb:biomarker:54\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "635_1",
    "user": "gpt-3",
    "question": "Retrieve all aliases associated with biomarkers, excluding the alias for the biomarker with an internal ID of \"EDRN00455\".",
    "query": "SELECT T1.alias FROM biomarker_alias AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.id != \"EDRN00455\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "635_2",
    "user": "gpt-3",
    "question": "What is the alias for biomarkers that have an internal ID other than \"EDRN00455\"?",
    "query": "SELECT T1.alias FROM biomarker_alias AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.id != \"EDRN00455\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "636_1",
    "user": "gpt-3",
    "question": "Find the biomarker FDA ID from the biomarker FDA NCIT term table where the test submission in the biomarker FDA table is not equal to \"P190004\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_submission != \"P190004\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "636_2",
    "user": "gpt-3",
    "question": "What are the biomarker FDA IDs from the biomarker FDA NCIT term table that correspond to biomarker FDA entries where the test submission is not \"P190004\"?",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_submission != \"P190004\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "637_1",
    "user": "gpt-3",
    "question": "Which test manufacturer is associated with the biomarker FDA test where the test trade name is not \"MammaPrint\"?",
    "query": "SELECT T1.test_manufacturer FROM biomarker_fda_test AS T1 JOIN biomarker_fda_test_trial AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.test_trade_name != \"MammaPrint\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "637_2",
    "user": "gpt-3",
    "question": "Find the test manufacturer for all tests in the FDA biomarker database, except for the MammaPrint test.",
    "query": "SELECT T1.test_manufacturer FROM biomarker_fda_test AS T1 JOIN biomarker_fda_test_trial AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.test_trade_name != \"MammaPrint\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "638_1",
    "user": "gpt-3",
    "question": "What is the PubMed ID for articles where the gene symbol associated with a biomarker is not \"PDLIM4\"?",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.gene_symbol != \"PDLIM4\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "638_2",
    "user": "gpt-3",
    "question": "Retrieve the PMID values from the biomarker_article table where the gene symbol in the associated biomarker record is not equal to \"PDLIM4\".",
    "query": "SELECT T1.pmid FROM biomarker_article AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.gene_symbol != \"PDLIM4\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "639_1",
    "user": "gpt-3",
    "question": "Find the uberon anatomical id of the disease mutation tissue that is associated with a disease mutation where the peptide position is not equal to 211.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.peptide_pos != 211"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "639_2",
    "user": "gpt-3",
    "question": "Retrieve the anatomical ID from the disease mutation tissue table for all disease mutations that have a peptide position different from 211 in the corresponding entry in the disease mutation table.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.peptide_pos != 211"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "640_1",
    "user": "gpt-3",
    "question": "Retrieve the gene symbol from the xref_gene_ensembl table for all species except \"sapiens\" by joining it with the species table and using the speciesid to identify each record.",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 JOIN species AS T2 ON T1.speciesid = T2.speciesid WHERE T2.species != \"sapiens\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "640_2",
    "user": "gpt-3",
    "question": "Retrieve the gene symbol from the cross-reference table for genes on species other than \"sapiens\".",
    "query": "SELECT T1.gene_symbol FROM xref_gene_ensembl AS T1 JOIN species AS T2 ON T1.speciesid = T2.speciesid WHERE T2.species != \"sapiens\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "641_1",
    "user": "gpt-3",
    "question": "Retrieve the position of the peptide affected by a disease mutation for all diseases except \"bone cancer\".",
    "query": "SELECT T1.peptide_pos FROM disease_mutation AS T1 JOIN disease AS T2 ON T1.doid = T2.id WHERE T2.name != \"bone cancer\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "641_2",
    "user": "gpt-3",
    "question": "Retrieve the peptide position for disease mutations in diseases that are not \"bone cancer\".",
    "query": "SELECT T1.peptide_pos FROM disease_mutation AS T1 JOIN disease AS T2 ON T1.doid = T2.id WHERE T2.name != \"bone cancer\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "642_1",
    "user": "gpt-3",
    "question": "What is the species ID for all species that have a gene listed in the xref_gene_ensembl table with an Ensembl gene ID that is not \"ENSG00000049540\"?",
    "query": "SELECT T1.speciesid FROM species AS T1 JOIN xref_gene_ensembl AS T2 ON T1.speciesid = T2.speciesid WHERE T2.ensembl_gene_id != \"ENSG00000049540\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "642_2",
    "user": "gpt-3",
    "question": "What are the species IDs for all species that have an Ensembl gene ID different from \"ENSG00000049540\" in the xref_gene_ensembl table?",
    "query": "SELECT T1.speciesid FROM species AS T1 JOIN xref_gene_ensembl AS T2 ON T1.speciesid = T2.speciesid WHERE T2.ensembl_gene_id != \"ENSG00000049540\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "643_1",
    "user": "gpt-3",
    "question": "Retrieve the disease mutation ID from the disease_mutation_tissue table where the UBERON anatomical ID is not equal to \"UBERON:0001165\" and is joined with the anatomical_entity table.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.id != \"UBERON:0001165\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "643_2",
    "user": "gpt-3",
    "question": "Retrieve the disease mutation ID from the disease_mutation_tissue table where the associated anatomical entity is not \"UBERON:0001165\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.id != \"UBERON:0001165\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "644_1",
    "user": "gpt-3",
    "question": "\"Retrieve the UniProtKB accession codes from the table of protein-disease-mutation mappings, excluding any that correspond to the canonical UniProtKB ID A6NMK8-1.\"",
    "query": "SELECT T1.uniprotkb_ac FROM map_protein_disease_mutation AS T1 JOIN map_uniprot_canonical_id AS T2 ON T1.uniprotkb_ac = T2.uniprotkb_ac WHERE T2.uniprotkb_canonical_ac != \"A6NMK8-1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "644_2",
    "user": "gpt-3",
    "question": "Retrieve the UniProtKB accession numbers from the map_protein_disease_mutation table, excluding the canonical UniProtKB accession number \"A6NMK8-1\", by joining it with the map_uniprot_canonical_id table on matching UniProtKB accession numbers.",
    "query": "SELECT T1.uniprotkb_ac FROM map_protein_disease_mutation AS T1 JOIN map_uniprot_canonical_id AS T2 ON T1.uniprotkb_ac = T2.uniprotkb_ac WHERE T2.uniprotkb_canonical_ac != \"A6NMK8-1\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "645_1",
    "user": "gpt-3",
    "question": "Get the description of all biomarkers from the FDA biomarker table where the test trade name is not \"VENTANA ANTI-MLH-1(M1) MOUSE MONOCLONAL PRIMARY ANTIBODY\".",
    "query": "SELECT T1.biomarker_description FROM biomarker AS T1 JOIN biomarker_fda AS T2 ON T1.id = T2.id WHERE T2.test_trade_name != \"VENTANA ANTI-MLH-1(M1) MOUSE MONOCLONAL PRIMARY ANTIBODY\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "645_2",
    "user": "gpt-3",
    "question": "What is the description of the biomarker that does not have a test trade name of \"VENTANA ANTI-MLH-1(M1) MOUSE MONOCLONAL PRIMARY ANTIBODY\" in the FDA biomarker table?",
    "query": "SELECT T1.biomarker_description FROM biomarker AS T1 JOIN biomarker_fda AS T2 ON T1.id = T2.id WHERE T2.test_trade_name != \"VENTANA ANTI-MLH-1(M1) MOUSE MONOCLONAL PRIMARY ANTIBODY\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "646_1",
    "user": "gpt-3",
    "question": "Find the PMID numbers of articles in which a disease mutation is mentioned, excluding those where the ensembl transcript ID is \"ENST00000218068\".",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.ensembl_transcript_id != \"ENST00000218068\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "646_2",
    "user": "gpt-3",
    "question": "Retrieve the PubMed IDs for articles associated with disease-mutation pairs where the Ensembl transcript ID of the disease mutation is not \"ENST00000218068\".",
    "query": "SELECT T1.pmid FROM disease_mutation_article AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.ensembl_transcript_id != \"ENST00000218068\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "647_1",
    "user": "gpt-3",
    "question": "Get the data source for disease mutations that have a tissue specified by a UBERON anatomical ID other than \"UBERON:0016435\".",
    "query": "SELECT T1.data_source FROM disease_mutation AS T1 JOIN disease_mutation_tissue AS T2 ON T1.id = T2.disease_mutation_id WHERE T2.uberon_anatomical_id != \"UBERON:0016435\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "647_2",
    "user": "gpt-3",
    "question": "Retrieve the data source for all disease mutations that have been linked to a tissue other than the lymph node.",
    "query": "SELECT T1.data_source FROM disease_mutation AS T1 JOIN disease_mutation_tissue AS T2 ON T1.id = T2.disease_mutation_id WHERE T2.uberon_anatomical_id != \"UBERON:0016435\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "648_1",
    "user": "gpt-3",
    "question": "Find the name of all diseases that are not associated with tissue cancer.",
    "query": "SELECT T1.name FROM disease AS T1 JOIN cancer_tissue AS T2 ON T1.id = T2.doid WHERE T2.doid != 363"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "648_2",
    "user": "gpt-3",
    "question": "Find the name of all diseases that are associated with cancer tissues except for lung cancer.",
    "query": "SELECT T1.name FROM disease AS T1 JOIN cancer_tissue AS T2 ON T1.id = T2.doid WHERE T2.doid != 363"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "649_1",
    "user": "gpt-3",
    "question": "What is the NCIt biomarker term for all biomarkers in the FDA database that do not have a test submission of \"P940004\"?",
    "query": "SELECT T1.ncit_biomarker FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_submission != \"P940004\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "649_2",
    "user": "gpt-3",
    "question": "Retrieve the NCIt biomarker term associated with FDA biomarkers that have a test submission not equal to \"P940004\".",
    "query": "SELECT T1.ncit_biomarker FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_submission != \"P940004\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "650_1",
    "user": "gpt-3",
    "question": "Find the alias from biomarker_alias where the biomarker's description is not \"From NCBI Gene: The protein encoded by this gene is similar to E-type nucleotidases (NTPases)/ecto-ATPase/apyrases. NTPases, such as CD39, mediate catabolism of extracellular nucleotides. ENTPD5 contains 4 apyrase-conserved regions which is characteristic of NTPases. [provided by RefSeq",
    "query": "SELECT T1.alias FROM biomarker_alias AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.biomarker_description != \"From NCBI Gene: The protein encoded by this gene is similar to E-type nucleotidases (NTPases)/ecto-ATPase/apyrases. NTPases, such as CD39, mediate catabolism of extracellular nucleotides. ENTPD5 contains 4 apyrase-conserved regions which is characteristic of NTPases. [provided by RefSeq, Jan 2009]\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "650_2",
    "user": "gpt-3",
    "question": "Find the aliases for biomarkers where the description is not \"From NCBI Gene: The protein encoded by this gene is similar to E-type nucleotidases (NTPases)/ecto-ATPase/apyrases. NTPases, such as CD39, mediate catabolism of extracellular nucleotides. ENTPD5 contains 4 apyrase-conserved regions which is characteristic of NTPases. [provided by RefSeq, Jan 200",
    "query": "SELECT T1.alias FROM biomarker_alias AS T1 JOIN biomarker AS T2 ON T1.biomarker_internal_id = T2.id WHERE T2.biomarker_description != \"From NCBI Gene: The protein encoded by this gene is similar to E-type nucleotidases (NTPases)/ecto-ATPase/apyrases. NTPases, such as CD39, mediate catabolism of extracellular nucleotides. ENTPD5 contains 4 apyrase-conserved regions which is characteristic of NTPases. [provided by RefSeq, Jan 2009]\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "651_1",
    "user": "gpt-3",
    "question": "What is the disease ID from the disease table that is associated with a differential expression value not equal to 7.78e-14?",
    "query": "SELECT T1.id FROM disease AS T1 JOIN differential_expression AS T2 ON T1.id = T2.doid WHERE T2.adjpvalue != 7.78e-148"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "651_2",
    "user": "gpt-3",
    "question": "Find the disease ID for all diseases that have a corresponding differential expression with an adjusted p-value other than 7.78e-148.",
    "query": "SELECT T1.id FROM disease AS T1 JOIN differential_expression AS T2 ON T1.id = T2.doid WHERE T2.adjpvalue != 7.78e-148"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "652_1",
    "user": "gpt-3",
    "question": "Retrieve the relative expression level of genes from the healthy_expression table, excluding the gene with the symbol \"2410021H03Rik\", by joining it with the xref_gene_ensembl table on matching Ensembl gene IDs.",
    "query": "SELECT T1.expression_level_gene_relative FROM healthy_expression AS T1 JOIN xref_gene_ensembl AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.gene_symbol != \"2410021H03Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "652_2",
    "user": "gpt-3",
    "question": "Get the relative expression level for genes in healthy tissue, excluding the gene \"2410021H03Rik\", by joining the healthy_expression and xref_gene_ensembl tables and selecting only rows where the gene symbol is not equal to \"2410021H03Rik\".",
    "query": "SELECT T1.expression_level_gene_relative FROM healthy_expression AS T1 JOIN xref_gene_ensembl AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.gene_symbol != \"2410021H03Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "653_1",
    "user": "gpt-3",
    "question": "Retrieve the species ID for all species where the gene symbol is not \"1700125H03Rik\", by joining the tables \"species\" and \"xref_gene_ensembl\" on the common column of species ID.",
    "query": "SELECT T1.speciesid FROM species AS T1 JOIN xref_gene_ensembl AS T2 ON T1.speciesid = T2.speciesid WHERE T2.gene_symbol != \"1700125H03Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "653_2",
    "user": "gpt-3",
    "question": "Find the species IDs of all species that have a gene symbol in the xref_gene_ensembl table that is not equal to \"1700125H03Rik\".",
    "query": "SELECT T1.speciesid FROM species AS T1 JOIN xref_gene_ensembl AS T2 ON T1.speciesid = T2.speciesid WHERE T2.gene_symbol != \"1700125H03Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "654_1",
    "user": "gpt-3",
    "question": "Find the disease IDs from the disease table that have corresponding differential expression DOIDs where the log2fc value is not equal to 0.4 in the differential_expression table.",
    "query": "SELECT T1.id FROM disease AS T1 JOIN differential_expression AS T2 ON T1.id = T2.doid WHERE T2.log2fc != 0.4"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "654_2",
    "user": "gpt-3",
    "question": "Retrieve the ID of all diseases that have differential expression information where the log2fc value is not equal to 0.4.",
    "query": "SELECT T1.id FROM disease AS T1 JOIN differential_expression AS T2 ON T1.id = T2.doid WHERE T2.log2fc != 0.4"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "655_1",
    "user": "gpt-3",
    "question": "\"Retrieve the biomarker FDA IDs from the biomarker FDA drug table where the associated test submission in the biomarker FDA table is not equal to \"P190004\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_drug AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_submission != \"P190004\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "655_2",
    "user": "gpt-3",
    "question": "Find the biomarker FDA IDs for all biomarkers that are not part of a test submission with the code \"P190004\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_drug AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_submission != \"P190004\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "656_1",
    "user": "gpt-3",
    "question": "Find the speciesid from the table xref_gene_ensembl and join it with the species table, where the speciescommonname is not \"mouse\".",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 JOIN species AS T2 ON T1.speciesid = T2.speciesid WHERE T2.speciescommonname != \"mouse\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "656_2",
    "user": "gpt-3",
    "question": "Retrieve the speciesid from the xref_gene_ensembl table where the speciescommonname in the species table is not equal to \"mouse\".",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 JOIN species AS T2 ON T1.speciesid = T2.speciesid WHERE T2.speciescommonname != \"mouse\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "657_1",
    "user": "gpt-3",
    "question": "Retrieve the information about whether the biomarker is a panel or not for all biomarkers that are mentioned in an article with a PMID that is not equal to \"16424007\".",
    "query": "SELECT T1.test_is_a_panel FROM biomarker AS T1 JOIN biomarker_article AS T2 ON T1.id = T2.biomarker_internal_id WHERE T2.pmid != \"16424007\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "657_2",
    "user": "gpt-3",
    "question": "Retrieve the boolean value indicating whether the test corresponding to a biomarker mentioned in an article with PMID \"16424007\" is a panel.",
    "query": "SELECT T1.test_is_a_panel FROM biomarker AS T1 JOIN biomarker_article AS T2 ON T1.id = T2.biomarker_internal_id WHERE T2.pmid != \"16424007\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "658_1",
    "user": "gpt-3",
    "question": "What are the names of diseases that are associated with a cancer tissue and have an uberon anatomical ID other than \"UBERON:0018707\"?",
    "query": "SELECT T1.name FROM disease AS T1 JOIN cancer_tissue AS T2 ON T1.id = T2.doid WHERE T2.uberon_anatomical_id != \"UBERON:0018707\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "658_2",
    "user": "gpt-3",
    "question": "Retrieve the names of diseases that are associated with cancer tissues, excluding those related to the anatomical structure with ID \"UBERON:0018707\".",
    "query": "SELECT T1.name FROM disease AS T1 JOIN cancer_tissue AS T2 ON T1.id = T2.doid WHERE T2.uberon_anatomical_id != \"UBERON:0018707\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "659_1",
    "user": "gpt-3",
    "question": "Retrieve the altered amino acid from the disease mutation table, joined with the disease mutation impact prediction table using the ID column, where the tool used for prediction is not netnglyc.",
    "query": "SELECT T1.alt_aa FROM disease_mutation AS T1 JOIN disease_mutation_impact_prediction AS T2 ON T1.id = T2.disease_mutation_id WHERE T2.tool != \"netnglyc\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "659_2",
    "user": "gpt-3",
    "question": "What is the alternate amino acid for each disease mutation that has an impact prediction tool other than \"netnglyc\" in the database?",
    "query": "SELECT T1.alt_aa FROM disease_mutation AS T1 JOIN disease_mutation_impact_prediction AS T2 ON T1.id = T2.disease_mutation_id WHERE T2.tool != \"netnglyc\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "660_1",
    "user": "gpt-3",
    "question": "Find the IDs of anatomical entities that are connected to disease mutation tissues and are not equal to \"UBERON:0001825\".",
    "query": "SELECT T1.id FROM anatomical_entity AS T1 JOIN disease_mutation_tissue AS T2 ON T1.id = T2.uberon_anatomical_id WHERE T2.uberon_anatomical_id != \"UBERON:0001825\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "660_2",
    "user": "gpt-3",
    "question": "Find all anatomical entities that have an ID in the disease_mutation_tissue table where the UBERON anatomical ID is not equal to \"UBERON:0001825\".",
    "query": "SELECT T1.id FROM anatomical_entity AS T1 JOIN disease_mutation_tissue AS T2 ON T1.id = T2.uberon_anatomical_id WHERE T2.uberon_anatomical_id != \"UBERON:0001825\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "661_1",
    "user": "gpt-3",
    "question": "Retrieve the disease mutation IDs from the disease mutation article table where the referenced nucleotide in the corresponding disease mutation is not equal to \"T\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_article AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.ref_nt != \"T\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "661_2",
    "user": "gpt-3",
    "question": "Retrieve the disease mutation IDs from the articles for which the corresponding disease mutation's reference nucleotide is not \"T\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_article AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.ref_nt != \"T\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "662_1",
    "user": "gpt-3",
    "question": "Retrieve the species ID from the Species table where the gene symbol in the Xref Gene Ensembl table is not \"1700040K01Rik\" and there is a match between their species IDs.",
    "query": "SELECT T1.speciesid FROM species AS T1 JOIN xref_gene_ensembl AS T2 ON T1.speciesid = T2.speciesid WHERE T2.gene_symbol != \"1700040K01Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "662_2",
    "user": "gpt-3",
    "question": "What is the speciesid for all species where the gene symbol is not \"1700040K01Rik\" in the xref_gene_ensembl table?",
    "query": "SELECT T1.speciesid FROM species AS T1 JOIN xref_gene_ensembl AS T2 ON T1.speciesid = T2.speciesid WHERE T2.gene_symbol != \"1700040K01Rik\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "663_1",
    "user": "gpt-3",
    "question": "Retrieve the species ID from the XREF_GENE_ENSEMBL table where the ensembl gene ID matches and join it with the healthy_expression table, returning only those records where the expression score is not equal to 11.7.",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 JOIN healthy_expression AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.expression_score != 11.70000"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "663_2",
    "user": "gpt-3",
    "question": "Get the species ID from the table \"xref_gene_ensembl\" where the Ensembl gene ID matches between that table and the \"healthy_expression\" table, and exclude any entries where the expression score in \"healthy_expression\" is equal to 11.70000.",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 JOIN healthy_expression AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.expression_score != 11.70000"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "664_1",
    "user": "gpt-3",
    "question": "Get the unique Uberon anatomical IDs from the disease_mutation_tissue table where the ID is not \"UBERON:0002298\", by joining it with the anatomical_entity table.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.id != \"UBERON:0002298\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "664_2",
    "user": "gpt-3",
    "question": "Get the UBERON anatomical IDs from the disease_mutation_tissue table, excluding the ID for \"UBERON:0002298\", by joining it with the anatomical_entity table and comparing their IDs.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.id != \"UBERON:0002298\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "665_1",
    "user": "gpt-3",
    "question": "Retrieve the test manufacturer for all biomarker FDA tests that have been approved for diseases other than type 2 diabetes.",
    "query": "SELECT T1.test_manufacturer FROM biomarker_fda_test AS T1 JOIN disease AS T2 ON T1.doid = T2.id WHERE T2.id != 9256"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "665_2",
    "user": "gpt-3",
    "question": "Find the manufacturers of biomarker tests that have been approved by the FDA for diseases other than Alzheimer's disease.",
    "query": "SELECT T1.test_manufacturer FROM biomarker_fda_test AS T1 JOIN disease AS T2 ON T1.doid = T2.id WHERE T2.id != 9256"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "666_1",
    "user": "gpt-3",
    "question": "What is the actual use of biomarker FDA tests that have a trade name and are not associated with disease ID 1909?",
    "query": "SELECT T1.actual_use FROM biomarker_fda_test_use AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.doid != 1909"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "666_2",
    "user": "gpt-3",
    "question": "Find the actual use of biomarker FDA tests where the disease ID is not equal to 1909.",
    "query": "SELECT T1.actual_use FROM biomarker_fda_test_use AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.doid != 1909"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "667_1",
    "user": "gpt-3",
    "question": "What is the probability of disease mutation impact prediction for disease mutations that do not have an amino acid position on the UniProtKB database of 488?",
    "query": "SELECT T1.probability FROM disease_mutation_impact_prediction AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.aa_pos_uniprotkb != 488"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "667_2",
    "user": "gpt-3",
    "question": "What is the probability of disease mutation impact prediction for all records in which the amino acid position in UniprotKB is not equal to 488?",
    "query": "SELECT T1.probability FROM disease_mutation_impact_prediction AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.aa_pos_uniprotkb != 488"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "668_1",
    "user": "gpt-3",
    "question": "Retrieve the test trade name from the biomarker FDA test use table where the test trade name is also present in the biomarker FDA test table and the test submission is not equal to \"K080252\".",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_use AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.test_submission != \"K080252\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "668_2",
    "user": "gpt-3",
    "question": "Get the test trade name from the biomarker FDA test use table where the test trade name is not equal to \"K080252\" in the biomarker FDA test table.",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test_use AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.test_submission != \"K080252\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "669_1",
    "user": "gpt-3",
    "question": "Retrieve the histological type from the FDA biomarker test table where the test trade name is in use and the approved indication is not \"risk assessment\".",
    "query": "SELECT T1.histological_type FROM biomarker_fda_test AS T1 JOIN biomarker_fda_test_use AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.approved_indication != \"risk assesment\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "669_2",
    "user": "gpt-3",
    "question": "\"Get the histological type from the biomarker FDA test database where the approved indication is not 'risk assessment' and the test trade name is found in the list of approved uses.\"",
    "query": "SELECT T1.histological_type FROM biomarker_fda_test AS T1 JOIN biomarker_fda_test_use AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.approved_indication != \"risk assesment\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "670_1",
    "user": "gpt-3",
    "question": "What is the description of the biomarker that has an alias other than \"acylcholine acylhydrolase\"?",
    "query": "SELECT T1.biomarker_description FROM biomarker AS T1 JOIN biomarker_alias AS T2 ON T1.id = T2.biomarker_internal_id WHERE T2.alias != \"acylcholine acylhydrolase\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "670_2",
    "user": "gpt-3",
    "question": "What is the biomarker description for all biomarkers where the alias is not \"acylcholine acylhydrolase\"?",
    "query": "SELECT T1.biomarker_description FROM biomarker AS T1 JOIN biomarker_alias AS T2 ON T1.id = T2.biomarker_internal_id WHERE T2.alias != \"acylcholine acylhydrolase\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "671_1",
    "user": "gpt-3",
    "question": "Get the stage IDs from the stage table where the UBERON anatomical ID is not equal to \"UBERON:0002890\" in the healthy_expression table.",
    "query": "SELECT T1.id FROM stage AS T1 JOIN healthy_expression AS T2 ON T1.id = T2.uberon_developmental_id WHERE T2.uberon_anatomical_id != \"UBERON:0002890\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "671_2",
    "user": "gpt-3",
    "question": "Find the IDs of stages where the UBERON developmental ID is equal to the UBERON anatomical ID and both are not equal to \"UBERON:0002890\".",
    "query": "SELECT T1.id FROM stage AS T1 JOIN healthy_expression AS T2 ON T1.id = T2.uberon_developmental_id WHERE T2.uberon_anatomical_id != \"UBERON:0002890\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "672_1",
    "user": "gpt-3",
    "question": "Retrieve the UBeron anatomical ID from the biomarker_edrn table for all entries where the biomarker description in the biomarker table is not equal to \"From NCBI Gene: This gene encodes a potent cyclin-dependent kinase inhibitor. The encoded protein binds to and inhibits the activity of cyclin-cyclin-dependent kinase2 or -cyclin-dependent kinase4 complexes, and thus functions as a regulator of cell cycle progression at G1. The expression of this gene is tightly controlled",
    "query": "SELECT T1.uberon_anatomical_id FROM biomarker_edrn AS T1 JOIN biomarker AS T2 ON T1.id = T2.id WHERE T2.biomarker_description != \"From NCBI Gene: This gene encodes a potent cyclin-dependent kinase inhibitor. The encoded protein binds to and inhibits the activity of cyclin-cyclin-dependent kinase2 or -cyclin-dependent kinase4 complexes, and thus functions as a regulator of cell cycle progression at G1. The expression of this gene is tightly controlled by the tumor suppressor protein p53, through which this protein mediates the p53-dependent cell cycle G1 phase arrest in response to a variety of stress stimuli. This protein can interact with proliferating cell nuclear antigen, a DNA polymerase accessory factor, and plays a regulatory role in S phase DNA replication and DNA damage repair. This protein was reported to be specifically cleaved by CASP3-like caspases, which thus leads to a dramatic activation of cyclin-dependent kinase2, and may be instrumental in the execution of apoptosis following caspase activation. Mice that lack this gene have the ability to regenerate damaged or missing tissue. Multiple alternatively spliced variants have been found for this gene. [provided by RefSeq, Sep 2015]\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "672_2",
    "user": "gpt-3",
    "question": "Find the UBeron anatomical ID from the biomarker_edrn table, which joins with the biomarker table on their IDs, where the biomarker description is not equal to \"From NCBI Gene: This gene encodes a potent cyclin-dependent kinase inhibitor\", and has various functions related to cell cycle progression, DNA replication, and apoptosis.",
    "query": "SELECT T1.uberon_anatomical_id FROM biomarker_edrn AS T1 JOIN biomarker AS T2 ON T1.id = T2.id WHERE T2.biomarker_description != \"From NCBI Gene: This gene encodes a potent cyclin-dependent kinase inhibitor. The encoded protein binds to and inhibits the activity of cyclin-cyclin-dependent kinase2 or -cyclin-dependent kinase4 complexes, and thus functions as a regulator of cell cycle progression at G1. The expression of this gene is tightly controlled by the tumor suppressor protein p53, through which this protein mediates the p53-dependent cell cycle G1 phase arrest in response to a variety of stress stimuli. This protein can interact with proliferating cell nuclear antigen, a DNA polymerase accessory factor, and plays a regulatory role in S phase DNA replication and DNA damage repair. This protein was reported to be specifically cleaved by CASP3-like caspases, which thus leads to a dramatic activation of cyclin-dependent kinase2, and may be instrumental in the execution of apoptosis following caspase activation. Mice that lack this gene have the ability to regenerate damaged or missing tissue. Multiple alternatively spliced variants have been found for this gene. [provided by RefSeq, Sep 2015]\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "673_1",
    "user": "gpt-3",
    "question": "Find the ID of all biomarkers in the FDA database that have a test trade name that matches a trade name in the biomarker FDA test table and whose origin is not \"amplification\".",
    "query": "SELECT T1.id FROM biomarker_fda AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.biomarker_origin != \"amplification\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "673_2",
    "user": "gpt-3",
    "question": "Get the ID of all biomarkers from the FDA database that have a test trade name matching with a test trade name in the biomarker_fda_test table, and where the biomarker origin is not \"amplification\".",
    "query": "SELECT T1.id FROM biomarker_fda AS T1 JOIN biomarker_fda_test AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.biomarker_origin != \"amplification\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "674_1",
    "user": "gpt-3",
    "question": "What is the biomarker FDA NCIt term's ID for all biomarkers in the FDA database except for the one with an ID of \"FDA000096\"?",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.id != \"FDA000096\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "674_2",
    "user": "gpt-3",
    "question": "Get the FDA IDs of all biomarkers from the Biomarker FDA NCIT Term table that are associated with a biomarker in the Biomarker FDA table, excluding the biomarker with ID \"FDA000096\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.id != \"FDA000096\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "675_1",
    "user": "gpt-3",
    "question": "Find the biomarker FDA NCIT term for a biomarker FDA ID that is not equal to \"FDA000298\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.id != \"FDA000298\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "675_2",
    "user": "gpt-3",
    "question": "Find the biomarker FDA IDs from the biomarker FDA NCIT term table where the corresponding ID in the biomarker FDA table is not \"FDA000298\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_ncit_term AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.id != \"FDA000298\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "676_1",
    "user": "gpt-3",
    "question": "Retrieve the uberon anatomical ID from disease mutation tissue for all diseases with a mutation location that is not equal to amino acid position 715 in the UniProtKB database.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.aa_pos_uniprotkb != 715"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "676_2",
    "user": "gpt-3",
    "question": "Retrieve the uberon anatomical ID from the disease mutation tissue table for all disease mutations that do not have a specific amino acid position of 715 in the UniProtKB database.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.aa_pos_uniprotkb != 715"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "677_1",
    "user": "gpt-3",
    "question": "Retrieve the name of diseases from the table \"disease\" that are also present in the \"cancer_tissue\" table and have a matching ID in both tables, excluding any that have an anatomical ID of \"UBERON:0000992\".",
    "query": "SELECT T1.name FROM disease AS T1 JOIN cancer_tissue AS T2 ON T1.id = T2.doid WHERE T2.uberon_anatomical_id != \"UBERON:0000992\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "677_2",
    "user": "gpt-3",
    "question": "Get the name of diseases from the \"disease\" table that are associated with an entry in the \"cancer_tissue\" table where the disease id matches the doid and also excludes entries with uberon_anatomical_id of UBERON:0000992.",
    "query": "SELECT T1.name FROM disease AS T1 JOIN cancer_tissue AS T2 ON T1.id = T2.doid WHERE T2.uberon_anatomical_id != \"UBERON:0000992\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "678_1",
    "user": "gpt-3",
    "question": "Retrieve the UniProt canonical ID for all proteins that have a mutation associated with a disease, excluding those with the peptide ID \"ENSP00000025008\".",
    "query": "SELECT T1.uniprotkb_ac FROM map_uniprot_canonical_id AS T1 JOIN map_protein_disease_mutation AS T2 ON T1.uniprotkb_ac = T2.uniprotkb_ac WHERE T2.peptide_id != \"ENSP00000025008\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "678_2",
    "user": "gpt-3",
    "question": "Retrieve the Uniprot canonical IDs from the map_uniprot_canonical_id table for proteins associated with disease mutations in the map_protein_disease_mutation table, excluding those associated with peptide ID ENSP00000025008.",
    "query": "SELECT T1.uniprotkb_ac FROM map_uniprot_canonical_id AS T1 JOIN map_protein_disease_mutation AS T2 ON T1.uniprotkb_ac = T2.uniprotkb_ac WHERE T2.peptide_id != \"ENSP00000025008\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "679_1",
    "user": "gpt-3",
    "question": "\"Retrieve the name of all stages where the expression rank score for healthy expressions in the corresponding uberon developmental ID is not equal to 90.20.\"",
    "query": "SELECT T1.name FROM stage AS T1 JOIN healthy_expression AS T2 ON T1.id = T2.uberon_developmental_id WHERE T2.expression_rank_score != 90.20"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "679_2",
    "user": "gpt-3",
    "question": "Find the names of all stages where the expression rank score for healthy expression is not 90.20 in the stage table joined with the healthy_expression table on the developmental ID matching between both tables.",
    "query": "SELECT T1.name FROM stage AS T1 JOIN healthy_expression AS T2 ON T1.id = T2.uberon_developmental_id WHERE T2.expression_rank_score != 90.20"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "680_1",
    "user": "gpt-3",
    "question": "Retrieve the biomarker FDA ID from the biomarker FDA drug table for all entries where the associated biomarker FDA has a test trade name that is not \"Oncomine Dx Target Test\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_drug AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_trade_name != \"Oncomine Dx Target Test\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "680_2",
    "user": "gpt-3",
    "question": "Find the biomarker FDA ID for all biomarker FDA drugs where the test trade name is not \"Oncomine Dx Target Test\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_drug AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_trade_name != \"Oncomine Dx Target Test\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "681_1",
    "user": "gpt-3",
    "question": "Retrieve the disease mutation IDs from the \"disease_mutation_tissue\" table where the associated anatomical entity name is not \"anterior amygdaloid area\", and join it with the \"anatomical_entity\" table using the ID to retrieve information.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.name != \"anterior amygdaloid area\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "681_2",
    "user": "gpt-3",
    "question": "Find the disease mutation ID from the table containing information about the connection between diseases, mutations, and tissues, for all entries that are associated with an anatomical entity that is not named \"anterior amygdaloid area\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.name != \"anterior amygdaloid area\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "682_1",
    "user": "gpt-3",
    "question": "Retrieve the species ID from the xref_gene_ensembl table for all genes where their expression score in the healthy_expression table is not equal to 72.20000.",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 JOIN healthy_expression AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.expression_score != 72.20000"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "682_2",
    "user": "gpt-3",
    "question": "Get the species IDs from the xref_gene_ensembl table for genes that have a corresponding expression score in the healthy_expression table that is not equal to 72.20000.",
    "query": "SELECT T1.speciesid FROM xref_gene_ensembl AS T1 JOIN healthy_expression AS T2 ON T1.ensembl_gene_id = T2.ensembl_gene_id WHERE T2.expression_score != 72.20000"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "683_1",
    "user": "gpt-3",
    "question": "Retrieve the ID of diseases that are not related to cancer tissue other than breast cancer.",
    "query": "SELECT T1.id FROM disease AS T1 JOIN cancer_tissue AS T2 ON T1.id = T2.doid WHERE T2.doid != 263"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "683_2",
    "user": "gpt-3",
    "question": "\"Find the IDs of all diseases that are associated with cancer tissue, excluding disease ID 263.\"",
    "query": "SELECT T1.id FROM disease AS T1 JOIN cancer_tissue AS T2 ON T1.id = T2.doid WHERE T2.doid != 263"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "684_1",
    "user": "gpt-3",
    "question": "Find the anatomical IDs from disease mutation tissue where the reference amino acid in disease mutation is not equal to \"K\".",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.ref_aa != \"K\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "684_2",
    "user": "gpt-3",
    "question": "Get the anatomical ID from disease mutation tissues for all disease mutations that have a reference amino acid other than \"K\".",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.ref_aa != \"K\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "685_1",
    "user": "gpt-3",
    "question": "Retrieve the test submission from the biomarker FDA test table for all diseases except for testicular cancer, by joining the biomarker FDA test and disease tables and selecting only those rows where the disease name is not \"testicular cancer\".",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test AS T1 JOIN disease AS T2 ON T1.doid = T2.id WHERE T2.name != \"testicular cancer\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "685_2",
    "user": "gpt-3",
    "question": "Get the test submission from the FDA biomarker test data for all diseases except for testicular cancer.",
    "query": "SELECT T1.test_submission FROM biomarker_fda_test AS T1 JOIN disease AS T2 ON T1.doid = T2.id WHERE T2.name != \"testicular cancer\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "686_1",
    "user": "gpt-3",
    "question": "Get the UniprotKB canonical accession number from the Map Uniprot Canonical ID table for all entries where the UniprotKB AC is not equal to \"A6NHT5\" in the Map Protein Disease Mutation table.",
    "query": "SELECT T1.uniprotkb_canonical_ac FROM map_uniprot_canonical_id AS T1 JOIN map_protein_disease_mutation AS T2 ON T1.uniprotkb_ac = T2.uniprotkb_ac WHERE T2.uniprotkb_ac != \"A6NHT5\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "686_2",
    "user": "gpt-3",
    "question": "Retrieve the UniprotKB canonical accessions for proteins that are mapped to disease mutations, excluding the protein with the UniprotKB accession \"A6NHT5\".",
    "query": "SELECT T1.uniprotkb_canonical_ac FROM map_uniprot_canonical_id AS T1 JOIN map_protein_disease_mutation AS T2 ON T1.uniprotkb_ac = T2.uniprotkb_ac WHERE T2.uniprotkb_ac != \"A6NHT5\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "687_1",
    "user": "gpt-3",
    "question": "Find the name of anatomical entities that are associated with cancer tissue, but not associated with the disease with the ID 3571.",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 JOIN cancer_tissue AS T2 ON T1.id = T2.uberon_anatomical_id WHERE T2.doid != 3571"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "687_2",
    "user": "gpt-3",
    "question": "What is the name of all anatomical entities that are associated with cancer tissue, but are not associated with DOID 3571?",
    "query": "SELECT T1.name FROM anatomical_entity AS T1 JOIN cancer_tissue AS T2 ON T1.id = T2.uberon_anatomical_id WHERE T2.doid != 3571"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "688_1",
    "user": "gpt-3",
    "question": "Retrieve the data source from the disease mutation table for all entries in the disease mutation impact prediction table where the site prediction is not equal to \"+++|gain\".",
    "query": "SELECT T1.data_source FROM disease_mutation AS T1 JOIN disease_mutation_impact_prediction AS T2 ON T1.id = T2.disease_mutation_id WHERE T2.site_prediction != \"+++|gain\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "688_2",
    "user": "gpt-3",
    "question": "Get the data source from the disease mutation table for disease mutations that have a different site prediction than \"+++|gain\" in the disease mutation impact prediction table.",
    "query": "SELECT T1.data_source FROM disease_mutation AS T1 JOIN disease_mutation_impact_prediction AS T2 ON T1.id = T2.disease_mutation_id WHERE T2.site_prediction != \"+++|gain\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "689_1",
    "user": "gpt-3",
    "question": "Find the UniProt canonical ID for proteins that have a mapped protein-disease mutation and are not associated with the peptide ID \"ENSP00000217428\".",
    "query": "SELECT T1.uniprotkb_ac FROM map_uniprot_canonical_id AS T1 JOIN map_protein_disease_mutation AS T2 ON T1.uniprotkb_ac = T2.uniprotkb_ac WHERE T2.peptide_id != \"ENSP00000217428\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "689_2",
    "user": "gpt-3",
    "question": "\"Retrieve the UniprotKB canonical ID for proteins associated with disease mutations, excluding those corresponding to the peptide ID 'ENSP00000217428'.\"",
    "query": "SELECT T1.uniprotkb_ac FROM map_uniprot_canonical_id AS T1 JOIN map_protein_disease_mutation AS T2 ON T1.uniprotkb_ac = T2.uniprotkb_ac WHERE T2.peptide_id != \"ENSP00000217428\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "690_1",
    "user": "gpt-3",
    "question": "Find the test trade name from the biomarker FDA table where the ID in the biomarker FDA drug table is not equal to \"FDA000037\".",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda AS T1 JOIN biomarker_fda_drug AS T2 ON T1.id = T2.biomarker_fda_id WHERE T2.biomarker_fda_id != \"FDA000037\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "690_2",
    "user": "gpt-3",
    "question": "\"Retrieve the test trade name from the FDA biomarker database for all biomarkers that are not associated with drug ID \"FDA000037\".\"",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda AS T1 JOIN biomarker_fda_drug AS T2 ON T1.id = T2.biomarker_fda_id WHERE T2.biomarker_fda_id != \"FDA000037\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "691_1",
    "user": "gpt-3",
    "question": "Retrieve the disease mutation IDs from the table disease_mutation_tissue, where the associated anatomical entity's ID is not \"UBERON:0002384\".",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.id != \"UBERON:0002384\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "691_2",
    "user": "gpt-3",
    "question": "Retrieve the disease mutation IDs for all tissues except skin (UBERON:0002384) by joining the disease_mutation_tissue and anatomical_entity tables on their respective IDs, where the anatomical entity is not skin.",
    "query": "SELECT T1.disease_mutation_id FROM disease_mutation_tissue AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.id != \"UBERON:0002384\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "692_1",
    "user": "gpt-3",
    "question": "Find the tool used in disease mutation impact prediction for all mutations where the alternate amino acid is not \"M\".",
    "query": "SELECT T1.tool FROM disease_mutation_impact_prediction AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.alt_aa != \"M\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "692_2",
    "user": "gpt-3",
    "question": "What are the tools used for disease mutation impact prediction where the alternative amino acid is not \"M\"?",
    "query": "SELECT T1.tool FROM disease_mutation_impact_prediction AS T1 JOIN disease_mutation AS T2 ON T1.disease_mutation_id = T2.id WHERE T2.alt_aa != \"M\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "693_1",
    "user": "gpt-3",
    "question": "Find the test trade name from the FDA biomarker list where the ID is not \"FDA000303\".",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test AS T1 JOIN biomarker_fda AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.id != \"FDA000303\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "693_2",
    "user": "gpt-3",
    "question": "Find the test trade name from the biomarker FDA test table, where the ID is not equal to \"FDA000303\" and it matches with the biomarker FDA table.",
    "query": "SELECT T1.test_trade_name FROM biomarker_fda_test AS T1 JOIN biomarker_fda AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.id != \"FDA000303\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "694_1",
    "user": "gpt-3",
    "question": "Retrieve the reference amino acid from the disease mutation table, where the impact prediction id is not equal to 9954.",
    "query": "SELECT T1.ref_aa FROM disease_mutation AS T1 JOIN disease_mutation_impact_prediction AS T2 ON T1.id = T2.disease_mutation_id WHERE T2.id != 9954"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "694_2",
    "user": "gpt-3",
    "question": "Find the amino acid reference for a disease mutation that has an impact prediction associated with it.",
    "query": "SELECT T1.ref_aa FROM disease_mutation AS T1 JOIN disease_mutation_impact_prediction AS T2 ON T1.id = T2.disease_mutation_id WHERE T2.id != 9954"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "695_1",
    "user": "gpt-3",
    "question": "Retrieve the name of stages from the stage table where the expression score in the healthy_expression table is not equal to 27.80000 and is joined with the developmental id in the stage table that matches with the uberon_developmental_id in the healthy_expression table.",
    "query": "SELECT T1.name FROM stage AS T1 JOIN healthy_expression AS T2 ON T1.id = T2.uberon_developmental_id WHERE T2.expression_score != 27.80000"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "695_2",
    "user": "gpt-3",
    "question": "Retrieve the name of each stage from the \"stage\" table where there is a matching developmental ID in the \"healthy_expression\" table and the expression score is not equal to 27.80000.",
    "query": "SELECT T1.name FROM stage AS T1 JOIN healthy_expression AS T2 ON T1.id = T2.uberon_developmental_id WHERE T2.expression_score != 27.80000"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "696_1",
    "user": "gpt-3",
    "question": "List all common names of species that are not human and have an Ensembl gene ID associated with them.",
    "query": "SELECT T1.speciescommonname FROM species AS T1 JOIN xref_gene_ensembl AS T2 ON T1.speciesid = T2.speciesid WHERE T2.speciesid != 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "696_2",
    "user": "gpt-3",
    "question": "Which species have a common name that is not \"Human\"?",
    "query": "SELECT T1.speciescommonname FROM species AS T1 JOIN xref_gene_ensembl AS T2 ON T1.speciesid = T2.speciesid WHERE T2.speciesid != 9606"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "697_1",
    "user": "gpt-3",
    "question": "Find the biomarker FDA ID from the table of biomarkers FDA drugs, where the test submission is not equal to \"P140023\".",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_drug AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_submission != \"P140023\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "697_2",
    "user": "gpt-3",
    "question": "What are the biomarker FDA IDs for biomarkers that have not undergone the test submission with code \"P140023\"?",
    "query": "SELECT T1.biomarker_fda_id FROM biomarker_fda_drug AS T1 JOIN biomarker_fda AS T2 ON T1.biomarker_fda_id = T2.id WHERE T2.test_submission != \"P140023\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "698_1",
    "user": "gpt-3",
    "question": "Retrieve the specimen type from the biomarker FDA test for all diseases except for disease ID 263.",
    "query": "SELECT T1.specimen_type FROM biomarker_fda_test AS T1 JOIN disease AS T2 ON T1.doid = T2.id WHERE T2.id != 263"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "698_2",
    "user": "gpt-3",
    "question": "Retrieve the specimen type from the biomarker FDA test for all diseases except for disease with ID 263.",
    "query": "SELECT T1.specimen_type FROM biomarker_fda_test AS T1 JOIN disease AS T2 ON T1.doid = T2.id WHERE T2.id != 263"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "699_1",
    "user": "gpt-3",
    "question": "Find the Uberon anatomical IDs from the disease mutation tissue table where the ID is not equal to \"UBERON:0004262\" and join it with the anatomical entity table.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.id != \"UBERON:0004262\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "699_2",
    "user": "gpt-3",
    "question": "Find the anatomical entity IDs from the disease mutation tissue table where the uberon anatomical ID is not equal to \"UBERON:0004262\" and join them with the anatomical entity table.",
    "query": "SELECT T1.uberon_anatomical_id FROM disease_mutation_tissue AS T1 JOIN anatomical_entity AS T2 ON T1.uberon_anatomical_id = T2.id WHERE T2.id != \"UBERON:0004262\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "700_1",
    "user": "gpt-3",
    "question": "Find the IDs of all biomarkers in the FDA database that have a NCIt term associated with them, excluding the biomarker with ID \"FDA000119\".",
    "query": "SELECT T1.id FROM biomarker_fda AS T1 JOIN biomarker_fda_ncit_term AS T2 ON T1.id = T2.biomarker_fda_id WHERE T2.biomarker_fda_id != \"FDA000119\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "700_2",
    "user": "gpt-3",
    "question": "Get the ID of all biomarkers from the FDA that have an NCIT term associated with them, except for \"FDA000119\".",
    "query": "SELECT T1.id FROM biomarker_fda AS T1 JOIN biomarker_fda_ncit_term AS T2 ON T1.id = T2.biomarker_fda_id WHERE T2.biomarker_fda_id != \"FDA000119\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "701_1",
    "user": "gpt-3",
    "question": "Find the chromosome ID for disease mutations that have an Ensembl transcript ID matching a UniprotKB AC that is not \"C9JJ37\" in the map of protein-disease mutations.",
    "query": "SELECT T1.chromosome_id FROM disease_mutation AS T1 JOIN map_protein_disease_mutation AS T2 ON T1.ensembl_transcript_id = T2.ensembl_transcript_id WHERE T2.uniprotkb_ac != \"C9JJ37\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "701_2",
    "user": "gpt-3",
    "question": "\"Retrieve the chromosome IDs from disease mutations for all proteins that have an Ensembl transcript ID and are not associated with the UniProtKB accession code \"C9JJ37\" in the map of protein-disease mutations.\"",
    "query": "SELECT T1.chromosome_id FROM disease_mutation AS T1 JOIN map_protein_disease_mutation AS T2 ON T1.ensembl_transcript_id = T2.ensembl_transcript_id WHERE T2.uniprotkb_ac != \"C9JJ37\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "702_1",
    "user": "gpt-3",
    "question": "Find the Ensembl transcript ID from the map_protein_disease_mutation table for all entries that have a non-zero doid value in the disease_mutation table.",
    "query": "SELECT T1.ensembl_transcript_id FROM map_protein_disease_mutation AS T1 JOIN disease_mutation AS T2 ON T1.ensembl_transcript_id = T2.ensembl_transcript_id WHERE T2.doid != 0"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "702_2",
    "user": "gpt-3",
    "question": "\"Retrieve the ensembl transcript IDs from the map_protein_disease_mutation table that are also found in the disease_mutation table and have a disease ontology ID other than 0.\"",
    "query": "SELECT T1.ensembl_transcript_id FROM map_protein_disease_mutation AS T1 JOIN disease_mutation AS T2 ON T1.ensembl_transcript_id = T2.ensembl_transcript_id WHERE T2.doid != 0"
  },
  {
    "db_id": "oncomx_temporary",
    "id": "703_1",
    "user": "gpt-3",
    "question": "Return the species names for all species that have an Ensembl gene ID other than \"ENSG00000054598\" in the xref_gene_ensembl table, by joining the species table and xref_gene_ensembl table on their shared species ID.",
    "query": "SELECT T1.species FROM species AS T1 JOIN xref_gene_ensembl AS T2 ON T1.speciesid = T2.speciesid WHERE T2.ensembl_gene_id != \"ENSG00000054598\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "703_2",
    "user": "gpt-3",
    "question": "What is the species of genes that have an Ensembl gene ID other than \"ENSG00000054598\"?",
    "query": "SELECT T1.species FROM species AS T1 JOIN xref_gene_ensembl AS T2 ON T1.speciesid = T2.speciesid WHERE T2.ensembl_gene_id != \"ENSG00000054598\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "704_1",
    "user": "gpt-3",
    "question": "Get the manufacturer for all biomarker tests from the FDA that have a trade name listed in both the \"biomarker_fda_test\" and \"biomarker_fda_test_trial\" tables, excluding the specific test named \"23andMe PGS Genetic Health Risk Report for BRCA1/BRCA2 (Selected Variants)\".",
    "query": "SELECT T1.test_manufacturer FROM biomarker_fda_test AS T1 JOIN biomarker_fda_test_trial AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.test_trade_name != \"23andMe PGS Genetic Health Risk Report for BRCA1/BRCA2 (Selected Variants)\""
  },
  {
    "db_id": "oncomx_temporary",
    "id": "704_2",
    "user": "gpt-3",
    "question": "Find the manufacturer for all biomarker FDA tests that have a trade name different from \"23andMe PGS Genetic Health Risk Report for BRCA1/BRCA2 (Selected Variants)\".",
    "query": "SELECT T1.test_manufacturer FROM biomarker_fda_test AS T1 JOIN biomarker_fda_test_trial AS T2 ON T1.test_trade_name = T2.test_trade_name WHERE T2.test_trade_name != \"23andMe PGS Genetic Health Risk Report for BRCA1/BRCA2 (Selected Variants)\""
  }
]