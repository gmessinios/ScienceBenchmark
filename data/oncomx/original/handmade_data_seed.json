[
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show all information about disease mutations of lung cancer",
    "question_toks": [
      "Show",
      "all",
      "information",
      "about",
      "disease",
      "mutations",
      "of",
      "lung",
      "cancer"
    ],
    "query": "SELECT * FROM disease_mutation JOIN disease ON disease_mutation.doid = disease.id WHERE disease.name = \"lung cancer\"",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            17
          ],
          [
            "table_unit",
            13
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                79,
                false
              ],
              null
            ],
            [
              0,
              55,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              56,
              false
            ],
            null
          ],
          "\"lung cancer\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "*",
      "from",
      "disease_mutation",
      "join",
      "disease",
      "on",
      "disease_mutation.doid",
      "=",
      "disease.id",
      "where",
      "disease.name",
      "=",
      "\"lung cancer\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show biomarker drugs",
    "question_toks": [
      "Show",
      "biomarker",
      "drugs"
    ],
    "query": "SELECT biomarker_drug FROM biomarker_fda_drug",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "biomarker_drug",
      "from",
      "biomarker_fda_drug"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show distinct manufacturer of diagnostic tests for gene BRAF ",
    "question_toks": [
      "Show",
      "distinct",
      "manufacturer",
      "of",
      "diagnostic",
      "tests",
      "for",
      "gene",
      "BRAF"
    ],
    "query": "SELECT distinct(biomarker_fda_test.test_manufacturer), biomarker_fda_test_use.actual_use\nFROM biomarker\n         JOIN biomarker_fda on biomarker.id = biomarker_fda.id\n         JOIN biomarker_fda_test\n              ON biomarker_fda.test_trade_name = biomarker_fda_test.test_trade_name AND\n                 biomarker_fda.test_submission = biomarker_fda_test.test_submission\n         JOIN biomarker_fda_test_use ON biomarker_fda_test.test_submission = biomarker_fda_test_use.test_submission and biomarker_fda_test.test_trade_name = biomarker_fda_test_use.test_trade_name\nWHERE biomarker.gene_symbol = 'BRAF'\n  AND biomarker_fda_test_use.actual_use = 'diagnostic'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            9
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              26,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              28,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ],
            [
              0,
              41,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              40,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"BRAF\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"diagnostic\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "distinct",
      "(",
      "biomarker_fda_test.test_manufacturer",
      ")",
      ",",
      "biomarker_fda_test_use.actual_use",
      "from",
      "biomarker",
      "join",
      "biomarker_fda",
      "on",
      "biomarker.id",
      "=",
      "biomarker_fda.id",
      "join",
      "biomarker_fda_test",
      "on",
      "biomarker_fda.test_trade_name",
      "=",
      "biomarker_fda_test.test_trade_name",
      "and",
      "biomarker_fda.test_submission",
      "=",
      "biomarker_fda_test.test_submission",
      "join",
      "biomarker_fda_test_use",
      "on",
      "biomarker_fda_test.test_submission",
      "=",
      "biomarker_fda_test_use.test_submission",
      "and",
      "biomarker_fda_test.test_trade_name",
      "=",
      "biomarker_fda_test_use.test_trade_name",
      "where",
      "biomarker.gene_symbol",
      "=",
      "\"BRAF\"",
      "and",
      "biomarker_fda_test_use.actual_use",
      "=",
      "\"diagnostic\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "What are the name of cancer diseases that gene A1CF is differentially expressed in with a p-value less than 0.01",
    "question_toks": [
      "What",
      "are",
      "the",
      "name",
      "of",
      "cancer",
      "diseases",
      "that",
      "gene",
      "A1CF",
      "is",
      "differentially",
      "expressed",
      "in",
      "with",
      "a",
      "p",
      "-",
      "value",
      "less",
      "than",
      "0.01"
    ],
    "query": "SELECT DISTINCT disease.name\nFROM differential_expression\n         JOIN disease ON differential_expression.doid = disease.id\nWHERE gene_symbol = 'A1CF'\n  AND pvalue < 0.01",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            24
          ],
          [
            "table_unit",
            13
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                101,
                false
              ],
              null
            ],
            [
              0,
              55,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                56,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              100,
              false
            ],
            null
          ],
          "\"A1CF\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              103,
              false
            ],
            null
          ],
          0.01,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "distinct",
      "disease.name",
      "from",
      "differential_expression",
      "join",
      "disease",
      "on",
      "differential_expression.doid",
      "=",
      "disease.id",
      "where",
      "gene_symbol",
      "=",
      "\"A1CF\"",
      "and",
      "pvalue",
      "<",
      "0.01"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show all information about species",
    "question_toks": [
      "Show",
      "all",
      "information",
      "about",
      "species"
    ],
    "query": "SELECT * FROM species",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            15
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "*",
      "from",
      "species"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "What are the different QA states for biomarkers on the EDRN platform?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "QA",
      "states",
      "for",
      "biomarkers",
      "on",
      "the",
      "EDRN",
      "platform",
      "?"
    ],
    "query": "SELECT DISTINCT qa_state FROM biomarker_edrn",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "distinct",
      "qa_state",
      "from",
      "biomarker_edrn"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show me the name of anatomical entities and species for all species",
    "question_toks": [
      "Show",
      "me",
      "the",
      "name",
      "of",
      "anatomical",
      "entities",
      "and",
      "species",
      "for",
      "all",
      "species"
    ],
    "query": "SELECT anatomical_entity.name, species.speciescommonname\nFROM anatomical_entity\n         JOIN healthy_expression ON anatomical_entity.id = healthy_expression.uberon_anatomical_id\n         JOIN xref_gene_ensembl ON healthy_expression.ensembl_gene_id = xref_gene_ensembl.ensembl_gene_id\n         JOIN species ON xref_gene_ensembl.speciesid = species.speciesid",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            19
          ],
          [
            "table_unit",
            18
          ],
          [
            "table_unit",
            14
          ],
          [
            "table_unit",
            15
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                88,
                false
              ],
              null
            ],
            [
              0,
              81,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                80,
                false
              ],
              null
            ],
            [
              0,
              58,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                59,
                false
              ],
              null
            ],
            [
              0,
              60,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                89,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                63,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "anatomical_entity.name",
      ",",
      "species.speciescommonname",
      "from",
      "anatomical_entity",
      "join",
      "healthy_expression",
      "on",
      "anatomical_entity.id",
      "=",
      "healthy_expression.uberon_anatomical_id",
      "join",
      "xref_gene_ensembl",
      "on",
      "healthy_expression.ensembl_gene_id",
      "=",
      "xref_gene_ensembl.ensembl_gene_id",
      "join",
      "species",
      "on",
      "xref_gene_ensembl.speciesid",
      "=",
      "species.speciesid"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show me the name of each anatomical entity together with the cancer name which can occur in this entity.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "name",
      "of",
      "each",
      "anatomical",
      "entity",
      "together",
      "with",
      "the",
      "cancer",
      "name",
      "which",
      "can",
      "occur",
      "in",
      "this",
      "entity",
      "."
    ],
    "query": "SELECT anatomical_entity.name, disease.name\nFROM anatomical_entity\n         JOIN cancer_tissue ON anatomical_entity.id = cancer_tissue.uberon_anatomical_id\n         JOIN disease ON cancer_tissue.doid = disease.id",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            19
          ],
          [
            "table_unit",
            23
          ],
          [
            "table_unit",
            13
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                88,
                false
              ],
              null
            ],
            [
              0,
              99,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                98,
                false
              ],
              null
            ],
            [
              0,
              55,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                89,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                56,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "anatomical_entity.name",
      ",",
      "disease.name",
      "from",
      "anatomical_entity",
      "join",
      "cancer_tissue",
      "on",
      "anatomical_entity.id",
      "=",
      "cancer_tissue.uberon_anatomical_id",
      "join",
      "disease",
      "on",
      "cancer_tissue.doid",
      "=",
      "disease.id"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "What are the distinct healthy organs where the gene A1BG is expressed.",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "healthy",
      "organs",
      "where",
      "the",
      "gene",
      "A1BG",
      "is",
      "expressed",
      "."
    ],
    "query": "SELECT distinct anatomical_entity.name\nFROM healthy_expression\n         JOIN xref_gene_ensembl ON healthy_expression.ensembl_gene_id = xref_gene_ensembl.ensembl_gene_id\n         JOIN anatomical_entity ON healthy_expression.uberon_anatomical_id = anatomical_entity.id\nWHERE xref_gene_ensembl.gene_symbol = 'A1BG'\n  and healthy_expression.expression_level_anatomical_relative != 'ABSENT'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            18
          ],
          [
            "table_unit",
            14
          ],
          [
            "table_unit",
            19
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                80,
                false
              ],
              null
            ],
            [
              0,
              58,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                81,
                false
              ],
              null
            ],
            [
              0,
              88,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                89,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              57,
              false
            ],
            null
          ],
          "\"A1BG\"",
          null
        ],
        "and",
        [
          false,
          7,
          [
            0,
            [
              0,
              84,
              false
            ],
            null
          ],
          "\"ABSENT\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "distinct",
      "anatomical_entity.name",
      "from",
      "healthy_expression",
      "join",
      "xref_gene_ensembl",
      "on",
      "healthy_expression.ensembl_gene_id",
      "=",
      "xref_gene_ensembl.ensembl_gene_id",
      "join",
      "anatomical_entity",
      "on",
      "healthy_expression.uberon_anatomical_id",
      "=",
      "anatomical_entity.id",
      "where",
      "xref_gene_ensembl.gene_symbol",
      "=",
      "\"A1BG\"",
      "and",
      "healthy_expression.expression_level_anatomical_relative",
      "!=",
      "\"ABSENT\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "List all different biomarker alias.",
    "question_toks": [
      "List",
      "all",
      "different",
      "biomarker",
      "alias",
      "."
    ],
    "query": "SELECT DISTINCT alias FROM biomarker_alias",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "distinct",
      "alias",
      "from",
      "biomarker_alias"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "What are the biomarker symbols for EDRN biomarker type protein?",
    "question_toks": [
      "What",
      "are",
      "the",
      "biomarker",
      "symbols",
      "for",
      "EDRN",
      "biomarker",
      "type",
      "protein",
      "?"
    ],
    "query": "SELECT gene_symbol FROM biomarker JOIN biomarker_edrn ON biomarker.id = biomarker_edrn.id WHERE biomarker_type = 'Protein'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Protein\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "gene_symbol",
      "from",
      "biomarker",
      "join",
      "biomarker_edrn",
      "on",
      "biomarker.id",
      "=",
      "biomarker_edrn.id",
      "where",
      "biomarker_type",
      "=",
      "\"Protein\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show me all genes for species musculus",
    "question_toks": [
      "Show",
      "me",
      "all",
      "genes",
      "for",
      "species",
      "musculus"
    ],
    "query": "SELECT gene_symbol\nFROM xref_gene_ensembl JOIN species ON xref_gene_ensembl.speciesid = species.speciesid\nWHERE species.species = 'musculus'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            14
          ],
          [
            "table_unit",
            15
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                59,
                false
              ],
              null
            ],
            [
              0,
              60,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                57,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              62,
              false
            ],
            null
          ],
          "\"musculus\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "gene_symbol",
      "from",
      "xref_gene_ensembl",
      "join",
      "species",
      "on",
      "xref_gene_ensembl.speciesid",
      "=",
      "species.speciesid",
      "where",
      "species.species",
      "=",
      "\"musculus\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "In which FDA test trade name was the drug 'Vemurafenib' involved?",
    "question_toks": [
      "In",
      "which",
      "FDA",
      "test",
      "trade",
      "name",
      "was",
      "the",
      "drug",
      "'",
      "Vemurafenib",
      "'",
      "involved",
      "?"
    ],
    "query": "SELECT test_trade_name\nFROM biomarker_fda\n         JOIN biomarker_fda_drug ON biomarker_fda.id = biomarker_fda_drug.biomarker_fda_id\nWHERE biomarker_fda_drug.biomarker_drug = 'Vemurafenib'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            3
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Vemurafenib\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "test_trade_name",
      "from",
      "biomarker_fda",
      "join",
      "biomarker_fda_drug",
      "on",
      "biomarker_fda.id",
      "=",
      "biomarker_fda_drug.biomarker_fda_id",
      "where",
      "biomarker_fda_drug.biomarker_drug",
      "=",
      "\"Vemurafenib\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Give me all disease mutation data for skin cancer with a peptide position of 121",
    "question_toks": [
      "Give",
      "me",
      "all",
      "disease",
      "mutation",
      "data",
      "for",
      "skin",
      "cancer",
      "with",
      "a",
      "peptide",
      "position",
      "of",
      "121"
    ],
    "query": "SELECT * FROM disease_mutation JOIN disease ON disease_mutation.doid = disease.id\nWHERE disease.name = 'skin cancer'\n  and peptide_pos = 121",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            17
          ],
          [
            "table_unit",
            13
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                79,
                false
              ],
              null
            ],
            [
              0,
              55,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              56,
              false
            ],
            null
          ],
          "\"skin cancer\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              73,
              false
            ],
            null
          ],
          121.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "*",
      "from",
      "disease_mutation",
      "join",
      "disease",
      "on",
      "disease_mutation.doid",
      "=",
      "disease.id",
      "where",
      "disease.name",
      "=",
      "\"skin cancer\"",
      "and",
      "peptide_pos",
      "=",
      "121"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "How many FDA test with specimen type saliva are there?",
    "question_toks": [
      "How",
      "many",
      "FDA",
      "test",
      "with",
      "specimen",
      "type",
      "saliva",
      "are",
      "there",
      "?"
    ],
    "query": "SELECT count(*) FROM biomarker_fda_test WHERE specimen_type = 'Saliva'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              32,
              false
            ],
            null
          ],
          "\"Saliva\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "biomarker_fda_test",
      "where",
      "specimen_type",
      "=",
      "\"Saliva\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show me the pmid for disease mutations which have cosmic as datasource. ",
    "question_toks": [
      "Show",
      "me",
      "the",
      "pmid",
      "for",
      "disease",
      "mutations",
      "which",
      "have",
      "cosmic",
      "as",
      "datasource",
      "."
    ],
    "query": "SELECT pmid\nFROM disease_mutation_article\n         JOIN disease_mutation ON disease_mutation_article.disease_mutation_id = disease_mutation.id\nWHERE disease_mutation.data_source = 'cosmic'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ],
          [
            "table_unit",
            17
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                45,
                false
              ],
              null
            ],
            [
              0,
              66,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                44,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              78,
              false
            ],
            null
          ],
          "\"cosmic\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "pmid",
      "from",
      "disease_mutation_article",
      "join",
      "disease_mutation",
      "on",
      "disease_mutation_article.disease_mutation_id",
      "=",
      "disease_mutation.id",
      "where",
      "disease_mutation.data_source",
      "=",
      "\"cosmic\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Give me symbol and description of biomarkers related to breast at the EDRN phase one",
    "question_toks": [
      "Give",
      "me",
      "symbol",
      "and",
      "description",
      "of",
      "biomarkers",
      "related",
      "to",
      "breast",
      "at",
      "the",
      "EDRN",
      "phase",
      "one"
    ],
    "query": "SELECT biomarker.gene_symbol, biomarker.biomarker_description\nFROM biomarker\n         JOIN biomarker_edrn ON biomarker.id = biomarker_edrn.id\n         JOIN anatomical_entity ON biomarker_edrn.uberon_anatomical_id = anatomical_entity.id\nWHERE anatomical_entity.name = 'breast'\n  and biomarker_edrn.phase = 'One'\n",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            19
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              88,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              89,
              false
            ],
            null
          ],
          "\"breast\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"One\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "biomarker.gene_symbol",
      ",",
      "biomarker.biomarker_description",
      "from",
      "biomarker",
      "join",
      "biomarker_edrn",
      "on",
      "biomarker.id",
      "=",
      "biomarker_edrn.id",
      "join",
      "anatomical_entity",
      "on",
      "biomarker_edrn.uberon_anatomical_id",
      "=",
      "anatomical_entity.id",
      "where",
      "anatomical_entity.name",
      "=",
      "\"breast\"",
      "and",
      "biomarker_edrn.phase",
      "=",
      "\"One\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "List all gene symbols for species with genus Mus",
    "question_toks": [
      "List",
      "all",
      "gene",
      "symbols",
      "for",
      "species",
      "with",
      "genus",
      "Mus"
    ],
    "query": "SELECT gene_symbol FROM xref_gene_ensembl JOIN species ON xref_gene_ensembl.speciesid = species.speciesid WHERE species.genus = 'Mus'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            14
          ],
          [
            "table_unit",
            15
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                59,
                false
              ],
              null
            ],
            [
              0,
              60,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                57,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              61,
              false
            ],
            null
          ],
          "\"Mus\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "gene_symbol",
      "from",
      "xref_gene_ensembl",
      "join",
      "species",
      "on",
      "xref_gene_ensembl.speciesid",
      "=",
      "species.speciesid",
      "where",
      "species.genus",
      "=",
      "\"Mus\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "What are the alias for biomarker with symbol DKK3",
    "question_toks": [
      "What",
      "are",
      "the",
      "alias",
      "for",
      "biomarker",
      "with",
      "symbol",
      "DKK3"
    ],
    "query": "SELECT alias FROM biomarker JOIN biomarker_alias ON biomarker.id = biomarker_alias.biomarker_internal_id WHERE biomarker.gene_symbol = 'DKK3'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"DKK3\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "alias",
      "from",
      "biomarker",
      "join",
      "biomarker_alias",
      "on",
      "biomarker.id",
      "=",
      "biomarker_alias.biomarker_internal_id",
      "where",
      "biomarker.gene_symbol",
      "=",
      "\"DKK3\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "What diseases have a mutation with a uniprot position (aa_pos_uniprotkb) of 34333?",
    "question_toks": [
      "What",
      "diseases",
      "have",
      "a",
      "mutation",
      "with",
      "a",
      "uniprot",
      "position",
      "(",
      "aa_pos_uniprotkb",
      ")",
      "of",
      "34333",
      "?"
    ],
    "query": "SELECT disease.name\nFROM disease JOIN disease_mutation ON disease.id = disease_mutation.doid\nWHERE disease_mutation.aa_pos_uniprotkb = 34333",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            17
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                55,
                false
              ],
              null
            ],
            [
              0,
              79,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                56,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              74,
              false
            ],
            null
          ],
          34333.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "disease.name",
      "from",
      "disease",
      "join",
      "disease_mutation",
      "on",
      "disease.id",
      "=",
      "disease_mutation.doid",
      "where",
      "disease_mutation.aa_pos_uniprotkb",
      "=",
      "34333"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "How many biomarkers are in QA state Curated?",
    "question_toks": [
      "How",
      "many",
      "biomarkers",
      "are",
      "in",
      "QA",
      "state",
      "Curated",
      "?"
    ],
    "query": "SELECT COUNT(*) FROM biomarker_edrn WHERE qa_state = 'Curated'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Curated\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "biomarker_edrn",
      "where",
      "qa_state",
      "=",
      "\"Curated\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show me the name of the anatomical entity and the expression score of where either gene ENSMUSG00000000037 or gene ENSMUSG00000000078 is expressed in.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "name",
      "of",
      "the",
      "anatomical",
      "entity",
      "and",
      "the",
      "expression",
      "score",
      "of",
      "where",
      "either",
      "gene",
      "ENSMUSG00000000037",
      "or",
      "gene",
      "ENSMUSG00000000078",
      "is",
      "expressed",
      "in",
      "."
    ],
    "query": "SELECT anatomical_entity.name, healthy_expression.expression_score\nFROM healthy_expression\n         JOIN anatomical_entity\n              ON healthy_expression.uberon_anatomical_id = anatomical_entity.id\nWHERE healthy_expression.ensembl_gene_id = 'ENSMUSG00000000037'\n   OR healthy_expression.ensembl_gene_id = 'ENSMUSG00000000078'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            18
          ],
          [
            "table_unit",
            19
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                81,
                false
              ],
              null
            ],
            [
              0,
              88,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                89,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                87,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              80,
              false
            ],
            null
          ],
          "\"ENSMUSG00000000037\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              80,
              false
            ],
            null
          ],
          "\"ENSMUSG00000000078\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "anatomical_entity.name",
      ",",
      "healthy_expression.expression_score",
      "from",
      "healthy_expression",
      "join",
      "anatomical_entity",
      "on",
      "healthy_expression.uberon_anatomical_id",
      "=",
      "anatomical_entity.id",
      "where",
      "healthy_expression.ensembl_gene_id",
      "=",
      "\"ENSMUSG00000000037\"",
      "or",
      "healthy_expression.ensembl_gene_id",
      "=",
      "\"ENSMUSG00000000078\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show me the description for biomarkers with symbol MMP1",
    "question_toks": [
      "Show",
      "me",
      "the",
      "description",
      "for",
      "biomarkers",
      "with",
      "symbol",
      "MMP1"
    ],
    "query": "SELECT biomarker_description FROM biomarker WHERE gene_symbol = 'MMP1'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"MMP1\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "biomarker_description",
      "from",
      "biomarker",
      "where",
      "gene_symbol",
      "=",
      "\"MMP1\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "What is the symbol of genes which are expressed in the disease stomach cancer?",
    "question_toks": [
      "What",
      "is",
      "the",
      "symbol",
      "of",
      "genes",
      "which",
      "are",
      "expressed",
      "in",
      "the",
      "disease",
      "stomach",
      "cancer",
      "?"
    ],
    "query": "SELECT differential_expression.gene_symbol, disease.name\nFROM differential_expression\n         JOIN disease ON differential_expression.doid = disease.id\nWHERE disease.name = 'stomach cancer'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            24
          ],
          [
            "table_unit",
            13
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                101,
                false
              ],
              null
            ],
            [
              0,
              55,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                100,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                56,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              56,
              false
            ],
            null
          ],
          "\"stomach cancer\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "differential_expression.gene_symbol",
      ",",
      "disease.name",
      "from",
      "differential_expression",
      "join",
      "disease",
      "on",
      "differential_expression.doid",
      "=",
      "disease.id",
      "where",
      "disease.name",
      "=",
      "\"stomach cancer\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "In which FDA test trade names did the manufacturer QIAGEN GMBH take part?",
    "question_toks": [
      "In",
      "which",
      "FDA",
      "test",
      "trade",
      "names",
      "did",
      "the",
      "manufacturer",
      "QIAGEN",
      "GMBH",
      "take",
      "part",
      "?"
    ],
    "query": "SELECT test_trade_name from biomarker_fda_test WHERE test_manufacturer = 'QIAGEN GMBH'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"QIAGEN GMBH\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "test_trade_name",
      "from",
      "biomarker_fda_test",
      "where",
      "test_manufacturer",
      "=",
      "\"QIAGEN GMBH\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "What are the symbols for biomarkers in phase two on EDRN?",
    "question_toks": [
      "What",
      "are",
      "the",
      "symbols",
      "for",
      "biomarkers",
      "in",
      "phase",
      "two",
      "on",
      "EDRN",
      "?"
    ],
    "query": "SELECT gene_symbol FROM biomarker JOIN biomarker_edrn ON biomarker.id = biomarker_edrn.id WHERE phase = 'Two'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Two\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "gene_symbol",
      "from",
      "biomarker",
      "join",
      "biomarker_edrn",
      "on",
      "biomarker.id",
      "=",
      "biomarker_edrn.id",
      "where",
      "phase",
      "=",
      "\"Two\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "What's the NCIt term for biomarker with symbol ALDH4A1?",
    "question_toks": [
      "What",
      "'s",
      "the",
      "NCIt",
      "term",
      "for",
      "biomarker",
      "with",
      "symbol",
      "ALDH4A1",
      "?"
    ],
    "query": "SELECT biomarker_fda_ncit_term.ncit_biomarker\nFROM biomarker_fda_ncit_term\n         JOIN biomarker_fda ON biomarker_fda_ncit_term.biomarker_fda_id = biomarker_fda.id\n         JOIN biomarker ON biomarker_fda.id = biomarker.id\nWHERE biomarker.gene_symbol = 'ALDH4A1'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            4
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"ALDH4A1\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "biomarker_fda_ncit_term.ncit_biomarker",
      "from",
      "biomarker_fda_ncit_term",
      "join",
      "biomarker_fda",
      "on",
      "biomarker_fda_ncit_term.biomarker_fda_id",
      "=",
      "biomarker_fda.id",
      "join",
      "biomarker",
      "on",
      "biomarker_fda.id",
      "=",
      "biomarker.id",
      "where",
      "biomarker.gene_symbol",
      "=",
      "\"ALDH4A1\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show cancer biomarker panels ",
    "question_toks": [
      "Show",
      "cancer",
      "biomarker",
      "panels"
    ],
    "query": "SELECT *\nFROM biomarker\n  JOIN\n     biomarker_edrn ON biomarker.id = biomarker_edrn.id\n    JOIN\n     biomarker_fda on biomarker.id = biomarker_fda.id\n         JOIN\n     biomarker_fda_test ON biomarker_fda.test_submission = biomarker_fda_test.test_submission and biomarker_fda.test_trade_name = biomarker_fda_test.test_trade_name\n         LEFT JOIN anatomical_entity ON anatomical_entity.id = biomarker_edrn.uberon_anatomical_id\n         JOIN cancer_tissue ON cancer_tissue.uberon_anatomical_id = anatomical_entity.id\n         JOIN disease ON disease.id = biomarker_fda_test.doid or disease.id = cancer_tissue.doid\nWHERE biomarker.test_is_a_panel = 'true'\n  AND biomarker.gene_symbol != 'NULL'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            19
          ],
          [
            "table_unit",
            23
          ],
          [
            "table_unit",
            13
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              28,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              26,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                88,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                99,
                false
              ],
              null
            ],
            [
              0,
              88,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                55,
                false
              ],
              null
            ],
            [
              0,
              30,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"true\"",
          null
        ],
        "and",
        [
          false,
          7,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"NULL\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "*",
      "from",
      "biomarker",
      "join",
      "biomarker_edrn",
      "on",
      "biomarker.id",
      "=",
      "biomarker_edrn.id",
      "join",
      "biomarker_fda",
      "on",
      "biomarker.id",
      "=",
      "biomarker_fda.id",
      "join",
      "biomarker_fda_test",
      "on",
      "biomarker_fda.test_submission",
      "=",
      "biomarker_fda_test.test_submission",
      "and",
      "biomarker_fda.test_trade_name",
      "=",
      "biomarker_fda_test.test_trade_name",
      "left",
      "join",
      "anatomical_entity",
      "on",
      "anatomical_entity.id",
      "=",
      "biomarker_edrn.uberon_anatomical_id",
      "join",
      "cancer_tissue",
      "on",
      "cancer_tissue.uberon_anatomical_id",
      "=",
      "anatomical_entity.id",
      "join",
      "disease",
      "on",
      "disease.id",
      "=",
      "biomarker_fda_test.doid",
      "or",
      "disease.id",
      "=",
      "cancer_tissue.doid",
      "where",
      "biomarker.test_is_a_panel",
      "=",
      "\"true\"",
      "and",
      "biomarker.gene_symbol",
      "!=",
      "\"NULL\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "List the gene symbols expressed with a p-value of 0.00288",
    "question_toks": [
      "List",
      "the",
      "gene",
      "symbols",
      "expressed",
      "with",
      "a",
      "p",
      "-",
      "value",
      "of",
      "0.00288"
    ],
    "query": "SELECT gene_symbol FROM differential_expression WHERE pvalue = 0.00288",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            24
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                100,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              103,
              false
            ],
            null
          ],
          0.00288,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "gene_symbol",
      "from",
      "differential_expression",
      "where",
      "pvalue",
      "=",
      "0.00288"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "How many biomarkers are in QA state 'Under Review' on the EDRN platform?",
    "question_toks": [
      "How",
      "many",
      "biomarkers",
      "are",
      "in",
      "QA",
      "state",
      "'",
      "Under",
      "Review",
      "'",
      "on",
      "the",
      "EDRN",
      "platform",
      "?"
    ],
    "query": "SELECT count(*) from biomarker_edrn WHERE qa_state = 'Under Review'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Under Review\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "biomarker_edrn",
      "where",
      "qa_state",
      "=",
      "\"Under Review\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "What are the different tools for disease mutation impact predictions?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "tools",
      "for",
      "disease",
      "mutation",
      "impact",
      "predictions",
      "?"
    ],
    "query": "SELECT DISTINCT tool FROM disease_mutation_impact_prediction",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                50,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "distinct",
      "tool",
      "from",
      "disease_mutation_impact_prediction"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Which disease is expressed with a pvalue of more than 0.9999",
    "question_toks": [
      "Which",
      "disease",
      "is",
      "expressed",
      "with",
      "a",
      "pvalue",
      "of",
      "more",
      "than",
      "0.9999"
    ],
    "query": "SELECT *\nFROM disease JOIN differential_expression ON disease.id = differential_expression.doid\nWHERE pvalue > 0.9999",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            24
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                55,
                false
              ],
              null
            ],
            [
              0,
              101,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              103,
              false
            ],
            null
          ],
          0.9999,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "*",
      "from",
      "disease",
      "join",
      "differential_expression",
      "on",
      "disease.id",
      "=",
      "differential_expression.doid",
      "where",
      "pvalue",
      ">",
      "0.9999"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show me all different biomarkers which are also available on the EDRN portal",
    "question_toks": [
      "Show",
      "me",
      "all",
      "different",
      "biomarkers",
      "which",
      "are",
      "also",
      "available",
      "on",
      "the",
      "EDRN",
      "portal"
    ],
    "query": "SELECT DISTINCT biomarker_title\nFROM biomarker\n         JOIN biomarker_edrn ON biomarker.id = biomarker_edrn.id",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "distinct",
      "biomarker_title",
      "from",
      "biomarker",
      "join",
      "biomarker_edrn",
      "on",
      "biomarker.id",
      "=",
      "biomarker_edrn.id"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show all information about mutations of lung cancer",
    "question_toks": [
      "Show",
      "all",
      "information",
      "about",
      "mutations",
      "of",
      "lung",
      "cancer"
    ],
    "query": "SELECT *\nFROM disease_mutation\n         JOIN disease ON disease_mutation.doid = disease.id\nWHERE disease.name = \"lung cancer\"",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            17
          ],
          [
            "table_unit",
            13
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                79,
                false
              ],
              null
            ],
            [
              0,
              55,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              56,
              false
            ],
            null
          ],
          "\"lung cancer\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "*",
      "from",
      "disease_mutation",
      "join",
      "disease",
      "on",
      "disease_mutation.doid",
      "=",
      "disease.id",
      "where",
      "disease.name",
      "=",
      "\"lung cancer\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show the gene symbol and the description of biomarkers",
    "question_toks": [
      "Show",
      "the",
      "gene",
      "symbol",
      "and",
      "the",
      "description",
      "of",
      "biomarkers"
    ],
    "query": "SELECT gene_symbol, biomarker_description FROM biomarker",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "gene_symbol",
      ",",
      "biomarker_description",
      "from",
      "biomarker"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "What is the approval status for FDA tests with 23 genes?",
    "question_toks": [
      "What",
      "is",
      "the",
      "approval",
      "status",
      "for",
      "FDA",
      "tests",
      "with",
      "23",
      "genes",
      "?"
    ],
    "query": "SELECT biomarker_fda_test.test_approval_status\nFROM biomarker_fda_test\nWHERE biomarker_fda_test.test_number_genes = 23",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              34,
              false
            ],
            null
          ],
          23.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "biomarker_fda_test.test_approval_status",
      "from",
      "biomarker_fda_test",
      "where",
      "biomarker_fda_test.test_number_genes",
      "=",
      "23"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show all information about stages",
    "question_toks": [
      "Show",
      "all",
      "information",
      "about",
      "stages"
    ],
    "query": "SELECT * FROM stage",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            16
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "*",
      "from",
      "stage"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "How many biomarkers are there",
    "question_toks": [
      "How",
      "many",
      "biomarkers",
      "are",
      "there"
    ],
    "query": "SELECT count(*) FROM biomarker",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "biomarker"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show all information about disease mutations of the anatomical entity liver",
    "question_toks": [
      "Show",
      "all",
      "information",
      "about",
      "disease",
      "mutations",
      "of",
      "the",
      "anatomical",
      "entity",
      "liver"
    ],
    "query": "SELECT *\nFROM disease_mutation\n         JOIN disease_mutation_tissue ON disease_mutation.id = disease_mutation_tissue.disease_mutation_id\n         JOIN anatomical_entity ON disease_mutation_tissue.uberon_anatomical_id = anatomical_entity.id\nWHERE anatomical_entity.name = 'liver'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            17
          ],
          [
            "table_unit",
            21
          ],
          [
            "table_unit",
            19
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                66,
                false
              ],
              null
            ],
            [
              0,
              94,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                93,
                false
              ],
              null
            ],
            [
              0,
              88,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              89,
              false
            ],
            null
          ],
          "\"liver\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "*",
      "from",
      "disease_mutation",
      "join",
      "disease_mutation_tissue",
      "on",
      "disease_mutation.id",
      "=",
      "disease_mutation_tissue.disease_mutation_id",
      "join",
      "anatomical_entity",
      "on",
      "disease_mutation_tissue.uberon_anatomical_id",
      "=",
      "anatomical_entity.id",
      "where",
      "anatomical_entity.name",
      "=",
      "\"liver\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Which FDA tests have 'somatic mutation' as biomarker origin?",
    "question_toks": [
      "Which",
      "FDA",
      "tests",
      "have",
      "'",
      "somatic",
      "mutation",
      "'",
      "as",
      "biomarker",
      "origin",
      "?"
    ],
    "query": "SELECT *\nFROM biomarker_fda_test\nWHERE biomarker_origin = 'somatic mutation'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"somatic mutation\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "*",
      "from",
      "biomarker_fda_test",
      "where",
      "biomarker_origin",
      "=",
      "\"somatic mutation\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Who is the test manufacturer for FDA test trial with id NCT01899079",
    "question_toks": [
      "Who",
      "is",
      "the",
      "test",
      "manufacturer",
      "for",
      "FDA",
      "test",
      "trial",
      "with",
      "i",
      "d",
      "NCT01899079"
    ],
    "query": "SELECT test_manufacturer\nFROM biomarker_fda_test\n         JOIN biomarker_fda_test_trial\n              ON biomarker_fda_test.test_submission = biomarker_fda_test_trial.test_submission and\n                 biomarker_fda_test.test_trade_name = biomarker_fda_test_trial.test_trade_name\nWHERE test_trial_id = 'NCT01899079'\n",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            7
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ],
            [
              0,
              24,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"NCT01899079\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "test_manufacturer",
      "from",
      "biomarker_fda_test",
      "join",
      "biomarker_fda_test_trial",
      "on",
      "biomarker_fda_test.test_submission",
      "=",
      "biomarker_fda_test_trial.test_submission",
      "and",
      "biomarker_fda_test.test_trade_name",
      "=",
      "biomarker_fda_test_trial.test_trade_name",
      "where",
      "test_trial_id",
      "=",
      "\"NCT01899079\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "How many expression have no statistical significance? ",
    "question_toks": [
      "How",
      "many",
      "expression",
      "have",
      "no",
      "statistical",
      "significance",
      "?"
    ],
    "query": "SELECT COUNT(*) FROM differential_expression WHERE statistical_significance = 'False'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            24
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              105,
              false
            ],
            null
          ],
          "\"False\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "differential_expression",
      "where",
      "statistical_significance",
      "=",
      "\"False\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "How many FDA tests exist for the disease ovarian cancer?",
    "question_toks": [
      "How",
      "many",
      "FDA",
      "tests",
      "exist",
      "for",
      "the",
      "disease",
      "ovarian",
      "cancer",
      "?"
    ],
    "query": "SELECT COUNT(*)\nFROM biomarker_fda_test\n         JOIN disease ON biomarker_fda_test.doid = disease.id\nWHERE disease.name = 'ovarian cancer'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            13
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ],
            [
              0,
              55,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              56,
              false
            ],
            null
          ],
          "\"ovarian cancer\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "biomarker_fda_test",
      "join",
      "disease",
      "on",
      "biomarker_fda_test.doid",
      "=",
      "disease.id",
      "where",
      "disease.name",
      "=",
      "\"ovarian cancer\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "List all disease mutations which belong to anatomical entity liver.",
    "question_toks": [
      "List",
      "all",
      "disease",
      "mutations",
      "which",
      "belong",
      "to",
      "anatomical",
      "entity",
      "liver",
      "."
    ],
    "query": "SELECT *\nFROM anatomical_entity\n         JOIN disease_mutation_tissue ON anatomical_entity.id = disease_mutation_tissue.uberon_anatomical_id\n         JOIN disease_mutation ON disease_mutation_tissue.disease_mutation_id = disease_mutation.id\nwhere anatomical_entity.name = 'liver'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            19
          ],
          [
            "table_unit",
            21
          ],
          [
            "table_unit",
            17
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                88,
                false
              ],
              null
            ],
            [
              0,
              93,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                94,
                false
              ],
              null
            ],
            [
              0,
              66,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              89,
              false
            ],
            null
          ],
          "\"liver\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "*",
      "from",
      "anatomical_entity",
      "join",
      "disease_mutation_tissue",
      "on",
      "anatomical_entity.id",
      "=",
      "disease_mutation_tissue.uberon_anatomical_id",
      "join",
      "disease_mutation",
      "on",
      "disease_mutation_tissue.disease_mutation_id",
      "=",
      "disease_mutation.id",
      "where",
      "anatomical_entity.name",
      "=",
      "\"liver\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show the name of all different tests that are in clinical use",
    "question_toks": [
      "Show",
      "the",
      "name",
      "of",
      "all",
      "different",
      "tests",
      "that",
      "are",
      "in",
      "clinical",
      "use"
    ],
    "query": "SELECT distinct test_trade_name\nFROM biomarker_fda_test\nWHERE test_adoption_evidence = 'clinical use'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"clinical use\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "distinct",
      "test_trade_name",
      "from",
      "biomarker_fda_test",
      "where",
      "test_adoption_evidence",
      "=",
      "\"clinical use\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "What is the gene symbol for the biomarker with alias 'Dickkopf-3'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "gene",
      "symbol",
      "for",
      "the",
      "biomarker",
      "with",
      "alias",
      "'",
      "Dickkopf-3",
      "'",
      "?"
    ],
    "query": "SELECT gene_symbol FROM biomarker JOIN biomarker_alias ON biomarker.id = biomarker_alias.biomarker_internal_id WHERE biomarker_alias.alias = 'Dickkopf-3'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            0
          ]
        ],
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Dickkopf-3\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "gene_symbol",
      "from",
      "biomarker",
      "join",
      "biomarker_alias",
      "on",
      "biomarker.id",
      "=",
      "biomarker_alias.biomarker_internal_id",
      "where",
      "biomarker_alias.alias",
      "=",
      "\"Dickkopf-3\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Give me the description for biomarker with symbol SAT1",
    "question_toks": [
      "Give",
      "me",
      "the",
      "description",
      "for",
      "biomarker",
      "with",
      "symbol",
      "SAT1"
    ],
    "query": "SELECT biomarker_description FROM biomarker WHERE gene_symbol = 'SAT1'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"SAT1\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "biomarker_description",
      "from",
      "biomarker",
      "where",
      "gene_symbol",
      "=",
      "\"SAT1\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "Show tests by manufactured by Roche Molecular Systems Inc.",
    "question_toks": [
      "Show",
      "tests",
      "by",
      "manufactured",
      "by",
      "Roche",
      "Molecular",
      "Systems",
      "Inc."
    ],
    "query": "SELECT *\nFROM biomarker_fda_test\nWHERE test_manufacturer = 'Roche Molecular Systems Inc.'",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"Roche Molecular Systems Inc.\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "*",
      "from",
      "biomarker_fda_test",
      "where",
      "test_manufacturer",
      "=",
      "\"Roche Molecular Systems Inc.\""
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "How many different test manufacturers are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "test",
      "manufacturers",
      "are",
      "there",
      "?"
    ],
    "query": "SELECT COUNT(DISTINCT test_manufacturer) FROM biomarker_fda_test",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                27,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "count",
      "(",
      "distinct",
      "test_manufacturer",
      ")",
      "from",
      "biomarker_fda_test"
    ]
  },
  {
    "db_id": "oncomx_v1_0_25_small",
    "question": "What is the test submission for the FDA test with the highest number of genes?",
    "question_toks": [
      "What",
      "is",
      "the",
      "test",
      "submission",
      "for",
      "the",
      "FDA",
      "test",
      "with",
      "the",
      "highest",
      "number",
      "of",
      "genes",
      "?"
    ],
    "query": "SELECT biomarker_fda_test.test_submission\nFROM biomarker_fda_test\nORDER BY biomarker_fda_test.test_number_genes DESC\nLIMIT 1",
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              34,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    },
    "query_toks": [
      "select",
      "biomarker_fda_test.test_submission",
      "from",
      "biomarker_fda_test",
      "order",
      "by",
      "biomarker_fda_test.test_number_genes",
      "desc",
      "limit",
      "1"
    ]
  }
]